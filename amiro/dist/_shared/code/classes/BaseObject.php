<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       6179 xkqwqlwnlswtukyxplpmnymumusttlsnurswqwyzpykxlyiqrmzkrnwggxmwsipnqnkypnir
 */ ?><?php foreach(array(412=>'') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class BaseObject {public $_id; public $_errors; public $III1IlI; public $III1Ill; public $III1IlL; public $III1Il1; function BaseObject() {$this->_id =mt_rand(); $this->_errors =array(); $this->III1IlI =array(); $this->III1Ill =false; $this->III1IlL =array('_error'=>array()); $this->III1Il1 ='_error'; $this->ILlI1LI =array(); }function id() {return $this->_id; }function set($attr,$val=true) {if(is_array($attr)) {foreach($attr as $k => $v) {if(isset($this->ILlI1LI[$k])) $this->ILlI1LI[$k] =$v; else {$this->TTTITlT("Attempt to set unknown ".get_class($this)." attribute '$k'"); }}}else {if(isset($this->ILlI1LI[$attr])) $this->ILlI1LI[$attr] =$val; else {$this->TTTITlT("Attempt to set unknown ".get_class($this)." attribute '$attr'"); return false; }}return true; }function get($name){ return isset($this->ILlI1LI[$name]) ?$this->ILlI1LI[$name] :null; }function TTTITTT() {$this->_errors =array(); $this->III1IlI =array(); }function TTTITTI($msg,$code=-1,$III1ILI=true,$group=false) {$this->_errors[] =array($code=>$msg); if($III1ILI) {$this->TTTITTl($group); }return false; }function TTTITTl($group=false) {if($group===false) $group =$this->III1Il1; $data =array('errors'=>$this->_errors); $this->TTTIITI($group,'_error',$data); }function errors() {return $this->_errors; }function TTTITT1() {return sizeof($this->_errors); }function TTTITIT() {return BaseObject::TTTITII($this->_errors); }function TTTITII($errors) {$III1ILl =array(); foreach($errors as $err) array_push($III1ILl,reset(array_keys($err))); return $III1ILl; }function TTTITIl($errors,$code) {$III1ILl =BaseObject::TTTITII($errors); return in_array($code,$III1ILl); }function TTTITI1($code) {return BaseObject::TTTITIl($this->_errors,$code); }function TTTITlT($msg) {$this->III1IlI[] =$msg; }function TTTITlI() {return $this->III1IlI; }function TTTITll(&$obj,$III1ILL=true) {$III1IL1 =$obj->errors(); foreach($III1IL1 as $err) $this->_errors[] =$err; if(!$III1ILL) return false; $this->III1Ill =$obj->TTTITl1(); return false; }function TTTITl1() {return $this->III1Ill; }function TTTIT1T($errors,$separator=";\n") {$res =I412; $n =sizeof($errors); $i =0; foreach($errors as $err) {reset($err); list($code,$msg) =each($err); $res .= "[$code] $msg"; if(++$i<$n) $res .= $separator; }return $res; }function errorsAsString($separator=', ') {$err =$this->errors(); return BaseObject::TTTIT1T($err,$separator); }function TTTIT1I($group) {if(isset($this->III1IlL[$group])) trigger_error("_registerEventGroup($group): group already registered",E_USER_ERROR); $this->III1IlL[$group] =array(); }function TTTIT1l($group) {if(!isset($this->III1IlL[$group])) {trigger_error("_setErrorEventGroup($group): group not registered",E_USER_ERROR); }$this->III1Il1 =$group; }function TTTIT11($group,&$III1I1I,$set=true) {if(!isset($this->III1IlL[$group])) {$III1I1l =$set ?'true' :'false'; trigger_error("_registerEventHandler($group,obj,$III1I1l): group not registered",E_USER_ERROR); }$id =$III1I1I->id(); if(isset($this->III1IlL[$group][$id])) {if($set) return; unset($this->III1IlL[$group][$id]); return; }$this->III1IlL[$group][$id] =&$III1I1I; }function TTTIITT($group,$event,&$data) {trigger_error("Unhandled event: group=$group, event=$event",E_USER_WARNING); }function TTTIITI($group,$event,&$data) {if(!isset($this->III1IlL[$group])) {trigger_error("_genEvent($group,$event,data): group not registered",E_USER_ERROR); }$ids =array_keys($this->III1IlL[$group]); foreach($ids as $id) {$obj =&$this->III1IlL[$group][$id]; $obj->TTTIITT($group,$event,$data); }}function TTTIITl($group) {return isset($this->III1IlL[$group]) && sizeof($this->III1IlL[$group])!=0; }}?>