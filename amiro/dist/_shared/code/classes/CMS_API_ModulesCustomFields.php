<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    modules 
 * @version    $Id$ 
 * @size       15717 xkqwwriptxuuwgnrqwpnwwirgluwssrxrkpmznrqmgnqkpskqgtiuxzmztitwilykpxlpnir
 */ ?><?php foreach(array(615=>'',616=>'Qxt|IHSuJQD|WuDtHI|fMQJSD',617=>'?%?',618=>"dqjqwT?smdTmNwT?.IHSuJQ|nZIQ.?",619=>"FRhi?.WID|IHSuJQD|SZtZDQtD.?",620=>'IHSuJQ|nZIQ',621=>'tQIGJZtQD~JZnP~IHSuJQD|SZtZDQtD|SQfZuJtD`JnP',622=>'Qn',623=>'JZnP',624=>'uDQS|DMIGJQ',625=>'WID|IHSuJQD|SZtZDQtD',626=>"?",627=>'MS|SZtZDQt',628=>'!',629=>".WID|GZPQD.?coqRq?.IHSuJQ|nZIQ.?=?'",630=>"'?zNs?.JZnP.?=?'",631=>"{",632=>"coqRq?.MS.?=?",633=>"coqRq?.MD|DBD.?=?1?zNs?.IHSuJQ|nZIQ.?=?'",634=>'IuJtM|GZPQ|ZJJHCQS',635=>'MD|nuIQrMW',636=>"?FRhi?.WID|IHSuJQD|WuDtHI|fMQJSD.?",637=>"coqRq?.MS.?mN?}",638=>'WZGtMHn',639=>'^') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} final class CMS_API_ModulesCustomFields{ const PREFIX ='cf_'; public $aCustomFields =array(); private static $instance =null; private $_cms; private $_db; private $IIlI1LL =array( 'jobs' => I615, 'jobs_cat' => I615, 'classifieds' => I615, 'classifieds_cat' => I615, 'members' => I615 );private $IIlI1L1 =array(); private $IIlI11I =false; public static function getInstance(){ if(self::$instance == null){ self::$instance =new CMS_API_ModulesCustomFields(); }return self::$instance; }public static function destroyInstance(){ self::$instance =null; }public function init($cms, $db){ $this->_cms =$cms; $this->_db =$db; $this->IIlI1LL += AMI_Ext::getSupportedModules(I616); if(is_array($this->IIlI1LL) && count($this->IIlI1LL)){ foreach(array_keys($this->IIlI1LL) as $moduleName){ if($cms->Core->IsInstalled($moduleName)){ $this->IIlI1L1[] =$moduleName; }}}}public function initModulesCaptions($IIlI11l){ foreach(array_keys($this->IIlI1LL) as $moduleName){ if(isset($IIlI11l[$moduleName])){ $caption =$IIlI11l[$moduleName]; $oModule =$this->_cms->Core->GetModule($moduleName); $IIlI11L =is_object($oModule) ?$oModule->GetParentName() :null; if($IIlI11L){ $caption =$IIlI11l[$IIlI11L] .I617 .$caption; }}else{ $caption =$IIlI11l['unknown']; }$this->IIlI1LL[$moduleName] =$caption; }}public function getAllowedModules(){ return $this->IIlI1LL; }public function getInstalledModules(){ return $this->IIlI1L1; }public function TTTlTTl(){ if($this->IIlI11I){ return; }$aModules =$this->IIlI1L1; $sql =I618 .I619 ."WHERE `is_sys` = 1 AND `lang` = '" .$this->_cms->lang_data ."'"; $rs =$this->_db->select($sql); while($record =$rs->nextRecord()){ if(($index =array_search($record[I620], $aModules)) !== false){ unset($aModules[$index]); }}if(sizeof($aModules)){ $tmpLang =$this->_cms->Gui->getLang(); $this->_cms->Gui->lang =$this->_cms->lang_data; $IIlI11l =$this->_cms->Gui->ParseLangFile(I621); if(empty($IIlI11l['default_dataset_name'])){ $this->_cms->Gui->lang =I622; $IIlI11l =$this->_cms->Gui->ParseLangFile(I621); }$this->_cms->Gui->lang =$tmpLang; foreach($aModules as $moduleName){ $aSQL =array( I620 => $moduleName, 'postfix' => '_system', 'name' => $IIlI11l['default_dataset_name'], I623 => $this->_cms->lang_data, 'modified_date' => '=|NOW()', 'is_sys' => 1 );$IIlI111 =$this->getModuleUsageMode($moduleName); if($IIlI111 == 'simple'){ $aSQL[I624] =1; }$sql =$this->_db->genInsertSQL(I625, $aSQL); $this->_db->execute($sql); if(empty($aSQL[I624])){ $datasetId =$this->_db->lastInsertId(); if($IIlI111 == 'categories'){ $table =$this->_cms->Core->GetModule($moduleName .'_cat')->GetTableName(); $sql ="SELECT `id` " ."FROM " .$table .I626 ."WHERE `lang` = '" .$this->_cms->lang_data ."'"; $rs =$this->_db->select($sql); if($rs->numRows()){ $ids =I615; while($record =$rs->nextRecord()){ $ids .= $record['id'] .','; }$ids =mb_substr($ids, 0, -1); $sql =$this->_db->genUpdateSQL($table, array(I627 => $datasetId), "WHERE `id` IN (" .$ids .")"); $this->_db->execute($sql); $sql =$this->_db->genUpdateSQL(I625, array( 'used_categories' => ';' .str_replace(I628, ';', $ids) .';' ),"WHERE `id` = " .$datasetId); $this->_db->execute($sql); }}else{ $sql ="SELECT `id` FROM " .I629 .$moduleName .I630 .$this->_cms->lang_data ."'"; $rs =$this->_db->select($sql); if($rs->numRows()){ $ids =I615; while($record =$rs->nextRecord()){ $ids .= $record['id'] .I628; }$ids =mb_substr($ids, 0, -1); $sql =$this->_db->genUpdateSQL('cms_pages', array(I627 => $datasetId), "WHERE `id` IN (" .$ids .I631); $this->_db->execute($sql); $sql =$this->_db->genUpdateSQL(I625, array( 'used_pages' => ';' .str_replace(I628, ';', $ids) .';' ),I632 .$datasetId); $this->_db->execute($sql); }}}}}$this->IIlI11I =true; }public function getSysDatasetId($moduleName){ static $IIllIII =array(); if(!isset($IIllIII[$moduleName])){ $sql ="SELECT `id` " .I619 .I633 .$moduleName .I630 .$this->_cms->lang_data ."'"; $IIllIII[$moduleName] =(int)$this->_db->getValue($sql); }return $IIllIII[$moduleName]; }public function getModuleUsageMode($moduleName){ static $IIllIIl =array(); if(!isset($IIllIIl[$moduleName])){ if($this->_cms->Core->TTlI1T1($moduleName, 'use_categories')){ $IIllIIl[$moduleName] ='categories'; }elseif( $this->_cms->Core->issetAndTrueOption(I634) && $this->_cms->Core->TTlI1T1($this->getParentForCatModule($moduleName), 'multi_page') ){$IIllIIl[$moduleName] ='pages'; }else{ $IIllIIl[$moduleName] ='simple'; }}return $IIllIIl[$moduleName]; }public function getParentForCatModule($moduleName){ if(mb_substr($moduleName, -4) == '_cat'){ $oModule =$this->_cms->Core->GetModule($moduleName); $res =is_object($oModule) ?$oModule->GetParentName() :null; }else{ $res =$moduleName; }return $res; }public function loadFieldsByIds($aIds, $aCaptions =array()){ $fieldIds =array_diff(array_filter($aIds, I635), array_keys($this->aCustomFields)); if(sizeof($fieldIds)){ $isAdmin =$this->_cms->Side == 'admin'; $sql ="SELECT `id`, `prefix`, `postfix`, `system_name`, `ftype`, `default_caption` `caption`" .($isAdmin ?", `public`, `admin_form`, `admin_ui`, `admin_filter`" :', `show_body_type`, `isnot_all`, `description`' ).I636 .I637 .implode(I628, $fieldIds) .I631; if(!$isAdmin){ $sql .= ' AND `public` = 1'; }$rs =$this->_db->select($sql); while($record =$rs->nextRecord()){ $id =(int)$record['id']; foreach(array('prefix', 'postfix', I638) as $complexField){ $record[$complexField] =unserialize($record[$complexField]); if(is_array($record[$complexField])){ if(isset($record[$complexField][$this->_cms->lang_data])){ $record[$complexField] =$record[$complexField][$this->_cms->lang_data]; }else{ $record[$complexField] =I615; }}else{ $record[$complexField] =I615; }}$record[I638] =isset($aCaptions[$id]) ?$aCaptions[$id] :$record[I638]; if(!mb_strlen($record[I638])){ $record[I638] ='unknown'; }if($isAdmin){ }elseif($record['description']){ $description =unserialize($record['description']); $record['description'] =is_array($description) && isset($description[$this->_cms->lang_data]) && mb_strlen(trim(strip_tags($description[$this->_cms->lang_data]))); }$this->aCustomFields[$id] =$record; }}}public function string2Array(&$ids){ $ids =trim($ids, I639); $ids =$ids ?explode(I639, $ids) :array(); return sizeof($ids) >0; }private function __construct(){ $this->_cms =&$GLOBALS['cms']; $this->_db =&$GLOBALS['db']; }private function __clone(){ }}