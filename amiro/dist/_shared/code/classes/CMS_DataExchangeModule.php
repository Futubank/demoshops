<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       97371 xkqwsqnxswwttnwqpxmzturxlslygirkwkkwziuimgytuqqlygiyxkgtliryyxrxyksypnir
 */ ?><?php foreach(array(1485=>'wjzddqd|gzTo',1486=>"ihsUjq|gmwTURqd|gzTo",1487=>"WZJJYZWKD",1488=>"|FMnZJmIGHrt",1489=>"MIGHrt|GZtO",1490=>"SQJ",1491=>"QxGHrt|IHSuJQD",1492=>"|QxGHrt|IHSuJQD",1493=>"QxGHrt|GZtO",1494=>"",1495=>'WHnfMP',1496=>"ZJJHCQS|ZWtMHnD",1497=>"run",1498=>"JHP|GHGuG",1499=>'IHSmS',1500=>'YFHrYMS',1501=>"SZtZ|DHurWQ|fMJQ",1502=>"\\",1503=>"SZtZ|DHurWQ|tBGQ",1504=>"Gut|tH|ftG",1505=>"ftG",1506=>"uGJHZS|tIG|SMr",1507=>"rQS",1508=>"WOQWKQS",1509=>"QxGHrt|SrMvQr",1510=>"QxGHrt|IHSuJQ",1511=>"DtZtuD|QxGHrt|IHSuJQ|CZrn",1512=>"QxGHrt|SZtZ|tBGQ",1513=>"fuJJ",1514=>'',1515=>"QxGHrt|DZvQ|IQtOHS",1516=>"tBGQ",1517=>'rZGMS|',1518=>"QxWOZnPQ|tBGQ",1519=>"MIGHrt",1520=>"%",1521=>"DQJQWt",1522=>"fMJQ|nZIQ",1523=>"rQWMGMQnt|QIZMJ",1524=>"rQWMGMQnt|DuYLQWt",1525=>"WHIGrQDD",1526=>"QrrnH",1527=>"|DuWWQDD",1528=>'mm1J111',1529=>'mm1jmmm',1530=>'ZgZrZID',1531=>'JMIMt',1532=>'QxGHrt',1533=>"SQfZuJt|GrQfMx",1534=>"frHnt",1535=>"MS|QxtQrnZJ?",1536=>'SQfZuJt|GrQfMx',1537=>"GrHWQDD|",1538=>"nQC",1539=>"{",1540=>"WOZnPQS",1541=>"COQrQ",1542=>"MS",1543=>'fMJQ',1544=>"QxGHrt|rQWMGMQnt",1545=>"'{{!?MS|QxtQrnZJ='",1546=>"'?coqRq?MS?=?'",1547=>'QxGHrt|SrMvQr',1548=>'MS',1549=>'|rQDuJt',1550=>"o%M%D",1551=>"?",1552=>"'",1553=>'WuDtHI|tZYD',1554=>"QxGHrt|fHrI",1555=>"1",1556=>"SrMvQrD|fHrID",1557=>"DQJQWtQS",1558=>"SMDGJZB",1559=>"SrMvQr|nZIQ",1560=>'MIGHrt|IHSuJQD',1561=>'MnWJuSQS|MIGHrt|IHSuJQD',1562=>"IHSuJQD|JMDt",1563=>"MIGHrt|IHSuJQD",1564=>"MnWJuSQS|IHSuJQD|JMDt",1565=>"MnWJuSQS|MIGHrt|IHSuJQD",1566=>"MIGHrt|IHSuJQD|LD",1567=>"|DuYfHrI%MIGHrt|IHSuJQD|LD|rHC",1568=>"DuYfHJSQr",1569=>"SMrD",1570=>'CMAZrSTZYmDzJJHCQS',1571=>'|DuYfHrI%CMAZrS|LD',1572=>"fMJQD|JMDt",1573=>"`[ ",1574=>'$~DM',1575=>'`',1576=>'SZtZ|DHurWQ|ftG',1577=>"smdzyjqszTzmighRT",1578=>"tMtJQ",1579=>"'%'",1580=>"SrMvQrD|JMDt",1581=>"QxGHrt|SrMvQrD|LD",1582=>"nZIQ",1583=>"\"",1584=>"QxGHrt|IHSuJQD|rHC",1585=>"QxGHrt|IHSuJQD|tQxt",1586=>"QxGHrt|IHSuJQ|nZIQ",1587=>"QxGHrt|IHSuJQ|tMtJQ",1588=>"ZSIMn|IQnu|WZGtMHn",1589=>"QxGHrt|IHSuJQD|LD",1590=>"QxGHrt|DZvQ|",1591=>"fHrI|OQZSQr",1592=>"vZrD|GHDt",1593=>"DJQQG|tMIQ",1594=>'~',1595=>'~|rQfQrQnWQ$~',1596=>"|MnMt",1597=>"qxtQrnZJiHSuJQ?MD?nHt?HYLQWt",1598=>"fZMJ",1599=>"nuI|fZMJ|ZSS",1600=>"nuI|fZMJ|SQJ",1601=>"|",1602=>"nuIYQr|fZMJ",1603=>'GZrZID',1604=>"#Yr@",1605=>"|JHP",1606=>"fMQJSD",1607=>"WHnf",1608=>"ZSS|tH|ZrrZB",1609=>"ZSS|vZJuQ",1610=>"^",1611=>"'?jmimT?1",1612=>"='",1613=>'SrMvQr',1614=>'YJuQ',1615=>"C",1616=>"fMJQnZIQ",1617=>"fMJQ|GZtO",1618=>"ftBGQ",1619=>"fYHSB") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_DataExchangeModule extends CMS_ActModule {public $II1lIII; public $importPath; public $II1lIIl; public $II1lIIL; public $II1lII1; public $II1lIlI; public $II1lIll; public $II1lIlL; public $II1lIl1; public $II1lILI; public $II1lILl; public $II1lILL; public $II1lIL1; public $II1lI1I; public $II1lI1l; public $II1lI1L; public $II1lI11; public $II1llII; public $II1llIl; public $II1llIL; public $II1llI1; public $II1lllI; public $II1llll; public $aExportModules; public $II1lllL; public $II1lll1; public $II1llLI; public $II1llLl; public $II1llLL; public $II1llL1; public $II1ll1I; public $II1ll1l; public $II1ll1L; public $IIlIIIL; public $II1ll11; public $II1lLII; public $II1lLIl; public $II1lLIL; public $II1lLI1; public $II1lLlI; public $II1lLll; public $II1lLlL =15; public $II1lLl1 =20; public $II1lLLI; public $II1lLLl; public $II1lLLL; public $II1lLL1; function CMS_DataExchangeModule(&$cms, &$db, &$cModule) {$this->IIlIIIL =array(); require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_gui.php"); parent::CMS_ActModule($cms, $db, $cModule); require_once $GLOBALS[I1485] .'CMS_DataExchange.php'; $this->II1lIII =new CMS_DataExchange($cms, $this); $this->II1lIII->langData =$this->langData; $this->importPath =$GLOBALS[I1486].$this->module->GetOption("import_path"); $this->II1lIIl =$GLOBALS[I1486].$this->module->GetOption("import_tmp_path"); $this->II1lIIL =$this->module->GetOption("forbidden_files"); $this->II1lII1 =Array( I1487=>Array( "object"=>&$this, "init_import"=>"_InitImport", "final_import"=>I1488, "get_id_external"=>"GetIdExternal", "process_error"=>"ProcessErrors", ),I1489=>$this->importPath );$this->II1lIL1 =Array(); $this->II1lI1I =Array(); $this->II1lIlI =10; $this->II1lIll =$GLOBALS["LOG_PATH"].$this->module->GetOption("import_log_file_name"); $this->II1lI1l =-1; $this->II1llII =30; $this->II1lI1L =time(); $this->II1lIlL =""; $this->II1lIl1 =Array(); $this->II1lILI =Array(); $this->II1lILl =0; $this->II1lILL =true; $this->II1llIl =Array(); $this->II1llIL =null; $this->II1llI1 =$this->module->GetProperty("grp_ids_field"); $this->II1lllI =Array(); $this->II1llll =Array(I1490=>I1490, "group_del"=>"grp_del"); $this->II1llLI =$this->module->IssetOption("export_recipients") ?$this->module->GetOption("export_recipients") :array(); $aAllowedDrivers =$this->module->IssetProperty("allowed_exchange_drivers") ?$this->module->GetProperty("allowed_exchange_drivers") :array(); foreach ($this->II1llLI as $Recipient => $II1lL1I) {$this->II1llLI[$Recipient] =array_intersect($II1lL1I, $aAllowedDrivers); }$II1lL1l =$this->II1lIII->TTIIIT1(); if($this->module->IssetOption(I1491)) {$this->aExportModules =$this->module->GetOption(I1491); }else {$this->aExportModules =Array(); }$this->II1lll1 =Array(); foreach($II1lL1l as $index=>$driver) {$driverName =mb_strtolower($driver["name"]); if($this->module->IssetOption($driverName.I1492)) {$this->aExportModules =array_merge($this->aExportModules, $this->module->GetAOption($driverName.I1492)); $this->II1lll1[$driver["name"]] =$this->module->GetAOption($driverName.I1492); }elseif($this->module->IssetOption(I1491)) {$this->II1lll1[$driver["name"]] =$this->module->GetAOption(I1491); }}$this->aExportModules =array_unique($this->aExportModules); foreach($this->aExportModules as $index=>$modName) {if($this->cms->Core->IsInstalled($modName)) {$tmpMod =&$this->cms->Core->GetModule($modName); if(!is_object($tmpMod)) {unset($this->aExportModules[$index]); }}else {unset($this->aExportModules[$index]); }}$this->II1llLl =null; $this->II1llLL =$GLOBALS[I1486].$this->module->GetOption(I1493); $this->II1llL1 =Array("file"=>"FileOutputStream", "email"=>"EmailOutputStream"); $this->II1ll1I =Array(); $this->II1ll1l =Array(); $this->II1lllL =array(); $this->II1ll1L =I1494; $this->II1ll11 =Array(); $this->II1lLII =0; $this->II1lLIl =0; $this->II1lLIL =-1; require_once $GLOBALS[I1485] .'ExternalLinkObject.php'; $this->II1lLI1 =new ExternalLinkObject($this->cms, $this->db); $this->II1lLlI =false; $this->II1lLLl =array ();$this->II1lLll =$GLOBALS['ROOT_PATH'] ."/_admin/_logs/importrec.txt"; if ($this->cms->Vars['action'] == I1495) {$this->II1lLLL =true; $this->cms->Gui->addGlobalVars(Array("CONFIG_WIZARD" => "1")); }else {$this->II1lLLL =false; }}function _Init($IIll1l1 =Array(), $IIll1LI =I1494, $IIll1Ll =I1494, $aOptions =Array()) {require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_ini_format.php"); $IIIIL11[I1496] =Array("add", "run", "view", I1495); $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function TTTlITT($IIIL11l, $cId, $cModule =I1494) {$this->IIlIIIL =(is_array($this->cms->VarsPost) && sizeof($this->cms->VarsPost) >0 ?$this->cms->VarsPost :$this->cms->VarsGet); if(!is_array($this->IIlIIIL)) $this->IIlIIIL =array(); switch($IIIL11l) {case "add": case I1497: $this->redirect =false; $this->TTIIl1T(); $this->redirect =false; break; case "config": $this->TTIIl1I(); break; default: parent::TTTlITT($IIIL11l, $cId, $cModule =I1494); }}function TTTll1l($cId, $cModule) {if($this->cms->Vars["type"] == "import") {$form["error_message"] =$this->words["import_logfile_open_fail"]; if(file_exists($this->II1lIll)) {$fp =fopen($this->II1lIll, "r"); if($fp) {$form["content"] =nl2br(fread($fp, filesize($this->II1lIll))); fclose($fp); $form["error_message"] =I1494; }$form["content"] =$this->cms->Gui->getAbs($this->moduleName."_subform:log_popup_form", $form); }$form["header"] =$this->words["import_viewlog_popup_title"]; }$form["form_align"] ="align=center"; $IILIIIL =I1498; parent::TTT1I1I($form, $IILIIIL); }function TTIIl1T() {global $DISABLE_IMPORT_LOCKS; if(!isset($DISABLE_IMPORT_LOCKS)){ $DISABLE_IMPORT_LOCKS =false; }$this->itemData["exchange_type"] =$this->IIlIIIL["exchange_type"]; $II1lL1L =I1494; $error =false; $II1lL11 =false; $GLOBALS["conn"]->SetBenchType('LONG'); $aEvent =array( I1499 => $this->moduleName, 'oEngine' => $this, '_discard' => FALSE );AMI_Event::fire('deprecated_v5_on_dataexchange_start', $aEvent, AMI_Event::MOD_ANY); AMI_Event::fire('v5_on_dataexchange_start', $aEvent, AMI_Event::MOD_ANY); if(!empty($aEvent[I1500]) || !empty($aEvent['_discard'])){ $error =TRUE; }if($this->itemData["exchange_type"] == "import") {if(empty($this->IIlIIIL["import_driver"])) {$error =true; $this->cms->AddStatusMsg("status_import_driver_fail", "red"); }else {switch($this->IIlIIIL["data_source_type"]) {case "url": break; case "file": if(!empty($_FILES[I1501]["name"])) {$extension =mb_strtolower(mb_substr(strrchr($_FILES[I1501]["name"], "."), 1)); if(!in_array($extension, $this->II1lIIL)) {$II1l1II =$this->IIlIIIL; $II1lL1L =$_FILES[I1501]["tmp_name"]; $tmp =str_replace(I1502, "/", $II1lL1L); $pos =mb_strrpos($tmp, "/"); if($pos === false) {$fileName =$II1lL1L; }else {$fileName =mb_substr($tmp, $pos +1); }$fileName =$this->cms->TTITI11(stripslashes($_FILES[I1501]["name"])); if(empty($this->IIlIIIL["put_to_ftp"])) {$newfilename =$this->II1lIIl.$fileName; $II1l1II[I1503] ="file2"; $errMsg ="status_put_to_tmp_fail"; }else {$newfilename =$this->importPath.$fileName; $II1l1II[I1503] ="ftp"; $errMsg ="status_put_to_ftp_fail"; }if($this->cms->doUploadFile($_FILES[I1501], $newfilename)) {$II1lL1L =$newfilename; if(!empty($this->IIlIIIL[I1504])) {$this->cms->AddStatusMsg("status_file_ftp_add"); }}else {$error =true; $this->cms->AddStatusMsg($errMsg, "red"); }}else {$error =true; $this->cms->AddStatusMsg("status_file_type_fail", "red"); }}else {$error =true; $this->cms->AddStatusMsg("status_file_uploaded_fail", "red"); }if(!$error) {$II1l1II["data_source_ftp"] =$fileName; $II1l1II["action"] =I1497; $url =I1494; TlT1IT1($url, $II1l1II); $this->itemData["auto_run_params"] =$url; $error =true; }break; case I1505: $II1lL1L =$this->importPath.$this->IIlIIIL["data_source_ftp"]; if(!is_readable($II1lL1L)) {$error =true; $this->cms->AddStatusMsg("status_file_not_found", "red"); }break; case "file2": $II1l1Il =ini_get(I1506); $II1lL1L =$this->II1lIIl.$this->IIlIIIL["data_source_ftp"]; if(!is_readable($II1lL1L)) {$error =true; $this->cms->AddStatusMsg("status_file_not_found", "red"); }$II1lL11 =true; break; default: $error =true; $this->cms->AddStatusMsg("status_data_source_type_error", I1507); break; }}if($error) {$this->itemData["import_driver"] =$this->IIlIIIL["import_driver"]; $this->itemData["data_source_url_checked"] =I1494; $this->itemData["data_source_file_checked"] =I1494; $this->itemData["data_source_ftp_checked"] =I1494; switch($this->IIlIIIL[I1503]) {case "url": $this->itemData["data_source_url_checked"] ="checked"; break; case "file": $this->itemData["data_source_file_checked"] ="checked"; break; case I1505: $this->itemData["data_source_ftp_checked"] ="checked"; break; }$this->itemData["put_to_ftp_checked"] =empty($this->IIlIIIL[I1504]) ?I1494 :I1508; $this->itemData["data_source_ftp"] =$this->IIlIIIL["data_source_ftp"]; }}elseif ($this->itemData["exchange_type"] == "export") {if(empty($this->IIlIIIL[I1509])) {$error =true; $this->cms->AddStatusMsg("status_export_driver_fail", I1507); }if(!$error) {if(!isset($this->II1llLI[$this->IIlIIIL["export_recipient"]])) {$error =true; $this->cms->AddStatusMsg("status_export_unknown_recipient", I1507); }}if(!$error) {if(!is_array($this->IIlIIIL[I1510]) || sizeof($this->IIlIIIL[I1510]) == 0) {$error =true; $this->cms->AddStatusMsg(I1511, I1507); }}if(!$error) {if(!is_array($this->IIlIIIL["export_data_type"]) || sizeof($this->IIlIIIL[I1512]) == 0) {$error =true; $this->cms->AddStatusMsg("status_export_data_type_warn", I1507); }}if(!$error) {$II1l1IL =Array("all", "changed", "new", I1513, "deleted"); foreach($this->IIlIIIL[I1512] as $II1l1I1) {if(!in_array($II1l1I1, $II1l1IL)) {$error =true; break; }}unset($II1l1IL); if($error) {$this->cms->AddStatusMsg("status_export_data_type_warn", I1507); }}if(!$error) {if(!isset($this->II1llL1[$this->IIlIIIL["export_save_method"]])) {$error =true; $this->cms->AddStatusMsg("status_export_save_method_warn", I1507); }else {$this->IIlIIIL["export_save_filename"] =$this->cms->TTITI11(stripslashes($this->IIlIIIL["export_save_filename"])); if(mb_substr($this->IIlIIIL["export_save_filename"], -4) == '.php'){ $this->IIlIIIL["export_save_filename"] =I1514; }if($this->IIlIIIL["export_save_method"] == "file" && empty($this->IIlIIIL["export_save_filename"])) {$error =true; $this->cms->AddStatusMsg("status_export_save_filename_warn", I1507); }elseif($this->IIlIIIL[I1515] == "email" && empty($this->IIlIIIL["export_save_email"])) {$error =true; $this->cms->AddStatusMsg("status_export_save_email_warn", I1507); }}}}else {$error =true; $this->cms->AddStatusMsg("status_wrong_exchange_type", I1507, I1494, I1494, Array(I1516 => $this->itemData["exchange_type"])); }if(!$error) {$this->II1lLL1 =TlT1I11(); $this->II1lIlL =$this->IIlIIIL[$this->itemData["exchange_type"]."_driver"]; if (mb_strpos($this->II1lIlL, 'Rapid') === 0) {foreach (array_keys($this->IIlIIIL) as $key) {if (mb_strpos($key, I1517) === 0) {$this->IIlIIIL[mb_substr($key, 6)] =$this->IIlIIIL[$key]; unset($this->IIlIIIL[$key]); }}}$this->II1lIII->TTIIII1($this->II1lIlL); $this->II1lII1["vars"] =$this->IIlIIIL; $vData["metas"] =$this->cms->Gui->getMetas(); $vData["scripts"] =$this->cms->Gui->getScripts(); $vData["exchange_type"] =$this->itemData[I1518]; $vData['progress_id'] =$this->II1lLL1; if($this->II1lILl == 0) {$html =$this->cms->Gui->get($this->moduleName."_subform:progress_popup_header", $vData); echo str_pad($html, 140000, ' '); if (ob_get_level()) {ob_flush(); }}$this->II1lI11 =time(); $this->II1lII1["data_source"] =$II1lL1L; if($this->itemData[I1518] == I1519) {$shared =($GLOBALS["_h"]["mode"] == "shared") ?true :false; $II1l1lI =false; $II1l1ll =false; if($shared && !$DISABLE_IMPORT_LOCKS){ if($II1l1lL =@fopen($this->II1lLll, "r")){ flock($II1l1lL, LOCK_EX); $II1l1l1 =fgets($II1l1lL, 128); flock($II1l1lL, LOCK_UN); fclose($II1l1lL); $II1l1LI =explode(I1520, $II1l1l1); $II1l1Ll =intval($II1l1LI[0]); $II1l1LL =$II1l1LI[1]; if(!$II1l1LL){ $II1l1LL =time(); }}else{ $II1l1Ll =0; $II1l1LL =time(); }$filesize =filesize($II1lL1L); $hour =date("H", time()); if($filesize <= 1024*100){ echo $this->cms->Gui->get($this->moduleName."_subform:import_allowed_small", $vData); flush(); }else{ if(($hour >= 9) && ($hour <18)){ if((date("d", time()) != date("d", $II1l1LL)) || ($II1l1LL +86400 <= time())){ $II1l1Ll =0; }if($II1l1Ll >= 2){ $II1l1lI =true; echo $this->cms->Gui->get($this->moduleName."_subform:import_not_allowed", $vData); flush(); }else{ $II1l1ll =true; $II1l1L1 =$II1l1Ll; $II1l1Ll =$II1l1Ll +1; if($II1l1lL =@fopen($this->II1lLll, "w")){ flock($II1l1lL, LOCK_EX); fputs($II1l1lL, $II1l1Ll.I1520.time()); flock($II1l1lL, LOCK_UN); fclose($II1l1lL); }}}}}if (!$II1l1lI) {$error =!$this->II1lIII->Import($this->II1lII1); if($II1l1ll && $this->II1lIII->II1ILl1){ if(intval(time() -$this->II1lI11) <$this->II1lLlL && $this->II1lIII->II1ILll <$this->II1lLl1){ if($II1l1lL =@fopen($this->II1lLll, "w")){ flock($II1l1lL, LOCK_EX); fputs($II1l1lL, $II1l1L1.I1520.$II1l1LL); flock($II1l1lL, LOCK_UN); fclose($II1l1lL); }}}}$this->cms->Core->Cache->ClearCacheNow(); if (!$error) {$aParams[I1510] =isset($this->IIlIIIL[I1510]) ?$this->IIlIIIL[I1510] :null; }else {}if($II1lL11) {$this->cms->TTITlTT($II1lL1L); }$this->cms->ClearMessages(); $this->TTII1ll($this->itemData[I1518], $this->II1lIll); }else {$this->II1ll1L =$this->IIlIIIL["export_recipient"]; $error =!$this->II1lIII->Export($this->II1lII1); if(!$error) {$aParams =$this->IIlIIIL; $aParams["sql"] =Array(I1521, "where"=>"0", "join"=>I1494); $aParams[I1510] =$this->IIlIIIL[I1510]; $this->II1lllI["cnt"] =I1494; $this->II1llLl =new $this->II1llL1[$this->IIlIIIL[I1515]]($this); $drvName =mb_strtolower($aParams[I1509]); $II1l11I =Array(); $II1l11I[I1522] =$this->IIlIIIL["export_save_filename"]; if($this->IIlIIIL[I1515] == "file") {$II1l11I["file_path"] =$this->II1llLL; }elseif($this->IIlIIIL[I1515] == "email") {$II1l11I[I1523] =$this->IIlIIIL["export_save_email"]; if(isset($this->words["export_recipient_name_".$this->IIlIIIL["export_recipient"]])) {$II1l11I["recipient_name"] =$this->words["export_recipient_name_".$this->IIlIIIL["export_recipient"]]; }else {$II1l11I["recipient_name"] =$this->words["export_recipient_name_default"]; }$II1l11l =$this->II1lIII->TTIIIIT($this->II1lIlL, $this->II1ll1L, $aParams); if(isset($II1l11l["mail_subject"][$this->II1ll1L])) {$II1l11I[I1524] =$II1l11l["mail_subject"][$this->II1ll1L]; }else {$II1l11I[I1524] =$this->words["export_recipient_mailsubj_default"]; }}$II1l11I["mode"] =$this->itemData[I1518]; if (!empty($this->cms->Vars['compress'])) {$II1l11I[I1525] =true; $II1l11I[I1522] .= ".gz"; }$error =!$this->II1llLl->open($II1l11I); if(!$error) {$error =!$this->Export($aParams); }}}$err =$this->GetLastError(); if(!empty($err["errno"])) {$II1l11L =Array(); $this->cms->AddStatusMsg("status_driver"."_".$err[I1526], I1507, I1494, I1494, $err); }$this->TTII1lI($this->itemData[I1518]); if($this->itemData[I1518] == "export") {if($error) {$this->cms->AddStatusMsg("status_".$this->itemData[I1518]."_fail", I1507); }else {$this->cms->AddStatusMsg("status_".$this->itemData[I1518].I1527); if($this->II1lIlL == 'YandexEshopDriver'){ $this->cms->AddStatusMsg('status_export_file_url', 'blue', I1514, I1514, array('url' => $GLOBALS[I1528].$this->module->GetOption(I1493).$II1l11I[I1522])); }else{ $this->cms->AddStatusMsg('status_export_file_dir', 'blue', I1514, I1514, array('dir' => '/'.$GLOBALS[I1529].$this->module->GetOption(I1493))); }}}$vData["status"] =$this->cms->GetStatusMessages(); if($this->II1lILl == 0) {$html =$this->cms->Gui->get($this->moduleName."_subform:progress_popup_footer", $vData); }else {$html =$vData["status"]; }if($this->II1lILl <2) {echo $html; }if($this->II1lILL) {$GLOBALS["conn"]->TT1I1lT(); die; }}}function TTIIl1I() {}function TTIIl1l($II1ILLL, &$aParams) {$aEvent =array( I1499 => $II1ILLL, I1530 => &$aParams );AMI_Event::fire('deprecated_v5_on_dataexchange_export_sql', $aEvent, AMI_Event::MOD_ANY); unset($aParams[0]); foreach(array('select', 'join', 'where', I1531) as $param){ if(!isset($aParams[$param])){ $aParams[$param] =I1514; }}$aParams['where'] =str_replace(' AND (0 OR 1)', I1514, $aParams['where']); $aEvent =array( 'type' => I1532, 'driver' => $this->II1lIlL, I1499 => $II1ILLL, 'aSQL' => &$aParams );AMI_Event::fire('on_dataexchange_export_sql', $aEvent, AMI_Event::MOD_ANY); AMI_Event::fire('v5_on_dataexchange_sql', $aEvent, AMI_Event::MOD_ANY); $table =$this->II1llIL->GetTableName(); if ($aParams[I1533] != I1494) {$table .= " AS ".str_replace(".", I1494, $aParams[I1533]); }$II1LIIl =$this->II1lIII->TTIII1I(); $isFront =(is_array($II1LIIl["use_front_filter"]) && in_array($II1ILLL, $II1LIIl["use_front_filter"])); if($isFront) {$side =$this->II1llIL->Engine->side; $this->II1llIL->Engine->side =I1534; }$sql ="SELECT ".$aParams[I1533]."id, ". ((mb_substr(mb_strtolower($this->II1llIL->GetName()), -6) == "_order") ?$aParams[I1533]."id_site, " :I1494). $aParams[I1533].I1535.(isset($aParams[I1521]) ?$aParams[I1521] :I1494)." FROM ".$table." ".$aParams["join"]." WHERE 1 ".$this->II1llIL->Engine->_ApplyFilters(rtrim($aParams[I1536], '.')).$aParams["where"]; if(!empty($aParams[I1531])){ $sql .= ' ' .$aParams[I1531]; }if($isFront) {$this->II1llIL->Engine->side =$side; }return $sql; }function Export(&$aParams) {$II1LIIL =100 *sizeof($aParams[I1510]); $II1LII1 =0; foreach ($aParams[I1510] as $II1ILLL) {$II1LIlI =$this->TTII1IT($II1ILLL, I1494); if ($II1LIlI) {$II1LIll =Array("action"=>I1537.$II1ILLL); $II1LIlI =$this->TTII1I1($II1LIll); }else {break; }$II1LIlI =$this->II1lIII->TTIIIlT($II1ILLL, $aParams); if (!$II1LIlI) {break; }if ($II1LIlI) {$II1LIlL =$aParams["sql"]; $II1LIlL[I1533] =$this->II1llIL->Engine->options[I1533]; $II1LIl1 =mb_strlen($aParams["export_recipient"]) +1; if(in_array("all", $this->IIlIIIL[I1512])) {$this->IIlIIIL[I1512] =Array("changed", I1538, "deleted"); }foreach($this->IIlIIIL[I1512] as $II1l1I1) {switch($II1l1I1) {case "changed": $II1LIlL["where"] .= " OR (".$II1LIlL[I1533]."modified_date>CONVERT(SUBSTRING(export_date, ".$II1LIl1."+POSITION('".$this->IIlIIIL["export_recipient"]."_' IN export_date), 19), DATETIME)"; if(in_array(I1538, $this->IIlIIIL[I1512])) {$II1LIlL["where"] .= I1539; }else {$II1LIlL["where"] .= " AND POSITION('".$this->IIlIIIL["export_recipient"]."_' IN export_date)>0)"; }break; case I1538: if(!in_array(I1540, $this->IIlIIIL[I1512])) {$II1LIlL["where"] .= " OR (POSITION('".$this->IIlIIIL["export_recipient"]."_' IN export_date)=0)"; }break; case I1513: $II1LIlL[I1541] .= " OR 1"; break; case "deleted": break; default: $error =true; }}if($II1LIlL[I1541] !=I1494) {$II1LIlL[I1541] =" AND (".$II1LIlL[I1541].I1539; }$sql =$this->TTIIl1l($II1ILLL, $II1LIlL, $aParams); $db =new DB_si; $db->query($sql); $II1IL1L =$db->num_rows(); if ($II1IL1L == 0) {$II1LII1 += 100; }$II1IL1l =0; $this->TTII1Tl(0, $II1IL1L); $II1LIlI =true; while ($db->next_record()) {$II1IL1l++; $II1LII1 += 100/$II1IL1L; $this->II1llIL->Engine->SetLastError(); $this->TTII1Il("export", $db->Record[I1542]); $II1LILI =$this->II1llIL->Engine->itemData; if (!$this->TTII1TI($db->Record[I1542], $II1ILLL, $II1LILI, $II1IL1l, $II1IL1L)) {$II1LIlI =false; break; }$this->TTII1Tl($II1LII1, $II1LIIL); $this->ProcessErrors($this->II1llIL, "export", $II1ILLL, $db->Record[I1542]); }$this->TTII1Tl($II1LII1 +$II1LILl, $II1LIIL); }}if ($II1LIlI) {$content =$this->II1lIII->TTIIIll(); $II1LIlI =$this->II1llLl->write($content); if ($II1LIlI) {$II1LIlI =$this->II1llLl->close(); if ($II1LIlI) {if( 'YandexEshopDriver' === $this->II1lII1['vars']['export_driver'] && I1543 === $aParams['export_save_method'] ){$this->cms->Core->WriteOption($this->moduleName, 'last_yml_file', $aParams['export_save_filename']); }$II1LIlI =$this->TTIIl11($this->II1ll1l, $aParams["export_recipient"]); if ($II1LIlI) {$II1LIlI =$this->TTIIl11($this->II1ll1I, $aParams[I1544]); }if($II1LIlI && sizeof($this->II1lllL)){ $II1LIlI =$this->TTII1TT($this->II1lllL); unset($this->II1lllL); }if ($II1LIlI) {$II1LIlI =$this->II1lIII->TTIIIlI(); $this->TTII1Tl($II1LIIL, $II1LIIL); }else {$this->cms->AddStatusMsg("status_export_update_objects_fail", I1507); }}}}return $II1LIlI; }function TTIIl11($aObjects, $recipient) {$II1LILL =mb_strlen($recipient); $date =$recipient."_".DateTools::toMysqlDate(time()).";"; $res =true; foreach($aObjects as $moduleName=>$II1LIL1) {$tmpMod =&$this->cms->Core->GetModule($moduleName); $table =$tmpMod->GetTableName(); foreach($II1LIL1 as $id=>$II1LI1I) {@set_time_limit(30); $sql ="UPDATE ".$table." SET export_date = IF(POSITION(';".$recipient."_' IN export_date) > 0, REPLACE(export_date, SUBSTRING(export_date, POSITION(';".$recipient."_' IN export_date), 22 + ".$II1LILL."), ';".$date."'), CONCAT(IF(export_date = '', ';', export_date), '".$date.I1545.mysql_real_escape_string($II1LI1I)."' WHERE id='".$id."'"; if(!$this->db->query($sql)) {$res =false; break; }}}return $res; }function TTII1TT($aCats =array()){ $res =true; foreach($aCats as $moduleName => $II1LI1l){ $tmpMod =&$this->cms->Core->GetModule($moduleName); $table =$tmpMod->GetTableName(); foreach($II1LI1l as $catId => $catExtId){ if($catId){ $sql ="UPDATE ".$table." SET id_external = '".$catExtId.I1546.$catId."'"; if(!$this->db->query($sql)){ $res =false; break; }}}}return $res; }function TTII1TI($id, $II1ILLL, &$aData, $II1IL1l, $II1IL1L){ $aEvent =array( 'type' => I1532, 'driver' => $this->II1lII1['vars'][I1547], I1499 => $II1ILLL, 'itemId' => $id, 'aItem' => &$aData, '_discard' => FALSE );$II1LI1L =isset($aData['id']); if(!$II1LI1L){ $aData[I1548] =$id; }AMI_Event::fire('on_data_exchange_export_item', $aEvent, AMI_Event::MOD_ANY); AMI_Event::fire('on_data_exchange_item', $aEvent, AMI_Event::MOD_ANY); if(!$II1LI1L){ unset($aData[I1548]); }if(!empty($aEvent['_break']) || !empty($aEvent['_discard'])){ return isset($aEvent[I1549]) ?$aEvent[I1549] :TRUE; }$res =$this->II1lIII->TTIIIl1($II1ILLL, $aData, $II1IL1l, $II1IL1L); if($res["is_new_id_external"]) {$this->II1ll1I[$II1ILLL][$id] =$res["id_external"]; }else {$this->II1ll1l[$II1ILLL][$id] =$res["id_external"]; }return $this->II1llLl->write($res["content"]); }function TTII1Tl($II1I1LI, $maxValue) {set_time_limit(29); if($maxValue >0) {$II1LI11 =intval(100*$II1I1LI/$maxValue); }else {$II1LI11 =0; }$II1LlII =time(); if($II1LI11 >$this->II1lI1l || ($this->II1lI1L +$this->II1llII) <$II1LlII) {$this->II1lI1l =$II1LI11; $this->II1lI1L =$II1LlII; $II1LlIl =gmdate(I1550, $II1LlII -$this->II1lI11); TlT1lTT($this->II1lLL1, $II1LI11.'|'.$II1LlIl); $html =($this->II1lILl == 0) ?$this->cms->Gui->getAbs($this->moduleName."_subform:progress_popup_iterator", Array("percent"=>$II1LI11, "elapsed_time"=>$II1LlIl)): I1551; if($this->II1lILl <2) {echo $html; if (ob_get_level()) {ob_flush(); }}}}function TTTlI1I(&$vData) {$vData["action"] =$this->II1lLLL ?"config" :I1497; $vData["import_driver"] =I1494; $vData["data_source_url_checked"] =I1494; $vData["data_source_file_checked"] =I1494; $vData["data_source_ftp_checked"] =I1508; $vData["put_to_ftp_checked"] =I1494; $vData[I1509] =I1494; $vData[I1518] =I1519; $vData[I1503] =I1505; $vData["auto_run_params"] =I1494; $vData["ext_check"] =I1552.implode("','", $this->II1lIIL).I1552; $vData[I1515] =$this->module->GetOption("export_save method"); $vData += array ('custom_tabs_js' => I1514, 'custom_tabs_line' => I1514, I1553 => I1514, 'custom_tabs_content' => I1514, 'custom_js' => I1514, 'custom_buttons' => I1514 );parent::TTTlI1I($vData); }function TTTlI11(&$vData, &$aCustom) {$vData["import_form"] =I1494; $vData[I1554] =I1494; if($this->module->IssetProperty("allowed_sources")){ $II1LlIL =$this->module->GetProperty("allowed_sources"); if(is_array($II1LlIL)){ if(!in_array("file", $II1LlIL)) $this->cms->Gui->addGlobalVars(Array("DONOTUSEFILESOURCE" => I1555)); if(!in_array(I1505, $II1LlIL)) $this->cms->Gui->addGlobalVars(Array("DONOTUSEFTPSOURCE" => I1555)); }}$II1lL1l =$this->II1lIII->GetImportDriversList(); $wizardDrivers =$this->module->issetProperty('wizard_import_drivers') ?$this->module->TTlTTTI('wizard_import_drivers') :array ();$II1LlI1 =false; if(sizeof($II1lL1l) >0) {$vData["drivers_list"] =I1494; $vData[I1556] =I1494; $vData["driver_type"] =I1519; $aFormData =Array(); $isShowFiles =false; $isShowDirs =false; $II1LllI =array(); $II1Llll =$this->II1lIlL; $II1LllL =array(); foreach($II1lL1l as $driver) {$this->II1lIlL =$driver["name"]; if($vData["import_driver"] == $driver["name"]) {$driver[I1557] =I1557; $vData["display"] ="block"; }else {$driver[I1557] =I1494; $vData["display"] ="none"; }$aFormData[I1558] =$vData[I1558]; $vData["drivers_list"] .= $this->cms->Gui->get($this->moduleName."_subform:driver_option_row", $driver); $vData["driver_form"] =$this->II1lIII->TTIIIII($driver["name"], $aFormData); $vData[I1559] =$driver["name"]; if(!isset($vData["import_drivers_forms"])){ $vData["import_drivers_forms"] =I1494; }$vData["import_drivers_forms"] .= $this->cms->Gui->get($this->moduleName."_subform:driver_form", $vData); $driver["title"] =jparse($driver["title"]); foreach (array (I1560, I1561) as $key) {if (empty($driver[$key])) {$driver[$key] =array ();}}$driver[I1562] =I1552.implode("','", $driver[I1563]).I1552; $driver[I1564] =I1552.implode("','", $driver[I1565]).I1552; if(!isset($vData[I1566])){ $vData[I1566] =I1494; }$vData[I1566] .= $this->cms->Gui->get($this->moduleName.I1567, $driver); $II1LllL[$this->TTII111(I1568)] =true; if(is_array($driver["pathtypes"])) foreach($driver["pathtypes"] as $key => $type) if($type == "files"){ $isShowFiles =true; $this->cms->Gui->addGlobalVars(Array("SOURCE_FTP_FILES" => I1555)); }else if($type == I1569){ $isShowDirs =true; $this->cms->Gui->addGlobalVars(Array("SOURCE_FTP_FOLDERS" => I1555)); }if(is_array($driver["filemask"])){ foreach($driver["filemask"] as $key => $mask) if(!in_array($mask, $II1LllI)) array_push($II1LllI, $mask); }else array_push($II1LllI, "*"); if (in_array($this->II1lIlL, $wizardDrivers)) {$II1LlI1 =true; }}if ($II1LlI1) {$vData += array (I1570 => 'false', 'wizardDrivers' => implode(',', $wizardDrivers)); $this->TTIlTIT($wizardDrivers, $vData); $vData['custom_js'] .= $this->cms->Gui->get($this->moduleName .I1571, $vData); $vData['custom_tabs_js'] .= ",'config'"; $vData['custom_tabs_line'] .= $this->cms->Gui->get($this->moduleName .'_subform:wizard_tabs_line', $vData); $vData[I1553] .= $this->cms->Gui->get($this->moduleName .'_subform:wizard_tabs', $vData); $vData['custom_tabs_content'] .= $this->cms->Gui->get($this->moduleName .'_subform:wizard_tabs_content', $vData); $vData['custom_buttons'] =$this->cms->Gui->get($this->moduleName .'_subform:wizard_buttons', $vData); }$this->II1lIlL =$II1Llll; $vData[I1572] =I1494; $showFileMaskRegExp =I1494; if(sizeof($II1LllI) <= 0 || in_array("*", $II1LllI)) $showFileMaskRegExp ="|.*"; else{ foreach($II1LllI as $mask) $showFileMaskRegExp .= "|(".str_replace("\\*", I1573, quotemeta($mask)).I1539; }$showFileMaskRegExp =mb_substr($showFileMaskRegExp, 1); foreach($II1LllL as $subfolder => $inst){ if(is_dir($this->importPath.$subfolder)) {$importDir =dir($this->importPath.$subfolder); if(!is_object($importDir)) {trigger_error("Unable to find directory ".$this->importPath.$subfolder, E_USER_ERROR); }while (false !== ($entry =$importDir->read())) {if($entry != "." && $entry != ".." && ($isShowFiles && is_file($this->importPath.$subfolder.$entry) && preg_match('/'.$showFileMaskRegExp.I1574, $entry) || $isShowDirs && is_dir($this->importPath.$subfolder.$entry))) {$fileData =Array("name"=>$subfolder.$entry, "title"=>(sizeof($II1LllL) >1 ?$subfolder :I1494).$entry); if(is_dir($this->importPath.$subfolder.$entry)){ $fsize =AMI_Lib_FS::getDirectorySize($this->importPath.$subfolder.$entry); }else{ $fsize =filesize($this->importPath.$subfolder.$entry); }if($fsize >0){ $fileData["file_size"] =getBytesAsText($fsize, $this->words, 1); $fileData["file_size_bytes"] =number_format($fsize, 0, I1575, ' '); }else{ $fileData["file_size"] =0; }if(!isset($vData["data_source_ftp"])){ $vData["data_source_ftp"] =isset($this->cms->VarsGet[I1576]) ?$this->cms->VarsGet[I1576] :I1494; }$fileData[I1557] =($subfolder.$entry == $vData["data_source_ftp"]) ?I1557 :I1494; $vData[I1572] .= $this->cms->Gui->get($this->moduleName."_subform:file_option_row", $fileData); }}}}$vData["import_form"] =$this->cms->Gui->get($this->moduleName."_subform:import_form", $vData); }else $this->cms->Gui->addGlobalVars(Array(I1577 => I1555)); $II1lL1l =$this->II1lIII->TTIIIT1(); if(sizeof($II1lL1l) >0) {$vData["export_recipients_list"] =I1494; $vData["export_recipients_js"] =I1494; $vData["export_save_email_list_js"] =I1494; $recipient =Array(); if(!isset($vData[I1544])) {$vData[I1544] =I1494; }$II1Lll1 =sizeof($this->II1llLI); $aRecipients =Array(); if($II1Lll1 >0) {if($II1Lll1 >1) {$II1LlLI ="export_recipient_row"; }else {$II1LlLI ="export_recipient_text"; }$k =0; foreach($this->II1llLI as $II1LlLl=>$data) {$k++; $recipient["name"] =$II1LlLl; foreach($data as $driverName) {$aRecipients[$driverName][] =$II1LlLl; }if(isset($this->words["export_recipient_name_".$II1LlLl])) {$recipient["title"] =$this->words["export_recipient_name_".$II1LlLl]; }else {$recipient[I1578] =$this->words["export_recipient_name_default"]; }if($vData[I1544] == $II1LlLl) {$recipient[I1557] =I1557; }else {$recipient[I1557] =I1494; }$II1LlLL =$this->TTIlTTT($II1LlLl."_", "recipient_export_email"); $vData["export_save_email_list_js"] .= I1552.jparse($II1LlLl).I1579.jparse($II1LlLL).I1552; if($k <$II1Lll1) {$vData["export_save_email_list_js"] .= ","; }$vData["export_recipients_list"] .= $this->cms->Gui->get($this->moduleName."_subform:".$II1LlLI, $recipient); $recipient[I1580] =I1552.implode("','", $data).I1552; $vData["export_recipients_js"] .= $this->cms->Gui->get($this->moduleName."_subform:export_recipient_js_row", $recipient); }if($II1Lll1 >1) {$vData["export_recipients"] =$this->cms->Gui->get($this->moduleName."_subform:export_recipients_select", $vData); }else {$vData["export_recipients"] =$vData["export_recipients_list"]; }unset($recipient); }$vData[I1580] =I1494; $vData[I1556] =I1494; $vData["driver_type"] ="export"; $aFormData =Array(); $II1LlL1 =Array(); $vData[I1581] =I1494; foreach($II1lL1l as $driver) {if(isset($aRecipients[$driver["name"]])) {$II1lII1 =$this->II1lIII->TTIIIIT($driver["name"], $aRecipients[$driver["name"]]); $II1LlL1[$driver["name"]] =$II1lII1[I1522]; }if($vData[I1509] == $driver[I1582]) {$driver[I1557] =I1557; $vData[I1558] ="block"; }else {$driver[I1557] =I1494; $vData[I1558] ="none"; }$aFormData[I1558] =$vData[I1558]; $vData[I1580] .= $this->cms->Gui->get($this->moduleName."_subform:driver_option_row", $driver); $vData["driver_form"] =$this->II1lIII->TTIIIIl($driver[I1582], $aFormData); $vData[I1559] =$driver[I1582]; if(!isset($vData["export_drivers_forms"])){ $vData["export_drivers_forms"] =I1494; }$vData["export_drivers_forms"] .= $this->cms->Gui->get($this->moduleName."_subform:driver_form", $vData); $driver[I1578] =jparse($driver[I1578]); $driver[I1562] =I1552.implode("','", $this->II1lll1[$driver[I1582]]).I1552; $vData[I1581] .= $this->cms->Gui->get($this->moduleName."_subform:export_drivers_js_row", $driver); }$II1Ll1I =I1494; $II1Ll1l =sizeof($II1LlL1); $i =0; foreach($II1LlL1 as $driverName=>$II1Ll1L) {$i++; $II1Ll1I .= "\"".jparse($driverName)."\":{"; $II1Ll11 =sizeof($II1Ll1L); $j =0; foreach($II1Ll1L as $II1LLII=>$fileName) {$j++; $II1Ll1I .= "\"".jparse($II1LLII)."\":\"".jparse($fileName).I1583; $II1Ll1I .= ($j <$II1Ll11) ?"," :I1494; }$II1Ll1I .= "}"; $II1Ll1I .= ($i <$II1Ll1l) ?"," :I1494; }$vData["export_filenames_js"] =$II1Ll1I; $II1LLIl =sizeof($this->aExportModules); if($II1LLIl >1) {$II1LLIL =I1584; }elseif($II1LLIl >0) {$II1LLIL =I1585; }$tmpMod =I1494; $vData[I1491] =I1494; foreach($this->aExportModules as $modName) {$tmpMod =&$this->cms->Core->GetModule($modName); $vData[I1586] =$modName; $vData[I1587] =$tmpMod->GetOption(I1588); $vData[I1491] .= $this->cms->Gui->get($this->moduleName."_subform:".$II1LLIL, $vData); }unset($tmpMod); $vData[I1589] =I1552.implode("','", $this->aExportModules).I1552; $II1LLI1 =Array(); $vData["export_form_save_methods"] =I1494; foreach($this->II1llL1 as $method=>$className) {if($vData[I1515] == $method) {$II1LLI1[I1508] =I1508; }else {$II1LLI1[I1508] =I1494; }$II1LLI1["value"] =$method; $II1LLI1[I1578] =$this->words[I1590.$method]; $vData["export_form_save_methods"] .= $this->cms->Gui->get($this->moduleName."_subform:export_form_save_method_row", $II1LLI1); }$vData[I1554] =$this->cms->Gui->get($this->moduleName."_subform:export_form", $vData); }else $this->cms->Gui->addGlobalVars(Array("DISABLEDATAEXPORT" => I1555)); $vData[I1591] =$this->words[I1591]; $vData["subform"] =$this->cms->Gui->get($this->moduleName."_subform", $vData); }function TTII1T1($modName) {if(isset($this->II1lILI[$modName])) {$this->II1lIl1 =$this->II1lILI[$modName]; }elseif(isset($this->II1lILI["default"])) {$this->II1lIl1 =$this->II1lILI["default"]; }else {$this->II1lIl1 =$this->II1lILI; }if(is_string($this->II1lIl1)){ $this->II1lIl1 =(array)$this->II1lIl1; }if(is_array($this->II1lIl1)) {$this->II1lIl1 =array_flip($this->II1lIl1); $this->II1lllI[I1592] =$this->cms->VarsPost; $this->II1lllI["vars"] =$this->cms->Vars; $this->cms->VarsPost =Array(); $this->cms->Vars =Array(); }else {$this->II1lIl1 =Array(); }if(isset($this->II1ll11[$modName])) {$II1LLlI =$this->II1ll11[$modName]; }elseif(isset($this->II1ll11["default"])) {$II1LLlI =$this->II1ll11["default"]; }else {$II1LLlI["sleep_time"] =0; }$this->II1lLII =0; $this->II1lLIl =$II1LLlI[I1593]; $this->II1lLIL =(isset($II1LLlI["sleep_pereod"]) ?$II1LLlI["sleep_pereod"] :null); }function TTII1IT($modName, $II1LLll, $dbTablePrefix =I1514) {$res =true; $this->TTII1T1($modName); $this->II1llIL =&$this->cms->Core->GetModule($modName); if(is_object($this->II1llIL) && $this->II1llIL->IsInstalled()) {$db =new DB_si; $this->II1llIL->InitEngine($this->cms, $db); $this->II1llIL->Engine->suppressUrgency =true; if(isset($this->II1llIL->Engine->I1LLl1l)){ $this->II1llIL->Engine->I1LLl1l =true; }if ($dbTablePrefix != I1514 && isset($this->II1llIL->Engine->tablePrefix)) {$this->II1llIL->Engine->tablePrefix =$dbTablePrefix .$this->II1llIL->TablePrefix; }$this->II1llIL->Engine->Init(Array(), $this->options[$modName."_msgs"]); if ($dbTablePrefix != I1514) {if (!preg_match('/^ids_' .$dbTablePrefix .I1594, $this->oEshop->tree->ll1lLI1)) {$this->oEshop->tree->ll1lLI1 ='ids_' .$dbTablePrefix .$this->oEshop->tree->ll1lLI1; }if (!preg_match('/^(ids_)?' .$dbTablePrefix .I1594, $this->II1llIL->Engine->oEshop->tree->ll1lLI1)) {$this->II1llIL->Engine->oEshop->tree->ll1lLI1 ='ids_' .$dbTablePrefix .$this->II1llIL->Engine->oEshop->tree->ll1lLI1; }if (!preg_match('/^' .$dbTablePrefix .I1594, $this->oEshop->dbTablePrefix)) {$this->oEshop->dbTablePrefix =$dbTablePrefix .$this->oEshop->dbTablePrefix; }if (preg_match(I1595, $modName)) {$this->II1llIL->TablePrefix =$dbTablePrefix .$this->II1llIL->TablePrefix; }if (isset($this->II1lLLI)) {$this->II1llIL->Engine->options['lang_data'] =false; $this->oEshop->tree->TI11Il1('lang'); $this->II1llIL->Engine->oEshop->tree->TI11Il1('lang'); }}$this->TTII1l1($this->II1llIl, $II1LLll); $this->cms->VarsPost =Array(); $this->cms->Vars =Array(); }else {$res =false; $this->TTII1lT($this->II1llIL, "init", $modName.I1596, I1494, true); }return $res; }function TTII1II() {unset($this->II1llIL); $this->II1llIL =null; return true; }function TTII1Il($IIIL11l, $cId, $cModule =I1494, $II1LLlL =true) {if ($II1LLlL) {$this->II1llIL->Engine->SetRedirect(false); $this->II1llIL->Engine->ProcessAction($IIIL11l, $cId, $cModule); }$this->II1lLII++; if($this->II1lLIl >0 && $this->II1lLII == $this->II1lLIL) {$this->II1lLII =0; sleep($this->II1lLIl); }}function _InitImport(&$aParams) {$this->II1lILI =$this->TTII111(I1496); $this->II1ll11 =$this->module->GetProperty("import_sleep_params"); $this->TTII1T1("default"); return true; }function TTII1I1(&$aParams) {$II1LLl1 =$this->cms->Core->GetModOption("members", "custom_fields_prefix"); $aParams["custom_field_prefix"] =$II1LLl1; return true; }function _FinalImport(&$aParams) {$this->cms->VarsPost =$this->II1lllI[I1592]; $this->cms->Vars =$this->II1lllI["vars"]; return true; }function ProcessErrors(&$mod, $action, $II1LLLI, $file, $II1LLLl =false) {if (is_object($mod)) {$this->TTII1lT($mod, $action, $II1LLLI, $file, $II1LLLl); }else trigger_error(I1597, E_USER_WARNING); }function TTII1lT(&$mod, $action, $II1LLLI, $extId, $II1LLLl =false) {$II1IL1L =1; if(empty($II1LLLI)) {$II1LLLI =$mod->GetName(); }if($II1LLLl) {$type ="fail"; }else {$II1LLLL =$mod->Engine->GetLastError(); $res =true; if(empty($II1LLLL[I1526]) || $action == "none") {$type ="success"; if(!empty($mod->Engine->IIllIll)) {$II1IL1L =$mod->Engine->IIllIll; }}else {$res =false; $type =I1598; if(sizeof($this->II1lI1I[$II1LLLI]) <$this->II1lIlI) {$this->II1lI1I[$II1LLLI][] =$extId; }}}if(!isset($this->II1lIL1[$II1LLLI][$type][$action])) {$this->II1lIL1[$II1LLLI][$type][$action] =0; }$this->II1lIL1[$II1LLLI][$type][$action] += $II1IL1L; $this->cms->ClearMessages(); return $res; }function TTII1lI($II1LLL1) {foreach($this->II1lIL1 as $groupName=>$II1LL1I) {if(is_array($II1LL1I)) {$II1LL1l =Array(); $II1LL1l["number_success"] =0; $II1LL1l["number_fail"] =0; $II1LL1l["num_success_add"] =0; $II1LL1l["num_success_none"] =0; $II1LL1l[I1599] =0; $II1LL1l["num_success_apply"] =0; $II1LL1l["num_success_fail"] =0; $II1LL1l["num_fail_apply"] =0; $II1LL1l["num_success_del"] =0; $II1LL1l[I1600] =0; $II1LL1l["num_success_export"] =0; $II1LL1l["num_fail_export"] =0; foreach($II1LL1I as $type=>$aAction) {if(is_array($aAction)) {foreach($aAction as $action=>$number) {$II1LL1l["number_".$type] += $number; $II1LL1l["num_".$type.I1601.$action] += $number; }}}$II1LL1l["number_all"] =$II1LL1l["number_success"] +$II1LL1l["number_fail"]; $II1LL1L =($II1LL1l["number_success"] >0); $II1LL11 =($II1LL1l[I1602] >0); foreach($II1LL1l as $key=>$value) {$II1LL1l[$key] .= I1494; }if($II1LL1L) {$this->cms->AddStatusMsg($II1LLL1.I1601.$groupName.I1527, "blue", I1494, I1494, $II1LL1l); }if($II1LL11) {$this->cms->AddStatusMsg($II1LLL1.I1601.$groupName."_fail", I1507, I1494, I1494, $II1LL1l); }}}foreach ($this->II1lLLl as $warning) {$this->cms->AddStatusMsg($warning['message'], 'red', I1514, I1514, $warning[I1603]); }}function TTII1ll($II1LLL1, $fileName) {if(sizeof($this->II1lI1I) >0) {$fileContent =I1494; foreach($this->II1lI1I as $groupName=>$II1L1II) {$fileContent .= $this->words[$II1LLL1.I1601.$groupName."_logheader"]; foreach($this->II1lI1I[$groupName] as $extId) {$fileContent .= $extId."\n"; }$fileContent .= "\n"; }$fp =fopen($fileName, "w"); if($fp) {$fileContent =str_replace(I1604, "\n", $fileContent); fputs($fp, $fileContent); fclose($fp); $aParams["open_link"] =$this->cms->Gui->getAbs($this->moduleName."_subform:open_import_log_link", I1494); $this->cms->AddStatusMsg("view_".$II1LLL1.I1605, I1507, I1494, I1494, $aParams); }else {$this->cms->AddStatusMsg("view_".$II1LLL1."_log_fail", I1507); }}}function TTII1l1(&$aMap, $optionName =I1494) {if($optionName != I1494) {$aMap =$this->TTII111($optionName); }foreach($aMap as $fieldName=>$tmp) {if(isset($aMap[$fieldName]["fields"]) && !is_array($aMap[$fieldName]["fields"]) && $aMap[$fieldName][I1606] != I1494) {$aMap[$fieldName][I1606] =Array($aMap[$fieldName][I1606]); }}}function TTII11T(&$aMap, $aFields, $II1L1Il =true, $aParams =Array()) {$IIll1lL =Array(); foreach($aFields as $fieldName=>$fieldValue) {if(isset($aMap[$fieldName])) {$II1L1IL =$this->TTII11l($aMap, $fieldName, $fieldValue, $IIll1lL, $aParams); if($II1L1IL) {foreach($aMap[$fieldName][I1606] as $II1L1I1) {$IIll1lL[$II1L1I1] =$fieldValue; }}}}if($II1L1Il) {$this->cms->Vars =$this->cms->TTITITI($IIll1lL, false, true); $this->cms->VarsPost =$IIll1lL; }return $IIll1lL; }function TTII11I($II1L1lI) {$aFields =Array("id_external" => $II1L1lI); $this->cms->TTITITI($aFields, false, true); return $aFields["id_external"]; }function TTII11l(&$aMap, $fieldName, &$fieldValue, &$IIll1lL, $params =Array()) {$II1L1IL =true; switch($aMap[$fieldName]["operation"]) {case "date": $II1L1ll =DateTools::conf2phpFormat($this->cms->DFMT[I1607]); $fieldValue =date($II1L1ll, $fieldValue); break; case "copy": break; case "not": $fieldValue =!$fieldValue; break; case "replace": $fieldValue =$aMap[$fieldName]["values"][$fieldValue]; break; case I1608: $II1L1IL =false; foreach($aMap[$fieldName][I1606] as $II1L1I1) {$IIll1lL[$II1L1I1][] =$fieldValue; }break; case "set_to_array": if($aMap[$fieldName]["pre_operation"]) {$II1L1lL =Array($fieldName => $aMap[$fieldName]["pre_operation"]); $this->TTII11l($II1L1lL, $fieldName, $fieldValue, $IIll1lL, $params); }$II1L1IL =false; foreach($aMap[$fieldName][I1606] as $II1L1I1) {$IIll1lL[$II1L1I1][$aMap[$fieldName]["key"]] =$fieldValue; }break; case I1609: $fieldValue =$aMap[$fieldName]["value"]; break; }return $II1L1IL; }function TTII111($optionName, $II1L1l1 =false) {$res =I1494; $drvName =empty($this->II1lIlL)? I1494 :mb_strtolower($this->II1lIlL).I1601; $opt =$this->TTIlTTT($drvName, $optionName); if($II1L1l1 && is_array($opt)) {$II1L1LI =TlT1TTI(unhtmlentities($this->TTIlTTT($drvName, $optionName."_ini"))); if(sizeof($II1L1LI) >0) {$opt =$II1L1LI; }}return $opt; }function TTIlTTT($prefix, $optionName) {$res =I1494; if($this->module->IssetOption($prefix.$optionName)) {$res =$this->module->GetOption($prefix.$optionName); }elseif($this->module->IssetOption($optionName)) {$res =$this->module->GetOption($optionName); }return $res; }function TTIlTTI(&$aData, &$aIds) {if(is_array($aIds) && sizeof($aIds) >0) {if(is_array($this->II1llIL->Engine->options["group_operations"]) && in_array(I1490, $this->II1llIL->Engine->options["group_operations"])) {$this->cms->Vars[$this->II1llI1] =I1610.implode(I1610, $aIds).I1610; $this->TTII1Il($this->II1llll["group_del"], $this->cms->VarsPost[I1542]); unset($this->cms->Vars[$this->II1llI1]); }else {foreach($aIds as $id) {$this->cms->Vars[I1542] =$id; $this->TTII1Il($this->II1llll[I1490], $id); $this->TTII1lT($this->II1llIL, $this->II1llll[I1490], I1494, I1494); }}$this->TTII1lT($this->II1llIL, I1490, I1494, I1494); }}function GetIdExternal($module, $id, $II1IL11 =I1542) {$II1L1Ll =false; $tmp =&$this->cms->Core->GetModule($module); if(is_object($tmp)) {$table =$tmp->GetTableName(); if(!empty($table)) {$sql ="SELECT id_external FROM ".$table." WHERE ".$II1IL11."='".addslashes($id).I1611; $this->db->query($sql); if($this->db->next_record()) {$II1L1Ll =$this->db->Record["id_external"]; if(empty($II1L1Ll)) {$II1L1Ll =$this->II1lIII->TTIII1T($module, $id, $II1IL11); $sql ="UPDATE ".$table." SET id_external = '".addslashes($II1L1Ll)."' WHERE ".$II1IL11.I1612.addslashes($id).I1611; $this->db->query($sql); }}}}return $II1L1Ll; }function TTIlTTl() {return $this->II1llLL; }function TTIlTT1($key, $warning) {if (isset($this->II1lLLl[$key])) {$this->II1lLLl[$key]['count']++; }else {$this->II1lLLl[$key] =array ('count' => 1) +$warning; }}function TTIlTIT($wizardDrivers, &$vData) {$vData['wizardStep'] =0; }function TTT1Tl1($cType, $cModule, $condition =I1514) {if ($cType == 'wizard' && isset($this->cms->Vars[I1613])) {$II1L1LL =mb_strtolower($this->cms->Vars[I1613]) .'_wizard_first_backup'; $this->cms->Core->ReadOption($aOption, $this->moduleName, $II1L1LL); if (is_array($aOption)) {$II1L1L1 =false; $date =$aOption['date_modified']; $aOption =unserialize($aOption['big_value']); foreach ($aOption as $optionName => $optionValue) {if ($this->module->issetOption($optionName)) {$this->module->SetOption($optionName, $optionValue); $II1L1L1 =true; }}if ($II1L1L1) {$this->cms->Core->SaveOptions($this->moduleName); $this->cms->AddStatusMsg('status_wizard_backup_is_restored', I1614, I1514, I1514, array ('date' => $date)); }}}else {parent::TTT1Tl1($cType, $cModule, $condition); }}}class BaseOutputStream {public $module; public $mode; function BaseOutputStream(&$module) {$this->module =&$module; }function open($II1L11I =Array()) {return true; }function write(&$data) {return true; }function read(&$data) {return true; }function close() {return true; }}class FileOutputStream extends BaseOutputStream {public $fd; public $fileName; public $II1L11l; public $II1L11L; function FileOutputStream(&$module) {parent::BaseOutputStream($module); $this->fd =false; $this->fileName =I1494; $this->II1L11l =false; $this->II1L11L =4096; }function open($II1L11I =Array()) {$res =false; if ($II1L11I[I1525] === true) {$this->II1L11l =true; }switch ($II1L11I["mode"]) {case I1519: $this->mode ="r"; break; case "export": $this->mode =I1615; }if(parent::open($II1L11I)) {if($II1L11I[I1522] != I1494) {$this->fileName =$II1L11I[I1522]; if ($this->II1L11l === false) {$this->fd =@fopen($II1L11I["file_path"].$II1L11I[I1522], $this->mode); }elseif ($this->II1L11l === true) {$this->fd =@gzopen($II1L11I["file_path"].$II1L11I[I1522], $this->mode); }$res =($this->fd); if (!$res) {$this->module->cms->AddStatusMsg("status_export_open_file_fail", I1507, I1494, I1494, Array("filename"=>$this->fileName)); }}}return $res; }function read(&$data, $II1L111 =false) {$res =false; if (parent::read($data)) {if ($this->fd) {if ($this->II1L11l === false) {$res =fread($this->fd, $this->II1L11L); }elseif ($this->II1L11l === true) {$res =gzread($this->fd, $this->II1L11L); }if ($res == I1514 && $II1L111) {$this->module->cms->AddStatusMsg("status_import_read_file_fail", I1507, I1494, I1494, Array("filename"=>$this->fileName)); }}}$data["res"] =$res; return $res != I1514; }function write(&$data) {$res =false; if(parent::write($data)) {if($this->fd && $data != I1494) {if ($this->II1L11l === false) {$res =fwrite($this->fd, $data); }elseif ($this->II1L11l === true) {$res =gzwrite($this->fd, $data, mb_strlen($data)); }if($res == 0) {$this->module->cms->AddStatusMsg("status_export_write_file_fail", I1507, I1494, I1494, Array("filename"=>$this->fileName)); }}elseif ($data == I1494) {$res =true; }}return $res; }function close() {$res =false; if(parent::close()) {$result =false; if ($this->II1L11l === false) {$result =fclose($this->fd); }else {$result =gzclose($this->fd); }if($this->fd && $result) {$res =true; $this->module->cms->AddStatusMsg( 'status_export_save_file', I1614, I1514, I1514, array( 'www_root' => $GLOBALS['ROOT_PATH_WWW'], 'filename' => $this->fileName ));}else {$this->module->cms->AddStatusMsg("status_export_save_file_fail", I1507, I1494, I1494, Array(I1616=>$this->fileName)); }}return $res; }function TTIlTII($path) {$fh =fopen($path, 'rb'); $file =fread($fh, 2); $res =false; if (ord($file[0]) == 0x1F && ord($file[1]) == 0x8B) {fseek($fh, -4, SEEK_END); $length =fread($fh, 4); $res =unpack('V', $length); if (is_array($res)) {$res =$res[1]; }}fclose($fh); return $res; }}class EmailOutputStream extends BaseOutputStream {public $oMail; public $II11III; public $fileName; function EmailOutputStream(&$module) {parent::BaseOutputStream($module); require_once($GLOBALS["CLASSES_PATH"]."Mailer.php"); $this->oMail =new Mailer(); $this->II11III =I1494; $this->fileName =I1494; }function open($II1L11I =Array()) {$res =false; if(parent::open($II1L11I)) {if(!isset($II1L11I[I1617])){ $II1L11I[I1617] =I1494; }$this->fileName =$II1L11I[I1617].$II1L11I[I1522]; $this->oMail->RecipientAddress =$II1L11I[I1523]; $this->oMail->RecipientName =$II1L11I["recipient_name"]; $this->oMail->Subject =$II1L11I[I1524]; $this->oMail->SenderAddress =$this->module->cms->Core->GetOption("company_robot_email"); $this->oMail->SenderName =$this->module->cms->Core->GetOption("company_name"); $this->oMail->BodyFormat ="plain"; $res =true; }return $res; }function write(&$data) {$res =false; if(parent::write($data)) {$this->II11III .= $data; $res =true; }return $res; }function close() {$res =false; if(parent::write($data)) {$II11IIl =Array(); $II11IIl[I1618] ="application/octet-stream"; $II11IIl["fid"] ="FILEID".rand(10,99)."@".uniqid(I1494); $II11IIl[I1619] =&$this->II11III; $II11IIl["friendly"] =$this->fileName; $this->oMail->AddAttachments(Array(0=>$II11IIl)); $this->oMail->Prepare(); if($this->oMail->Send()){ $res =true; $this->module->cms->AddStatusMsg("status_export_email", "blue", I1494, I1494, Array("email"=>$this->oMail->RecipientAddress, I1616=>$this->fileName)); }else {$this->module->cms->AddStatusMsg("status_export_email_fail", I1507, I1494, I1494, Array("email"=>$this->oMail->RecipientAddress, I1616=>$this->fileName)); }}unset($this->oMail); unset($this->II11III); return $res; }}