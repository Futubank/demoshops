<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       53708 xkqwymywwuyqrzwqsxwzzkiipqrmsqgmnppgiitnyupuxykzktypqxkinmrtggigwzlqpnir
 */ ?><?php foreach(array(1714=>'GrHGQrtB',1715=>'WHnDt|nZIQ',1716=>'CMAZrS',1717=>'GHrtfHJMH',1718=>'WJZDD|GrQfMx',1719=>'iHSuJQky',1720=>'iHSuJQgHrtfHJMH',1721=>'|WDD~',1722=>'tBGQ',1723=>'GrQfMx',1724=>'GZtO',1725=>'|ZSIMn~|WDD~',1726=>'',1727=>'~',1728=>'DMnPJQ',1729=>'SQJtZ',1730=>'IHSuJQD',1731=>'EuQrMQD',1732=>'ZJJmIZPQDFMJQD',1733=>'YZWKuG|tZYJQD',1734=>'ZJJ|MIZPQD',1735=>"IHSuJQD",1736=>"GIZnZPQr",1737=>"GJuPMnD",1738=>'MnDtZJJQS',1739=>'ZSI',1740=>'WuDtHI|CI',1741=>'frn|MnW',1742=>'wid|zWtiHSuJQ`GOG',1743=>'SQtQWt|WJHnQD',1744=>'WJHnQD',1745=>'WHnDt|GrQfMx',1746=>'SMPMtZJ|fMJQD',1747=>'SrHG|tZYJQD',1748=>'fMJQD',1749=>'rQDuJt',1750=>"'",1751=>'KY|fMJQD',1752=>'WID|GH|fMJQD',1753=>"coqRq?M`MS?md?NUjj",1754=>"{",1755=>'WID|QD|MtQID',1756=>'WID|GH|MtQID',1757=>"TOQrQ?ZrQ?",1758=>'SY?SuIG',1759=>'tZYJQDTHTrunWZtQ',1760=>'tZYJQD',1761=>'wid|UGSZtQr`GOG',1762=>'?',1763=>'EuQrB',1764=>"~M",1765=>'<',1766=>'~\^[$~',1767=>"\r\n",1768=>'WJZDD',1769=>'~;}iHSuJQ_qxt{~',1770=>'unMnDtZJJ',1771=>'YZDQnZIQ',1772=>'`',1773=>"sqjqTq?FRhi?WID|IHSuJQD|tQIGJZtQD?coqRq?ZJJHCQS=0^\n",1774=>"sqjqTq?FRhi?WID|IHSuJQD|tQIGJZtQD|JZnPD?coqRq?ZJJHCQS=0^\n",1775=>"'!'",1776=>'WID|IHSuJQD|tQIGJZtQD',1777=>'WID|IHSuJQD|tQIGJZtQD|JZnPD',1778=>"\r",1779=>'SQJtZ|DEJ',1780=>'GMWturQ|WZt',1781=>"QDOHG",1782=>"DZIGJQ") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_DistributiveCleaner {public $IlIIIlL =29; public $IlIIIl1 =array ('declare' => 'declare_', I1714 => 'property_' );public $IlIIILI =array ('plugins' => array ('prefix' => 'plugin', I1715 => 'plugins'), 'wizard' => array ('prefix' => 'wz_', I1715 => I1716), 'eshop' => array ('clone_dependent' => true, 'clones' => array ('kb', I1717)), 'kb' => array ('clone_dependent' => true, I1715 => 'kb', 'clone' => true, I1718 => I1719), I1717 => array ('clone_dependent' => true, I1715 => I1717, 'clone' => true, I1718 => I1720), );public $IlIIILl ='_shared/sys/var/backup/cleaner_dump.sql'; public $IlIIILL ='_mod_files/'; public $IlIIIL1 =array (I1721, 'smiles/'); public $IlIII1I =array ('adm' => array ('path' => '_admin/', I1722 => 'prefix'), 'adm_inc' => array ('path' => '_admin/includes/', I1722 => I1723), 'adm_tpl' => array ('path' => '_admin/templates/', I1722 => I1723), 'class' => array (I1724 => '_shared/code/classes/', I1722 => 'class'), 'const' => array (I1724 => '_shared/code/const/const_', I1722 => I1723), I1714 => array (I1724 => '_shared/code/const/property_', I1722 => 'skip'), 'rules' => array (I1724 => '_shared/code/const/rules_', I1722 => I1723), 'frn_inc' => array (I1724 => '_shared/code/includes/', I1722 => I1723), 'modfiles' => array (I1724 => '_mod_files/ce_images/', I1722 => 'folder') );public $UPDATES_PATH ='_shared/code/updates/'; public $IlIII1l =array (I1725, '_admin/_js/', '_mod_files/_css/', '_js/', '_shared/code/js/' );public $IlIII1L =I1726; public $IlIII11 =array ('cms_host_users' );public $hostMode =I1726; public $IlIIlII =I1726; public $mode =I1726; public $clear =false; public $IlIIlIl =false; public $codePath =I1726; public $IlIIlIL =I1726; public $core =null; public $IlIIlI1 =null; public $IlIIllI =array ();public $IlIIlll =array ();public $db =null; public $modules =array ();public $IlIIllL =array ();public $messages =array ();public $excessData =array ();public $errors =array ();public $result =array ();public $IlIIll1 =I1726; public $IlIIlLI =array ();function CMS_DistributiveCleaner(&$core, $db, $codePath) {require_once $GLOBALS['FUNC_INCLUDES_PATH'] .'func_file_system.php'; $this->core =clone($core); $this->db =&$db; $this->codePath =$codePath; $this->IlIIlIL =dirname($this->codePath .$this->IlIII1I['const'][I1724]) .I1727; require_once $this->IlIIlIL .'summary.php'; $this->IlIIlLI =SystemComponentsSummary::TlTlTTI('cms_'); $this->loadFakeData(); foreach (array_keys($this->IlIIlll) as $moduleName) {$this->IlIIllL[$this->IlIIlll[$moduleName]->GetOwnerName()][$moduleName] =&$this->IlIIlll[$moduleName]; }$this->setHostMode('single'); $this->setMode('report'); }function setHostMode($hostMode) {if ($hostMode != $this->hostMode) {switch ($hostMode) {case I1728: case 'shared': $this->hostMode =$hostMode; $this->IlIIlII =$hostMode == I1728; break; default: trigger_error("Unknown host mode '{$hostMode}'", E_USER_ERROR); }}}function setMode($mode) {if ($mode != $this->mode) {$this->mode =$mode; switch ($mode) {case 'report': case 'clear': $this->clear =$mode == 'clear'; break; case I1729: $this->clear =false; break; default: trigger_error("Unknown host mode '{$mode}'", E_USER_ERROR); }}}function setLogginhAllImagesUsage($use) {$this->IlIIlIl =(bool)$use; }function resetState() {$this->messages =array ();$this->excessData =array ('owners' => array (),I1730 => array (),'tablesToTruncate' => array (),'tablesToDrop' => array (),'files' => array (),I1731 => array ());$this->result =array (I1731 => array (),'files' => array (),'update_sql' => I1726, 'delta_sql' => I1726, 'delta_files' => array (),);if ($this->IlIIlIl) {$this->result[I1732] =array ();}$this->errors =array (I1731 => array (),'files' => array ());}function process( $actions =array ('base', 'digital_files', 'images', I1733, 'custom_tables', 'truncate_tables', 'drop_tables', 'custom_queries', I1734), $IlIIlLl =I1726 ){$this->resetState(); $IlIIlLL =array ("kb" => false, "portfolio" => false, "eshop" => false, "services" => false, I1735 => false, I1736 => false, "affiliate" => false, "system" => false, "wizard" => false, "sample" => false, I1737 => false, "gallery" => false); $aOwners =$this->core->GetOwnersList(); foreach ($aOwners as $ownerName => $IlIIlL1) {if ($IlIIlL1[I1738]) {$IlIIlLL[$ownerName] =true; }}$db =&$this->db; $sql ="SELECT COUNT(1) FROM `cms_site_archives`"; if ($this->db->getValue($sql)) {$this->messages[] ="There are some site archives!"; }if (in_array('base', $actions)) {if ($this->mode == I1729) {$this->getDifference(); return; }$path =$this->codePath .$IlIII1I[I1739][I1724] .'/images/'; foreach (array('custom_evolve', 'custom_nebtp', 'custom_sibox', I1740) as $dir) {if (@is_dir($path .$dir)) {$this->deleteFolder($path); }}if (defined('files_subpath') && files_subpath == 'inst1/') {$this->setFileToRemove($this->codePath .$this->IlIII1I['adm_inc'][I1724] .'init.php', false); $this->setFileToRemove($this->codePath .$this->IlIII1I[I1741][I1724] .'detector.php', false); }require_once $GLOBALS['CLASSES_PATH'] .I1742; require_once $GLOBALS['CLASSES_PATH'] .'CMS_Functions.php'; $IlIIl1I =array ();$IlIIl1l =false; foreach (array (I1743, 'clean') as $operation) {foreach ($IlIIlLL as $ownerName => $IlIIl1L) {if ($operation == I1743) {if (!empty($this->IlIIILI[$ownerName]['clone_dependent'])) {$IlIIl1I[$ownerName] =$IlIIl1L; $IlIIl1l =$IlIIl1l || $IlIIl1L; }}else {if ($IlIIl1L) {foreach (array_keys($this->IlIIllL[$ownerName]) as $moduleName) {$oModule =&$this->core->GetModule($moduleName); if (!is_object($oModule) || !$oModule->IsInstalled()) {if (isset($IlIIl1I[$ownerName])) {if (isset($this->IlIIILI[$ownerName][I1718])) {$this->removeByModuleName($moduleName, false, false, $this->IlIIILI[$ownerName][I1718]); }}else {$this->removeByModuleName($moduleName, false, $this->IlIIlll[$moduleName]->issetAndTrueProperty('skip_cleaner')); }}}}else {$this->excessData['owners'][$ownerName] =array ();if (is_array($this->IlIIILI[$ownerName][I1744])) {foreach ($this->IlIIILI[$ownerName][I1744] as $IlIIl11) {$this->excessData['owners'][$IlIIl11] =array (I1715 => $IlIIl11, 'clone' => true); }}}}}}$mask =array ();foreach ($this->excessData['owners'] as $ownerName => $ownerData) {$ownerData += (is_array($this->IlIIILI[$ownerName]) ?$this->IlIIILI[$ownerName] :array ());$ownerData += array (I1723 => $ownerName); $IlIILII =!empty($ownerData['clone']); $classPrefix =I1726; $IlIILIl =I1726; if (isset($IlIIl1I[$ownerName])) {if ($IlIIl1l) {if (isset($this->IlIIILI[$ownerName][I1718])) {$IlIILII =true; $classPrefix =$this->IlIIILI[$ownerName][I1718]; }}}foreach (array_keys($this->IlIIllL[$ownerName]) as $moduleName) {$this->removeByModuleName($moduleName, true, $IlIILII, $classPrefix); }foreach ($this->IlIII1I as $type => $IlIILIL) {$path =$this->codePath .$IlIILIL[I1724]; $prefix =$ownerData[I1723]; switch ($IlIILIL[I1722]) {case I1723: $mask[] =$path .$prefix; if (isset($ownerData[I1745])) {$mask[] =$path .$ownerData[I1745]; }break; case 'folder': $path =$this->codePath .$IlIILIL[I1724] .$ownerName; if (@is_dir($path)) {$this->deleteFolder($path); }break; }}}if (sizeof($this->excessData[I1730])) {$modules ="'" .implode("','", $this->excessData[I1730]) ."'"; $sql ="DELETE FROM `cms_options` WHERE `module_name` IN ({$modules}) AND `name` = 'options_dump'"; $this->dbExecute($sql); $sql ="DELETE FROM `cms_modules_templates` WHERE `module` IN ({$modules})"; $this->dbExecute($sql); $sql ="DELETE FROM `cms_modules_templates_langs` WHERE `module` IN ({$modules})"; $this->dbExecute($sql); $sql ="DELETE FROM `cms_site_search` WHERE `module_name` IN ({$modules})"; $this->dbExecute($sql); }foreach ($mask as $path) {$dir =dirname($path); $IlIILI1 =$this->getDirFiles($path); foreach ($IlIILI1 as $file) {$this->setFileToRemove("{$dir}/{$file}", false); }}}if (in_array(I1746, $actions)) {$this->processExcessDigitalFiles(); }if (in_array('images', $actions)) {$this->processExcessImages(); }if (in_array(I1733, $actions)) {$this->processBackupTables(); }if (in_array('custom_tables', $actions)) {$this->processCustomTables(); }if (in_array('truncate_tables', $actions)) {foreach ($this->excessData['tablesToTruncate'] as $table) {$sql ="SELECT COUNT(1) FROM `{$table}`"; if (($res =$this->db->rawExecute($sql)) && (list ($c) =mysql_fetch_row($res)) && $c) {$this->messages[] ="There is not empty db table '{$table}'"; $sql ="TRUNCATE TABLE `{$table}`"; $this->dbExecute($sql); }}}if (in_array(I1747, $actions)) {foreach ($this->excessData['tablesToDrop'] as $table) {$sql ="DROP TABLE IF EXISTS `{$table}`"; $this->dbExecute($sql); }}if (in_array('custom_queries', $actions)) {foreach ($this->excessData[I1731] as $sql) {$this->dbExecute($sql); }}if (in_array('truncate_tables', $actions)) {$this->TTIlIll(); }if (in_array(I1734, $actions)) {$this->processExcessImagesUsingDump(); }if (in_array('update_sql', $actions)) {$this->processExcessUpdateSQL($IlIIlLl); }if ($this->clear) {foreach ($this->excessData[I1748] as $path) {if (file_exists($path)) {if (is_dir($path) ?@rmdir($path) :@unlink($path)) {$this->result[I1748][] =$path; }else {$this->errors[I1748][] =$path; }}}}}function getState($state ='all') {$res =array ();switch ($state) {case 'all': $names =array ('messages', 'excessData', I1749, 'errors'); break; case 'messages': case 'excessData': case I1749: case 'errors': $names =array ($state); break; default: $names =array ();trigger_error("Unknown state '{$state}'", E_USER_WARNING); }foreach ($names as $name) {$res[$name] =$this->$name; }return $res; }function processBackupTables() {$sql ="SHOW TABLES LIKE 'cms_%'"; $rs =&$this->db->select($sql); while (list ($table) =$rs->nextRecord(MYSQL_NUM)) {if (mb_substr($table, -1, 1) == '_') {$this->setTableToDrop($table); }}}function processCustomTables() {foreach (array ('%_old', 'cms_aff_%') as $mask) {$sql ="SHOW TABLES LIKE '" .$mask .I1750; $rs =&$this->db->select($sql); while (list ($table) =$rs->nextRecord(MYSQL_NUM)) {$this->setTableToDrop($table); }}}function processExcessDigitalFiles() {foreach (array ('eshop_files' => array ('es_files', 'cms_es_files', 'cms_es_items'), I1751 => array (I1751, 'cms_kb_files', 'cms_kb_items'), 'portfolio_files' => array ('po_files', I1752, 'cms_po_items') )as $moduleName => $data) {list ($folder, $IlIILlI, $IlIILll) =$data; $path =$this->codePath .'_mod_files/' .$folder .I1727; $files =$this->getDirFiles($path .'x', true); if (isset($this->IlIIlll[$moduleName]) && $this->IlIIlll[$moduleName]->IsInstalled()) {$IlIILlL =array ();$sql ="SELECT f.id " ."FROM {$IlIILlI} f " ."LEFT JOIN {$IlIILll} i ON i.id = f.id " .I1753; $rs =&$this->db->select($sql, DBC_NO_HALT); if ($rs) {while (list ($id) =$rs->nextRecord(MYSQL_NUM)) {$IlIILlL[] =$id; }}if (sizeof($IlIILlL)) {$this->messages[] ="There are " .sizeof($IlIILlL) ." excess db in " .$IlIILlI; $IlIILlL =implode(',', $IlIILlL); $tail =" WHERE id NOT IN (" .$IlIILlL .I1754; $this->dbExecute("DELETE FROM {$IlIILlI} WHERE id IN ({$IlIILlL})"); }else {$tail =I1726; }$IlIILl1 =array ();$sql ="SELECT filename FROM {$IlIILlI}{$tail}"; $rs =&$this->db->select($sql, DBC_NO_HALT); if ($rs) {while (list ($filename) =$rs->nextRecord(MYSQL_NUM)) {$IlIILl1[] =$filename; }$files =array_diff($files, $IlIILl1); }if (sizeof($files)) {$this->messages[] ="There are " .sizeof($files) ." excess files in '{$path}'"; foreach ($files as $k => $v) {$this->setFileToRemove($path .$v, true); }}}else {$this->messages[] ="There are " .sizeof($files) ." excess files in '{$path}'"; foreach ($files as $k => $v) {$this->setFileToRemove($path .$v, true); }}}}function processExcessImages() {$limit =200; foreach (array ('eshop_item' => array ('eshop', I1755), 'kb_item' => array ('kb', 'cms_kb_items'), 'portfolio_item' => array (I1717, I1756) )as $moduleName => $data) {$oModule =&$this->core->GetModule($moduleName); if (is_object($oModule) && $oModule->IsInstalled()) {list ($folder, $IlIILll) =$data; $IlIILLI =array ('_mod_files/ce_images/' .$folder .I1727, '_mod_files/ce_images/' .$folder .'/generated/'); $files =array ();foreach ($IlIILLI as $path) {$f =$this->getDirFiles($this->codePath .$path .'x', true); foreach ($f as $k => $v) {$f[$k] =$path .$v; }$files =array_merge($files, $f); }$START =0; $sql ="SELECT picture, popup_picture, small_picture FROM {$IlIILll} LIMIT {$limit}"; $rs =&$this->db->select($sql); while ($rs->numRows()) {@set_time_limit($this->IlIIIlL); $f =array ();while ($row =$rs->nextRecord(MYSQL_NUM)) {foreach ($row as $p) {if ($p) {$f[] =$p; }}}$files =array_diff($files, array_unique($f)); unset($f); $start += $limit; $sql ="SELECT picture, popup_picture, small_picture FROM {$IlIILll} LIMIT {$start}, {$limit}"; $rs =&$this->db->select($sql); }if (sizeof($files)) {$this->messages[] =I1757 .sizeof($files) ." excess files in '{$IlIILLI[0]}', '{$IlIILLI[1]}'"; foreach ($files as $v) {@set_time_limit($this->IlIIIlL); $this->setFileToRemove($this->codePath .$v); }}}}}function processExcessImagesUsingDump() {require_once 'PHPMysqlDump.php'; $IlIILLl =$this->codePath .$this->IlIIILl; $dump =new PHPMysqlDump($this->db, $IlIILLl); if ($dump->write()) {$dump =file_get_contents($IlIILLl); $IlIILLL =array ();foreach ($this->IlIII1l as $path) {@set_time_limit($this->IlIIIlL); $IlIILLL =array_merge($IlIILLL, $this->getDirFiles($this->codePath .$path .'x', true, true)); }foreach (array_keys($IlIILLL) as $i) {@set_time_limit($this->IlIIIlL); if (!preg_match('/\.(tpl|js|css)$/', $IlIILLL[$i])) {unset($IlIILLL[$i]); }}$IlIILLL[] =I1726; $this->IlIIll1 =$this->codePath .$this->IlIIILL; $IlIILL1 =$files =$this->getDirFiles($this->IlIIll1 .'x', true, true); foreach (array_keys($files) as $i) {@set_time_limit($this->IlIIIlL); foreach ($this->IlIIIL1 as $IlIIL1I) {if (mb_strpos($files[$i], $IlIIL1I) === 0) {unset($files[$i]); continue 2; }}$file =basename($files[$i]); if ($file != I1726) {$files[$i] =$file; }else {unset($files[$i]); }}foreach ($IlIILLL as $path) {@set_time_limit($this->IlIIIlL); if ($path != I1726) {$content =file_get_contents($path); }else {$content =&$dump; }$IlIIL1l =false; do {@set_time_limit($this->IlIIIlL); foreach (array_keys($files) as $i) {@set_time_limit($this->IlIIIlL); $IlIIL1l =false; $file =$files[$i]; if (mb_strpos($content, $file) !== false) {$IlIIL1l =true; if ($IlIIL1l) {if ($this->IlIIlIl) {$this->result[I1732][] ="'{$file}' is used in " .($path != I1726 ?"'{$path}'" :I1758); if (($index =array_search($this->IlIIll1 .$IlIILL1[$i], $this->excessData[I1748])) !== false) {unset($this->excessData[I1748][$index]); }}unset($files[$i]); }}}$IlIIL1l =$IlIIL1l && sizeof($files); }while ($IlIIL1l); }if (sizeof($files)) {foreach (array_keys($files) as $i) {$this->setFileToRemove($this->IlIIll1 .$IlIILL1[$i], true); }}$this->IlIIll1 =I1726; }else {trigger_error("Error writing temporary dump to '{$IlIILLl}'", E_USER_WARNING); }@unlink($IlIILLl); }function TTIlIll() {$this->dbExecute("TRUNCATE `cms_cache`"); $this->dbExecute("TRUNCATE `cms_cache_blocks`"); $this->dbExecute("TRUNCATE `cms_cache_content`"); $this->dbExecute("TRUNCATE `cms_cookies`"); $this->dbExecute("TRUNCATE `cms_errors`"); $this->dbExecute("TRUNCATE `cms_host_login_history`"); $this->dbExecute("TRUNCATE `cms_processes`"); $this->dbExecute("TRUNCATE `cms_rate_history`"); $this->dbExecute("TRUNCATE `cms_search_history`"); $this->dbExecute("TRUNCATE `cms_session_msgs`"); $this->dbExecute("TRUNCATE `cms_sessions`"); $this->dbExecute("TRUNCATE `cms_tmp`"); $this->dbExecute("TRUNCATE `cms_twist_prevention`"); $this->dbExecute("TRUNCATE `cms_pages_ver`"); }function setFileToRemove($path, $IlIIL1L =false) {if ($IlIIL1L || $this->IlIIlII) {if (!in_array($path, $this->excessData[I1748])) {$this->excessData[I1748][] =$path; }}}function setTableToTruncate($table) {if (!in_array($path, $this->excessData[I1759])) {$this->excessData[I1759][] =$table; }}function setTableToDrop($table) {if (!in_array($table, $this->excessData['tablesToDrop'])) {$this->excessData['tablesToDrop'][] =$table; }}function processExcessUpdateSQL($IlIIlLl) {$path =$this->codePath .$this->UPDATES_PATH .$IlIIlLl; $IlIIL11 =array ();if (is_dir($path) && ($handle =opendir($path))) {while (false !== ($file =readdir($handle))) {if (preg_match('/^update(\d+)?\.sql$/', $file)) {$IlIIL11[] =$file; }}closedir($handle); }if (sizeof($IlIIL11)) {$IlII1II =array ();$IlII1Il =array ();$IlII1IL =array ();$IlII1I1 =array ();$IlII1lI =array ();foreach ($this->IlIIlLI as $moduleName => $aData) {if (isset($aData['tables'])) {foreach ($aData[I1760] as $table) {if (mb_strpos($table, '%') === false) {$IlII1Il[] =$table; if ($this->core->IsInstalled($moduleName)) {$IlII1IL[] =$table; }}else if ($this->core->IsInstalled($moduleName)) {$regexp =I1727 .str_replace('%', '.*', $table) .I1727; $IlII1I1[] =$regexp; }}}}require_once $GLOBALS['CLASSES_PATH'] .I1761; $sql ='SHOW TABLES'; $rs =&$this->db->select($sql); while (list($table) =$rs->nextRecord()) {$aTables[] =$table; }$IlII1ll =new CMSSQLProcessor(); foreach ($IlIIL11 as $file) {$file =$path .I1727 .$file; $sqlstr =file_get_contents($file); $sql =array(); $IlII1lL =array ();$IlII1l1 =false; PMA_splitSqlFile($sql, $sqlstr, 0); $this->db->setAttr('halt_on_err',false); for ($i =0, $q =sizeof($sql) ;$i <$q; $i++) {if (($IlII1LI =preg_match('/^\s*CREATE\s+TABLE\s+([`\w\d_]+)[^`\w\d_]/i', $sql[$i]['query'], $aMatches)) || preg_match('/^\s*ALTER\s+TABLE\s+([`\w\d_]+)[^`\w\d_]/i', $sql[$i]['query'], $aMatches) ){$table =trim(preg_replace(array ('/^`/', '/`$/'), I1726, $aMatches[1])); if (in_array($table, $IlII1II)) {continue; }if ($IlII1LI) {if (in_array($table, $IlII1IL) || $this->arrayRegexp($table, $IlII1I1)) {$IlII1lL[] =preg_replace('/\r?\n/', I1762, $sql[$i]['query']); $IlII1lI[] =$table; }else {$IlII1II[] =$table; }}else {if (in_array($table, $aTables) || $this->arrayRegexp($table, $IlII1I1)) {$IlII1lL[] =preg_replace('/\r?\n/', I1762, $sql[$i]['query']); $IlII1lI[] =$table; }else {$IlII1II[] =$table; }}continue; }$lines =explode("\n", $sql[$i][I1763]); $query =I1726; foreach($lines as $line) {$line =trim($line); if ($line{0}=='#' && $line{1} == '@') {$line =mb_substr($line, 2); if (preg_match("/[^\/]+\/([^\/]+)\/.*/", $line, $IlII1Ll)) {foreach ($aTables as $tableName) {if (preg_match("/" .$IlII1Ll[1] .I1764, $tableName)) {$query =str_replace("/" .$IlII1Ll[1] ."/", $tableName, $line) .';'; if (preg_match('/^\s*CREATE\s+TABLE\s+([`\w\d_]+)[^`\w\d_]/i', $query, $aMatches)|| preg_match('/^\s*ALTER\s+TABLE\s+([`\w\d_]+)[^`\w\d_]/i', $query, $aMatches) ){$table =trim(preg_replace(array ('/^`/', '/`$/'), I1726, $aMatches[1])); if (in_array($table, $IlII1II)) {continue; }if ($IlII1LI) {if (in_array($table, $IlII1IL) || $this->arrayRegexp($table, $IlII1I1)) {$IlII1lL[] =preg_replace('/\r?\n/',I1762,$sql[$i][I1763]); $IlII1lI[] =$table; }else {$IlII1II[] =$table; }}else {if (in_array($table, $aTables) || $this->arrayRegexp($table, $IlII1I1)) {$IlII1lL[] =preg_replace('/\r?\n/',I1762,$sql[$i][I1763]); $IlII1lI[] =$table; }else {$IlII1II[] =$table; }}continue; }$query =I1726; }}}continue; }elseif ($line{0} == I1765 || ($line{0} == '-' && $line{1} == '-')) {continue; }$query .= " $line"; }if ($query != "") {$IlII1lL[] =$query .';'; }}foreach (array_keys($IlII1lL) as $index) {$query =preg_replace(I1766, I1726, trim($IlII1lL[$index])); $IlII1ll->init($query); $IlII1LL =$IlII1ll->data(); if (!empty($IlII1LL['table'])) {foreach ($IlII1LL['table'] as $table) {if (!in_array($table, $IlII1lI) && in_array($table, $IlII1Il) && !in_array($table, $aTables)) {unset($IlII1lL[$index]); $IlII1l1 =true; break; }}}$IlII1lL[$index] =trim($query) .';'; }if ($IlII1l1) {$this->result['update_sql'] =implode(I1767, $IlII1lL); if ($this->clear) {file_put_contents($file, $this->result['update_sql']); }}}}}function removeByModuleName($moduleName, $force =false, $IlII1L1 =false, $classPrefix =I1726) {$oModule =&$this->core->GetModule($moduleName); if ($force || !$oModule->IsInstalled()) {$oModule =$this->IlIIlll[$moduleName]; if (!in_array($moduleName, $this->excessData[I1730])) {$this->excessData[I1730][] =$moduleName; }$link =$this->IlIIlll[$moduleName]->GetAdminLink(); if (mb_strlen($link)) {$this->setFileToRemove($this->codePath .$this->IlIII1I[I1739][I1724] .$link, false); $this->setFileToRemove($this->codePath .$this->IlIII1I['adm_inc'][I1724] .$link, false); $this->setFileToRemove($this->codePath .$this->IlIII1I['adm_tpl'][I1724] .mb_substr($link, 0, -3) .'tpl', false); $this->setFileToRemove($this->codePath .$this->IlIII1I[I1741][I1724] .$link, false); }if ((empty($IlII1L1) || $classPrefix == I1726)) {$classPath =$this->codePath .$this->IlIII1I[I1768][I1724]; if ($oModule->issetProperty('engine_classes')) {$aClasses =(array)$oModule->GetProperty('engine_classes'); $className =array_pop($aClasses); if (preg_match(I1769, $className) && ($classPrefix == I1726 || preg_match('/^' .$classPrefix .I1727, $className)) ){$this->setFileToRemove($classPath ."{$className}.php", false); }}$aFiles =array ();if (isset($this->IlIIlLI[$moduleName]['related_class_prefix'])) {$aFiles =getDirFileList(mb_substr($classPath, 0, -1), $this->IlIIlLI[$moduleName]['related_class_prefix'] .'*'); }if (isset($this->IlIIlLI[$moduleName]['related_classes_files'])) {$aFiles =array_merge($aFiles, $this->IlIIlLI[$moduleName]['related_classes_files']); }if ($this->IlIIlll[$moduleName]->issetProperty('allowed_exchange_drivers')) {foreach ($this->IlIIlll[$moduleName]->TTlTTTI('allowed_exchange_drivers') as $file) {$aFiles[] =$file .'.php'; }}foreach ($aFiles as $file) {$this->setFileToRemove($classPath .$file); }}$tables =array ();if (isset($this->IlIIlLI[$moduleName])) {$IlII11I =$this->IlIIlLI[$moduleName]; if (isset($IlII11I[I1760])) {foreach ($IlII11I[I1760] as $table) {if (preg_match('/^[\w\d_]+$/', $table)) {$this->setTableToDrop($table); }else {$sql ="SHOW TABLES LIKE '{$table}'"; $rs =&$this->db->select($sql); while (list ($table) =$rs->nextRecord(MYSQL_NUM)) {$this->setTableToDrop($table); }}}}if (isset($IlII11I[I1731]) && isset($IlII11I[I1731][I1770])) {$aQueries =explode(';', $IlII11I[I1731][I1770]); foreach ($aQueries as $query) {$this->excessData[I1731][] =$query; }}}}}function getDirFiles($path, $IlII11l =false, $recursive =false) {$IlII11L =pathinfo($path); $dir =$IlII11L['dirname']; $prefix =$IlII11L[I1771]; $res =array ();if (is_dir($dir)) {if ($dh =opendir($dir)) {while (($file =readdir($dh)) !== false) {@set_time_limit($this->IlIIIlL); $newPath =$dir .I1727 .$file; if ($IlII11l ?is_file($newPath) && $file[0] != '.' :mb_substr($file, 0, mb_strlen($prefix)) == $prefix) {$res[] =$recursive ?str_replace($this->IlIIll1, I1726, $newPath) :$file; }elseif ($recursive && is_dir($dir .I1727 .$file) && $file != '.' && $file != '..') {$res =array_merge($res, $this->getDirFiles($dir .I1727 .$file .'/x', $IlII11l, true)); }}closedir($dh); }}return $res; }function dbExecute($sql) {if ($this->clear) {if ($this->db->rawExecute($sql)) {$this->result[I1731][] =$sql; }else {$this->errors[I1731][] ="{$sql}\n" .mysql_error(); }}}function deleteFolder($path) {if ($dh =@opendir($path)) {while (($file =readdir($dh)) !== false) {if ($file != I1772 && $file != '..') {$newPath ="{$path}/{$file}"; if (is_dir($newPath)) {$this->deleteFolder($newPath); $this->setFileToRemove($path); }else {$this->setFileToRemove($newPath); }}}closedir($dh); }}function arrayRegexp($subject, $IlII111) {$res =false; foreach ($IlII111 as $regexp) {if (preg_match($regexp, $subject)) {$res =true; break; }}return $res; }function getDifference() {$IlIlIII =array_diff($this->IlIIlI1->GetInstalledModuleNames(), $this->core->GetInstalledModuleNames()); if (sizeof($IlIlIII)) {$this->result['delta_sql'] .= I1773; $this->result['delta_sql'] .= I1774; $aMods =$IlIlIII; foreach($IlIlIII as $modId){ $aMods[] ='!' .$modId; }$IlIlIIl =implode(I1775, $aMods); foreach (array (I1776, I1777) as $table) {$sql ="SELECT * FROM `{$table}` WHERE `module` IN ('{$IlIlIIl}') AND `is_sys` = 1"; $rs =&$this->db->select($sql, DBC_UNBUF_QUERY |DBC_RAW_QUERY); while ($aRecord =$rs->nextRecord()) {unset($aRecord['id']); foreach ($aRecord as $k => $v) {$aRecord[$k] ='=|' .($aRecord[$k] !== null ?('"' .str_replace(array ("\n", I1778), array ("\\n", "\\r"), addslashes($aRecord[$k])) .'"') :'NULL'); }$this->result[I1779] .= $this->db->genInsertSQL($table, $aRecord) .";\n"; }}$path =$this->IlIII1I['modfiles'][I1724]; $aTables =array ();foreach ($IlIlIII as $moduleName) {if (isset($this->IlIIlLI[$moduleName][I1760])) {foreach ($this->IlIIlLI[$moduleName][I1760] as $table) {if (mb_strpos($table, '%') === false) {$aTables[] =$table; }else {$sql ="SHOW TABLES LIKE '{$table}'"; $rs =&$this->db->select($sql); while (list ($table) =$rs->nextRecord(MYSQL_NUM)) {$aTables[] =$table; }}}}if ($this->IlIIlll[$moduleName]->issetProperty('picture_cat')) {$IlIlIIL =$path .$this->IlIIlll[$moduleName]->GetProperty(I1780); $aFiles =getFiles($this->codePath .$IlIlIIL); $pos =mb_strlen($this->codePath); foreach ($aFiles as $file) {$this->result['delta_files'][] =mb_substr($file, $pos); }}}if (sizeof($aTables)) {require_once 'PHPMysqlDump.php'; $IlIILLl =$this->codePath .$this->IlIIILl; $dump =new PHPMysqlDump($this->db, $IlIILLl); $dump->tables =$aTables; if ($dump->write()) {$this->result[I1779] .= file_get_contents($IlIILLl); }@unlink($IlIILLl); }}}function smartCopy($srcPath, $destPath, $aFiles) {$res =true; foreach ($aFiles as $file) {$dir =dirname($file); if ($dir != I1772) {$aDir =explode(I1727, $dir); $path =I1726; foreach ($aDir as $dir) {$path .= $dir .I1727; if (!is_dir($destPath .$path)) {if (!@mkdir($destPath .$path)) {$res =false; break 2; }}}if (!@copy($srcPath .$file, $destPath .$file)) {$res =false; break; }}}return $res; }function loadFakeData() {global $LOCAL_FILES_PATH, $INSTALLED_PRODUCTS, $HOST_PATH, $Core; $IlIlII1 =clone $Core; $Core =new CMS_Core('front'); $IlIIlLL =array ("services" => false, I1735 => false, I1736 => false, I1781 => false, "kb" => false, "portfolio" => false, "system" => false, "wizard" => false, I1782 => false, I1737 => false); $IlIlIlI =AMI_ModDeclarator::replaceInstance(); $oDeclarator =AMI_ModDeclarator::getInstance(); $db =&$this->db; foreach (array_keys($IlIIlLL) as $ownerName) {require $this->IlIIlIL .$this->IlIIIl1['declare'] ."{$ownerName}.php"; }$oDeclarator =AMI_ModDeclarator::getInstance(); require "{$LOCAL_FILES_PATH}modules/declaration/declares.php"; foreach (array_keys($IlIIlLL) as $ownerName) {$IlIlIll =$this->IlIIlIL .$this->IlIIIl1[I1714] ."{$ownerName}.php"; if (!is_file($IlIlIll)) {die("There is no file '{$IlIlIll}'\n"); }require $IlIlIll; }$Core->setupHyperMod("{$HOST_PATH}_shared/code/hyper_modules/declaration/", $INSTALLED_PRODUCTS, 'properties'); $this->IlIIlI1 =clone $Core; $this->IlIIllI =$Core->GetOwnersList(); $this->IlIIlll =$Core->GetAllModules(); AMI_ModDeclarator::replaceInstance($IlIlIlI); $Core =$IlIlII1; }}?>
