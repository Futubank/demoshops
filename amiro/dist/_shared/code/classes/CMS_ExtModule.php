<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       20766 xkqwkkknkkmmyiswqrwmqxrmyiqigsmiqninlntrwzpiwplwmzmzlklzssrmzxmgiqtwpnir
 */ ?><?php foreach(array(1783=>'',1784=>"ZWtMHn",1785=>"MnMt|frHnt",1786=>"fMJJ|ZSIMn|SZtZ",1787=>"MnMt|frHnt|OtIJ",1788=>"MnMt|YB|IHSuJQ|nZIQ",1789=>"fMJJ|frHnt|SZtZ",1790=>"DIZJJ|DIZJJ",1791=>"|WHGB|MtQI|ZSIMn",1792=>"WID|QxtIHSuJQ",1793=>"DQJQWt",1794=>"?",1795=>"!?") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_ExtModule {public $cms; public $modules; public $II1IIIl; public $activeModule; public $mod; public $IlIlIlL; public $installed; public $db; protected $IIll1Il; function CMS_ExtModule() {$this->IlIlIlL =Array(); }function Init(&$cms, &$IlIlIl1, &$IlIlILI) {$this->cms =&$cms; $this->activeModule =&$IlIlIl1; $this->mod =&$IlIlILI; $this->installed =true; $this->II1IIIl =$this->TTIlI1l(); $this->modules =Array(); foreach($this->II1IIIl as $modName) {$this->modules[$modName] =&$cms->Core->GetModule($modName); if(!$this->modules[$modName]->IsInstalled()) {$this->installed =false; }}$this->db =new DB_si; $this->cms->Gui->AddGlobalVars(Array(mb_strtoupper($this->GetModuleName()) => '1')); $this->IIll1Il =array(); }function GetModuleName() {return "ext_base"; }function TTIlIl1($cName) {$this->IlIlIlL[$cName] =&$this->cms->Core->GetModule($cName); if(!$this->IlIlIlL[$cName]->IsInstalled()) {$this->installed =false; }}function TTIlI1T($sql =I1783) {$IlIlILl =I1783; if ($sql == I1783) {$this->mod->browser->ProcessSQL($this->mod->db); while($this->mod->db->next_record()) {$IlIlILl .= ",".$this->mod->db->Record["id"]; }}else {$rs =&$this->mod->db->select($sql); while ($record =$rs->nextRecord()) {$IlIlILl .= ',' .$record['id']; }}$IlIlILl =mb_substr($IlIlILl, 1); return $IlIlILl; }function IsInstalled() {return $this->installed; }function TTT1lI1(&$IIlLIIL) {$IIIL11l =&$IIlLIIL[I1784]; $cId =$IIlLIIL["id"]; $vItemData =&$IIlLIIL["item_data"]; $vData =&$IIlLIIL["data"]; $IILIILl =&$IIlLIIL["custom"]; $this->ProcessAction($IIIL11l, $cId, $vItemData, $vData, $IILIILl); }function ProcessAction(&$IIIL11l, $cId, &$vItemData, &$vData, &$IILIILl) {if(isset($this->IIll1Il[$IIIL11l])){ if(is_string($this->IIll1Il[$IIIL11l])){ if(class_exists($this->IIll1Il[$IIIL11l], true)){ if(!in_array('CMS_Ext_ActionHandler_Interface', class_implements($this->IIll1Il[$IIIL11l]))){ trigger_error('Handler must implement interface CMS_Ext_ActionHandler_Interface', E_USER_ERROR); }$this->IIll1Il[$IIIL11l] =new $this->IIll1Il[$IIIL11l]; }}$this->IIll1Il[$IIIL11l]->processAction($this, $cId, $vItemData, $vData, $IILIILl); return; }switch($IIIL11l) {case "init": $this->TTIlI11($cId, $vItemData, $vData, $IILIILl); break; case "init_post": $this->TTIllTT($cId, $vItemData, $vData, $IILIILl); break; case "init_admin": $this->TTIllTI($cId, $vItemData, $vData, $IILIILl); break; case I1785: $this->TTIllTl($cId, $vItemData, $vData, $IILIILl); break; case "init_cat_functions": $this->TTIllT1($cId, $vItemData, $vData, $IILIILl); break; case "apply_filters": $this->TTIllIT($cId, $vItemData, $vData, $IILIILl); break; case "prepare_item_data": $this->TTIllII($cId, $vItemData, $vData, $IILIILl); break; case "init_admin_html": $this->TTIllIl($cId, $vItemData, $vData, $IILIILl); break; case I1786: $this->TTIllI1($cId, $vItemData, $vData, $IILIILl); break; case "final_admin_data": $this->TTIlllT($cId, $vItemData, $vData, $IILIILl); break; case "init_filter": $this->TTIlllI($cId, $vItemData, $vData, $IILIILl); break; case "init_front_filter": $this->TTIllll($cId, $vItemData, $vData, $IILIILl); break; case "init_front_filter_field": $this->TTIlll1($cId, $vItemData, $vData, $IILIILl); break; case I1787: $this->TTIll1T($cId, $vItemData, $vData, $IILIILl); break; case I1788: $this->TTIll11($cId, $vItemData, $vData, $IILIILl); break; case "process_front": $this->TTIl1IT($cId, $vItemData, $vData, $IILIILl); break; case "post_process_front": $this->TTIl1II($cId, $vItemData, $vData, $IILIILl); break; case "process_admin": $this->TTIl1Il($cId, $vItemData, $vData, $IILIILl); break; case "post_process_admin": $this->TTIl1I1($cId, $vItemData, $vData, $IILIILl); break; case I1789: $this->TTIll1I($cId, $vItemData, $vData, $IILIILl); break; case "final_front_data": $this->TTIll1l($cId, $vItemData, $vData, $IILIILl); break; case "get_small_block": $this->TTIl1TT($cId, $vItemData, $vData, $IILIILl); break; case "item_details_record": $this->TTIl1Tl($cId, $vItemData, $vData, $IILIILl); break; case "apply_vars": $this->TTIl1T1($cId, $vItemData, $vData, $IILIILl); break; case I1790: $this->TTIl1lT($cId, $vItemData, $vData, $IILIILl); break; case "add_small_data": $this->TTIl1lI($cId, $vItemData, $vData, $IILIILl); break; case "small_small_post": $this->TTIl1ll($cId, $vItemData, $vData, $IILIILl); break; case "add_cat_extention_sql": $this->TTIl1TI($cId, $vItemData, $vData, $IILIILl); break; case "add_subitem_data": $this->TTIl11T($cId, $vItemData, $vData, $IILIILl); break; case I1791: $this->TTIl1l1($cId, $vItemData, $vData, $IILIILl); break; case "_copy_item_front": break; default: break; }}function TTIlI1I($cName, $IlIlILL =false) {return $this->GetOption($cName, $IlIlILL, true); }function GetOption($cName, $IlIlILL =false, $IlIlIL1 =false) {$res =false; $val =false; foreach($this->II1IIIl as $modName) {$IlIlI1I =$modName."_".$cName; $vMod =&$this->activeModule; while(is_object($vMod) && !$vMod->issetOption($IlIlI1I) && (!$IlIlILL && !$vMod->issetOption($cName))) {$vMod =&$vMod->TTlIIIT(); }if(is_object($vMod) && $vMod->issetOption($IlIlI1I)) {$res =true; $val =$vMod->GetOption($IlIlI1I); }elseif (!$IlIlILL && is_object($vMod) && $vMod->issetOption($cName)) {$res =true; $val =$vMod->GetOption($cName); }elseif ($this->modules[$modName]->issetOption($cName)) {$res =true; $val =$this->modules[$modName]->GetOption($cName); }if($res) {break; }}if(!$res) {foreach($this->IlIlIlL as $modName => $module) {if($module->issetOption($IlIlI1I)) {$res =true; $val =$this->activeModule->GetOption($IlIlI1I); }if($res) {break; }}if(!$res && !$IlIlIL1) {trigger_error("Unknown option $cName for extension ".get_class($this), E_USER_WARNING); }}return $val; }function TTIlI1l() {$res =Array(); $className =mb_strtolower(get_class($this)); $IlIlI1l =""; $IlIlI1L =I1792; while($className != $IlIlI1L) {if($className == mb_strtolower(get_class($this))){ $modName =$this->GetModuleName(); }else{ $obj =new $className(); $modName =$obj->GetModuleName(); }if(array_search($modName, $res) !== false) {trigger_error("Please set correct module name in class $IlIlI1l by overriding GetModuleName() function", E_USER_WARNING); }$res[] =$modName; $IlIlI1l =$className; $className =mb_strtolower(get_parent_class($className)); }return $res; }function TTIlI11($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllTT($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllTI($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllTl($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllT1($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllIT($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllII($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllIl($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllI1($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIlllT($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIlllI($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIllll($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIlll1($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIll1T($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIll1I($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIll1l($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIll11($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIl1TT($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIl1TI($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIl1Tl($cId, $vItemData, $vData, $IILIILl) {}function TTIl1T1($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIl1IT($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIl1II($cId, &$vItemData, &$vData, &$IILIILl) {}function TTIl1Il($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl1I1($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl1lT($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl1lI($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl1ll($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl1l1($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl11T($cId, &$vItemData, &$vData, &$IILIILl){ }function TTIl11I($item, $type) {$prefix =""; switch($type) {case I1793: $prefix =", "; break; case "from": $prefix =", "; break; case "join": $prefix =I1794; break; case "where": $prefix =I1794; break; case "group": $prefix =", "; break; case "order": $prefix =I1795; break; }return $prefix.$item; }public function addHandler($action, $IILI1lL){ if( !is_string($IILI1lL) && !in_array('CMS_Ext_ActionHandler_Interface', class_implements($IILI1lL)) ){trigger_error('Handler must implement interface CMS_Ext_ActionHandler_Interface', E_USER_ERROR); }$this->IIll1Il[$action] =$IILI1lL; }}