<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       15134 xkqwtuzspqstzixmxlwgqzzlnrwztrupzqyzypuiqqzptqqlqlyzytgzxqnzwnsyttwtpnir
 */ ?><?php foreach(array(1796=>"ihsUjq|gmwTURqd|gzTo",1797=>'MIGHrt|GZtO',1798=>'fMJQD|GrQfMx',1799=>'fMJQD|GZtO',1800=>'',1801=>"fMJQD|IHSuJQ",1802=>"MWHnD|GZtO",1803=>"DIZJJ|",1804=>'`',1805=>"rQIHvQ",1806=>"fHrWQ|rQCrMtQ",1807=>"|rQIHvQ",1808=>"",1809=>'HrMPMnZJ|fMJQ',1810=>"MS",1811=>"JZnP",1812=>"fMJQDMAQ",1813=>"MS|QxtQrnZJ",1814=>"?coqRq?MS='",1815=>'DtZtuD|rQGJZWQS',1816=>'DtZtuD|SQJQtQS') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_FilesImportModule extends CMS_ActModule {public $IlIllII; public $fileType; public $IlIllIl; public $importPath; public $IlIllIL; public $filesPrefix; public $filesExtension; public $filesPath; public $IlIllI1; public $IlIlllI; function CMS_FilesImportModule(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms, $db, $cModule); $IlIlllI =&$this->cms->Core->GetModule("files"); if($this->module->IssetOption('import_path')) {$this->importPath =$GLOBALS[I1796].$this->module->GetOption(I1797); }else {$this->importPath =$GLOBALS[I1796].$IlIlllI->GetOption(I1797); }if($this->module->IssetOption('max_import_size')) {$this->IlIllIL =$this->module->GetOption('max_import_size'); }else {$this->IlIllIL =$IlIlllI->GetOption('max_import_size'); }if($this->module->IssetOption('files_prefix')) {$this->filesPrefix =$this->module->GetOption(I1798); }else {$this->filesPrefix =$IlIlllI->GetOption(I1798); }if($this->module->IssetOption('files_extension')) {$this->filesExtension =$this->module->GetOption('files_extension'); }else {$this->filesExtension =$IlIlllI->GetOption('files_extension'); }if($this->module->IssetOption('files_path')) {$this->filesPath =$GLOBALS[I1796].$this->module->GetOption(I1799); }else {$this->filesPath =$GLOBALS[I1796].$IlIlllI->GetOption(I1799); }require_once $GLOBALS['CLASSES_PATH'] .'CMS_CategoriesFunctions.php'; $this->IlIllI1 =new CMS_CategoriesFunctionsStub($this->cms, $this, ""); }function _Init($IIll1l1 =Array(), $IIll1LI ='', $IIll1Ll =I1800, $aOptions =Array()) {$aDefault =Array( I1801=>"" );$aOptions += $aDefault; $IlIllll =(empty($aOptions[I1801]))? $this->moduleName: $aOptions[I1801]; $this->IlIlllI =&$this->cms->Core->GetModule($IlIllll); parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); $IlIlllI =&$this->cms->Core->GetModule("files"); $this->IlIllII =Array(); $this->fileType =Array(); $aIconData =Array(); $aIconData['path'] =$GLOBALS["ROOT_PATH_WWW"].$IlIlllI->GetOption(I1802); $sql ="SELECT id, name, icon, extensions FROM cms_ftypes"; $this->db->query($sql); while ($this->db->next_record()) {$aIconData['alt'] =$this->db->Record['name']; $aIconData['icon'] =I1803.$this->db->Record['icon']; $aExts =explode(';', mb_strtolower($this->db->Record['extensions'])); foreach($aExts as $key => $value) {if(!empty($value) || mb_strlen($this->db->Record['extensions'])==0) {$this->IlIllII[I1804.$value] =$this->cms->Gui->get($this->module->GetName()."_list:icon", $aIconData); $this->fileType[I1804.$value] =$this->db->Record['id']; }}}}function TTTlI1I(&$vData) {parent::TTTlI1I($vData); if(sizeof($this->cms->VarsPost) >0) {$cPath =$this->cms->AdminPathWWW.$this->cms->ActiveScript; SetLocalCookie($this->moduleName."_remove", isset($this->cms->VarsPost["remove"]) ?$this->cms->VarsPost[I1805] :null, time()+30*24*3600, $cPath); SetLocalCookie($this->moduleName."_public", isset($this->cms->VarsPost["public"]) ?$this->cms->VarsPost["public"] :null, time()+30*24*3600, $cPath); SetLocalCookie($this->moduleName."_force_rewrite", isset($this->cms->VarsPost[I1806]) ?$this->cms->VarsPost[I1806] :null, time()+30*24*3600, $cPath); }}function TTTlITT($IIIL11l, $cId, $cModule =I1800) {switch($IIIL11l){ case "apply": $this->TTIITT1($cId, $cModule); break; default: parent::TTTlITT($IIIL11l, $cId, $cModule); break; }}function TTTlI11(&$vData, &$aCustom) {$IlIlllL =AMI::getSingleton('env/cookie'); $remove =""; $IlIlll1 ="checked"; if(sizeof($this->cms->VarsPost) >0) {$remove =!empty($this->cms->VarsPost[I1805]); $IlIlll1 =!empty($this->cms->VarsPost[I1806]); }else {if(!is_null($IlIlllL->get($this->moduleName.I1807))){ $remove =$IlIlllL->get($this->moduleName.I1807); }if(!is_null($IlIlllL->get($this->moduleName."_force_rewrite"))) {$IlIlll1 =$IlIlllL->get($this->moduleName."_force_rewrite"); }}$aCustom['list_data']['remove'] =empty($remove) ?I1808: "checked"; $aCustom['list_data'][I1806] =empty($IlIlll1) ?I1808: "checked"; parent::TTTlI11($vData, $aCustom); }function TTIITT1($cId, $cModule) {$asql =array(); $IlIllLI =Array(); $IlIllLI =$this->TTT1IlI($asql, $cId); $aFiles =$this->cms->VarsPost['file']; if(isset($this->cms->VarsPost[I1809])) {$IlIllLl =$this->cms->VarsPost[I1809]; }else {$IlIllLl =Array(); }if(isset($this->cms->VarsPost['id_external'])) {$IlIllLL =$this->cms->VarsPost['id_external']; }else {$IlIllLL =Array(); }$filesCount =sizeof($aFiles); $IlIllL1 =0; $error =0; $IlIll1I =0; $remove =(!empty($this->cms->VarsPost['remove'])); if($filesCount >0) {$this->IlIlllI->PushPager($this->browser); $this->IlIlllI->InitPager($this->browser); foreach($aFiles as $index=>$val) {$isRewriteName =true; $asql =$IlIllLI; $val =rawurldecode(unhtmlentities($val)); if(is_file($this->importPath.$val)){ $fname =$this->importPath.$val; $fsize =filesize($fname); if( $fsize >0 && $fsize <$this->IlIllIL) {$ftype =isset($this->fileType[I1804.mb_strtolower(get_file_ext($val))]) ?intval($this->fileType[I1804.mb_strtolower(get_file_ext($val))]) :0; if(empty($ftype)) {$ftype =intval($this->fileType[I1804]); }if(isset($IlIllLl[$index])) {$IlIll1l =addslashes($IlIllLl[$index]); }else {$IlIll1l =addslashes($val); }$result =Array(); $this->IlIllI1->TTIT1lT("import_files", $result); $existsFileId =0; $lid =0; $sql ="SELECT id, filename FROM ".$this->module->GetTableName()." WHERE original_fname='".$IlIll1l."'".$this->_ApplyFilters().$result["where"]." LIMIT 1"; $this->db->query($sql); if($this->db->next_record()) {$existsFileId =$this->db->Record[I1810]; $existsFileName =$this->db->Record["filename"]; if(!empty($this->cms->VarsPost[I1806])){ $lid =$existsFileId; if(!empty($existsFileName)) {$this->cms->TTITlTT($existsFileName, $this->filesPath); }$isRewriteName =false; }else {}}else {$asql["ftype"] =$ftype; $asql["cdate"] ="=|now()"; $asql[I1811] =$this->langData; $asql["position"] =TlT1Ill($this->db, $this->module->GetTableName()); $asql =$this->IlIllI1->TTIT1lI($asql, $cId); $sql =$this->db->GenInsertSQL($this->module->GetTableName(), $asql); $this->db->query($sql); $lid =$this->db->lastInsertId(); }$this->appliedId =$lid; if($lid >0) {$newfilename =$this->filesPrefix.$lid."_".$val.$this->filesExtension; $newfilename =$this->cms->TTITI11($newfilename); AMI_Registry::push('disable_error_mail', true); if($this->cms->TTITlTl($fname, $this->filesPath.$newfilename, I1800, 0666, $remove)) {$asql =Array( "filename" => addslashes($newfilename), I1812 => $fsize, "original_fname" => $IlIll1l, "mdate" => "=|NOW()" );if($isRewriteName) {$asql["name"] =$IlIll1l; }if(isset($IlIllLL[$index])) {$asql[I1813] =$IlIllLL[$index]; }if(isset($this->cms->VarsPost['description'][$index])) {$asql["description"] =$this->cms->VarsPost['description'][$index]; }$sql =$this->db->GenUpdateSQL($this->module->GetTableName(), $asql, "WHERE id='$lid'"); $this->db->query($sql); $IlIllL1 += ($existsFileId >0); }else {$error++; $IlIll1I++; $sql ="DELETE FROM ".$this->module->GetTableName().I1814.$lid."'"; $this->db->query($sql); }AMI_Registry::pop('disable_error_mail'); }else {$error++; $IlIll1I++; }}else {$error++; $IlIll1I++; }}else {$error++; $IlIll1I++; }}$this->IlIlllI->PopPager($this->browser); $IIL1lLL =$filesCount -$error; d::vd(1); if($IIL1lLL >0) $this->cms->AddStatusMsg('status_imported', I1800, I1800, I1800, Array('num' => "$IIL1lLL")); if($IlIllL1 >0) $this->cms->AddStatusMsg(I1815, I1800, I1800, I1800, Array('num' => "$IlIllL1")); if($error) {$this->cms->AddStatusMsg('status_not_imported', 'red', I1800, I1800, Array('num' => "$error")); }if($remove) {$IlIll1L =$filesCount -$IlIll1I; if(!$IlIll1I) {$this->cms->AddStatusMsg(I1816, I1800, I1800, I1800, Array('num' => "$IlIll1L")); }else {$this->cms->AddStatusMsg('status_not_deleted', 'red', I1800, I1800, Array('num' => "$IlIll1I")); }}}return $IIL1lLL; }function TTT1IlI($aSql =Array(), $cId =0) {return $aSql; }}