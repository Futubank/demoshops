<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       4810 xkqwgwgyulwmmlnzzsywwzpnwlgnmglspnsqutqnlskkgtwlxysrqwitqsylklmqzztwpnir
 */ ?><?php  if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_IteratorArray {public $Module; public $IlI1LI1; public $IlI1LlI; public $Record; public $numRows; public $array; public $IIIlLIL; public $IlI1Lll; public $IIIll1L; function CMS_IteratorArray(&$IlI1LlL) {$this->Record =Array(); $this->numRows =0; $this->Module =&$IlI1LlL; $this->IlI1LI1 =Array(); $this->IlI1LlI =0; $this->array =Array(); $this->IIIlLIL =null; $this->IlI1Lll =null; $this->IIIll1L =true; }function SetArray($IlI1Ll1){ $this->array =$IlI1Ll1; }function TTI1Il1(){ $this->array =Array(); }function query($IlI1LLI,$flags=0){ $this->IIIlLIL =false; if(preg_match('/select *count\( *\* *\) *as *(\w+) */i', $IlI1LLI, $matches)){ $this->numRows++; $this->IlI1LI1[] =Array($matches[1] => sizeof($this->array)); }elseif(preg_match('/select *found_rows\\(\\) *(as)? *([^ ]+)/si', $IlI1LLI, $matches)) {$this->IIIlLIL =Array($matches[2] => empty($this->IlI1Lll) ?sizeof($this->array) :$this->IlI1Lll); }else {$this->IlI1LI1 =Array(); $this->Record =Array(); $this->numRows =0; $this->IlI1LlI =0; $IIIlLI1 =0; $IIIlLlI =1000; if($this->IIIll1L && preg_match('/^.*limit *(\d+) *,? *(\d+)?.*?$/i', $IlI1LLI, $matches)){ if(!isset($matches[2]) || intval($matches[2]) == 0) $IIIlLlI =intval($matches[1]); else{ $IIIlLI1 =intval($matches[1]); $IIIlLlI =intval($matches[2]); }}for($i =$IIIlLI1; $i <min($IIIlLlI +$IIIlLI1, sizeof($this->array)); $i++){ $this->numRows++; $this->IlI1LI1[] =array_merge($this->array[$i], array('row_index' => $this->numRows-1)); }}return true; }function &select($query,$flags=0) {$this->query($query,$flags); $clone =clone $this; return $clone; }function getValue($sql, $flags =0) {$rs =&$this->select($sql,$flags); if (!$rs) {return false; }$res =&$rs->nextRecord(MYSQL_NUM); return is_array($res) ?$res[0] :null; }function &TTI1I1T() {$object =clone($this); return $object; }function num_rows(){ return $this->numRows; }function numRows() {return $this->num_rows(); }function &nextRecord($restype=MYSQL_ASSOC) {$res =$this->next_record(); $res =$res ?$this->Record :null; return $res; }function next_record(){ if(!empty($this->IIIlLIL)) {$this->Record =$this->IIIlLIL; $this->IIIlLIL =null; }elseif($this->IlI1LlI <$this->numRows){ $this->Record =$this->IlI1LI1[$this->IlI1LlI++]; return true; }else return false; }function seek($pos=0) {trigger_error("CMS_IteratorArray::seek() not implemented",E_USER_ERROR); }function free() {trigger_error("CMS_IteratorArray::free() not implemented",E_USER_ERROR); }}