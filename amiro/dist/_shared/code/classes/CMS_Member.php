<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       125288 xkqwpklqgtwruzrlzspyztsgulliszkmpnigrlimplmnmgpuqygqzrtxmqrmylxsglynpnir
 */ ?><?php foreach(array(1955=>'IQIYQrD',1956=>"ihsUjq|gmwTURqd|gzTo",1957=>"uDQrD~",1958=>"tQxt",1959=>'QSMt|frHnt|ZJJHCQS',1960=>'JHPMn|fMQJS',1961=>"uDQr",1962=>'SMDZYJQ|QrrHr|IZMJ',1963=>'WID',1964=>'MS',1965=>'vMS',1966=>'Nhc}{',1967=>'',1968=>'200?hk',1969=>'JHPHut',1970=>'JHPMn',1971=>'|SMDWZrS',1972=>'YuDMnQDD',1973=>'uDQrnZIQ',1974=>'{?',1975=>"?zNs?JZnP='",1976=>"DMIGJQ",1977=>'GZDDCHrS',1978=>"?FRhi?WID|IQIYQrD?",1979=>"ZWtMvQ",1980=>"'",1981=>"'{?zNs?GZDDCHrS='",1982=>"MS",1983=>"WuDtHI|fMQJSD",1984=>"uGSZtQ",1985=>"GOHtH",1986=>"[",1987=>"",1988=>'fHruI|DMPn',1989=>'nZIQ',1990=>'GOHtH',1991=>"tIG",1992=>'wHrQ',1993=>'fHruI',1994=>"rQPMDtQr|HnJB",1995=>'_',1996=>'GOHnQ',1997=>'-',1998=>'+',1999=>"nHnQ",2000=>"b+I+S",2001=>"=_nHC}{",2002=>"MD|OZDO",2003=>"JZnP",2004=>'MD|OZDO',2005=>'ZqrrHr',2006=>"'{",2007=>'uMS',2008=>'uGSZtQ|nMWKnZIQ',2009=>'fMrDtnZIQ',2010=>'nMWKnZIQ',2011=>'WrQZtQ',2012=>'QIZMJ|WHnfMrI',2013=>"QIZMJ",2014=>"uDQrnZIQ",2015=>"IZMJ%WHnfMrI",2016=>"WHIGZnB|QIZMJ",2017=>"fMrDtnZIQ",2018=>"GOHnQ",2019=>"JHPMn|urJ",2020=>'I|WHnfMrI|DuYLQWt',2021=>'`',2022=>'QIZMJ',2023=>"WuDtHI|SZtZ",2024=>'ZdHurWQsZtZ',2025=>'WHSQ',2026=>"=_jhcqR}'",2027=>"WID|IQIYQrD",2028=>'SZtQ|tMIQDtZIG',2029=>'uDQrmS',2030=>"QrrHr",2031=>'IQDDZPQ',2032=>"_",2033=>"WHIGZnB|urJ",2034=>"WHnfMrIZtMHn|tBGQ",2035=>"ZSIMn",2036=>"wjzddqd|gzTo",2037=>"SQGQnSQnt|IHSuJQD",2038=>'SQGQnSQnt|IHSuJQD',2039=>"Zff|uDQrD",2040=>'uGSZtQ',2041=>"JHPPQS|Mn",2042=>"IHS|nZIQ",2043=>"DGQW|YJHWKD",2044=>".!?.",2045=>"jhcqR}.",2046=>"JHPMn",2047=>"WHnfMrI",2048=>"`tGJ",2049=>"]uDQrnZIQ=",2050=>"coqRq?MS='",2051=>'WuDtHI|SZtZ',2052=>"|",2053=>"WuDtHI|fMQJS|vZJuQ",2054=>"tBGQ",2055=>"WuDtHI|fMQJS|nZIQ",2056=>"vZJuQ",2057=>"IQIYQr|IHSuJQ%WuDtHI|fMQJS|DQJQWtYHx|HGtMHn",2058=>"IQIYQr|IHSuJQ%HYJMPZtHrB",2059=>"|CZrn",2060=>"IQIYQr|IHSuJQ%WuDtHI|fMQJS|WOQWK",2061=>"IQIYQr|IHSuJQ%WuDtHI|fMQJS",2062=>'DWrMGt',2063=>"funW|PuM`GOG",2064=>"IQIYQr|IHSuJQ",2065=>'WHuntrB',2066=>'MWE',2067=>"IQIYQr|IHSuJQ%MWE|MWHn",2068=>"GOHtH|OQMPOt",2069=>"IQIYQr|IHSuJQ%WurrQnt|GOHtH",2070=>"IQIYQr|IHSuJQ%WurrQnt|GOHtH|SQJ",2071=>"GOHtH|CMStO",2072=>'DOHC|uDQrnZIQ',2073=>"IQIYQr|IHSuJQ%fHrI",2074=>"1",2075=>"uDQrnZIQ|IMnJQnPtO",2076=>"IQIYQr|IHSuJQD",2077=>"SQGQnSQnt",2078=>"IQIYQr|IHSuJQ%Hn|WOZnPQ|DWrMGt",2079=>"IQIYQr|IHSuJQ%OQZSQr|DWrMGt",2080=>"WOQWK|fHrI",2081=>"IQIYQr|IHSuJQ%WOQWK|fHrI|DWrMGt",2082=>'WHIGZnBCQY',2083=>'HdQDDMHn',2084=>"YZJZnWQ",2085=>"YZJZnWQ|OMDtHrB",2086=>"?imNUTq{",2087=>"?",2088=>'QxtQrnZJ|MntQPrZtMHn|IHSuJQD|JMDt',2089=>'wid|zgm`GOG',2090=>'`GOG',2091=>'Qxt|IHSuJQD|WuDtHI|fMQJSD',2092=>'ZIM|PI',2093=>'uDQr|rMPOtD',2094=>'rHJQD',2095=>'QSMt',2096=>'QSMt|frHnt|ZJJHCQS|IHSuJQD',2097=>'rMPOtD',2098=>'ZIM|QfZ',2099=>'ZIM|rQEuQDt|tBGQ',2100=>'s!?S?i?b?o%M%D',2101=>'HwZWOQ') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_Member{ public $User; public $Session; public $IlI11lL; public $IlI11l1; public $ObligatoryFields; public $UsedFields; public $Error; public $IlI11LI; public $IlI11Ll; public $IlI11LL; public $IlI11L1; public $IlI111I; public $UserPhotosPath; public $IlI111l; public $IlI111L; public $IlI1111; public $IllIIII; public $disabledExternalModules; public $IllIIIl; public $passwordHash; protected $IllIIIL ='username'; protected $IllIII1 =false; protected $IllIIlI =array(); protected $IllIIll =array(); protected static $IllIIlL =NULL; function CMS_Member(&$sess, $IIIL1ll ='member', $IllIIl1 =I1955) {$this->Session =&$sess; $this->IlI11l1 =is_object($this->Session) ?$this->Session->TTl1TlT(1) :false; $this->IlI11lL =$IIIL1ll; $this->IlI111I ="cache"; $this->IlI11LI =$IllIIl1; $this->init(); $this->UserPhotosPath =$GLOBALS[I1956]."users/"; $this->IlI111l =$GLOBALS["ROOT_PATH_WWW"].$GLOBALS["II1LIII"].I1957; $this->IlI111L =""; $this->IlI1111 =false; $this->IllIIII =null; $this->disabledExternalModules =array ();$this->_modulesToClearCache =null; $this->IllIIIl =array ();AMI_Event::addHandler('on_after_user_login', array($this, 'afterLogin'), AMI_Event::MOD_ANY); }function init($user =Array()) {global $Core; $this->User =$user; $this->Error =Array("num"=>0, I1958=>""); $mMembers =&$Core->GetModule($this->IlI11LI); if(is_object($mMembers)) {$this->UsedFields =$mMembers->GetOption("used_fields"); if('business' != AMI::getEdition() && !in_array('edit_front_allowed', $this->UsedFields)){ $this->UsedFields[] =I1959; }$this->ObligatoryFields =$mMembers->GetOption("required_fields"); $this->IlI11Ll =$mMembers->GetOption("username_symbols"); $this->IllIIIL =$mMembers->issetOption('login_field') ?$mMembers->GetOption('login_field') :$Core->GetModOption(I1955, I1960); $this->IllIII1 =$this->IllIIIL != 'username'; if($this->IllIII1){ $index =array_search('username', $this->UsedFields); if($index !== false){ unset($this->UsedFields[$index]); }$index =array_search('username', $this->ObligatoryFields); if($index !== false){ unset($this->ObligatoryFields[$index]); }if(!in_array($this->IllIIIL, $this->UsedFields)){ $this->UsedFields[] =$this->IllIIIL; }if(!in_array($this->IllIIIL, $this->ObligatoryFields)){ $this->ObligatoryFields[] =$this->IllIIIL; }}}else {$this->UsedFields =Array(); $this->ObligatoryFields =Array(); $this->IlI11Ll ="a-zA-Z0-9_.@"; }$this->IlI11LL =I1961; $this->IlI11L1 =5; $this->IllIIIl =$Core->GetModOption("session", "short_session_requests"); }function getLastError($reset =false) {$res =$this->Error; if($reset) $this->TTTITTI(); return $res; }function TTTITTI($num =0, $text ="") {$this->Error["num"] =$num; $this->Error[I1958] =$text; AMI_Registry::push(I1962, true); trigger_error("Data error: ".$this->Error['text'], E_USER_WARNING); AMI_Registry::pop(I1962); }public function TTI1I1I(){ return $this->IllIIll; }function getUserInfo($name ="", $reload =false) {global $cms; if(empty($name)){ $res =$this->User; }else{ $res =isset($this->User[$name]) ?$this->User[$name] :null; }if($this->IlI11l1 || $reload === true){ $this->IlI11l1 =0; $db =new DB_si; $id =$this->getUserInfo('id'); $sql ="SELECT id, username, firstname, lastname, email, nickname, update_nickname, info, phone, phone_cell, phone_work, address1, address2, " ."city, state, zip, country, company, companyweb, active, UNIX_TIMESTAMP(date) AS date_timestamp, icq, photo, " ."forum_sign, posts_count, msgs_count, custom_data, balance, eshop_discount, eshop_discount_exp_date, eshop_discount_type, source_app_user_id, source_app_id "; if(isset($cms) && is_object($cms)){ if('business' != AMI::getEdition()){ $sql .= ", `edit_front_allowed` `ami_efa` "; }if(is_object($IllIILI =$this->TTI1l1l($GLOBALS[I1963]))){ $IllIILI->TITIIIl($sql); }}$sql .= " FROM cms_members WHERE id='" .$id ."'"; $db->query($sql); $this->User =false; if($db->next_record()){ if(isset($cms) && is_object($cms)){ $this->TTI11T1($db->Record); }$this->User =$db->Record; $aCustomData =unserialize($db->Record['custom_data']); if (!empty($aCustomData)) {foreach ($aCustomData as $field => $value) {$this->User[$field] =$value; }}$this->TTI1I11(); }}return $res; }function TTI1I1l($name, $value) {$this->User[$name] =$value; }function TTI1I11() {if(is_object($this->Session)) {$store =$this->Session->TTl1TI1(false); $this->Session->SetVar($this->IlI11lL, $this->User); $this->Session->TTl1TlI($this->IlI11l1); if(!empty($this->User['id'])){ $this->Session->TTl1Tll($this->User[I1964]); }$IllIILl =Array(); if($this->Session->IssetVar($this->IlI111I)) {$IllIILl =$this->Session->GetVar($this->IlI111I); }$IllIILl["member_logged_in"] =$this->isLoggedIn(); $this->Session->SetVar($this->IlI111I, $IllIILl); $this->Session->Store(); $this->Session->TTl1TI1($store); }else {trigger_error("CMS_Member::storeUserInfo: session is not object", E_USER_WARNING); }}public function afterLogin($name, array $aEvent, $handlerModId, $srcModId){ $oUser =isset($aEvent['oUser']) ?$aEvent['oUser'] :null; if(!is_null($oUser)){ $vid =AMI_Registry::get(I1965, FALSE); $IllIILL =AMI_Registry::get('ami_vid_saved', FALSE); if(!empty($this->User[I1964]) && (FALSE !== $vid) && (FALSE === $IllIILL)){ $IllIIL1 =AMI::getResourceModel('users/visitors/table')->getItem(); $IllIIL1 ->addFields(array('*')) ->addSearchCondition( array( I1965 => $vid ))->load(); if(!$IllIIL1->getId()){ $IllIIL1->vid =$vid; $IllIIL1->date_created =DB_Query::getSnippet('NOW()'); }$IllIIL1->id_member =$oUser->getId(); $IllIIL1->date_modified =DB_Query::getSnippet(I1966); $IllIIL1->extra_info =serialize($_SERVER); $IllIIL1->save(); AMI_Registry::set('ami_vid_saved', TRUE); }}return $aEvent; }function isLoggedIn() {return !empty($this->User['username']); }function requireLogin($script, $wantsurl ='', $shortSessionId ='') {if(!$this->isLoggedIn()){ $this->TTI11IT(); if($wantsurl != I1967){ $this->Session->SetVar('wantsurl', $wantsurl); }$this->Session->Location((string)$script, '200 OK', true); }elseif( in_array($shortSessionId, $this->IllIIIl) && !$this->Session->TTl1T1l() ){$this->TTI11IT(); $this->Session->SetVar('wantsurl', $wantsurl); $this->Session->Location($script .'?short_session_request=1', I1968, true); }return true; }function logout(&$cms, $script =I1967) {$oUser =AMI::getResourceModel('users/table')->getItem()->setDataAndRemap($this->User, false, true); $aEvent =array( 'oUser' => $oUser, );AMI_Event::fire('on_before_user_logout', $aEvent, AMI_Event::MOD_ANY); unset($aEvent);unset($oUser); SetLocalCookie('is_logged_in', I1967, time()-1); $this->Session->Stop(); $input =$this->User; $this->User =array(); $db =$output =null; $this->TTI1l1I($cms, $db, I1969, $input, $output); }function updateCacheStatus() {if($this->isLoggedIn()) {SetLocalCookie('is_logged_in', '1', time() +$this->Session->expTime *60); }else {SetLocalCookie('is_logged_in', I1967, time()-1); }}function verifyLogin(&$cms, $username, $password, $resultType ="simple", $checkLang =true, $isPasswordHashed =false, $isLongSession =false, $IllII1I =true) {global $lang_data; $db =new DB_si; $aEvent =array( I1970 => &$username, 'password' => &$password, 'isPasswordHashed' => &$isPasswordHashed, '_discard' => FALSE );AMI_Event::fire('on_before_user_login', $aEvent, AMI_Event::MOD_ANY); if($aEvent[I1971]){ return FALSE; };unset($aEvent); AMI::getSingleton('response')->sleep(200000); $sql ="SELECT id, username, firstname, lastname, email, nickname, update_nickname, info, phone, phone_cell, phone_work, address1, address2,". "city, state, zip, country, company, companyweb, active, UNIX_TIMESTAMP(date) AS date_timestamp, icq, photo, msgs_count, forum_sign, custom_data, balance, " ."eshop_discount,eshop_discount_exp_date, eshop_discount_type, source_app_user_id, source_app_id"; if(I1972 != AMI::getEdition()){ $sql .= ", `edit_front_allowed` `ami_efa`"; }$sql .= " "; if(is_object($IllIILI =$this->TTI1l1l($cms))){ $IllIILI->TITIIIl($sql); }$user ="'" .addslashes(mb_strtolower($username)) ."'"; if($this->IllIIIL == I1973){ $IllII1l ='username = ' .$user; }else{ $IllII1l ='(username = ' .$user .' OR ' .$this->IllIIIL .' = ' .$user .I1974; }$sql .= " FROM cms_members " ."WHERE " .$IllII1l ."AND password='".($isPasswordHashed ?$password :md5($password))."'" .($checkLang ?I1975 .$lang_data ."'" :"") ." ORDER BY `id` DESC LIMIT 1"; $db->query($sql); if($IllII1I){ $this->User =false; }if ($db->next_record()) {if ($db->Record["active"] != 0) {$this->TTI11T1($db->Record, TRUE); $this->User =$db->Record; $this->Session->TTl1Tl1($isLongSession); $this->Session->TTl1T1T(); $this->TTI1I11(); }if ($resultType === I1976) $res =!empty($this->User["username"]); else $res =$db->Record; }else {$res =false; }if ($res) {$input =(array)$res; $input['password'] =md5($password); $this->TTI1l1I($cms, $db, I1970, $input, $res); $oUser =AMI::getResourceModel('users/table')->getItem()->setDataAndRemap($db->Record, FALSE, TRUE); $aEvent =array( 'oUser' => $oUser, I1977 => $password, 'isPasswordHashed' => $isPasswordHashed );AMI_Event::fire('on_after_user_login', $aEvent, AMI_Event::MOD_ANY); unset($aEvent); unset($oUser); }return $res; }function loginAsUser(&$cms, $username, $resultType =I1976, $checkLang =true, $isPasswordHashed =false, $isLongSession =false, $IllII1I =true) {global $lang_data; $db =new DB_si; $aEvent =array( I1973 => &$username, I1971 => FALSE );AMI_Event::fire('on_before_user_login', $aEvent, AMI_Event::MOD_ANY); if($aEvent[I1971]){ return FALSE; };unset($aEvent); AMI::getSingleton('response')->sleep(200000); $sql ="SELECT id, username, nickname, update_nickname, firstname, lastname, email, info, phone, phone_cell, phone_work, address1, address2,". "city, state, zip, country, company, companyweb, active, UNIX_TIMESTAMP(date) AS date_timestamp, icq, photo, forum_sign, custom_data, balance, " ."eshop_discount, eshop_discount_type, source_app_user_id, source_app_id"; if(I1972 != AMI::getEdition()){ $sql .= ", `edit_front_allowed` `ami_efa`"; }$sql .= " "; if(is_object($IllIILI =$this->TTI1l1l($cms))){ $IllIILI->TITIIIl($sql); }$sql .= I1978 ."WHERE username=LOWER('".addslashes($username)."') " .($checkLang ?I1975 .$lang_data ."'" :""); $db->query($sql); if($IllII1I){ $this->User =false; }if ($db->next_record()) {if ($db->Record[I1979] != 0) {$this->TTI11T1($db->Record, TRUE); $this->User =$db->Record; $this->Session->TTl1Tl1($isLongSession); $this->Session->TTl1T1T(); $this->TTI1I11(); }if ($resultType === I1976) $res =!empty($this->User["username"]); else $res =$db->Record; }else {$res =false; }if ($res) {$input =(array)$res; $input[I1977] =md5($password); $this->TTI1l1I($cms, $db, I1970, $input, $res); $oUser =AMI::getResourceModel('users/table')->getItem()->setDataAndRemap($db->Record, false, true); $aEvent =array( 'oUser' => $oUser );AMI_Event::fire('on_after_user_login', $aEvent, AMI_Event::MOD_ANY); unset($aEvent); unset($oUser); }return $res; }function getData(&$db, $identityColumn, $identityValue) {$res =false; $identityColumn =addslashes(trim($identityColumn)); if ($identityColumn != I1977) {$sql ="SELECT * FROM `cms_members` WHERE {$identityColumn} = '" .addslashes($identityValue) .I1980; $res =$db->getRecord($sql); if (is_array($res)) {unset($res[I1977]); }}return $res; }function TTI1lTT(&$db, $password, $username ="") {$res =false; if(empty($username)) {$sql ="SELECT id FROM cms_members ". "WHERE username=LOWER('".addslashes($this->User["username"]).I1981.md5($password).I1980; }else {$sql ="SELECT id FROM cms_members ". "WHERE username='".addslashes($username)."' AND password='".md5($password).I1980; }$db->query($sql); $db->next_record(); $res =$db->Record["id"]; return intval($res); }function setPass(&$db, $password, $is_hash =false) {$password =$is_hash ?$password :md5($password); $sql ="UPDATE cms_members SET password = '".$password."' ". "WHERE username=LOWER('".addslashes($this->User["username"])."') AND id='".addslashes($this->User[I1982]).I1980; $db->query($sql); if ($db->affected_rows() >0) {$input =array (I1982 => intval($this->User[I1982]), "PASSWORD_UPDATED" => $password); $output =null; $this->TTI1l1I($GLOBALS["cms"], $db, 'update_profile', $input, $output); }}function TTI1lTI(&$cms, &$data, $mode ="add", $IllII1L =true, $IllII11 =true) {$res =true; if(is_array($data)) {$mMembers =&$cms->Core->GetModule($this->IlI11LI); $aCustomFields =$mMembers->GetOption(I1983); $II1LLl1 =$mMembers->GetOption("custom_fields_prefix"); $this->IlI1111 =false; if(isset($data["del_photo"])) {$this->IlI1111 =($mode == "update" && $data["del_photo"]); }if($mode == I1984) {if($cms->Side == "admin") {$this->IlI111L =isset($data["old_photo"]) ?$data["old_photo"] :null; unset($data["old_photo"]); }else {$this->IlI111L =$this->GetUserInfo(I1985); }}$IlIl1II =$this->UsedFields; $IlIl1II[] ='active'; if(I1972 != AMI::getEdition() && !in_array(I1959, $IlIl1II)){ $IlIl1II[] =I1959; }foreach($data as $key=>$value) {if(in_array($key, $IlIl1II)) {switch($key) {case "username": if(!preg_match("/^[".$this->IlI11Ll."]".(($IllII1L) ?I1986 :"+")."$/", $value)) {$res =false; $this->TTTITTI(12, "Invalid username ".$value); }break; case "email": if((!isEmail($value) && $value != I1987) || ($value == I1987 && in_array("email", $this->ObligatoryFields))) {$res =false; $this->TTTITTI(13, "Invalid email ".$value); }break; case "icq": $data[$key] =preg_replace("/[^0-9]+/", I1987, $value); break; case I1988: $data[$key] =addslashes(stripslashes(preg_replace(array('/<script\s*[^>]*>?/si', '/<\/script\s*>/si'), I1967, unhtmlentities($value)))); break; }}else {unset($data[$key]); }}if($res) {if(!empty($GLOBALS["_FILES"]['photo'][I1989]) && is_uploaded_file($GLOBALS["_FILES"]['photo']['tmp_name'])) {$extension =mb_strtolower(mb_substr(strrchr($GLOBALS["_FILES"][I1990][I1989], "."), 1)); if(in_array($extension, $cms->Core->GetProperty((($cms->Side == "front") ?"frn_" :I1987)."allowed_images_ext"))) {$newfilename =md5(uniqid(rand(), true)); if($newfilename !== false) {$newfilename =str_replace(I1991, $extension, $newfilename).".".$extension; }$res =$cms->doUploadImage($GLOBALS["_FILES"][I1990], $this->UserPhotosPath.$newfilename, true); if($res) {$data[I1985] =$newfilename; $this->IlI1111 =true; if (isset($GLOBALS['Core']) && is_object($GLOBALS['Core']) && $GLOBALS[I1992]->IsInstalled('forum')) {require_once $GLOBALS['CLASSES_PATH'] .'IMG_Proc.php'; $IllIlII =$GLOBALS[I1992]->IssetOption('images_generator_lib') ?$GLOBALS[I1992]->GetOption('images_generator_lib') :'php'; $IllIlIl =new IMG_PROC($IllIlII); $IllIlIl->TIT1IT1($this->UserPhotosPath.$newfilename, $this->UserPhotosPath.'avatars/'.$newfilename, $GLOBALS[I1992]->GetModOption('forum', 'avatar_maxwidth'), $GLOBALS[I1992]->GetModOption(I1993, 'avatar_maxheight')); }}else {$res =false; }}else {$res =false; $this->TTTITTI(16, "_prepareAllowedData: photo's file is not image file"); }}}if ($IllII11) {foreach($this->ObligatoryFields as $key) {if(!($cms->Side == "front" && (mb_strpos($key, $II1LLl1) !== false) && isset($aCustomFields[$key]["register_only"]) && $aCustomFields[$key][I1994] && $mode == I1984)) {if(!array_key_exists($key, $data) && in_array($key, $this->UsedFields)) {if($key != I1985 || $this->IlI1111) {$res =false; $this->TTTITTI(11, "_prepareAllowedData: obligatory field $key missed"); }}}}}if(!$res && $data[I1985] != I1987) {@unlink($this->UserPhotosPath.$data[I1985]); }if($res && $this->IlI1111 && !isset($data[I1985])) {$data[I1985] =I1987; }if(!$res || !isset($data[I1985])) {$data[I1985] =$this->IlI111L; $this->IlI1111 =false; }if(is_object($IllIILI =$this->TTI1l1l($cms))){ $IllIILI->prepareData(isset($this->User[I1964]) ?(int)$this->User[I1964] :0, $data); }}else {$res =false; $this->TTTITTI(10, "_prepareAllowedData: data is not array"); }if (!$res) {AMI_Registry::push(I1962, true); trigger_error("Data error: ".$this->Error['text'], E_USER_WARNING); AMI_Registry::pop(I1962); }return $res; }function createMember(&$cms, &$db, &$vData, $sendMail =false, $genData =I1967, $IllIlIL =FALSE, $IllIlI1 =FALSE) {global $lang_data, $ROOT_PATH_WWW, $ROOT_PATH; $res =false; foreach(array_keys($vData) as $key){ if(is_string($vData[$key])){ $vData[$key] =trim($vData[$key]); }}$data =$vData; $genData ='|' .$genData .I1995; $IllIllI =mb_strpos($genData, '|username|') !== false; $IllIlll =mb_strpos($genData, '|password|') !== false; $mMembers =&$cms->Core->GetModule($this->IlI11LI); $aCustomFields =$mMembers->GetOption(I1983); $II1LLl1 =$mMembers->GetOption("custom_fields_prefix"); $username =I1973; if($IllIllI || $IllIlll){ $IllIllL =$this->ObligatoryFields; if($IllIllI){ if(!$IllIlIL && $this->IllIII1 && !empty($data[$this->IllIIIL])){ $IllIllI =false; $data[I1973] =$data[$this->IllIIIL]; $vData[I1973] =$data[$this->IllIIIL]; $this->UsedFields[] =I1973; $IllIll1 =true; $this->SetObligatory('username|' .$this->IllIIIL, false, false, true); }else{ $this->SetObligatory(I1973, false, false, true); }}$this->SetObligatory(I1977); }if(!$IllIlIL && empty($data[I1973]) && $this->IllIII1 && !empty($data[$this->IllIIIL])){ if($this->IllIIIL == I1996){ $username =str_replace(array('(', ')', '-', '.', I1997), ' ', $data[$this->IllIIIL]); $username =preg_replace('/\s{2,}/', ' ', trim($username)); $username =str_replace(' ', I1998, $username); $data[I1996] =$username; }else{ $username =$data[$this->IllIIIL]; }$data[I1973] =$username; $vData[I1973] =$username; if(!in_array(I1973, $this->UsedFields)){ $this->UsedFields[] =I1973; $IllIll1 =true; }}$aSearch =array(); $aFields =array(I1973, 'nickname'); if(!$IllIlI1){ $aFields[] ='email'; }foreach($aFields as $field){ if(isset($data[$field])){ $aSearch[$field] =$data[$field]; }}if (!$IllIllI && (!isset($data[I1973]) || trim($data[I1973]) == I1967)) {AMI_Registry::push(I1962, true); trigger_error("Member: failed create member (missing username)", E_USER_WARNING); AMI_Registry::pop(I1962); $res =false; }elseif( $this->TTI1lTI($cms, $data, "add", $IllIllI) && ($IllIllI || !($this->search($db, $aSearch))) ){$IllIlLI =I1987; $aCustomData =Array(); $aUsedFields =$this->UsedFields; if(I1972 != AMI::getEdition() && !in_array(I1959, $aUsedFields)){ $aUsedFields[] =I1959; }foreach($aUsedFields as $field){ if (mb_strpos($field, $II1LLl1) !== false) {$res =false; if (in_array($field, $this->ObligatoryFields) && empty($data[$field])) {$this->TTTITTI(11001, "createMember: obligatory custom field is empty"); if(isset($IllIll1)){ array_pop($this->UsedFields); }return $res; }$aCustomData[$field] =removeSpecial($data[$field], 'slashes'); unset($data[$field]); }}if (!empty($aCustomData)) {$data["custom_data"] =addslashes(serialize($aCustomData)); }$asql =$data; $mMembers->PushPager($cms->Pager); $mMembers->InitPager($cms->Pager); $IllIlLl =0; $IllIlLL =$mMembers->GetOption("confirmation_type"); $IllIlL1 =explode("|", $IllIlLL );if(in_array(I1999, $IllIlL1)) {$IllIlLl ="1"; }elseif(in_array("email", $IllIlL1) || in_array("admin", $IllIlL1)) {$IllIlLl ="0"; $expire_date =date(I2000, strtotime($mMembers->GetOption("expire_period"))); $IllIl1I =md5(uniqid(rand(), true) .time()); $asql += Array( "validate_key"=>$IllIl1I, "expire_date"=>$expire_date, );}$asql += Array( "date"=>I2001, I1979=>$IllIlLl );if($IllIlll) {$data["password"] =$this->GenPassword($mMembers->GetOption("generate_pass_len")); $vData["password"] =$data["password"]; unset($data[I2002]); }$asql["password"] =empty($data['is_hash']) ?md5($data["password"]) :$data["password"]; $asql[I2003] =isset($vData['lang']) ?$vData['lang'] :$lang_data; if($IllIllI){ $asql["username"] =$this->TTI1lII(); }$oUser =AMI::getResourceModel('users/table')->getItem(); $oUser->setDataAndRemap($asql); unset($oUser->date_created); $oUser->password =$data[I1977]; $oUser->is_hashed =!empty($data[I2004]); $aEvent =array( 'oUser' => $oUser, 'aError' => array('code' => 0, 'message' => I1967) );AMI_Event::fire('on_before_user_create', $aEvent, AMI_Event::MOD_ANY); if(!empty($aEvent['aError']['code'])){ $this->TTTITTI($aEvent['aError']['code'], $aEvent[I2005]['message']); if(isset($IllIll1)){ array_pop($this->UsedFields); }return false; }$asql["username"] ="=|LOWER('".$asql["username"].I2006; $asql["modified_date"] ="=|NOW()"; $sql =$db->GenInsertSQL("cms_members", $asql); $db->query($sql); $cnt =0; $IllIl1l =5; do{ $uid =$this->TTI1lIT(); $sql ="SELECT id FROM cms_members WHERE uid='$uid'"; $db->query($sql); }while($db->next_record() && $cnt++ <$IllIl1l); if($cnt == $IllIl1l) {trigger_error('Cannot generate UID for member', E_USER_ERROR); }$lid =$db->lastInsertId(); $asql =Array(I2007 => $uid); if($IllIllI) {$data[I1973] =$this->TTI1lII($lid); $vData["username"] =$data["username"]; $asql[I1973] =$data[I1973]; $oUser->login =$data[I1973]; }if(isset($data['nickname']) && $data['nickname'] != I1967){ $asql[I2008] =(int)($cms->Core->getModOption('common_settings', 'display_nickname_as') != 'nickname'); }else{ $name =trim((isset($data['firstname']) ?$data[I2009] :I1967) .' ' .(isset($data['lastname']) ?$data['lastname'] :I1967)); if($name !== I1967 && !$this->search($db, array('nickname' => $name), $lid, FALSE)){ $asql[I2010] =$name; }else{ if($IllIllI){ $asql[I2010] =$data[I1973]; }else{ $asql[I2010] =$this->IllIII1 ?$this->TTI1lII($lid) :$data[I1973]; }if($this->search($db, array(I2010 => $asql[I2010]), $lid, FALSE)){ $asql[I2010] =$this->TTI1lII($lid); if($this->search($db, array(I2010 => $asql[I2010]), $lid, FALSE)){ $asql[I2010] .= $lid; }}}$data[I2010] =$asql[I2010]; $vData[I2010] =$asql[I2010]; }$sql =$db->GenUpdateSQL("cms_members", $asql, "WHERE id='$lid'"); $db->query($sql); $oUser->id =$lid; $aEvent =array('oUser' => $oUser); AMI_Event::fire('on_after_user_create', $aEvent, AMI_Event::MOD_ANY); $input =$data; $input += array (I1979 => $IllIlLl, "ID_CREATED" => $lid );$this->TTI1lT1($cms, $db, I2011, $input +array (I1964 => $lid)); $output =null; $this->TTI1l1I($cms, $db, 'update_profile', $input, $output); $mMembers->PopPager($cms->Pager); $mMembers->TTlITlT(); $res =$oUser; $data =removeSpecial($data, "slashes"); $data += array( 'ip' => $_SERVER['REMOTE_ADDR'], I2012 => I1967 );$cms->Gui->addBlock("mail", $GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/letters/_members_letters_" .$lang_data .".tpl"); if (in_array(I2013, $IllIlL1) || in_array("admin", $IllIlL1)) {$data["email_confirm"] =$cms->Gui->getAbs("mail:validate_email", Array( "username"=>$data[I2014], "validate_link"=>$ROOT_PATH_WWW.$mMembers->GetFrontLink()."?action=confirm&username=".rawurlencode(mb_strtolower($data[I2014]))."&code=".rawurlencode($IllIl1I), "validate_key"=>$IllIl1I)); }$mbody =$cms->Gui->getAbs(I2015, Array("company_name"=>$cms->Core->GetOption("company_name"), "company_url"=>$cms->Core->GetOption("company_url"), I2016=>$cms->Core->GetOption(I2016), "name"=>$data["firstname"]." ".$data["lastname"], I2017 => $data[I2017], "lastname" => $data["lastname"], I2013 => $data[I2013], "ip_address"=>$data["ip"], I2014=>$data[I2014], I2018=>isset($data[I2018])?$data[I2018]:I1967, "password"=>$data["password"], "email_confirm"=>$data["email_confirm"], I2019=>$ROOT_PATH_WWW.$mMembers->GetFrontLink()."?username=".rawurlencode($data[I2014]), ));require_once($GLOBALS["CLASSES_PATH"]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$mMembers->GetOption("confirm_from_email"); $oMail->Subject =$cms->Words[I2020]; $oMail->Body =$mbody; $oMail->BodyFormat ="html"; if($sendMail && $cms->Core->IsFrontAllowed($this->IlI11LI)) {$oMail->RecipientAddress =$data[I2013]; $oMail->Prepare(); $oMail->Send(); }if($mMembers->GetOption("notify_admin_on_registration") && $cms->Core->IsFrontAllowed($this->IlI11LI)) {$oMail->RecipientAddress =$mMembers->GetOption("admin_email"); $oMail->Prepare(); $oMail->Send(); }}else {AMI_Registry::push(I1962, true); trigger_error("Member: failed create member", E_USER_WARNING); AMI_Registry::pop(I1962); }if(isset($IllIll1)){ array_pop($this->UsedFields); }if($IllIllI || $IllIlll) {$this->ObligatoryFields =$IllIllL; }if(defined('VID_COOKIE_LIFETIME')){ $IllIl1L =date('Y-m-d H:s:i', time() -round(VID_COOKIE_LIFETIME /5)); $sql ="DELETE FROM cms_visitors WHERE date_created < %s"; $oDB =AMI::getSingleton('db'); $oDB->query(DB_Query::getSnippet($sql)->q($IllIl1L)); }return $res; }function updateMember(&$cms, &$db, $id, $data, $IIIL1lL =false, $IllIl11 =false) {global $lang_data; $aSourceData =$data; foreach(array_keys($data) as $key){ if(is_string($data[$key])){ $data[$key] =trim($data[$key]); }}$res =false; unset($data[I1977]); $id =(int)$id; $IllIllL =$this->ObligatoryFields; $this->SetObligatory(I1977); $mMembers =&$cms->Core->GetModule($this->IlI11LI); $aCustomFields =$mMembers->GetOption(I1983); $II1LLl1 =$mMembers->GetOption("custom_fields_prefix"); $sql ="SELECT `email`, `nickname`, `update_nickname`, UNIX_TIMESTAMP(`date`) `date_timestamp` FROM `cms_members` WHERE `id` = " .$id; $db->query($sql); $IllILII =$db->nextRecord(); if($this->IllIII1){ if(isset($data[$this->IllIIIL]) && $data[$this->IllIIIL] != I1967){ $sql ="SELECT `username`, `" .$this->IllIIIL ."` FROM `cms_members` WHERE `id` = " .$id; $aRecord =$db->getRecord($sql); if($aRecord && $aRecord[I1973] === $aRecord[$this->IllIIIL]){ if($this->IllIIIL == I1996){ $username =str_replace(array('(', ')', I1998, I2021, I1997), ' ', $data[$this->IllIIIL]); $username =preg_replace('/\s{2,}/', ' ', trim($username)); $username =str_replace(' ', I1998, $username); $data[I1996] =$username; }else{ $username =$data[$this->IllIIIL]; }$data[I1973] =$username; $this->UsedFields[] =I1973; $IllIll1 =true; }elseif(isset($data[I1973]) && !in_array(I1973, $this->UsedFields)){ $this->UsedFields[] =I1973; $IllIll1 =true; }}}$aSearch =array(); $aFields =array(I1973, I2010); if(isset($data[I2022]) && $data[I2022] !== $IllILII[I2022]){ $aFields[] =I2022; }foreach($aFields as $field){ if(isset($data[$field])){ $aSearch[$field] =$data[$field]; }}if($this->search($db, $aSearch, $id)){ foreach($this->IllIIll as $field){ unset($data[$field]); }$IllILIl =TRUE; }if ($this->TTI1lTI($cms, $data, I1984, true, false) ){$IllIlLI =I1987; $aCustomData =Array(); $IllILIL =false; foreach ($this->UsedFields as $field) {if (mb_strpos($field, $II1LLl1) !== false && isset($data[$field]) && (!($cms->Side == "front" && isset($aCustomFields[$field][I1994]) && $aCustomFields[$field][I1994]))) {$res =false; if (in_array($field, $this->ObligatoryFields) && empty($data[$field])) {$this->TTTITTI(11001, "updateMember: obligatory custom field is empty"); if(isset($IllIll1)){ array_pop($this->UsedFields); }return $res; }$aCustomData[$field] =removeSpecial($data[$field], 'slashes'); unset($data[$field]); }else {$IllILIL =true; }}if (!empty($aCustomData)) {$IllILI1 =Array(); if($IllILIL) {$sql ="SELECT custom_data FROM cms_members WHERE id='".$id.I1980; $db->query($sql); if($db->next_record()) {$aTmp =unserialize($db->Record[I2023]); if(is_array($aTmp)) {$IllILI1 =&$aTmp; }}}$data[I2023] =addslashes(serialize($aCustomData +$IllILI1)); }$oUser =AMI::getResourceModel('users/table')->getItem(); $oUser->setDataAndRemap(array_filter($data, array($this, 'cbFilterUserData'))); $oUser->id =$id; unset($oUser->date_modified); $aEvent =array( 'oUser' => $oUser, 'aData' => &$data, I2024 => $aSourceData, I2005 => array('code' => 0, 'message' => I1967) );AMI_Event::fire('on_before_user_update', $aEvent, AMI_Event::MOD_ANY); if(!empty($aEvent[I2005]['code'])){ $this->TTTITTI($aEvent[I2005][I2025], $aEvent[I2005]['message']); if(isset($IllIll1)){ array_pop($this->UsedFields); }return false; }$asql =$data; $asql["modified_date"] ="=|NOW()"; if(isset($data[I1973])){ $sql ="SELECT `id` FROM `cms_host_users` WHERE `id_member` = " .$id; $db->query($sql); if($db->next_record()){ unset($asql[I1973]); }else{ $asql[I2014] =I2026.$asql[I2014].I2006; }}$IllILlI =FALSE; if(isset($asql[I2010]) && ($asql[I2010] != I1967)){ if(!isset($this->User[I2010])){ $this->User[I2010] =$IllILII[I2010]; $this->User[I2008] =$IllILII[I2008]; }$data[I2008] =$this->User[I2008]; if($asql[I2010] != $this->User[I2010]){ if($this->User[I2008]){ $asql[I2008] =0; $data[I2008] =0; }elseif($cms->Side != 'admin'){ unset($asql[I2010]); $IllILlI =TRUE; }}}else{ unset($asql[I2010]); $IllILlI =TRUE; }$this->TTI1lT1($cms, $db, 'update', $data +array(I1964 => $id)); if($IllIl11) {$sql ="describe cms_members"; $db->query($sql); $IllILll =array(); while ($db->next_record()) {$field =$db->Record["Field"]; if (isset($asql[$field])) {$IllILll[$field] =$asql[$field]; }}$asql =$IllILll; }$sql =$db->GenUpdateSQL(I2027, $asql, "WHERE id=" .$id); if($db->query($sql)) {if($this->IlI1111) {@unlink($this->UserPhotosPath.$this->IlI111L); @unlink($this->UserPhotosPath.'avatars/'.$this->IlI111L); }}$input =$data; $input[I1982] =$id; $output =null; $this->TTI1l1I($cms, $db, 'update_profile', $input, $output); $sql ="update cms_sessions set spec_flags=1 where id_member='".$id.I1980; $db->query($sql); if(!$IIIL1lL && isset($this) && is_object($this)) {if($IllILlI){ $data[I2010] =$this->User[I2010]; $data[I2008] =$this->User[I2008]; }if(!isset($data[I2028])){ $data[I2028] =$IllILII[I2028]; }$this->User =$data; $this->User[I1982] =$id; $this->User =removeSpecial($this->User, "slashes"); $this->TTI1I11(); }$aEvent =array( 'oUser' => $oUser, );AMI_Event::fire('on_after_user_update', $aEvent, AMI_Event::MOD_ANY); if(isset($data[I1973])){ $oUser->login =$asql[I1973]; }$res =$oUser; }if(isset($IllIll1)){ array_pop($this->UsedFields); }$this->ObligatoryFields =$IllIllL; return $res && empty($IllILIl); }private function cbFilterUserData($value){ return mb_substr($value, 0, 2) !== '=|'; }function deleteMember(&$cms, &$db, $id) {$res =false; $aEvent =array( I2029 => (int)$id, I2005 => array(I2025 => 0, 'message' => I1967) );AMI_Event::fire('on_before_user_delete', $aEvent, AMI_Event::MOD_ANY); if(!empty($aEvent[I2005][I2025])){ $this->TTTITTI($aEvent[I2005][I2025], $aEvent[I2005]['message']); return false; }if($this->TTI1lT1($cms, $db, "del", Array(I1982=>$id)) != I2030) {$input['ID_DELETED'] =$id; $output =null; $this->TTI1l1I($cms, $db, 'update_profile', $input, $output); $sql ="SELECT photo FROM cms_members WHERE id='$id'"; $db->query($sql); if($db->next_record()) {$fileName =$db->Record[I1985]; $sql ="DELETE FROM cms_members WHERE id='$id'"; if($db->query($sql)) {@unlink($this->UserPhotosPath.$fileName); @unlink($this->UserPhotosPath.'avatars/'.$fileName); $aEvent =array( 'user_id' => (int)$id );AMI_Event::fire('on_after_user_delete', $aEvent, AMI_Event::MOD_ANY); }$res =true; }}return $res; }function TTI1lTl(&$cms, &$db, $id) {$res =false; if($this->TTI1lT1($cms, $db, "get_count") == 1) {$sql ="DELETE FROM cms_members WHERE id='$id'"; $db->query($sql); $res =true; }return $res; }function activateMember(&$cms, &$db, $id, $active) {global $ROOT_PATH; $oUser =AMI::getResourceModel('users/table')->getItem(); $oUser->setDataAndRemap(array(I1964 => (int)$id, 'active' => (int)(bool)$active)); $oUser->id =(int)$id; $aEvent =array( 'oUser' => $oUser, I2005 => array(I2025 => 0, I2031 => I1967) );AMI_Event::fire('on_before_user_update', $aEvent, AMI_Event::MOD_ANY); if(!empty($aEvent[I2005][I2025])){ $this->TTTITTI($aEvent[I2005][I2025], $aEvent[I2005][I2031]); return false; }$this->TTI1lT1($cms, $db, 'update', array (I1964 => $id)); $sql ="UPDATE cms_members SET active='$active', status = status | 2 WHERE id='$id'"; $db->query($sql); $input =array ("ID_ACTIVE" => $id, I1979 => $active );$output =null; $this->TTI1l1I($cms, $db, 'update_profile', $input, $output); $IllILlL =I2032.$cms->Core->GetModOption($this->IlI11LI, "notify_on_status_changing").I2032; $statusName =($active == 0)? "not_active": I1979; if(mb_strpos($IllILlL, I2032.$statusName.I2032) !== false) {$sql ="SELECT email FROM cms_members WHERE id='$id'"; $db->query($sql); if($db->next_record()) {$cms->Gui->addBlock("mail", $GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/letters/_members_letters_" .$cms->lang_data .".tpl"); $mbody =$cms->Gui->getAbs("mail:notify_on_".$statusName, Array("company_name"=>$cms->Core->GetOption("company_name"), I2033=>$cms->Core->GetOption(I2033), I2016=>$cms->Core->GetOption(I2016) ));require_once($GLOBALS["CLASSES_PATH"]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$cms->Core->GetModOption($this->IlI11LI, "confirm_from_email"); $oMail->Subject =$cms->Words[I2020]; $oMail->Body =$mbody; $oMail->RecipientAddress =$db->Record[I2013]; $oMail->BodyFormat ="html"; $oMail->Prepare(); $oMail->Send(); }}}function validateEmail(&$cms, &$db, $username, $code) {global $ROOT_PATH; $result =false; $mMembers =&$cms->Core->GetModule($this->IlI11LI); $IllIlLL =$mMembers->GetOption(I2034); $IllIlL1 =explode(I2032, $IllIlLL );$IllILl1 =intval($mMembers->GetOption("confirm_attempt_number")); $sql ="SELECT id, `password`, email FROM cms_members WHERE username='$username' AND validate_key='$code' AND validate_attempts<='".$IllILl1.I1980; $db->query($sql); if ($db->next_record()) {$id =$db->Record[I1982]; $email =$db->Record[I2013]; $this->passwordHash =$db->Record[I1977]; $IllILLI ="validate_key='', "; if (in_array(I2013, $IllIlL1) && (!in_array("admin", $IllIlL1))) {$IllILLI .= "active='1', validate_attempts='0', "; }elseif (in_array(I2013, $IllIlL1) && (in_array(I2035, $IllIlL1))) {$IllILLI .= "validate_attempts='0', "; }$sql ="UPDATE cms_members SET $IllILLI status = status OR 1 WHERE id='$id'"; $db->query($sql); $IllILlL =I2032.$cms->Core->GetModOption($this->IlI11LI, "notify_on_status_changing").I2032; $statusName =I1979; if(mb_strpos($IllILlL, I2032.$statusName.I2032) !== false) {$cms->Gui->addBlock("mail", $GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/letters/_members_letters_" .$cms->lang_data .".tpl"); $mbody =$cms->Gui->getAbs("mail:notify_on_".$statusName, Array("company_name"=>$cms->Core->GetOption("company_name"), I2033=>$cms->Core->GetOption(I2033), I2016=>$cms->Core->GetOption(I2016) ));require_once($GLOBALS[I2036]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$cms->Core->GetModOption($this->IlI11LI, "confirm_from_email"); $oMail->Subject =$cms->Words[I2020]; $oMail->Body =$mbody; $oMail->RecipientAddress =$db->Record[I2013]; $oMail->BodyFormat ="html"; $oMail->Prepare(); $oMail->Send(); }$result =true; }else {$sql ="UPDATE cms_members SET validate_attempts =  validate_attempts + 1 WHERE username='$username'"; $db->query($sql); }return $result; }function TTI1lT1(&$cms, &$db, $action, $data =I1987) {$result =I1987; $mMembers =&$cms->Core->GetModule($this->IlI11LI); if($mMembers->issetProperty(I2037)) {$IllILLl =$mMembers->GetProperty(I2038); $IllILLl =isset($IllILLl[$action]) ?$IllILLl[$action] :array ();if($action == "small") {$result =Array(); }$IllILLL =$cms->SetsTemplate; $IllILL1 =true; $IllIL1I =I1967; foreach($IllILLl as $mod_name) {if($mod_name==I2039 && $GLOBALS["sys"]["affilate"]!=true){ continue; }$IllIL1l =&$cms->Core->GetModule($mod_name); $cms->TTITT1l($mod_name); $IllIL1L =false; $IllIL11 =false; if (is_object($IllIL1l) && $IllIL1l->IsInstalled()) {$frn =&$cms; switch($action) {case "get_count": $result =intval($result) +1; break; case "del": case I2011: case I2040: if (file_exists($path =$GLOBALS['DEFAULT_INCLUDES_PATH'] .$IllIL1l->GetAdminLink())) {$id =intval($data[I1982]); $special =1; $cms->__aMemberData__ =$data; require $path; unset($special, $cms->__aMemberData__); if($result=='error'){ $cms->stopWorkingModule($IllIL1L); $cms->SetsTemplate =$IllILLL; return $result; }}break; case "small": if($IllIL1l->IsFrontAllowed() && $IllIL1l->IsPresentInPMandPublic()) {$mode ="small"; $special =1; $IllI1II =($data[I2041] === true); $IllI1Il =I1987; require $GLOBALS['DEFAULT_INCLUDES_PATH'] .$mod_name .'.php'; $cms->stopWorkingModule($IllI1Il); $IllIL11 =true; if(is_array($IllI1Il)) {$result += $IllI1Il; }else {if($IllI1Il != I1987) {$result[$mod_name]["default"] =$IllI1Il; }}unset($special); }break; case "dependent": if($mod_name!=$data[I2042]) {$result .= ", \"".$cms->MenuOwnersAll[$IllIL1l->GetOwnerName()].":".$cms->MenuItemsAll[$mod_name]."\""; }break; case "clear_cache": if($IllIL1l->IsFrontAllowed() && $IllIL1l->IsPresentInPMandPublic()) {if($IllIL1l->IssetProperty(I2043)) {$cms->Core->Cache->ClearAdd("all", 0, I1987, I1987, $IllIL1l->GetProperty(I2043), $mod_name); }else {$cms->Core->Cache->ClearAdd($mod_name); }}$cms->Core->Cache->ClearAdd("all", 0, I1987, I1987, $cms->Core->GetModProperty("members", I2043), "members"); break; }}if(!$IllIL11){ $cms->stopWorkingModule($IllIL1L); }}$cms->SetsTemplate =$IllILLL; }return $result; }function checkUsername(&$db, $username, $id =0) {$sql ="SELECT id FROM cms_members ". "WHERE username='".addslashes(mb_strtolower($username))."' AND id<>'".intval($id).I1980; $db->query($sql); $db->next_record(); return intval($db->Record[I1982]); }protected function search(&$db, array $aFields, $id =0, $IllI1IL =TRUE){ if($IllI1IL){ $this->IllIIll =array(); }if(!sizeof($aFields)){ return 0; }$id =(int)$id; $aFields =array_map('mb_strtolower', $aFields); $sql ="SELECT `id`, `" .implode(I2044, array_keys($aFields)) ."` " ."FROM `cms_members` " ."WHERE ("; $IllI1I1 =FALSE; foreach($aFields as $field => $value){ $sql .= ($IllI1I1 ?' OR ' :I1967) .I2045 .$field ."`) = '" .addslashes($value) .I1980; $IllI1I1 =TRUE; }$sql .= ")" .($id ?" AND `id` <> " .$id :I1967) ." LIMIT 1"; $res =0; $db->query($sql); $db->next_record(); if($db->Record){ $IllI1lI =array(); foreach($aFields as $field => $value){ if($value === mb_strtolower($db->Record[$field]) && ($field !== I2022 || $value !== I1967)){ $IllI1lI[] =$field; }}if($IllI1IL){ $this->IllIIll =$IllI1lI; }if(sizeof($IllI1lI)){ $res =(int)$db->Record[I1964]; }}return $res; }function GenPassword($IIILLLL) {$res =GeneratePassword($IIILLLL); return $res; }function TTI1lIT() {return mb_strtoupper( sprintf( '%04x%04x%04x%04x%04x%04x%04x%04x', mt_rand( 0, 0xffff ),mt_rand( 0, 0xffff ),mt_rand( 0, 0xffff ),mt_rand( 0, 0x0fff )|0x4000, mt_rand( 0, 0x3fff )|0x8000, mt_rand( 0, 0xffff ),mt_rand( 0, 0xffff ),mt_rand( 0, 0xffff )));}function TTI1lII($cStr =I1967){ $suffix =I1967; if(!$cStr){ $this->IlI11L1 =5; }if(gettype(($this->IlI11L1) == 'integer') && ($this->IlI11L1 >0)) {$suffix =rand(pow(10, $this->IlI11L1 -1), pow(10, $this->IlI11L1) -1); }else {$suffix =$this->IlI11L1; }$res =$this->IlI11LL.$cStr.$suffix; return $res; }function TTI1lIl(&$cms, &$db, $id, $sendMail =false) {global $lang_data, $ROOT_PATH_WWW, $ROOT_PATH; $res =true; $mMembers =&$cms->Core->GetModule($this->IlI11LI); $password =$this->GenPassword($mMembers->GetOption("generate_pass_len")); $id =intval($id); if($sendMail) {$sql ="SELECT username, firstname, lastname, email FROM cms_members ". "WHERE id='$id'"; $db->query($sql); $db->next_record(); $cms->Gui->addBlock(I2013, $GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/letters/_members_letters_" .$lang_data .".tpl"); $IllI1ll["fullname"] =$db->Record[I2017]." ".$db->Record["lastname"]; $IllI1ll[I2014] =$db->Record[I2014]; $IllI1ll[I2046] =$ROOT_PATH_WWW.$mMembers->GetFrontLink()."?username=".rawurlencode($db->Record[I2014]); $IllI1ll["password"] =$password; $IllI1ll["support"] =$mMembers->GetOption("confirm_from_email"); $body =nl2br($cms->Gui->get("email:reset_password", $IllI1ll)); require_once($GLOBALS[I2036]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$mMembers->GetOption("confirm_from_email"); $oMail->Subject =$cms->Words["reset_password_subj"]; $oMail->Body =$body; $oMail->RecipientAddress =$db->Record[I2013]; $oMail->BodyFormat ="html"; $oMail->Prepare(); $res &= (!empty($db->Record[I2013]) && $oMail->Send()); }$sql ="UPDATE cms_members SET password='".md5($password)."' ". "WHERE id='$id'"; $db->query($sql); $input =array (I1982 => $id, "PASSWORD_UPDATED" => md5($password), "pure_password" => $password); $output =null; $this->TTI1l1I($cms, $db, 'update_profile', $input, $output); return $res; }function TTI1lI1(&$cms, &$db, $id, $IllI1lL =I2047, $blockname ="email:validate_email") {global $lang_data, $ROOT_PATH_WWW, $ROOT_PATH; $res =true; $mMembers =&$cms->Core->GetModule($this->IlI11LI); $sql ="SELECT username, firstname, lastname, email, validate_key FROM cms_members ". "WHERE id='$id'"; $db->query($sql); $db->next_record(); $cms->Gui->addBlock(I2013, $GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/letters/_members_letters_" .$lang_data .I2048); $IllI1ll[I2014] =$db->Record[I2014]; $IllI1ll["validate_key"] =$db->Record["validate_key"]; $IllI1ll["validate_link"] =$ROOT_PATH_WWW.$mMembers->GetFrontLink()."?action=" .$IllI1lL .I2049.rawurlencode(mb_strtolower($IllI1ll[I2014]))."&code=".rawurlencode($IllI1ll["validate_key"]); $body =nl2br($cms->Gui->get($blockname, $IllI1ll)); require_once($GLOBALS[I2036]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$mMembers->GetOption("confirm_from_email"); $oMail->Subject =$cms->Words["reset_password_subj"]; $oMail->Body =$body; $oMail->RecipientAddress =$db->Record[I2013]; $oMail->BodyFormat ="html"; $oMail->Prepare(); $res &= (!empty($db->Record[I2013]) && $oMail->Send()); return $res; }function TTI1llT(&$cms, &$db, $id){ $res =false; $mMembers =&$cms->Core->GetModule($this->IlI11LI); $IllIl1I =md5(uniqid(rand(), true) .time()); $asql =Array( "validate_key" => $IllIl1I, "expire_date" => '=|NOW() + INTERVAL 1 DAY', );$sql =$db->GenUpdateSQL(I2027, $asql, I2050 .(int)$id .I1980); $db->query($sql); $res =true; return $res; }function TTI1llI(&$cms, &$db, $id){ $res =false; $mMembers =&$cms->Core->GetModule($this->IlI11LI); $IllIl1I =md5(uniqid(rand(), true) .time()); $asql =Array( "validate_key" => I1967, "expire_date" => '=|NOW() - INTERVAL 1 DAY', );$sql =$db->GenUpdateSQL(I2027, $asql, I2050 .(int)$id .I1980); $db->query($sql); $res =true; return $res; }function setObligatory($fields, $set =false, $reset =false, $IllI1l1 =false) {if(!is_array($fields)) {$fields =explode(I2032, $fields); }if($reset){ $this->ObligatoryFields =array(); }if($this->IllIII1 && in_array(I1973, $fields)){ if($IllI1l1){ if(!in_array($this->IllIIIL, $fields)){ $fields[] =$this->IllIIIL; }}else{ $fields[array_search(I1973, $fields)] =$this->IllIIIL; $fields =array_unique($fields); }}foreach($fields as $field){ if(!empty($field)){ if($set){ if(!in_array($field, $this->ObligatoryFields) && in_array($field, $this->UsedFields)){ $this->ObligatoryFields[] =$field; }}else{ $pos =array_search($field, $this->ObligatoryFields); if($pos !== false){ unset($this->ObligatoryFields[$pos]); }}}}}function setUsed($fields, $set =false, $reset =false, $IllI1l1 =false) {if(!is_array($fields)) {$fields =explode(I2032, $fields); }if($reset){ $this->UsedFields =array(); }if($this->IllIII1 && in_array(I1973, $fields)){ if($IllI1l1){ if(!in_array($this->IllIIIL, $fields)){ $fields[] =$this->IllIIIL; }}else{ $fields[array_search(I1973, $fields)] =$this->IllIIIL; $fields =array_unique($fields); }}foreach($fields as $field){ if(!empty($field)){ if($set) {if(!in_array($field, $this->UsedFields)){ $this->UsedFields[] =$field; }}else{ $pos =array_search($field, $this->UsedFields); if($pos !== false){ unset($this->UsedFields[$pos]); }$pos =array_search($field, $this->ObligatoryFields); if($pos !== false){ unset($this->ObligatoryFields[$pos]); }}}}}function TTI1lll(&$cms, &$mMembers, &$data, $type =I1987) {$aCustomFields =$mMembers->GetOption(I1983); $II1LLl1 =$mMembers->GetOption("custom_fields_prefix"); $aCustomFieldsData =isset($data[I2051]) ?unserialize($data[I2051]) :array(); $data[I1983] =I1987; $data["custom_fields_check"] =I1987; foreach ($this->UsedFields as $field) {if (mb_strpos($field, $II1LLl1) === false) {$data["show_".$field] ="1"; }else {$IllI1LI =$aCustomFields[$field]; if(!($cms->Side == "front" && isset($IllI1LI[I1994]) && $IllI1LI[I1994] && isset($data[I1982]) && $data[I1982] >0)) {$IllI1Ll =I2052.$IllI1LI["type"]; $aCustomData =Array(); $aCustomData["custom_field_caption"] =$cms->Words[$field]; if(is_array($IllI1LI)) {foreach($IllI1LI as $key => $value) {$aCustomData["custom_field_".$key] =$value; }}$aCustomData["custom_field_name"] =$field; $aCustomData[I2053] =$aCustomFieldsData[$field]; if($IllI1LI["type"] == "checkbox") {$aCustomData["custom_field_checked"] =($aCustomFieldsData[$field] != I1987) ?"checked" :I1987; }if($IllI1LI[I2054] == "selectbox"){ $aCustomData[I2053] =I1987; foreach($IllI1LI["value"] as $name => $value){ $aOption =array('value' => $value, I1989 => $name); if(isset($data[I2051])){ $custom_data =unserialize($data[I2051]); if(isset($custom_data[$aCustomData["custom_field_name"]]) && $custom_data[$aCustomData[I2055]] == $value){ $aOption['selected'] ='selected'; }}if(isset($aCustomData['custom_field_default']) && ($aCustomData['custom_field_default'] == $value) && (!isset($custom_data[$aCustomData[I2055]]) || !in_array($custom_data[$aCustomData[I2055]], $IllI1LI[I2056]))){ $aOption['selected'] ='selected'; }$aCustomData[I2053] .= $cms->Gui->get(I2057, $aOption); }}if (in_array($field, $this->ObligatoryFields)) {$aCustomData["custom_field_obligatory"] =$cms->Gui->getAbs(I2058, I1987); $aCustomData["custom_field_warn"] =$cms->Words[$field.I2059]; $data["custom_fields_check"] .= $cms->Gui->getDefPostf(I2060, I2052.$field, $aCustomData); }else {$aCustomData["custom_field_obligatory"] =I1987; }$data["custom_field_".$field] =$cms->Gui->getDefPostf(I2061.$IllI1Ll, I2052.$field, $aCustomData); $data[I1983] .= $data["custom_field_".$field]; }}}if($type !== I2062 && $cms->Side != 'admin' && is_object($IllIILI =$this->TTI1l1l($cms))){ $IllIILI->TITIIII(isset($this->User[I1964]) ?(int)$this->User[I1964] :0, $data); }if ($type === "script") {return $data["custom_fields_check"]; }else {return $data[I1983]; }}function getForm(&$cms, &$db, $data =Array(), $template =I1987) {$form =I1987; require_once($GLOBALS["FUNC_INCLUDES_PATH"].I2063); $mMembers =&$cms->Core->GetModule($this->IlI11LI); if($template == I1987) {$template =$GLOBALS["LOCAL_FILES_REL_PATH"].$mMembers->GetOption("form_template"); }$cms->Gui->addBlock(I2064, $template); $cms->Words += $cms->Gui->ParseLangFile($GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/lang/member.lng"); if(!is_array($data)){ $data =array(I2065 => I1967); }if(!isset($data[I2065])){ $data[I2065] =I1967; }$data["member_country"] =$data["country"]; $data["country"] =TlTl11T($cms, $data["country"]); $II1LLl1 =$mMembers->GetOption("custom_fields_prefix"); foreach ($this->UsedFields as $field) {if (mb_strpos($field, $II1LLl1) === false) {$data["show_".$field] ="1"; }}if(in_array("icq", $this->UsedFields)) {if(isset($data['icq']) && $data[I2066] != I1967){ $data["icq_icon"] =$cms->Gui->get(I2067, $data); }}if(in_array(I1985, $this->UsedFields) && isset($data[I1985])) {if(is_file($this->UserPhotosPath.$data[I1985])) {$cms->Gui->AddGlobalVars(Array("photo_is_present" => "1")); $IllI1LL =imageGetSize($this->UserPhotosPath.$data[I1985]); $data["photo_width"] =$IllI1LL[0]; $data[I2068] =$IllI1LL[1]; $data["photo_src"] =$this->IlI111l.$data[I1985]; $data["current_photo"] =$cms->Gui->get(I2069, $data); if(!in_array(I1985, $this->ObligatoryFields)) {$data["current_photo_del"] =$cms->Gui->getAbs(I2070, I1987); }unset($data["photo_src"]); unset($data[I2071]); unset($data[I2068]); }}$data[I1983] =$this->TTI1lll($cms, $mMembers, $data); $data["states_js"] =TlTl11l($cms); $IllIllL =$cms->Gui->getAbs(I2058, I1987); foreach($this->ObligatoryFields as $field) {$data["obligatory_".$field] =$IllIllL; }if($this->IllIII1){ $cms->Gui->AddGlobalVars( array( 'EDIT_USERNAME' => '1', I2072 => '0' ));}$data[I1960] =$this->IllIIIL; $form =$cms->Gui->get(I2073, $data); return $form; }function getScripts(&$cms, $mod_name =I1987, $data =Array(), $template =I1987) {$scripts =Array(); $mMembers =&$cms->Core->GetModule($this->IlI11LI); if($template == I1987) {$template =$GLOBALS["LOCAL_FILES_REL_PATH"].$mMembers->GetOption("form_template"); }$cms->Gui->addBlock(I2064, $template); foreach($this->UsedFields as $field) {$IllI1L1["check_".$field] =I2074; }foreach($this->ObligatoryFields as $field) {if(in_array($field, $this->UsedFields)) {$IllI1L1["check_obligatory_".$field] =I2074; }}$IllI1L1["custom_fields_check"] =$this->TTI1lll($cms, $mMembers, $data, "script"); $IllI1L1["username_symbols"] =$this->IlI11Ll; $IllI1L1[I2075] =$mMembers->GetOption("username_minlen"); $IllI1L1["password_minlength"] =$mMembers->GetOption("password_minlen"); $scripts['on_change'] =I1967; if(!empty($mod_name)) {$IllI1L1[I2076] =mb_substr($this->TTI1lT1($cms, $db, I2077, Array(I2042=>$mod_name)), 1); if(!empty($IllI1L1[I2076]) && $mMembers->GetOption("show_share_warn")) {$scripts["on_change"] =$cms->Gui->get(I2078, $data); $IllI1L1["MEMBER_SHARED"] =I2074; }}$scripts["header"] =$cms->Gui->get(I2079, $data); $scripts[I2080] =$cms->Gui->getAbs(I2081, $data +$IllI1L1); return $scripts; }public static function getInfo($src=false,$value=false,$key=I1973) {if($value===false) {if($GLOBALS["BUILDER_VERSION"] <2){ $sql ="SELECT * FROM cms_host_users u LEFT JOIN cms_members m ON u.id_member=m.id ". "WHERE u.sys_user=1"; }else{ $sql ="SELECT * FROM cms_hst_res_vhost_inst v ". "INNER JOIN cms_hst_res_cms_inst c ON v.id=c.id_vhost ". "LEFT JOIN cms_members m ON c.id_admin=m.id ". "WHERE c.is_sys=1"; }}else {$value =addslashes($value); $sql ="SELECT * FROM cms_members WHERE $key='$value'"; }$Core =&$GLOBALS[I1992]; if($Core->Side==I2035) $db =&DB_si::admInstance($src); else $db =&$src; $db->setAttr('halt_on_err',false); $db->query($sql); $db->next_record(); $result =is_array($db->Record) ?$db->Record :array ();if (!empty($result['companyweb'])) {$result[I2082] =preg_replace('/^https?\:\/\//i', I1967, $result[I2082]); }return $result; }function updateBalance(&$db, $cId, $IllI11I, $cCurrency, $IllI11l, $IllI11L, $IllI111 =I1987){ if(strval($IllI11I) !== I1987) {$sql ="SELECT balance, balance_history FROM cms_members WHERE id = '$cId'"; $db->query($sql); $db->next_record(); $IlllIII =doubleval($db->Record["balance"]); $history =unserialize($db->Record["balance_history"]); $aHistory =(is_array($history))? $history: Array(); $IlllIIl =doubleval($IllI11I); if(($IllI11l && ($IlllIIl != $IlllIII)) || (!$IllI11l && ($IlllIIl != 0))) {$sql ="UPDATE cms_sessions SET spec_flags=1 WHERE id_member='".$cId.I1980; $db->query($sql); $IlllIIL =($IllI11l)? $IlllIIl: $IlllIII +$IlllIIl; if (isset($GLOBALS[I2083]) && is_object($GLOBALS[I2083])) {$user =$GLOBALS[I2083]->GetVar('user'); if ($cId == $user[I1964]) {$user['balance'] =$IlllIIL; $GLOBALS[I2083]->SetVar('user', $user); $GLOBALS[I2083]->Store(); }}if (isset($GLOBALS[I1963]) && is_object($GLOBALS[I1963]) && isset($GLOBALS[I1963]->Member) && is_object($GLOBALS[I1963]->Member)){ $GLOBALS[I1963]->Member->TTI1I1l('balance', $IlllIIL); }$aHistory[time()] =Array(I2054=>$IllI11L, I2084=>$IlllIIL, "currency"=>$cCurrency, "ip"=>getenv("REMOTE_ADDR"), "description" => $IllI111); $sql ="UPDATE cms_members SET balance='$IlllIIL', balance_history='".addslashes(serialize($aHistory))."' WHERE id='$cId'"; $db->query($sql); $db->next_record(); }}}function TTI1ll1(&$db, $cId, $IlllII1, $cCurrency, $IllI11L, $description){ $sql ="SELECT balance, balance_history FROM cms_members WHERE id = '$cId'"; $db->query($sql); if($db->next_record()){ $history =unserialize($db->Record[I2085]); $aHistory =(is_array($history))? $history: Array(); $balance =floatval($db->Record[I2084]); $IlllII1 =floatval($IlllII1); if($IlllII1 <= $balance){ $aHistory[time()] =Array(I2054=>$IllI11L, I2084=>($balance-$IlllII1), "currency"=>$cCurrency, "ip"=>getenv("REMOTE_ADDR"), "description" => $description); $sql ="UPDATE cms_members SET balance='".($balance-$IlllII1)."', balance_history='".addslashes(serialize($aHistory))."' WHERE id = '$cId'"; $db->query($sql); return true; }}return false; }function unblockBalance(&$db, $cId, $IlllII1){ $sql ="SELECT balance FROM cms_members WHERE id = '$cId'"; $db->query($sql); if($db->next_record()){ $balance =floatval($db->Record[I2084]); $IlllII1 =floatval($IlllII1); $sql ="UPDATE cms_members SET balance='".($balance+$IlllII1)."' WHERE id = '$cId'"; $db->query($sql); return true; }return false; }function getStatus(&$db, $timeout, $memberId =0) {$timeout =abs(intval($timeout)); $memberId =intval($memberId); if ($memberId <1 && !empty($this->User[I1964])) {$memberId =$this->User[I1964]; }$res =false; if ($memberId) {$sql ="SELECT 1 FROM `cms_sessions` WHERE `id_member` = " .$memberId ." AND `expired` > DATE_SUB(NOW(), INTERVAL " .$timeout .I2086; $res =(bool)$db->getValue($sql, DBC_RAW_QUERY); }return $res; }function TTI1l1T(&$cms, &$db, $IlllIlI =true) {$res =array ();if (!empty($this->User[I1964])) {$id =intval($this->User[I1964]); if ($IlllIlI) {$sql ="SELECT `id_thread` `id` FROM `cms_forum_subscribers` WHERE id_member = " .$id; }else {if ($cms->Core->IsInstalled(I1993) && $cms->Core->IsInstalled('forum_cat') && $cms->Core->TTlI1T1(I1993, 'use_categories') ){$sql ="SELECT f.id, f.topic, c.name cat_name, f.sublink id_sublink, f.id_cat catid, c.sublink catid_sublink " ."FROM `cms_forum_subscribers` s " ."INNER JOIN `cms_forum` f ON f.id = s.id_thread " ."INNER JOIN `cms_forum_cat` c ON c.id = f.id_cat " ."WHERE s.id_member = " .$id ." " ."ORDER BY c.name, f.topic"; }else {$sql ="SELECT f.id, f.topic, '' cat_name, f.sublink id_sublink " ."FROM `cms_forum_subscribers` s " ."INNER JOIN `cms_forum` f ON f.id = s.id_thread " ."WHERE s.id_member = " .$id .I2087 ."ORDER BY f.topic"; }}$rs =&$db->select($sql); while ($row =$rs->nextRecord()) {$res[] =$IlllIlI ?$row[I1964] :$row; }}return $res; }function TTI1l1I(&$cms, &$db, $event, &$input, &$output) {$IlllIll =$GLOBALS['LOCAL_FILES_PATH'] .'ext_integration'; $mMembers =&$cms->Core->GetModule($this->IlI11LI); if (!is_dir($IlllIll) || !$mMembers->issetOption(I2088) || sizeof($IlllIlL =$mMembers->GetAOption(I2088)) == 0 ){return; }$IlllIlL =array_unique(array_diff($IlllIlL, $this->disabledExternalModules, array (-1 )));if (!is_array($this->IllIIII)) {if (is_null($db)) {$db =new DB_si; }require_once $GLOBALS['CLASSES_PATH'] .I2089; require_once $GLOBALS['CLASSES_PATH'] .'API_Member.php'; $this->IllIIII =array ();foreach ($IlllIlL as $moduleName) {$moduleName ='API_' .$moduleName; require $IlllIll .'/' .$moduleName .I2090; $IlllIl1 =new $moduleName(); $IlllIl1->Init($db, $cms); $this->IllIIII[] =&$IlllIl1; }}if (is_array($this->IllIIII)) {$keys =array_keys($this->IllIIII); foreach ($keys as $key) {$this->IllIIII[$key]->ProcessEvent($event, $input, $output); }}}public function TTI1l1l(CMS_Base $cms, $IllIIl1 =I1955){ if(is_null(self::$IllIIlL)){ self::TTI1l11($cms, $this->IlI11LI); }return self::$IllIIlL; }public static function TTI1l11(CMS_Base $cms, $IllIIl1 =I1955){ if(is_null(self::$IllIIlL)){ if( in_array(I2091, $cms->Core->GetModOption($IllIIl1, 'extensions')) && $cms->Core->IsInstalled(I2091) ){self::$IllIIlL =new ExtModulesCustomFields_Wrapper($cms, $IllIIl1); }else{ self::$IllIIlL =false; }}return self::$IllIIlL; }public function getLoginField(){ return $this->IllIIIL; }public function TTI11TT($IlllILI =null){ if(is_null($IlllILI)){ $this->IllIII1 =array_pop($this->IllIIlI); }else{ $this->IllIIlI[] =$this->IllIII1; $this->IllIII1 =!$IlllILI; }}public function TTI11TI(){ return $this->User[I2008]; }public static function TTI11Tl(array &$aUser){ $null =NULL; $oMember =new CMS_Member($null); $oMember->TTI11T1($aUser); }protected function TTI11T1(array &$IlllILl, $IlllILL =FALSE){ global $cms, $lang_data; $userId =(int)$IlllILl[I1964]; if( isset($cms) && is_object($cms) && I1972 == AMI::getEdition() && $cms->Core->GetOption('use_user_groups_at_front') ){$cms->Core->TTlIlIl($userId); $cms->Core->TTllI1I($lang_data ?$lang_data :'en'); $groupMask =0; foreach(explode(I1995, $cms->Core->IlLIII1['group_mask']) as $mask){ $groupMask |= (int)$mask; }$IlllILl[I2092] =$groupMask; }$IlllIL1 =array( 'system_user' => FALSE );$oDB =AMI::getSingleton('db'); $sql ="SELECT `id` " ."FROM `cms_host_users` " ."WHERE `id_member` = " .$userId ." AND `sys_user` = 1"; if($oDB->fetchRow($sql)){ $IlllIL1['system_user'] =TRUE; }else{ $IlllIL1['rights'] =array(); if(I1972 == AMI::getEdition()){ if(isset($cms) && is_object($cms)){ $cms->Core->TTlIlIl($userId); $cms->Core->TTllI1I($lang_data ?$lang_data :'en'); foreach($cms->Core->IlLIII1[I2093][$userId]['mod_rights'] as $modId => $aData){ if(!$aData[I1959] || !in_array('edit', $aData['actions'])){ continue; }$IlllIL1['rights'][$modId] =array( I2094 => array($aData['moderator'] ?'moderator' :'user'), 'actions' => array(I2095) );}}}else{ $aModIds =AMI::getOption(I1955, I2096); $aIndeces =array_keys($aModIds); foreach($aIndeces as $index){ $modId =$aModIds[$index]; if(preg_match('/^(.+)_item$/', $modId, $aMatches)){ $aModIds[] =$aMatches[1] .'_cat'; }elseif( AMI::issetAndTrueOption($modId, 'use_categories') ){$aModIds[] =$modId .'_cat'; }}foreach($aModIds as $modId){ $IlllIL1[I2097][$modId] =array( I2094 => array('user'), 'actions' => array(I2095) );}}}$IlllILl['ami_ar'] =$IlllIL1; if(!AMI::getOption('core', 'allow_edit_at_front')){ $IlllILl['ami_efa'] =FALSE; return; }if($IlllIL1['system_user']){ $IlllILl['ami_efa'] =TRUE; }if(isset($IlllILl['ami_efa'])){ if($IlllILL && $IlllILl[I2098] && is_object($this->Session)){ $this->Session->SetVar('ami_efe', TRUE); $this->Session->addJsSessionCookie('ami_efe', TRUE); }return; }if(I1972 != AMI::getEdition()){ $IlllILl[I2098] =FALSE; return; }$sql ="SELECT IF(SUM(`g`.`edit_front_allowed`) > 0, 1, 0) `ami_efa` " ."FROM `cms_sys_users` `u` " ."INNER JOIN `cms_sys_groups` g " ."ON `u`.`id_group` = `g`.`id` " ."WHERE `u`.`id_member` = " .$userId; $db =new DB_si; $db->query($sql); $IlllILl[I2098] =$db->next_record() && isset($db->Record[I2098]) ?(int)$db->Record[I2098] :0; if($IlllILL && $IlllILl[I2098] && is_object($this->Session)){ $this->Session->SetVar('ami_efe', TRUE); $this->Session->addJsSessionCookie('ami_efe', TRUE); }}private function TTI11IT(){ if(AMI_Registry::get(I2099, 'plain') === 'ajax'){ ob_clean(); header('Expires: Mon, 26 Jul 1997 05:00:00 GMT'); header('Last-Modified: ' .gmdate(I2100) .' GMT'); header('Cache-Control: post-check=0, pre-check=0', false); header('Pragma: no-cache'); header('HTTP/1.0 401 Unauthorized'); if(is_object($GLOBALS[I2101])){ $GLOBALS[I2101]->markPageIsSkipped(); }die; }}}