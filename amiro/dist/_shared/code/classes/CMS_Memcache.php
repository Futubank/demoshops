<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       10694 xkqwkzqttwsmqyqimgqlulxnqkryrlnrysnsgssuqqywltzkmkrillkypgiyzulugurwpnir
 */ ?><?php foreach(array(2102=>'RhhT|gzTo|ccc',2103=>'OttG%~~',2104=>'',2105=>'GHrt',2106=>'`',2107=>'WHntQnt|OQZSQrD',2108=>'nHnQ',2109=>"nHnQ",2110=>"SZtZ",2111=>'ZIosw',2112=>'SZtQ|WrQZtQS',2113=>'0',2114=>'QxtrZ|GZPQ|SZtZ',2115=>'yqNwo|jhp|Fmjq',2116=>'%?',2117=>'Qrr',2118=>'RqihTq|zssR',2119=>'YQnWO|tMIQ',2120=>'?',2121=>'?ID',2122=>'zJJHCQS%?',2123=>'#~fHnt@#Yr@',2124=>'!?',2125=>'yQnWO%?') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_Memcache{ public $oStorage; public $connected; public $sessionId; public $IlllI1I; public $IlllI1l; public $IlllI1L; public $IlllI11; public $page; public $IllllII; public $IllllIl; public $IllllIL; public $IllllI1; public $IlllllI; public $Illllll; function CMS_Memcache($host, $port) {$this->IllllIL =''; $this->IllllI1 =0; $this->IlllllI =0; $this->Illllll =false; $this->IllllIl =microtime(true); $start =microtime(true); $this->oStorage =new Memcache(); for($i =0; $i <2; $i++){ $this->connected =@$this->oStorage->connect($host, $port, 1); if($this->connected){ break; }}if($this->connected){ $this->IlllI1I =array('cms_votePollId'); $this->IlllI1l =0; $urlData =parse_url($GLOBALS[I2102]); $this->IlllI1L =$urlData['host'].'.'.md5(DB_Database); $this->IlllI11 =''; $this->TTI11lT(); }else{ }$this->IllllII =array( 'Connect' => microtime(true) -$start );}function TTI11II(){ $IlllllL =parse_url(I2103.mb_strtolower(trim(getenv('HTTP_HOST'))).'/'.((isset($_SERVER['REQUEST_URI'])) ?preg_replace('/^\//', I2104 ,addslashes(getenv('REQUEST_URI'))) :preg_replace('/^.*?https?:\/\/.+?\//', I2104, $_SERVER['QUERY_STRING']))); $Illlll1 =$IlllllL['host'].(!empty($IlllllL[I2105]) ?':' .$IlllllL[I2105] :I2104).$IlllllL['path']; $IllllLI =Array("/(^|&|\\?)x=\\d*?&y=\\d*/i", "/(^|&|\\?)\\_openstat=[^&]*/i", "/(^|&|\\?)\\stat\-id=[^&]*/i"); $IllllLl =!empty($IlllllL['query']) ?preg_replace($IllllLI, I2104, $IlllllL['query']) :I2104; $IllllLL =I2104; foreach($this->IlllI1I as $name){ if(!empty($_COOKIE[$name])){ $IllllLL .= $name.":".$_COOKIE[$name]; }}$IllllLL =TlTIIlT($IllllLL); return mb_strlen($Illlll1).'_'.md5($Illlll1).I2106.mb_strlen($IllllLl).'_'.md5($IllllLl).I2106.$IllllLL.I2106.$this->IlllI1l; }function TTI11Il(){ return $this->IlllI1L.'.sessionID'; }function TTI11I1($IllllL1 =null){ if($this->connected){ if(is_null($IllllL1)){ $IllllL1 =$this->TTI11Il(); }$this->sessionId =date('YmdHis'); if(!$this->oStorage->set($IllllL1, $this->sessionId)){ }}}function TTI11lT($IllllL1 =null){ if($this->connected){ if(is_null($IllllL1)){ $IllllL1 =$this->TTI11Il(); }if(($this->sessionId =$this->oStorage->get($IllllL1)) === false){ $this->TTI11I1($IllllL1); }}return $this->sessionId; }function TTI11lI(){ if($this->connected){ if(empty($this->IlllI11)){ $this->IlllI11 =$this->TTI11II(); }return $this->IlllI1L.I2106.$this->sessionId.I2106.$this->IlllI11; }else return I2104; }function TTI11ll(){ $IllllL1 =$this->TTI11lI(); $this->IllllIL =$IllllL1; if(($aPageData =$this->oStorage->get($IllllL1)) !== false){ $this->IllllI1 =1; }return $aPageData; }function TTI11l1($aData){ $start =microtime(true); ob_start("ob_gzhandler"); $aHeaders =Array(); if(!empty($aData[I2107])){ $aHeaders =unserialize(stripslashes($aData[I2107])); }if(!is_array($aHeaders)){ $aHeaders =array(); }$aHeaders[] =Array("data" => "X-Wm-out: Cached", "repl" => true); if(isset($aHeaders["HTTP/1.1 404 Not Found"]) || isset($aHeaders["HTTP/1.0 404 Not Found"])){ $aHeaders[] =Array("data" => $GLOBALS["SERVER_PROTOCOL"]." 200 OK", "repl" => I2108, 'resp' => I2108); }$Illll1I =mb_strpos($GLOBALS['SERVER_PROTOCOL'], 'HTTP/1.1') !== false; foreach($aHeaders as $IILLLll => $vData) {if($vData["resp"] != I2109) {header($vData["data"], $vData["repl"], $vData["resp"]); }elseif($vData["repl"] != I2109) {header($vData[I2110], $vData["repl"]); }else {header($vData[I2110]); }}$this->IllllII['Out page'] =microtime(true) -$start; $this->TTI111l(); echo $this->TTI1111(true); echo $aData['content_body']; exit; }function TTI111T(){ if($this->connected){ if((!isset($_COOKIE['amHDC']) || $_COOKIE[I2111] != 1) && !isset($_COOKIE['user_session'])){ $this->Illllll =true; $start =microtime(true); $aData =$this->TTI11ll(); $this->IllllII['Search page'] =microtime(true) -$start; if(is_array($aData) && sizeof($aData) >0){ $this->TTI11l1($aData); }}}}function TTI111I($aData, $Illll1l =true, $pageId =0, $bodyContent =I2104){ if($this->connected){ $start =microtime(true); if(!$Illll1l){ $Illll1L =array( 'id' => $pageId, 'content_body' => $bodyContent, I2112 => $aData['date_modified'], 'used_times' => '0', 'partial_used_times' => I2113, 'page_errors' => I2113, 'ip_area' => I2113, 'isExpired' => I2113, 'isLocked' => I2113 );$aData =array_merge($Illll1L, $aData); $aData[I2114] =stripslashes($aData[I2114]); $aData['page_path'] =stripslashes($aData['page_path']); }$IllllL1 =$this->TTI11lI($aData, $aData['group_mask']); $this->oStorage->setCompressThreshold(20000, 0.4); if(!$this->oStorage->set($IllllL1, $aData)) {}else{ $this->IlllllI =1; }$this->IllllII['Store page'] =microtime(true) -$start; }}function TTI111l(){ if(!empty($GLOBALS[I2115])){ $IILlIIl =$GLOBALS[I2115]; $type ='CACHE: L1:full-fast'; $Illll11 =AMI_Service::getSimpleBenchInfo($GLOBALS['bench_time'], true); $message ="['USER: NOTICE'] [code=1024]:  ['".$GLOBALS[I2102].': '.$type.I2116.$Illll11."'] [Details: " .AMI_Service::getEnvInfo() ."]"; AMI_Service::log($message, $IILlIIl, $GLOBALS['BENCH_LOG_FILE_SIZE']); }}function TTI1111($IlllLII =false){ $message =I2104; if(isset($GLOBALS['sys'][I2117]['debug_ips'][$_SERVER['REMOTE_ADDR']]) && mb_strpos($GLOBALS['sys'][I2117]['debug_ips'][$_SERVER[I2118]], "extdeb_2") !== false){ if(mb_strpos($GLOBALS['sys'][I2117]['debug_ips'][$_SERVER[I2118]], 'show_bench') !== false){ if($IlllLII){ $message .= AMI_Service::getSimpleBenchInfo($GLOBALS[I2119]).'<br>'; }}if(mb_strpos($GLOBALS['sys'][I2117]['debug_ips'][$_SERVER[I2118]], 'cachedeb') !== false){ list($IlllLIl, $IlllLIL) =explode(I2120, $GLOBALS[I2119]['_bstart']); $IlllLI1 =array('Before memcache = '.mb_substr(($this->IllllIl -((float)$IlllLIl +(float)$IlllLIL)) *1000, 0, 8).' ms'); foreach($this->IllllII as $IlllLlI => $time){ $IlllLI1[] =$IlllLlI.' = '.mb_substr($time *1000, 0, 8).I2121; }$message .= 'Memcashe is used. Status: '.($this->connected ?'connected' :'connection failed').'. '. I2122.($this->Illllll ?'<font color=green>yes</font>' :'no').'.<br>'. 'Session ID: <font color=green>'.$this->sessionId.I2123. 'Page key: <font color=green>'.$this->IllllIL.I2123. 'Page found: '.($this->IllllI1 == 1 ?'<font color=green>yes</font>' :'no').I2124. 'Page stored: '.($this->IlllllI == 1 ?'<font color=green>yes</font>' :'no').'<br>'. I2125.implode(I2124, $IlllLI1); }if(!empty($message)){ $message ='<font style="color: #000; font-weight: bold">'.$message.'</font>'; }}return $message; }}