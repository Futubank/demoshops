<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @subpackage set 
 * @version    $Id$ 
 * @size       5685 xkqwnrtxmxnqtknxklqgxqruqmkyiryqxzuyqrimzpzilsiniwpimmqkngrqkpguimxppnir
 */ ?><?php  if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class CMS_Set {public $items; public $_totalQuantity; public $_doRecalculate; public $_doCleanup; function CMS_Set() {$this->_totalQuantities =0; $this->items =array ();}function init() {$this->_doRecalculate =false; $this->_doCleanup =false; }function &getItems() {return $this->items; }function getItemsAbs() {return $this->getItems(); }function doesExist($key) {return isset($this->items[$key]); }function add($item) {$key =$item->getKey(); if (isset($this->items[$key])) {$this->items[$key][1]++; }else {$this->items[$key] =array ($item, 1); }$this->_doRecalculate =true; return true; }function setQuantity($key, $quantity) {if (!isset($this->items[$key])) {trigger_error('CMS_Set::setQuantity : Invalid key', E_USER_ERROR); }$quantity =intval($quantity); if ($quantity <0) {trigger_error('CMS_Set::setQuantity : Invalid quantity', E_USER_ERROR); }if ($this->items[$key][1] != $quantity) {$this->_doRecalculate =true; $this->items[$key][1] =$quantity; $this->_doCleanup =$this->_doCleanup || !$quantity; }}function remove($key) {if (!isset($this->items[$key])) {trigger_error('CMS_Set::remove : Invalid key', E_USER_ERROR); }$this->_doRecalculate =$this->_doRecalculate || !$this->items[$key][1]; $this->_doCleanup =$this->_doCleanup || !$this->items[$key][1]; $this->items[$key][1] =0; }function cleanup() {if ($this->_doCleanup) {reset($this->items); while (list (,$qty) =each ($this->items)) {if ($qty <1) {unset($this->items[$key]); $this->_doRecalculate =true; }}$this->_doCleanup =false; }}function total() {$this->cleanup(); if ($this->_doRecalculate) {$quantity =0; reset($this->items); while (list (,$qty) =each ($this->items)) {$quantity += $element[1]; }$this->_totalQuantities =$quantity; }return $this->_totalQuantities; }function unique() {$this->cleanup(); return sizeof($this->items); }function __sleep() {return array ('items', '_totalQuantity'); }}