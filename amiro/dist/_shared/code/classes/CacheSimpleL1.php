<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       17035 xkqwwiykmtrngmxzymwxsqlnnktwrmwyynmxntplyxqsytypynpxpktpwrqnqgiilrpkpnir
 */ ?><?php  if(!defined('AMI_ENVIRONMENT')){header(I2650);die(I2651.__FILE__.I2652.__LINE__);} class CMS_CacheSimpleL1 {public $Enabled; public $ILI1l11; public $ILI1LII; public $ILI1LIl; public $Debug; public $ILI1LIL; public $pageUin; public $ILI1LI1; public $ILI1LlI; public $options; public $ILI1Lll; public $db; public $pId; public $ILI1LlL; public $ILI1Ll1; public $ILI1LLI =I3122; public $ILI1LLl; public $_SavedPage; public $ILI1LLL; public $ILI1LL1; public $ILI1L1I; public $ILI1L1l; public $ILI1L1L; public $ILI1L11; public $ILI11II; protected $ILI11Il =array( I3123, I3124, I3125, I3126 );protected $ILI11IL =FALSE; protected $ILI11I1 =array(); function CMS_CacheSimpleL1() {$this->ILI1l11 =I3127; $this->ILI1LII =4; $this->Enabled =true; $this->ILI1LIl =$_SERVER[I3128]; $this->Debug =false; $this->ILI1LIL =false; $this->pageUin =I2660; $this->ILI1LI1 =array(I3129, I2967); $this->disabledCookies =I3130; $this->options =Array(); $this->ILI1Lll =Array(I2751 => Array(), I2753 => Array(), I2750 => Array()); $this->pId =0; $this->ILI1LlL =date($this->ILI1LLI); $this->ILI1Ll1 =time(); $this->ILI1LLl =false; $this->_SavedPage =Array(); $this->ILI1LLL =false; $this->ILI1LL1 =false; $this->ILI1L1I =true; $this->ILI1L1l =date($this->ILI1LLI, $this->ILI1Ll1 +60); $this->ILI1L11 =uniqid(); $this->ILI1L1L =false; $this->ILI11II =0; }function Init( $ILIILII =I2670, $ILIILIl =TRUE, $ILIILIL =0, $ILIILI1 =I2671, array $aOptions =NULL ){$res =false; $this->Enabled =(!($ILIILII==I3131 || $this->ILI1LIl!=I3132)); $this->ILI1l11 =$ILIILI1; $this->ILI1LII =$ILIILIL; if($GLOBALS[I3133]==I2672) {$this->Enabled =false; }if($this->Enabled) {$this->TT1IIl1($aOptions); $res =true; }else if(is_array($aOptions)) {$aTmp =array(); if($aOptions[I3073] != I2660){ $aTmp =unserialize($aOptions[I3073]); }if(is_array($aTmp)){ foreach(array(I3134, I2675) as $name){ if(isset($aTmp[$name])){ $this->options[$name] =$aTmp[$name]; }}}}return $res; }function TT1Illl(){ if(!is_array($this->options))$this->options =array(); $this->options += array(I2836 => array()); foreach(array(I2814, I2841, I2848) as $ILI11lI) {if(isset($this->options[I2836][$ILI11lI]) && is_array($this->options[I2836][$ILI11lI])){ $this->ILI1Lll[$ILI11lI] =$this->options[I2836][$ILI11lI]; }else{ $this->options[I2836][$ILI11lI] =$this->ILI1Lll[$ILI11lI]; $this->ILI1IL1 =true; }}}function TT1IIl1(array $aOptions =NULL){ $res =false; if(is_array($aOptions)) {if($aOptions[I3073] != I2660){ $this->options =unserialize($aOptions[I3073]); }$this->ILI11II =intval($aOptions[I3074]); $this->TT1Illl(); $res =true; }return $res; }function SetDebug($ILI11ll) {$this->Debug =$ILI11ll; }function TT1Ill1($aHeaders){ $this->_Headers =$aHeaders; }public function saveOptions(){ if(!AMI::isResource(I3135)){ AMI::addResourceMapping(array(I3135 => I3136)); AMI::getSingleton(I3135, array(I3137 => $this->db)); }$ILIlL1l =$this->ILI11II <65000 ?$this->ILI11II +1 :$ILIlL1l =1; AMI_ModSettings::saveStandaloneOption(I2971, I3138, $this->options, $ILIlL1l); }function SetOption($name, $value) {$this->options[$name] =$value; }function GetOption($name) {return $this->options[$name]; }function IssetOption($name) {return isset($this->options[$name]); }function TT1Il1T(){ $res =array(); if($this->ILI1LLl === false) {$this->ILI1LLl =parse_url(I3139.mb_strtolower(trim(getenv(I3140))).I3141.((isset($_SERVER[I3142])) ?preg_replace(I3143, I2747 ,addslashes(getenv(I3142))) :preg_replace(I3144, I2747, $_SERVER[I3145]))); }$aUrl =$this->ILI1LLl; $res[I3146] =$aUrl[I3147].(isset($aUrl[I3148]) && $aUrl[I3148] != I2660 ?I3149 .$aUrl[I3148] :I2660).$aUrl[I3150]; if(!empty($aUrl[I3034])){ if(!preg_match(I3151, $aUrl[I3034])){ $count =0; $aUrl[I3034] =preg_replace($this->ILI11Il, I2747, $aUrl[I3152], -1, $count); $this->ILI11IL =(bool)$count; }else{ $aUrl[I3034] =I2747; }}else{ $aUrl[I3034] =I2747; }$len =mb_strlen($aUrl[I3034]); if($len >0){ $res[I2796] =$len.I2996.md5($aUrl[I3034]); }else{ $res[I2796] =I2660; }$hash =I2660; $aCookies =$this->ILI1LI1; foreach($this->ILI1LI1 as $name){ if(!empty($_COOKIE[$name])) {$hash .= $name .I3149 .$_COOKIE[$name]; }}if(defined(I3153)){ $aEvent =array( I3154 => &$hash );AMI_Event::fire(I3155, $aEvent, AMI_Event::MOD_ANY); unset($aEvent); }$res[I3156] =TlTIIlT($hash); if($this->Debug && !$this->ILI1LIL && mb_strpos($res[I3146], I3157)!==false){ $this->Debug =false; }return $res; }function TT1II11($pageUIN =I2660, &$aPage, $groupMask =0){ $res =0; $sql =I3158.$this->ILI1LlL.I3159.$this->ILI1LlL.I3160. I3161. I3162.$pageUIN[I3146].I3163. I3164.$pageUIN[I2796].I3163. I3165.$pageUIN[I3156].I3163. I3166.$groupMask.I2691. I3167; $this->db->query($sql); if($aPage =$this->db->nextRecord()){ $this->ILI1L1L =$aPage[I3168]; if($aPage[I2818] == -1){ $this->ILI1Ill =$aPage[I2775]; $aPage =Array(); }elseif($aPage[I2818] == -2){ $this->Enabled =false; }else{ if(!$aPage[I3169] || $aPage[I2823] != I2660){ $res =$aPage[I2775]; }else {$sql =I3170.$aPage[I2775]; $this->db->query($sql); $sql =I3171.$aPage[I2775]; $this->db->query($sql); $this->ILI11I1[] =$aPage[I2766]; $aPage =Array(); }}}return $res; }function TT1TIll() {$ILI1I11 =false; foreach(Array(I2751, I2750) as $ILI11lL) {if(!empty($this->ILI1Lll[$ILI11lL])) {if($this->ILI1Ll1 >key($this->ILI1Lll[$ILI11lL])) {$ILI1I11 =true; break; }}}return $ILI1I11; }function TT1IlTI() {$ILI1LL1 =false; if(is_array($GLOBALS[I3172])) {foreach($GLOBALS[I3172] as $cName => $cValue) {if(mb_strpos($cName, $this->disabledCookies) === 0 && $cValue != I2660) {$ILI1LL1 =true; break; }}}return $ILI1LL1; }function TTI111T() {$res =false; $this->pId =$this->TT1II11($this->pageUin, $this->_SavedPage); if($this->pId >0){ $ILIl1Il =true; if(function_exists(I3173)){ $ILIl1Il =CacheGetPageBefore($this, $this->pageUin, $this->pId); }if($ILIl1Il) {$res =$this->TT1TIl1(); }}return $res; }function Start(){ $res =false; if($this->Enabled) {$this->ILI1LLL =$this->TT1TIll(); $this->ILI1LL1 =$this->TT1IlTI(); if(!$this->ILI1LLL && !$this->ILI1LL1) {$this->pageUin =$this->TT1Il1T(); $res =$this->TTI111T(); }else {}}return $res; }function TT1TIl1(){ $res =false; if($this->_SavedPage[I2823] == I2660 || $this->_SavedPage[I3168]) {if(!empty($GLOBALS[I2731])){ $GLOBALS[I2732]->TTI111I($this->_SavedPage); }$this->TTI11l1(); $res =true; }return $res; }function TTI11l1(){ global $conn; $aHeaders =Array(); if(!empty($this->_SavedPage[I2819])){ $aHeaders =unserialize($this->_SavedPage[I2819]); }$aHeaders[] =Array(I2741 => I2742, I2743 => true); if(!is_object($conn)){ $conn =new ConnectorLite($this, $this->ILI1LII, 1); }$this->_outPage($conn, $aHeaders, $this->_SavedPage[I3084]); exit; }function _outPage(&$conn, &$aHeaders, &$content) {if(is_array($aHeaders)){ if(isset($aHeaders[I3174]) || isset($aHeaders[I3175])){ $conn->SetSkip200Status(true); }$Illll1I =mb_strpos($GLOBALS[I3176], I3177) !== false; foreach($aHeaders as $IILLLll){ $IILLLll[I3178] =str_replace($Illll1I ?I3179 :I3177, $GLOBALS[I3176], $IILLLll[I3178]); $conn->AddHeader($IILLLll[I3178], $IILLLll[I3180], isset($IILLLll[I3181]) ?$IILLLll[I3181] :null); }}if($this->ILI11IL){ $aData =@unserialize($this->_SavedPage[I2807]); if(is_array($aData) && !empty($aData[I2810])){ $this->TT1Il1I($content); }}echo $content; $this->Enabled =false; $conn->Out(); }function End(){ }function TT1ITIl() {$log =I3182; return $log; }function TTI1111() {$ILILIlI =I2747; if($this->Debug && $this->ILI1L1I){ $this->ILI1L1I =false; $ILILIlI =I3183; if($this->_SavedPage[I3168]){ $ILILIlI .= I3184; }if(!empty($GLOBALS[I2731])){ $ILILIlI .= I2965.$GLOBALS[I2732]->TTI1111(); }$ILILIlI .= I3185; }return $ILILIlI; }function _d($msg, $force =false){ }public function TT1Il1I(&$content){ $ILI11l1 =1024; $len =mb_strlen($content); if($len <= $ILI11l1){ $string =&$content; }else{ $string =mb_substr($content, 0, $ILI11l1); }$string =str_replace(I3186, I3187, $string); if($len >$ILI11l1){ $content =$string .mb_substr($content, $ILI11l1); }}}