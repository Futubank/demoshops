<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       23073 xkqwugrkzuutkulzmilrzxsrpigrtilrigntqizliiylmqltrysxwquqqznzrzwwmyzspnir
 */ ?><?php foreach(array(3282=>'oTTg~1`0?403?FHrYMSSQn',3283=>'FHrYMSSQn!?MnvZJMS?URj,?',3284=>'?Zt?',3285=>'wjzddqd|gzTo',3286=>'wHnnQWtHrjMtQ`GOG',3287=>"IZnuZJ",3288=>"",3289=>'X+zWWQJ+yuffQrMnP%?nH',3290=>"ZSIMn",3291=>"dtZtuD%?200?hk",3292=>"dqRVqR|gRhThwhj",3293=>"?200?hk",3294=>'',3295=>"OZnSJQr",3296=>"HY|PAOZnSJQr",3297=>"WZWOQS",3298=>'mJJ111j',3299=>'nH|WZWOQS',3300=>'ZSIMn',3301=>'WID',3302=>'GOG',3303=>'sFiT|GOG',3304=>'ZIM|QfZ',3305=>"|ZSvTQxt",3306=>"DMtQ|DMPn|QnZYJQS",3307=>'I',3308=>'WOQWKdMPn',3309=>'RhhT|gzTo|ccc',3310=>'|MDoHIQgZPQ',3311=>'DMtQ|DMPn|Mnt',3312=>'DMtQ|DMPn',3313=>'#DGZn?MS="DMPn',3314=>'"@',3315=>'Qn',3316=>'#~DGZn@',3317=>"\n",3318=>'#DWrMGt?tBGQ="tQxt~LZvZDWrMGt"?DrW="',3319=>'ZIM',3320=>'rH|D',3321=>'BD|LD`GO',3322=>'G ',3323=>'D',3324=>'Wr',3325=>'MG',3326=>'t',3327=>'=',3328=>'M',3329=>'P',3330=>'W',3331=>'J',3332=>'Q',3333=>'Z',3334=>'r',3335=>']',3336=>'|',3337=>'O',3338=>']|Wv=',3339=>'wid|VqRdmhN',3340=>'"@#~DWrMGt@',3341=>"|ZSvTQxt0",3342=>"|ZSvmnWTQxt",3343=>'~#YHSB~M',3344=>"~}#YHSB`[ @{~DM",3345=>"\\1",3346=>'~;}`[{#\\~YHSB~DM',3347=>"#~YHSB",3348=>'SMDZYJQ|WZWOQ|CZrn',3349=>'WZWOQ|frHntDMSQ',3350=>'hFF',3351=>'WZWOQS',3352=>'rQDGHnDQ',3353=>'ldhN',3354=>'whNNqwT|hgTmhNd',3355=>'Qrr',3356=>'DOHC|YQnWO',3357=>'YQnWO|tMIQ',3358=>'#Yr@#Yr@',3359=>'IQDDZPQD',3360=>'ZzimyQnWO',3361=>'sy',3362=>'EuQrMQD',3363=>"TqigjzTqd|FRhi|smdk",3364=>"#DGZn?DtBJQ=\"SMDGJZB%YJHWK^tQxt+ZJMPn%JQft^WHJHr%COMtQ^YZWKPrHunS%rQS^fHnt+fZIMJB%tZOHIZ^fHnt+CQMPOt%YHJS^fHnt+DMAQ%11Gx^GZSSMnP%0Gx?4Gx?2Gx?4Gx^IZrPMn+YHttHI%5Gx\"@]rZEuH^]rZEuH^?cZrnMnP%?DMtQ?ZnS?'|JHWZJ~```'?tQIGJZtQD?ZrQ?rQZS?frHI?SMDK#~DGZn@\n",3365=>'rQZS|ZSI|DKMn|tGJ|frHI|SY',3366=>"#DGZn?DtBJQ=\"SMDGJZB%YJHWK^tQxt+ZJMPn%JQft^WHJHr%COMtQ^YZWKPrHunS%rQS^fHnt+fZIMJB%tZOHIZ^fHnt+CQMPOt%YHJS^fHnt+DMAQ%11Gx^GZSSMnP%0Gx?4Gx?2Gx?4Gx^IZrPMn+YHttHI%5Gx\"@]rZEuH^]rZEuH^?cZrnMnP%?6`0?ZSIMn?tQIGJZtQD?ZrQ?rQZS?frHI?sy#~DGZn@\n",3367=>'SQYuP|MGD',3368=>'RqihTq|zssR',3369=>'MnWSQY',3370=>"#DGZn?DtBJQ=\"SMDGJZB%YJHWK^tQxt+ZJMPn%JQft^WHJHr%COMtQ^YZWKPrHunS%rQS^fHnt+fZIMJB%tZOHIZ^fHnt+DMAQ%11Gx^GZSSMnP%0Gx?4Gx?2Gx?4Gx^IZrPMn+YHttHI%5Gx\"@#Y@]rZEuH^]rZEuH^?cZrnMnP,?wZWOQ?QnPMnQ?MD?SMDZYJQS",3371=>'WZWOQ|SMDZYJQS|fHrWQS',3372=>'?fHr?BHur?mg?',3373=>"`?gQrfHIZnWQ?MD?tHH?JHC`#~Y@#Yr@RQZS?tOQ?IZnuZJ?ZYHut?OHC?tH?QnZYJQ?tOQ?WZWOQ?QnPMnQ`#~DGZn@\n",3374=>"WHIIHn|DQttMnPD",3375=>"SZQIHn|QIuJZtMHn",3376=>"#DGZn?DtBJQ=\"SMDGJZB%YJHWK^tQxt+ZJMPn%JQft^WHJHr%COMtQ^YZWKPrHunS%rQS^fHnt+fZIMJB%tZOHIZ^fHnt+DMAQ%11Gx^GZSSMnP%0Gx?4Gx?2Gx?4Gx^IZrPMn+YHttHI%5Gx\"@#Y@]rZEuH^]rZEuH^?cZrnMnP,?oHDtMnP?CHrKD?Mn?QIuJZtMHn?IHSQ`#~DGZn@\n",3377=>"PAMG",3378=>"x+PAMG",3379=>"nHnQ",3380=>'yqNwo|jhp|Fmjq',3381=>'zsimN',3382=>"*'UdqR%?NhTmwq'&?*WHSQ=1024&%??*'",3383=>'%?',3384=>"'&?*sQtZMJD%?",3385=>"&",3386=>'yqNwo|jhp|Fmjq|dmaq',3387=>'DZvQ|EuQrB|JHP',3388=>"frHnt",3389=>"|YDtZrt",3390=>"`SY`JHP",3391=>"'&\n",3392=>'DZfQ|WHHKMQD',3393=>'Qnv~WHHKMQ',3394=>'QIZMJ',3395=>"LKtuJ",3396=>'~#DWrMGt?tBGQ="tQxt\~LZvZDWrMGt"@funWtMHn?}*Z+A&-',3397=>'*Z+A&-{\}~M',3398=>'~}#YHSB*;@&[ @{~M',3399=>'\1#DWrMGt?tBGQ="tQxt~LZvZDWrMGt"@funWtMHn?',3400=>'}SZtZ{)SHWuIQnt`CrMtQ}SQWHSQURmwHIGHnQnt}SZtZ{{(#~DWrMGt@',3401=>'~}#Z*;@&[ OrQf\\D[ =\\D[ } %}\'_"{IZMJtH%`[ \2_IZMJtH%*;?\n@&[{`[ @`[ #\~Z@{~M',3402=>'|WYRQGJZWQqiZMJ',3403=>'#DWrMGt?tBGQ="tQxt~LZvZDWrMGt"@',3404=>'}"',3405=>'"{^#~DWrMGt@',3406=>"|dmsq",3407=>"mjJmJmJ",3408=>'wHrQ',3409=>'YZWKPrHunS|GrHWQDD',3410=>'wid|yZWKPrHunSgrHWQDD`GOG',3411=>'`',3412=>"NH?fQtWO?rQEuQDtD",3413=>"#Y@&#~Y@?",3414=>"#Yr@#Y@sQtZMJD%#~Y@#Yr@",3415=>"?WHJHr=YJZWK",3416=>"?WHJHr=rQS",3417=>"?WHJHr=PrQQn",3418=>"#fHnt?",3419=>"@",3420=>"#~fHnt@",3421=>"#Y@*",3422=>"&#~Y@%?",3423=>"?DQW`?}#Y@THtZJ#~Y@?=?",3424=>"?DQW`{",3425=>"#Yr@\n",3426=>'IQIHrB|PQt|GQZK|uDZPQ',3427=>'?GQZK%?',3428=>'#Yr@?fMJQD%?') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header(I3282);die(I3283.__FILE__.I3284.__LINE__);} require_once $GLOBALS[I3285] .I3286; class Connector extends ConnectorLite{ public $EnableBuffering; public $ILI11LL; public $ILI11L1; public $ILI111I; public $ILI111l; public $ILI111L; public $ILI1111; public $ILlIIII; public $ILlIIIl; public $benchType; protected $ILlIIIL; function Connector(&$oCache, $ILlIII1 =0, $ILlIIlI =true, $ILlIIll =I3287) {$this->ILI111l =I3288; $this->_HeadersDebug =I3288; $this->ILI1111 =false; $this->ILI111L =$ILlIIll; $this->EnableBuffering =$ILlIIlI; $this->ILlILIL =$ILlIII1; parent::ConnectorLite($oCache, $ILlIII1, $ILlIIlI); if(!$this->EnableBuffering){ $this->AddHeader(I3289); header(I3289); }if (!is_object($oCache)) {$this->Cache =false; }}function TT1I1I1() {global $Core; if ($Core->Side != I3290) {parent::TT1I1I1(); }else {$this->AddHeader(I3291); $this->AddHeader($GLOBALS[I3292] .I3293); }}function _init() {$this->ILI111I =$this->TT1I11T(); $this->ILI11L1 =I3294 != $this->ILI111I; $this->ILI11LL =$this->ILI11L1; if ($this->ILI11LL && $this->ILlILIL >0) {$this->EnableBuffering =true; if ($this->ILI111L == I3287) {$this->ILI111L =I3295; }$this->ILI111l =I3296; }else {$this->ILI11LL =false; $this->ILlILIL =0; }if ($this->EnableBuffering) {if (!empty($this->ILI111l)) {ob_start($this->ILI111l); }ob_start(); ob_implicit_flush(0); }$this->DisableSign =false; $this->ILlIIIl =false; }function DelHeader($ILlIIlL) {$res =false; if (isset($this->Headers[$ILlIIlL])) {unset($this->Headers[$ILlIIlL]); $res =true; }return $res; }function Sign(&$ILlIIl1, $mode =I3297) {global $Core, $CONNECT_OPTIONS, $cms; if (!$this->ILlILI1) {if ($GLOBALS[I3298] && is_object($Core)) {$Core->TTlTTTl("Connector::Sign(..., {$mode})"); }return true; }if($mode == I3299){ if($Core->Side != I3300){ if(is_object($GLOBALS[I3301])){ $dateFormat =$GLOBALS[I3301]->DFMT[I3302]; }elseif(is_object($this->Cache)){ $dateFormat =$this->Cache->GetOption(I3303); }$this->TT1I11I($dateFormat, $ILlIIl1); }$this->TT1I11l($ILlIIl1); }if( $Core->Side != I3300 && isset($cms) && is_object($cms) && isset($cms->Member) && is_object($cms->Member) && !empty($cms->Member->User[I3304]) ){return TRUE; }if (!$this->DisableSign) {$ILlIILI =I3288; if (empty($GLOBALS[I3305])) {if ($mode == I3297 && !(isset($this->ILlIIII[I3306]) && $this->ILlIIII[I3306] == false)) {$signIdNum =md5(date(I3307) .I3308 .$GLOBALS[I3309]); $key =$GLOBALS[I3310] || empty($this->ILlIIII[I3311][$this->lang]) ?I3312 :I3311; $ILlIILI .= I3313 .mb_substr($signIdNum, 6, 4) .mb_substr($signIdNum, 24, 4) .I3314 .(isset($this->ILlIIII[$key][$this->lang]) ?$this->ILlIIII[$key][$this->lang] :$this->ILlIIII[$key][I3315]) .I3316 .I3317 .I3318 .$GLOBALS[I3309] .I3319 .I3320 .I3321 .I3322 .I3323 .I3324 .I3325 .I3326 .I3327 .I3328 .I3307 .I3329 .I3330 .I3331 .I3332 .I3333 .I3334 .I3335 .I3336 .I3337 .I3333 .I3323 .I3337 .I3327 .strrev(str_rot13($signIdNum)) .I3338 .$GLOBALS[I3339] .I3340 .I3317; }}else {if ($mode != I3297) {$ILlIILI .= $GLOBALS[I3305]; $Il1LILI =I3294; if (!empty($GLOBALS[I3341])) {$IILl1lL .= $GLOBALS[I3341]; }if (!empty($GLOBALS[I3342])) {$IILl1lL .= $GLOBALS[I3342]; }if (!empty($IILl1lL)) {if (preg_match(I3343, $ILlIIl1)) {$ILlIIl1 =preg_replace(I3344, I3345 .$IILl1lL, $ILlIIl1, 1); }else {$ILlIIl1 =$IILl1lL .$ILlIIl1; }}}}if ($ILlIILI != I3288) {if (preg_match(I3346, $ILlIIl1)) {$ILlIIl1 =preg_replace(I3346, I3345 .$ILlIILI .I3347, $ILlIIl1, 1); }else {$ILlIIl1 =$ILlIIl1 .$ILlIILI; }}}$ILlIILl =empty($CONNECT_OPTIONS[I3348]) && $CONNECT_OPTIONS[I3349] == I3350; if($mode != I3351 && (AMI_Service::isDebugVisible() || $ILlIILl)){ $ILlIILL =I3288; $oResponse =AMI::getSingleton(I3352); if ($oResponse->getType() == I3353) {return true; }if (!AMI_Service::isDebugSkipped()) {global $sys; $this->Cache->ILI1L1I =$GLOBALS[I3354][I3349] != I3350 || $this->Cache->Core->Side == I3300; $oResponse->HTML->writeDebug( (empty($sys[I3355][I3356]) ?I3294 :$this->TT1I1l1($GLOBALS[I3357]) .I3358) .(empty($sys[I3355][I3359]) ?I3294 :$GLOBALS[I3360][I3361][I3362] .AMI_Debug::getBuffer()) .$this->Cache->TTI1111() );if (defined(I3363)) {$oResponse->HTML->writeDebug(I3364); }if (!empty($sys[I3355][I3365])) {$oResponse->HTML->writeDebug( I3366 );}$html =I3294; if (isset($sys[I3355][I3367][$_SERVER[I3368]]) && mb_strpos($sys[I3355][I3367][$_SERVER[I3368]], I3369) !== false) {$oResponse->HTML->writeDebug(AMI_Debug::getIncludedFilesHTML()); }}if ($ILlIILl) {$oResponse->HTML->writeDebug( I3370 .(isset($GLOBALS[I3354][I3371]) ?I3372 .$_SERVER[I3368] :I3294) .I3373, false, true); }if (intval($Core->GetModOption(I3374, I3375))) {$oResponse->HTML->writeDebug(I3376); }$oResponse->HTML->sendDebug($ILlIIl1); }if ($GLOBALS[I3298] && is_object($Core)) {$Core->TTlTTTl("Connector::Sign(..., {$mode})"); }return true; }function Compress(&$ILlIIl1, &$IILLLll) {switch ($this->ILI111I) {case I3377: $ILlIIl1 =gzcompress($ILlIIl1, $this->ILlILIL); $IILLLll =I3377; break; case I3378: $ILlIIl1 =gzcompress($ILlIIl1, $this->ILlILIL); $IILLLll =I3378; break; default: $IILLLll =I3379; break; }return true; }function SetBenchType($type) {$this->benchType =$type; }function TTI111l() {global $bench_time, $db, $Core; if (!empty($GLOBALS[I3380])) {$IILlIIl =$GLOBALS[I3380]; if (isset($this->benchType)) {$type =$this->benchType; }elseif ($Core->Side == I3300) {$type =I3381; }else {$type =$this->Cache->TT1ITIl(); }$Illll11 =$this->TT1I1l1($bench_time, true); $message =I3382 .$GLOBALS[I3309] .I3383 .$type .I3383 .$Illll11 .I3384 .AMI_Service::getEnvInfo() .I3385; AMI_Service::log($message, $GLOBALS[I3380], $GLOBALS[I3386]); if ($db->attr(I3387) && $Core->Side == I3388) {$ILlIIL1 =AMI_Service::microtimeDiff($bench_time[I3389], microtime()); if ($ILlIIL1 >8) {$IILlIIl .= I3390; $message =I3382 .$GLOBALS[I3309] .I3383 .$type .I3383 .$Illll11 .I3391 .$db->TT1lIIl(); AMI_Service::log($message, $IILlIIl, 0); }}}}function TT1I1lT() {$this->TTI111l(); }function Out($ILlII1I =I3288) {global $ROOT_PATH_WWW, $ILlII1l, $cms, $cookieId, $cookieData; if ($ILlII1I == I3288) {$ILlII1I =$GLOBALS[I3292] .I3293; }if (!$this->ILlILIl) {$this->AddHeader($ILlII1I); }$content =I3288; $IILll11 =I3288; if (is_object($cms) && $cms->Core->Side == I3300 && $cms->Core->GetOption(I3392)) {AMI::getSingleton(I3393)->save(); }$IlLLlll =$this->GetHeaders(); if (is_object($this->Cache)) {$this->Cache->TT1Ill1($IlLLlll); $this->Cache->End(); if ($this->Cache->Core->Side == I3300 && !AMI_Service::isDebugSkipped()) {$IILll11 =$this->Cache->GetDebugInfo(); $this->Cache->ILI1L1I =true; }}$this->TTI111l(); $this->OutHeaders(); if ($this->EnableBuffering) {echo $IILll11; $this->TT1I111(); $this->TT1I1ll(); }return true; }function TT1I1lI($IIL1l1I, &$Html) {if ((mb_strpos($IIL1l1I, I3394) !== false) && preg_match(I3343, $Html)) {$ILlII1L =I3294; $ILlII11 =I3395; if (preg_match(I3396 .$ILlII11 .I3397, $Html, $aMatches)) {$ILlII1L =$aMatches[1]; }else {mt_srand(); $ILlIlII =mt_rand(1, 9); for ($i =0; $i <= 10; $i++) {if ($i == $ILlIlII) {$ILlII1L .= $ILlII11; }$ILlII1L .= chr(mt_rand(97, 122)); }$Html =preg_replace(I3398, I3399 .$ILlII1L .I3400, $Html, 1); }$this->ILlIIIL =$ILlII1L; $Html =preg_replace_callback( I3401, array($this, I3402), $Html );}return true; }protected function _cbReplaceEMail(array $aMatches){ return I3403 .$this->ILlIIIL .I3404 .rawurlencode(stripslashes($aMatches[1])) .I3405; }function TT1I1ll() {static $started =false; if ($started || ($GLOBALS[I3406] == I3290 && !empty($GLOBALS[I3407]))) {return; }$started =true; if (is_object($this->Cache) && isset($GLOBALS[I3408]) && is_object($GLOBALS[I3408]) && !empty($this->Cache->options[I3409]) && CheckProbability(0.02)) {require_once $GLOBALS[I3285] .I3410; $process =new CMS_BackgroundProcess(); $process->process(); }}private function TT1I1l1($aBench, $bTextView =false) {global $_total_qtime, $_total_queries, $_total_ftime, $_total_fqueries; $ILlIlIL =microtime(); $ILlIIL1 =number_format(AMI_Service::microtimeDiff($aBench[I3389], $ILlIlIL), 5, I3411, I3294); $res ="\n<br>\n<b><font color=blue size=2>Script total = $ILlIIL1 sec. </font></b> "; if (isset($_total_qtime) && $_total_qtime >0) {$ILlIlI1 =number_format($_total_qtime, 5, I3411, I3294); $ILlIllI =$ILlIlI1; $ILlIlll =number_format($ILlIIL1 -$ILlIlI1, 5, I3411, I3294); $ILlIllL =I3412; if (isset($_total_ftime) && $_total_ftime >0) {$ILlIll1 =number_format($_total_ftime, 5, I3411, I3294); $ILlIllL =" Fetch = $ILlIll1 sec"; $ILlIllI -= $ILlIll1; }$res .= "<b>[MySQL time: Total = $ILlIlI1 sec.</b> Queries = $ILlIllI sec. [$_total_queries times] $ILlIllL [$_total_fqueries times]"; $res .= I3413; $res .= "<b>[PHP time total = $ILlIlll sec.]</b> "; }$ILlIlLI =$aBench[I3389]; $ILlIlLl =true; $ILlIIL1 =0; foreach ($aBench as $ILlIlLL => $ILlIlL1) {if ($ILlIlLL == I3389) {continue; }if ($ILlIlLl) {$res .= I3414; $ILlIlLl =false; }$ILlIl1I =AMI_Service::microtimeDiff($ILlIlLI, $ILlIlL1); $ILlIl1l =number_format($ILlIl1I, 5, I3411, I3294); $ILlIIL1 += $ILlIl1I; $ILlIl1L =number_format($ILlIIL1, 3, I3411, I3294); $ILlIlLI =$ILlIlL1; $ILlIl11 =I3415; if ($ILlIl1I >0.2) {$ILlIl11 =I3416; }if ($ILlIl1I <0.01) {$ILlIl11 =I3417; }$ILlIl1l =I3418 .$ILlIl11 .I3419 .$ILlIl1l .I3420; $ILlILII =I3415; if ($ILlIIL1 >0.4) {$ILlILII =I3416; }if ($ILlIIL1 <0.2) {$ILlILII =I3417; }$ILlIl1L =I3418 .$ILlILII .I3419 .$ILlIl1L .I3420; $res .= I3421 .$ILlIlLL .I3422 .$ILlIl1l .I3423 .$ILlIl1L .I3424; $res .= I3425; }if (function_exists(I3426)) {$res .= I3427 .round(memory_get_peak_usage() /1048576, 2); }$res .= I3428 .sizeof(get_included_files()); if ($bTextView) {$res =str_replace(I3317, I3294, strip_tags($res)); }return $res; }}