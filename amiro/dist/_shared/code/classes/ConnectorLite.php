<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       13896 xkqwnqikqlpspiwmnktgkgrxqntuplskqpswitrgypugsltrtrrqllkzkigqwniuwxurpnir
 */ ?><?php foreach(array(3429=>"?200?hk",3430=>"rQDG",3431=>"nHnQ",3432=>'PAMG',3433=>'%?',3434=>'HdQDDMHn',3435=>"WZWOQS",3436=>"|ZSvTQxt0",3437=>"\\1",3438=>'EuQrB',3439=>'b+I+S?o%M%D',3440=>"#~Z@#~DGZn@\n",3441=>"@\n",3442=>'#Yr?~@#Yr?~@',3443=>'HutGut',3444=>'SQYuP|MGD',3445=>'MnWSQY',3446=>"~}#YHSB`[ @{~DM",3447=>'YZWKPrHunS|GrHWQDD') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ConnectorLite {public $Cache; public $Headers; public $ILlILIl; public $DisableSign; public $ILlILIL; protected $ILlILI1 =true; function ConnectorLite(&$oCache, $ILlIII1 =0, $ILlILlI =true) {$this->Cache =&$oCache; $this->ILlILIL =$ILlIII1; $this->Headers =false; $this->ILlILIl =false; $this->TT1I1I1(); $this->_init(); }public function forbidContentModification() {$this->ILlILI1 =false; }function _init() {$ILlILll =$this->TT1I11T() != ''; $ILlILlI =$ILlILll && $this->ILlILIL >0; if ($ILlILlI) {ob_start("ob_gzhandler"); ob_start(); }else {$ILlILll =false; ob_start(); }if ($ILlILlI) {ob_implicit_flush(0); }}function TT1I1I1() {$this->AddHeader("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); $this->AddHeader("Cache-Control: no-cache, no-store, must-revalidate, post-check=0, pre-check=0"); $this->AddHeader("Pragma: no-cache"); $this->AddHeader("Status: 200 OK"); $this->AddHeader($GLOBALS["SERVER_PROTOCOL"] .I3429); }function AddHeader($ILlIIlL, $ILlILlL ="none", $ILlILl1 ="none") {$this->Headers[$ILlIIlL] =array("data" => $ILlIIlL, "repl" => $ILlILlL, I3430 => $ILlILl1); }function SetSkip200Status($Ill11lI) {$this->ILlILIl =$Ill11lI; }function GetHeaders() {return $this->Headers; }function OutHeaders() {foreach ($this->Headers as $IILLLll => $vData) {if ($vData[I3430] != "none") {header($vData["data"], $vData["repl"], $vData[I3430]); }elseif ($vData["repl"] != I3431) {header($vData["data"], $vData["repl"]); }else {header($vData["data"]); }}}function TT1I11T() {$res =''; if (isset($_SERVER['HTTP_ACCEPT_ENCODING'])) {$res =mb_strpos($_SERVER['HTTP_ACCEPT_ENCODING'], 'x-gzip') !== false ?'x-gzip' :(mb_strpos($_SERVER['HTTP_ACCEPT_ENCODING'], I3432) !== false ?I3432 :''); }return $res; }function TTI111l() {if (!empty($GLOBALS['BENCH_LOG_FILE'])) {$message ="['USER: NOTICE'] [code=1024]:  ['" .$GLOBALS['ROOT_PATH_WWW'] .I3433 .$this->Cache->TT1ITIl() .I3433 .AMI_Service::getSimpleBenchInfo($GLOBALS['bench_time'], true) ."'] [Details: " .AMI_Service::getEnvInfo() ."]"; AMI_Service::log($message, $GLOBALS['BENCH_LOG_FILE'], $GLOBALS['BENCH_LOG_FILE_SIZE']); }}function TT1I11I($dateFormat, &$ILlIIl1){ if ($dateFormat != '') {$utime =time(); $ILlILLI ='+-[yesterday_date]-+'; $offset =mb_strlen($ILlILLI); if (($pos =mb_strpos($ILlIIl1, $ILlILLI)) !== FALSE) {$ILlIIl1 =str_replace( array( '+-[today_date]-+', $ILlILLI ),array( date($dateFormat, $utime), date($dateFormat, strtotime('-1 day', $utime)) ),mb_substr($ILlIIl1, 0, $pos +$offset) ).mb_substr($ILlIIl1, $pos +$offset); }}$ILlILLl ='+-[mobile_lay_id]-+'; $offset =mb_strlen($ILlILLl); $pos =mb_strpos($ILlIIl1, $ILlILLl); $ILlILLL =0; if(FALSE !== $pos){ if($this->Cache->IssetOption('mobile_layout_id')){ $ILlILLL =(int)$this->Cache->GetOption('mobile_layout_id'); }$ILlIIl1 =str_replace( $ILlILLl, $ILlILLL, mb_substr($ILlIIl1, 0, $pos +$offset) ).mb_substr($ILlIIl1, $pos +$offset); }}protected function TT1I11l(&$ILlIIl1){ $oSession =NULL; if(function_exists('admSession')){ $oSession =admSession(); }elseif(isset($GLOBALS['oSession'])){ $oSession =$GLOBALS[I3434]; }if(is_object($oSession) && $oSession->IssetVar('hash')){ $utime =time(); $ILlILLI ='+-[_tsh]-+'; $offset =mb_strlen($ILlILLI); if(($pos =mb_strpos($ILlIIl1, $ILlILLI)) !== FALSE){ $ILlIIl1 =str_replace( array( '+-[_ts]-+', $ILlILLI ),array( $utime, md5($utime .$oSession->GetVar('hash')) ),mb_substr($ILlIIl1, 0, $pos +$offset) ).mb_substr($ILlIIl1, $pos +$offset); }}}function Sign(&$ILlIIl1, $mode =I3435) {if ($mode == 'no_cached') {$dateFormat =$this->Cache->GetOption('DFMT_php'); $this->TT1I11I($dateFormat, $ILlIIl1); $this->TT1I11l($ILlIIl1); $ILlILL1 =''; if (!empty($GLOBALS["_advText"])) {if (!empty($GLOBALS[I3436])) {$ILlILL1 .= $GLOBALS[I3436]; }if (!empty($GLOBALS["_advIncText"])) {$ILlILL1 .= $GLOBALS["_advIncText"]; }if (preg_match('/^(.*)<\\/body/si', $ILlIIl1)) {$ILlIIl1 =preg_replace('/^(.*)<\\/body/si', I3437 .$GLOBALS["_advText"] ."</body", $ILlIIl1, 1); }else {$ILlIIl1 =$ILlIIl1 .$GLOBALS["_advText"]; }}$ILlIL1I =false; if (!$this->DisableSign && AMI_Service::isDebugVisible()){ global $sys; $this->Cache->ILI1L1I =true; $uri =$_SERVER['REQUEST_URI']; $aURL =@parse_url($uri); if (is_array($aURL) && isset($aURL[I3438])) {$aArgs =array(); parse_str($aURL[I3438], $aArgs); if (sizeof($aArgs) >2) {$aArgs =array_slice($aArgs, 0, 2, TRUE); $uri =$aURL['path'] .'?' .http_build_query($aArgs); }}$ILlIILL ='<script type="text/javascript">DEBUG_BY_IP = 1;' ."AMI_Debug = {
    setCookie: function(name, value){
        var oDate = new Date();
        oDate.setDate(oDate.getDate() + 30);
        this.deleteCookie(name);
        document.cookie = name + '=' + encodeURIComponent(value) + '; path=/; expires=' + oDate.toGMTString();
    },

    getCookie: function(name){
        var aCookie = document.cookie.split('; ');
        var value = '';
        for (var i = 0; i < aCookie.length; i++){
            var aPair = aCookie[i].split('=');
            if (name == aPair[0]){
                return typeof(aPair[1]) != 'undefined' ? aPair[1] : null;
            }
        }
        return null;
    },

    deleteCookie: function(name) {
        if(this.getCookie(name) != null){
            document.cookie = name + '=; path=/; expires=Thu, 01-Jan-1970 00:00:01 GMT';
        }
    }
}
</script>\n" ."<span style=\"display: block; text-align: left; color: #fff; background: #f00; font-family: tahoma; font-weight:bold; font-size: 11px; padding:0 4px 2px 4px; margin-bottom: 5px;\"><a style=\"color: #fff; text-decoration: none;\" href=\"javascript:\" onclick=\"var bShow = AMI_Debug.getCookie('amid');document.getElementById('amid').style.display = bShow ? 'block' : 'none';if(bShow){AMI_Debug.deleteCookie('amid');}else{AMI_Debug.setCookie('amid', 1);}this.blur();return false;\">&raquo;&raquo;</a> Warning: debug mode is enabled, " .(empty($GLOBALS['sys']['disable_user_scripts']) ?'' :' user scripts are disabled,') .date(I3439) ."<i style=\"color: #f88;\"> GMT: " .gmdate('Y-m-d H:i') ."</i> &nbsp;" .$_SERVER['REQUEST_METHOD'] ." <a style=\"color: #fff; text-decoration: none; font-family: tahoma; font-weight: bold; font-size: 11px;\" href=\"" .$_SERVER['REQUEST_URI'] .'" title="' .htmlentities($_SERVER['REQUEST_URI']) .'" target="_blank">' .htmlentities($uri) .I3440 .'<div id="amid"' .(empty($_COOKIE['amid']) ?'' :' style="display: none;"') .I3441 .(empty($sys['err']['show_bench']) ?'' :AMI_Service::getSimpleBenchInfo($GLOBALS['bench_time']) .I3442) .(isset($GLOBALS['_DEBUG']) && isset($GLOBALS['_DEBUG']['output']) ?$GLOBALS['_DEBUG'][I3443] ."\n" :'') .$this->Cache->TTI1111() .'</div>'; if (isset($sys['err'][I3444]) && isset($sys['err'][I3444][$_SERVER['REMOTE_ADDR']]) && mb_strpos($sys['err'][I3444][$_SERVER['REMOTE_ADDR']], I3445) !== false) {$ILlIILL .=AMI_Debug::getIncludedFilesHTML(); }$ILlIL1I =true; if (preg_match('/<body/i', $ILlIIl1)) {$ILlIIl1 =preg_replace('/<body.*?>/si', "\\0\n" .$ILlILL1 .$ILlIILL, $ILlIIl1, 1); }else {$ILlIIl1 =$ILlILL1 .$ILlIILL .$ILlIIl1; }}if (!$ILlIL1I && !empty($ILlILL1)) {if (preg_match('/<body/i', $ILlIIl1)) {$ILlIIl1 =preg_replace(I3446, I3437 .$ILlILL1, $ILlIIl1, 1); }else {$ILlIIl1 =$ILlILL1 .$ILlIIl1; }}}return true; }function TT1I111() {$Content =ob_get_clean(); if (AMI_Registry::get('page/seoData/index', FALSE) && AMI_Registry::get('page/seoData/noindex', FALSE)) {$this->Cache->TT1Il1I($Content); }if(defined('AMI_FIRE_ON_PAGE_CONTENT_OUTPUT')){ $aEvent =array('content' => &$Content); AMI_Event::fire('on_page_content_output', $aEvent, AMI_Event::MOD_ANY); }$this->Sign($Content, "no_cached"); echo $Content; }function Out($ILlII1I ="") {if ($ILlII1I == "") {$ILlII1I =$GLOBALS["SERVER_PROTOCOL"] .I3429; }if (!$this->ILlILIl) {$this->AddHeader($ILlII1I); }$IlLLlll =$this->GetHeaders(); $this->Cache->TT1Ill1($IlLLlll); $this->Cache->End(); $this->TTI111l(); $this->OutHeaders(); $this->TT1I111(); $this->TT1I1ll(); die; }function TT1I1ll() {static $started =false; if ($started) {return; }$started =true; if (is_object($this->Cache) && !empty($this->Cache->options[I3447]) && CheckProbability(0.02)) {require_once $GLOBALS['CLASSES_PATH'] .'CMS_BackgroundProcess.php'; $process =new CMS_BackgroundProcess(); $process->process(); }}}