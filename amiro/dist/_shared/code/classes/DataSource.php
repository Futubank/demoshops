<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       2063 xkqwnslzpluzpmpgqunyxxqrkpskxupsixwsynpriiwlsquimsgxiulxqmsuxrwymsripnir
 */ ?><?php foreach(array(4049=>'"') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_file_system.php"); class DataSource {protected $debug; protected function log($string){ if($this->debug){ AMI_ErrorHandler::getInstance()->log($string); }}}class DataSourceFS extends DataSource {public function __construct(){ $this->debug =true; }public function unlink($path){ if($res =unlink($path)){ $this->log('SUCCESS Unlink of "'.$path.'"'); }else{ $this->log('FAILD Unlink of "'.$path.'"'); }return $res; }public function chmod($path,$mode){ return chmod($path,$mode); }public function fileExists($path){ return file_exists($path); }public function copy($from,$to){ return copy($from,$to); }public function TT1lIlT($path){ return is_file($path); }public function fileSize($path){ return filesize($path); }public function TT1lIlI($path){ return is_dir($path); }public function mkDir($path,$mode =0777,$recursive =false){ return mkdir($path, $mode, $recursive); }public function TT1lIll($path){ if($res =TT1lIll($path)){ $this->log('SUCCESS Dir Unlink of "'.$path.I4049); }else{ $this->log('FAILD Dir Unlink of "'.$path.I4049); }return $res; }}?>