<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       8053 xkqwipymxrwypwpzkmzmtzrtgkuuzulksiipgzriikqzmrqssiuykkngspslzyuxpmimpnir
 */ ?><?php foreach(array(4050=>"bbbb",4051=>"IHntO",4052=>"II",4053=>"ss",4054=>"DQW",4055=>"OHur",4056=>"b+I+S?o%M%D",4057=>"",4058=>"P",4059=>"M",4060=>"n",4061=>"C",4062=>"Z",4063=>":S",4064=>":J",4065=>"o",4066=>"J",4067=>":Y",4068=>":D",4069=>":u",4070=>"A",4071=>'',4072=>'D',4073=>"B",4074=>"DD",4075=>"b",4076=>"OO",4077=>"I") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} $GLOBALS["ILllLII"] =315511200; $GLOBALS["ILllLIl"] =2019664799; class DateTools {const UTIME_MIN =315511200; const UTIME_MAX =2019664799; public $ILllLIL; public $ILllLI1; public $ILllLlI; public $ILllLll; function DateTools() {$this->ILllLIL =Array(I4050=>"year","YY"=>"year2","MM"=>I4051,"DD"=>"day","hh"=>"hour",I4052=>"min","ss"=>"sec"); $this->dDelimsRE ="/[\\/\\., :-]/"; $this->ILllLI1 =I4053; $this->ILllLll =Array("year" => 1971, I4051 => 1, "day" => 1, "hour" => 0, "min" => 0, I4054 => 0); }public static function isvaliddate($cdate, $ILllLlL){ global $ILllLl1; $ILllLLI =preg_split($ILllLl1->dDelimsRE, $cdate); $ILllLLl =preg_split($ILllLl1->dDelimsRE, $ILllLlL); if(sizeof($ILllLLI) != sizeof($ILllLLl)) {return false; }$ILllLLL =Array(); foreach($ILllLLl as $key => $token) {$ILllLLL[$ILllLl1->ILllLIL[$token]] =intval($ILllLLI[$key]); }if(isset($ILllLLL["year2"])) {$ILllLLL["year"] =(($ILllLLL["year2"] >69) ?1900 :2000) +$ILllLLL["year2"]; }$ILllLLL += $ILllLl1->ILllLll; $res =mktime($ILllLLL[I4055], $ILllLLL["min"], $ILllLLL[I4054], $ILllLLL[I4051], $ILllLLL["day"], $ILllLLL["year"]); if($res<0) $res =0; return $res; }static function toMysqlDate($ILllLL1){ $res ="0000-00-00 00:00:00"; if($ILllLL1) $res =date(I4056, $ILllLL1); return $res; }function TT1lIl1($date) {return DateTools::getCorrectUdate($date,'YYYY-MM-DD hh:mm:ss',-1); }public static function getCorrectUDate($cdate, $ILllL1I, $ILllL1l=""){ $udate =DateTools::isvaliddate($cdate, $ILllL1I); if($udate===false){ if($ILllL1l==="") $ILllL1l =time(); $udate =$ILllL1l; }return $udate; }public static function php2mysqlFormat($ILllL1I, $ILllL1L =false){ if($ILllL1L){ $ILllL11 =Array( "a" => I4057, "A" => I4057, "d" => I4057, "D" => I4057, "F" => I4057, I4058 => I4057, "G" => I4057, "h" => I4057, "H" => "H", I4059 => I4059, "j" => I4057, "l" => I4057, "m" => I4057, "M" => I4057, I4060 => I4057, "r" => I4057, "s" => "s", "S" => I4057, I4061 => I4057, "W" => I4057, "Y" => I4057, "y" => I4057, "z" => I4057); }else{ $ILllL11 =Array( I4062 => "%p", "A" => "%p", "d" => I4063, "D" => "%a", "F" => "%M", I4058 => I4064, "G" => "%k", "h" => "%h", I4065 => "%H", I4059 => "%i", "j" => "%e", I4066 => "%W", "m" => "%m", "M" => I4067, I4060 => "%c", "r" => "%a, %e %b %Y  %H:%i:%s", "s" => I4068, "S" => "%D", I4061 => "%w", "W" => I4069, "Y" => "%Y", "y" => "%y", I4070 => "%j"); }$ILll1II =strtr($ILllL1I, $ILllL11); if($ILllL1L){ $ILll1II =preg_replace('/^[^His]*/', '', $ILll1II); $ILll1II =preg_replace('/[^His]*$/', I4071, $ILll1II); $ILll1II =strtr($ILll1II, array('H' => '%H', 'i' => '%i', I4072 => '%s')); }return $ILll1II; }public static function php2confFormat($ILllL1I){ $ILllL11 =Array("d" => I4053, "m" => "MM", I4073 => "YY", "Y" => I4050, I4065 => "hh", I4059 => I4052, "s" => I4074); $ILll1II =strtr($ILllL1I, $ILllL11); return $ILll1II; }public static function conf2phpFormat($ILllL1I, $ILllL1L =false){ if($ILllL1L){ $ILllL11 =Array(I4050 => I4057, I4053 => I4057, "MM" => I4057, "YY" => I4057, "hh" => I4065, I4052 => I4059, I4074 => "s"); }else{ $ILllL11 =Array(I4050 => I4075, I4053 => "d", "MM" => "m", "YY" => I4073, I4076 => I4065, I4052 => I4059, I4074 => "s"); }$ILll1II =strtr($ILllL1I, $ILllL11); if($ILllL1L){ $ILll1II =preg_replace('/^[^His]*/', I4071, $ILll1II); $ILll1II =preg_replace('/[^His]*$/', I4071, $ILll1II); }return $ILll1II; }public static function getJustDateFormat($ILllL1I){ global $ILllLl1; $aParts =explode(" ", $ILllL1I); foreach($aParts as $part) {if(mb_strpos($part, $ILllLl1->ILllLI1) !== false) {break; }}$res =$part; return $res; }function TT1lI1T($month,$year) {$month =intval($month); $year =intval($year); if($month==2 && $year%4==0) return 29; $numDays =array(1=>31,2=>28,3=>31,4=>30,5=>31,6=>30,7=>31,8=>31,9=>30,10=>31,11=>30,12=>31); return intval($numDays[$month]); }function TT1lI1I(&$month,&$year) {if(++$month>12) {$year++; $month =1; }}function TT1lI1l(&$month,&$year) {if(--$month <1) {$year--; $month =12; }}public static function TT1lI11($udate, &$ILll1Il, &$ILll1IL){ $res =false; if (isset($udate)){ if($udate >$ILll1IL) {$res =$ILll1IL; $ILll1IL =$udate; }if($udate <$ILll1Il) {$res =$ILll1Il; $ILll1Il =$udate; }}return $res; }public static function getEndDayTimestamp($timestamp) {return mktime(23, 59, 59, date(I4077, $timestamp), date("d", $timestamp), date(I4075, $timestamp)); }}$GLOBALS['ILllLl1'] =new DateTools(); 