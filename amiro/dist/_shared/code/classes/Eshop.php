<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       119371 xkqwxnwwstikgzpnnnqkukzsxrzigutwupqwpnrqxsnktuxyskkmunrzkwzsrkrmqxkxpnir
 */ ?><?php foreach(array(4122=>"funW|fHrIZt`GOG",4123=>'TrQQiHSQJ`GOG',4124=>"",4125=>"PQtwurrQnWBjMDtwy",4126=>"QxtpQtiHSuJQDjMDt",4127=>"QxtpQtiHSuJQDjMDtwy",4128=>"|OHIQ",4129=>"QDOHG|fMnZJ`GOG",4130=>"nuIYQrsQWMIZJDgQr",4131=>"rHHtwZtmS",4132=>"DOHCsMDWHuntDRHC",4133=>"uDQdOMGGMnPiHSuJQ",4134=>"MDFrZWtMHnzJJHCQS",4135=>"|MS|DMtQ",4136=>"DQZrWONHSQ",4137=>"W",4138=>"W`GrMWQ|WZGtMHn:S",4139=>"'",4140=>"ZgrQDQntmtQITBGQD",4141=>"QxDtQnDMHnD",4142=>'`GOG',4143=>'QDOHG|PHHSD',4144=>"ZwurrQnWB",4145=>"nZIQ",4146=>"QxWOZnPQ",4147=>"WHSQ",4148=>"GHDtfMx",4149=>"MD|YZDQ",4150=>"WurrQnWB",4151=>"UgszTq?",4152=>'QxWOZnPQ',4153=>'MS',4154=>"DGQW|YJHWKD",4155=>"|MtQI",4156=>"fZuJtD",4157=>"%",4158=>"GQrQHS|tMIQDtZIG",4159=>"tBGQ",4160=>'GQrQHS|tMIQDtZIG',4161=>"HtOQr|GrMWQD",4162=>"QDOHG|tZx|WJZDDQD",4163=>"MS",4164=>"tZx|tBGQ",4165=>'ZYD',4166=>'AMG',4167=>"tZx|rZtQ",4168=>'DtZtQ',4169=>'GQrWQnt',4170=>"GrMWQ",4171=>"PQtwurrQnWBjMDt",4172=>'tZx|WJZDD|tBGQ',4173=>'',4174=>'tZx|tBGQ',4175=>'vZJMSMtB',4176=>'EtB',4177=>"WZtQPHrMQD",4178=>'PJHYZJ',4179=>'WZtQPHrB',4180=>'GQrDHnZJ',4181=>'ZWWuIuJZtMvQ|tHtZJ',4182=>'IZx|tHtZJ',4183=>'ZWWuIuJZtMvQ',4184=>"|HrSQrD?H?",4185=>"'{",4186=>"ZIHunt",4187=>"IZx|ZIHunt",4188=>'ZGGJB|tH',4189=>'DMnPJQ',4190=>'ZIHunt',4191=>'WHuGHn',4192=>"GQrWQnt",4193=>"HrMPMnZJ",4194=>"GrMWQ|vZJuQ",4195=>'tZxZYJQ|QxWJ',4196=>'WOZrPQ|tZx|tBGQ',4197=>'WOZrPQ',4198=>"MS|tZx|WJZDD",4199=>'tZx|rZtQ',4200=>'tZx',4201=>"!",4202=>'`',4203=>'<',4204=>"mFNUjj}",4205=>'GOG',4206=>"GrMWQD*",4207=>"-",4208=>"GuYJMW",4209=>"+",4210=>"ZJJ",4211=>"coqRq?MS='",4212=>'DKu',4213=>'DOMGGMnP|tBGQ',4214=>"DKu",4215=>"WOZrPQ|tZx|tBGQ",4216=>"DOMGGMnP|tBGQ",4217=>"=_NUjj",4218=>"MS|WZtQPHrB",4219=>"'?zNs?JZnP='",4220=>"MS|DMtQ",4221=>"JZnP",4222=>"ZJJ|GZrQntD",4223=>"GHDMtMHn",4224=>"|CZrn|DKu",4225=>"GZrQntDms",4226=>"Hn|DGQWMZJ",4227=>"CQMPOt",4228=>'MtQI|GMWturQD',4229=>"|fHrI|SZtZ",4230=>"DOMGGMnP",4231=>"MS|QxtQrnZJ",4232=>"GrMWQ|IZDK",4233=>"1[",4234=>"WZtQPHrBwOZnPQS",4235=>"HJSguYJMW",4236=>"rQWcZDjQttQr",4237=>"M|JQttQr",4238=>"JQttQr",4239=>"ZdEJ",4240=>"QDOHG|ZWWHunt",4241=>"PrHuG",4242=>"dohc|smdwhUNTd|Rhc",4243=>"HtOQrD",4244=>".GuYJMW.?=?1",4245=>"{?zNs?}",4246=>"WHnSMtMHn",4247=>'GrMWQ|nuI',4248=>"WZtQPHrB",4249=>"uDQ|DOMGGMnP|IHSuJQ",4250=>"tHtZJ",4251=>"WuDtHI|WHnSMtMHnD",4252=>"OMSSQn",4253=>"tZx|ZGGJB|tBGQ",4254=>"tZx|WJZDD|rZtQ",4255=>"tZx|WJZDD|tBGQ",4256=>'!',4257=>"jqFT?lhmN?.",4258=>"WH`WHuGHn?=?'",4259=>'rQS',4260=>'|WHuGHnD',4261=>'|fMQJSD',4262=>"MtQI|tBGQ",4263=>"IZx|EuZntMtB") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class Eshop {private $ILlLLLl =array(); public $mEshop; public $ILlLLLL; public $ILlLLL1; public $ILlLL1I; public $ILlLL1l; public $cms; public $db; public $dbTablePrefix; public $aCurrency; public $_aCurrencyBackup; public $baseCurrency; public $_baseCurrencyBackup; public $currencyEnable; public $numPrices; public $otherPricesEnabled; public $priceFields; public $itemCountersEnable; public $numberDecimals; public $decimalPoint; public $thousandsSeparator; public $numberDecimalsPer; public $_aApplyCalcs; public $_aApplyDiscounts; public $_aWithTax; public $ILlLL1L; public $ILlLL11; public $ILlL1II; public $_taxesData; public $ILlL1Il; public $ILlL1IL; public $aAllowExtMods; public $aAllowExtItemTypes; public $aUnAllowExtMods; public $mAllowExtMods; public $_oExtensions; public $ILlL1I1; public $defaultItemType; public $numItemTypes; public $aPresentItemTypes; public $ILlL1lI; public $siteId; public $rootCatId; public $rootParentCatId; public $mainRootCatId; public $langData; public $ILlL1ll; public $ILlL1lL; public $words; public $tree; public $NONE =false; public $ILlL1l1; public $ownerName; public $ILlL1LI; public $ILlL1Ll; public $ILlL1LL; public $ILlL1L1; public $aCloneOwners; public $ILlL11I; public $ILlL11l; public $ILlL11L; public $ILlL111; public $_discountsData; public $_discountsDisabled; public $_useProductsDiscountsSyncopationSum; public $_useDiscountsSyncopationSum; public $_commonDiscountsEnabled; public $showDiscounts; public $showDiscountsColumn; public $showDiscountsRow; public $useTotalDiscounts; public $totalDiscountsArePresent; public $totalForDiscounts; public $productsGroupedByDiscountIds; public $couponId; public $ILl1III; public $ILl1IIl; public $ILl1IIL; public $useShippingModule; public $shippingData; public $taxShippingData; public $isFractionAllowed; function Eshop(&$cms, &$words, $moduleName ="") {require_once($GLOBALS["FUNC_INCLUDES_PATH"].I4122); $this->db =new DB_si; $this->cms =&$cms; $this->words =&$words; $this->langData =$this->cms->Gui->lang_data; $this->aCloneOwners =Array(); $aTmp =$this->cms->Core->GetProperty("eshop_clone_owners"); foreach($aTmp as $ownerName) {if($this->cms->Core->IsOwnerInstalled($ownerName)) {$this->aCloneOwners[$ownerName] =1; }}$this->dbTablePrefix ="cms_es"; if(is_object($cms->ActiveModule)) {$this->ownerName =$cms->ActiveModule->GetOwnerName(); }else {$tmpMod =&$cms->Core->GetModule($cms->ActiveModule); if(is_object($tmpMod)){ $this->ownerName =$tmpMod->GetOwnerName(); }unset($tmpMod); }if(isset($this->aCloneOwners[$this->ownerName]) || empty($this->ownerName)) {$this->ownerName ="eshop"; }$this->ILlL1LI =$this->ownerName; $this->ILlL1Ll =$this->ownerName; require_once $GLOBALS['CLASSES_PATH'] .I4123; $this->ILlL1LL =false; $this->ILlL1L1 =false; $this->ILlL11I =Array(); $this->ILlL11l =(sizeof($this->aCloneOwners) >1); $this->ILlL11L =Array(); $this->ILlL111 =""; $this->couponId =-1; $this->ILl1III =''; $this->ILl1IIl =''; $this->ILl1IIL =null; $this->useShippingModule =false; $this->shippingData =null; $this->isFractionAllowed =false; }function getCommonModuleName($IlL1LlI) {$res =""; if(isset($this->ILlL11L[$this->ownerName.$IlL1LlI])) {$res =$this->ILlL11L[$this->ownerName.$IlL1LlI]; }else {if(isset($this->aCloneOwners[$this->ownerName])) {if($this->cms->Core->IsInstalled($this->ownerName.$IlL1LlI) && $this->cms->Core->IsPresentInPMandPublic($this->ownerName.$IlL1LlI)) {$this->ILlL11L[$this->ownerName.$IlL1LlI] =$this->ownerName.$IlL1LlI; $res =$this->ILlL11L[$this->ownerName.$IlL1LlI]; }}if($res == I4124) {foreach($this->aCloneOwners as $ownerName => $tmp) {if($this->cms->Core->IsInstalled($ownerName.$IlL1LlI) && $this->cms->Core->IsPresentInPMandPublic($ownerName.$IlL1LlI)) {$res =$ownerName.$IlL1LlI; $this->ILlL11L[$this->ownerName.$IlL1LlI] =$res; break; }}}}return $res; }function TT1l1lI($ILl1II1, $moduleType) {$res =false; foreach($this->aCloneOwners as $ownerName => $tmp) {if(mb_substr($ILl1II1, mb_strlen($ownerName) +1) == $moduleType) {$res =true; break; }}return $res; }function init($ILl1IlI) {if($ILl1IlI == I4124) {$aTmp =array_keys($this->aCloneOwners); $ILl1IlI =$aTmp[0]."_item"; }$tmpMod =&$this->cms->Core->GetModule($ILl1IlI); $ownerName =$tmpMod->GetOwnerName(); if(!$this->ILlL1L1) {$this->TT1l1ll($ILl1IlI); }unset($tmpMod); $this->ownerName =$ownerName; if(!isset($this->aCloneOwners[$this->ownerName])) {trigger_error("The owner [".$this->ownerName."] is not available", E_USER_ERROR); }$this->initByOwnerName($ownerName); $this->ILlL1L1 =true; }function TT1l1ll($ILl1IlI) {$this->TT11TIl(); }function TT1l1l1($ILl1Ill, $ILl1IlL) {if($this->ILlL11l) {foreach($ILl1IlL as $paramName) {$this->ILlL11I[$this->ownerName][$ILl1Ill][$paramName] =$this->{$paramName}; }}}function TT1l11T($ILl1Ill, $ILl1IlL) {$res =false; if(isset($this->ILlL11I[$this->ownerName][$ILl1Ill])) {foreach($ILl1IlL as $paramName) {$this->{$paramName} =$this->ILlL11I[$this->ownerName][$ILl1Ill][$paramName]; }$res =true; }return $res; }function initByOwnerName($ownerName) {$this->ownerName =$ownerName; if($this->ILlL1LL != $this->ownerName) {$this->TT1l11I($ownerName); $this->ILlL1LL =$this->ownerName; }}function saveCurrentConfig() {$this->ILlL1Ll =$this->ownerName; }function setSavedConfig() {$this->initByOwnerName($this->ILlL1Ll); }function TT1l11I($ownerName) {$this->ILlLL1L =false; $this->ILlLL11 =false; $this->ILlL1ll =&$this; $this->ILlL1lL =Array( "getCurrencyList"=>I4125, I4126=>I4127 );$this->mEshop =&$this->cms->Core->GetModule($this->ownerName."_item"); $this->ILlLLLL =&$this->cms->Core->GetModule($this->ownerName."_cat"); $this->ILlLLL1 =&$this->cms->Core->GetModule($this->ownerName."_currency"); $this->ILlLL1I =&$this->cms->Core->GetModule($this->ownerName."_price_list"); $this->ILlLL1l =&$this->cms->Core->GetModule($this->ownerName.I4128); $ILl1Il1 =&$this->cms->Core->GetModule($this->ownerName."_user"); $mEshopCart =&$this->cms->Core->GetModule($this->ownerName."_cart"); $mEshopOrder =&$this->cms->Core->GetModule($this->ownerName."_order"); $ILl1ILI =Array( "eshop_home_script"=>$this->ILlLL1l->GetFrontLink(), "eshop_catalog_script"=>$this->mEshop->GetFrontLink(), "eshop_user_script"=>$ILl1Il1->GetFrontLink(), "eshop_cart_script"=>$mEshopCart->GetFrontLink(), "eshop_order_script"=>$mEshopOrder->GetFrontLink(), "eshop_final_script"=>I4129, );unset($ILl1Il1); unset($mEshopCart); $this->cms->Gui->addGlobalVars($ILl1ILI); $II1LIll =Array("dbTablePrefix", "numberDecimals", "decimalPoint", "thousandsSeparator", I4130, "itemCountersEnable", "_aApplyCalcs", "_aApplyDiscounts", "_aWithTax", I4131, "rootParentCatId", "mainRootCatId", "showDiscounts", "showDiscountsColumn", I4132, "useTotalDiscounts", "totalDiscountsArePresent", 'productsGroupedByDiscountIds', "_discountsDisabled", "_useProductsDiscountsSyncopationSum", "_useDiscountsSyncopationSum", "_discountsData", "_commonDiscountsEnabled", I4133, "shippingData", I4134 );if(!$this->TT1l11T("options", $II1LIll)) {$this->dbTablePrefix =mb_substr($this->mEshop->GetTableName(), 0, -6); $this->numberDecimals =$this->mEshop->GetOption("number_decimal_digits"); $this->decimalPoint =$this->mEshop->GetOption("decimal_point"); $this->thousandsSeparator =$this->mEshop->GetOption("thousands_separator"); $this->numberDecimalsPer =$this->mEshop->GetOption("number_decimal_percent"); $this->itemCountersEnable =$this->ILlLLLL->GetOption("item_counters_on"); $this->_aApplyCalcs =$this->TT11TI1("apply_calcs_to_fields"); $this->_aApplyDiscounts =$this->TT11TI1("apply_discount_to_fields"); $this->_aWithTax =$this->TT11TI1("show_price_with_tax"); if ($mEshopOrder->IsInstalled()) {if ($mEshopOrder->issetOption("allow_fractional_quantity")) {$this->isFractionAllowed =$mEshopOrder->GetOption("allow_fractional_quantity"); }}$ILl1ILl =$this->cms->Core->GetOption('default_ids'); $this->rootCatId =$ILl1ILl[$this->langData]; $this->rootParentCatId =0; $this->mainRootCatId =$this->rootCatId; $this->TT11lI1($ownerName); if ($this->cms->Side != "admin") {$this->_initShippingModule($ownerName); }$this->TT1l1l1("options", $II1LIll); }unset($mEshopOrder); $this->TT11TTl(); $this->TT11TII(); $this->TT11TTT(); $this->TT11TTI(); $this->ILlL1l1 =Array(); $this->ILlL1lI =false; $this->siteId =-1; }function TT1l11l($ILlL1lI, $siteId, $forceInit =false) {if($this->siteId != $siteId || $forceInit) {$this->ILlL1lI =$ILlL1lI; $this->siteId =$siteId; $this->TT1l111(); }}function TT1l111() {if(!empty($this->siteId) && $this->ILlL1lI) {$this->tree->addFilter(I4135, "c.id_site='".$this->siteId."'"); $this->tree->addFilter("is_root", "c.is_root='1'"); $this->tree->TI111TI(I4136, "searchNodeCB", $this->tree); $ILl1ILL =$this->tree->searchNode(); $this->tree->TI111Tl(I4136); $this->rootCatId =$ILl1ILL["id"]; $this->rootParentCatId =$ILl1ILL["id_parent"]; $this->tree->TI11I1I("is_root"); $this->tree->TI11IT1($this->rootCatId, $this->rootParentCatId); }}function TT11TTT() {if(!$this->ILlL1L1) {$this->tree =new TreeModel($this->cms); $this->tree->setMainTableAlias(I4137); $this->tree->TI11IIT("name", "c.name"); $this->tree->TI11IIT("price_info", "c.id_site, c.price".$this->getPriceFields(I4138).$this->getPriceFields("c.price%d").",c.price_mask,c.id_discount,c.id_shipping_type"); $this->tree->addFilter("lang", "c.lang='".$this->langData.I4139); $this->tree->TI11lIT(); }$this->tree->TI11ITl($this->dbTablePrefix."_cats c", "id_parent"); $this->tree->TI11IT1($this->rootCatId, $this->rootParentCatId); }function TT11TTI() {$II1LIll =Array("aAllowExtMods", "aUnAllowExtMods", I4140, "aAllowExtItemTypes", "mAllowExtMods", "numItemTypes", "defaultItemType"); if(!$this->TT1l11T(I4141, $II1LIll)) {$aTmp =$this->mEshop->GetOption("available_item_types"); $this->aAllowExtMods =Array(); $this->aUnAllowExtMods =Array(); $this->aPresentItemTypes =Array(); $this->aAllowExtItemTypes =Array(); $this->mAllowExtMods =Array(); $this->ILlL1I1[$this->ownerName] =array(); $index =0; foreach($aTmp as $key => $val) {if($this->cms->Core->IsInstalled($val)) {$this->mAllowExtMods[$index] =&$this->cms->Core->GetModule($val); if($this->mAllowExtMods[$index]->IssetProperty("class_name")) {$class =$this->mAllowExtMods[$index]->GetProperty("class_name"); require_once $GLOBALS['CLASSES_PATH'] .$class .I4142; $class .= ($this->cms->Core->Side == 'admin') ?'Admin': 'Front'; $this->ILlL1I1[$this->ownerName][$index] =new $class(); $this->ILlL1I1[$this->ownerName][$index]->init($this->cms, $this, $this->mAllowExtMods[$index], $val); $this->_oExtensions[$index] =&$this->ILlL1I1[$this->ownerName][$index]; $index++; $this->aAllowExtMods[] =$aTmp[$key]; $this->aAllowExtItemTypes[] =$val; }else {$this->aUnAllowExtMods[] =$aTmp[$key]; }}else {$this->aUnAllowExtMods[] =$aTmp[$key]; }}$this->numItemTypes =sizeof($this->aAllowExtMods); $this->defaultItemType =$this->mEshop->GetOption("default_item_type"); if($this->numItemTypes == 1) {$this->defaultItemType =$this->aAllowExtMods[0]; }$diff =array_diff(array (I4143, 'eshop_digitals', 'eshop_account'), $aTmp); foreach ($diff as $itemType) {if (!in_array($itemType, $this->aUnAllowExtMods)) {$this->aUnAllowExtMods[] =$itemType; }}$this->TT1l1l1(I4141, $II1LIll); }else{ if(is_array($this->ILlL1I1[$this->ownerName])){ $this->_oExtensions =array(); $indexes =array_keys($this->ILlL1I1[$this->ownerName]); $ILl1IL1 =sizeof($indexes); for($i =0; $i <$ILl1IL1; $i++){ $this->_oExtensions[$indexes[$i]] =&$this->ILlL1I1[$this->ownerName][$indexes[$i]]; }}}}function TT11TTl() {$II1LIll =Array("baseCurrency", "_baseCurrencyBackup", I4144, "_aCurrencyBackup", "currencyEnable"); if(!$this->TT1l11T("currency", $II1LIll)) {$this->baseCurrency =I4124; $this->_baseCurrencyBackup =I4124; $this->aCurrency =Array(); $this->_aCurrencyBackup =Array(); $this->currencyEnable =false; $ILl1I1I =$this->cms->Gui->getLang(); $this->cms->setLang($this->cms->lang_data); $aWords =$this->cms->Gui->ParseLangFile("templates/lang/_currency.lng"); $this->cms->setLang($ILl1I1I); $this->aCurrency[I4124] =Array( I4145 => I4124, "prefix" => $aWords["currency_pref"], "postfix" => $aWords["currency_postf"], I4146 => 1, "is_base" => false); if($this->ILlLLL1->IsInstalled()) {$sql ="SELECT id, name, code_digit, code, exchange, prefix, postfix, source, fault_attempts, is_base, on_small FROM ".$this->dbTablePrefix."_currency WHERE lang='".$this->langData."' ORDER BY code"; $this->db->query($sql); if($this->db->num_rows() >0) {$this->currencyEnable =true; while($this->db->next_record()) {$this->aCurrency[$this->db->Record[I4147]] =Array( I4145 => $this->db->Record[I4145], "code_digit" => $this->db->Record["code_digit"], "prefix" => $this->db->Record["prefix"], I4148 => $this->db->Record[I4148], I4146 => $this->db->Record[I4146], "source" => $this->db->Record["source"], "fault_attempts" => $this->db->Record["fault_attempts"], I4149 => $this->db->Record[I4149], "on_small" => $this->db->Record["on_small"], "id" => $this->db->Record["id"]); if($this->db->Record[I4149]) {$this->baseCurrency =$this->db->Record[I4147]; }}$this->TT11TT1(false, true); }}$this->TT1l1l1(I4150, $II1LIll); }}function TT11TT1($II1IllI, $force) {$aResult =Array(); require_once $GLOBALS['CLASSES_PATH'] .'CMS_CurrencyImport.php'; $this->ILlL111 =new CMS_CurrencyImport($this->cms, $this); $aCurrency =$this->aCurrency; unset($aCurrency[I4124]); $this->ILlL111->Init($aCurrency, $force); if($this->TT11TIT($II1IllI)) {$aResult =$this->ILlL111->Update($II1IllI); if (count($aResult) >0) {$numberDecimals =$this->ILlLLL1->GetOption("number_decimal_digits"); for ($i =0; $i <count($aResult); $i++) {$aTemp =$aResult[$i]; if($aTemp[I4147] != $this->baseCurrency) {if ($aTemp['success'] != 1) {$sql =I4151.$this->dbTablePrefix."_currency SET fault_attempts = '".$aTemp['fault_attempts']."' WHERE id = '".$aTemp['id'].I4139; }else {$aTemp[I4152] =FormatNumber($aTemp[I4152], $numberDecimals, $numberDecimals, true, true); $sql =I4151.$this->dbTablePrefix."_currency SET exchange = '".$aTemp[I4152]."', fault_attempts = '".$aTemp['fault_attempts']."', last_update = NOW() WHERE id = '".$aTemp[I4153].I4139; $this->aCurrency[$aTemp[I4147]][I4146] =$aTemp[I4152]; }$this->aCurrency[$aTemp[I4147]]["fault_attempts"] =$aTemp['fault_attempts']; $this->db->query($sql); }}if($this->ILlL111->II1II1l >0) {foreach(array($this->ownerName."_item", $this->ownerName.I4128, $this->ownerName."_currency") as $modName) {$ILIl1LI =$this->cms->Core->GetModProperty($modName, I4154); $this->cms->Core->Cache->ClearAdd($modName, 0, "spec_blocks_expire", $this->ILlL111->II1II1l, $ILIl1LI, $modName); }foreach(array($this->ownerName."_item", $this->ownerName.I4128, $this->ownerName."_price_list") as $modName) {$this->cms->Core->Cache->ClearAdd($modName, 0, I4124, $this->ILlL111->II1II1l, I4124, $modName); }$this->cms->Core->Cache->SetForceExpireTime($this->ownerName."_currency", $this->ILlL111->II1II1l); $this->cms->Core->Cache->SetForceExpireTime($this->ownerName.I4155, $this->ILlL111->II1II1l); }}}elseif($this->ILlLLL1->issetAndTrueOption("currency_allow_autoupdate")){ $ILl1I1l =array("success" => I4124, "timestamp" => 0, "pereod_timestamp" => 0, I4156 => 0, "type" => I4124); if($this->cms->Core->issetModOption($this->ownerName."_currency", "_currency_last_get_timestamp")){ $ILl1I1L =$this->cms->Core->GetModOption($this->ownerName."_currency", "_currency_last_get_timestamp"); if(isset($ILl1I1L[$this->langData])){ $ILl1I1l =$ILl1I1L[$this->langData]; }}if($ILl1I1l["success"] || $ILl1I1l[I4156] >= $this->cms->Core->GetModOption($this->ownerName."_currency", "update_max_attempts")){ $II1II1l =strtotime($this->cms->Core->GetModOption($this->ownerName."_currency", "currency_update_period")); }else{ $II1II1l =strtotime($this->cms->Core->GetModOption($this->ownerName."_currency", "currency_fault_update_period")); }$this->cms->Core->Cache->SetForceExpireTime($this->ownerName."_currency", $II1II1l); $this->cms->Core->Cache->SetForceExpireTime($this->ownerName.I4155, $II1II1l); }return $aResult; }function TT11TIT($II1IllI) {$result =false; if (($II1IllI == true) || (($II1IllI == false) && ($this->ILlLLL1->issetAndTrueOption("currency_allow_autoupdate")))) {list($hours, $minutes) =explode(I4157, $this->ILlLLL1->GetOption("currency_update_time")); $time =$hours *60 +$minutes; list($hours, $minutes) =explode(I4157, date("H:i", time())); $time =($hours *60 +$minutes) -$time; if (($II1IllI == true) || ($time >0)) {$II1II11 =Array(); $aData =array("success" => I4124, "timestamp" => 0, I4158 => 0, I4156 => 0, "type" => I4124); if($this->ILlLLL1->IssetOption("_currency_last_get_timestamp")) {$II1IlII =$this->ILlLLL1->GetOption("_currency_last_get_timestamp"); if(isset($II1IlII[$this->langData])){ $aData =$II1IlII[$this->langData]; }}$success =$aData['success']; if($aData[I4159] == "next_new_attempt") {$ILl1I11 =$aData['timestamp']; $diff =time() -$aData['timestamp']; $II1IlIl =strtotime($this->ILlLLL1->GetOption("currency_fault_update_period")) -time(); }else {$ILl1I11 =$aData[I4160]; $diff =time() -$aData[I4160]; $II1IlIl =strtotime($this->ILlLLL1->GetOption("currency_update_period")) -time(); }$ILl1lII =intval($ILl1I11/86400); $ILl1lIl =intval(time()/86400); if ((($II1IlIl >= 86400) && (($ILl1lIl -$ILl1lII) >= intval($II1IlIl/86400))) || (($II1IlIl -$diff) <0)) {$result =true; }else {$result =false; }$result =($result || $II1IllI); }}else {}return $result; }function TT11TII() {$II1LIll =Array("priceFields", "numPrices", "otherPricesEnabled"); if(!$this->TT1l11T(I4161, $II1LIll)) {$this->priceFields =Array(); $aOption =$this->mEshop->GetOption("extrafield_price_on"); if(is_array($aOption)) {foreach($aOption as $key => $val) {if(mb_strpos($val, "price") !== false) {$num =intval(mb_substr($val, 5)); if($num >0) {$this->priceFields[] =$num; }}}}else {if(mb_strpos($aOption, "price") !== false) {$num =intval(mb_substr($aOption, 5)); if($num >0) {$this->priceFields[] =$num; }}}$this->numPrices =sizeof($this->priceFields); $this->otherPricesEnabled =($this->numPrices >0); $this->TT1l1l1(I4161, $II1LIll); }}function TT11TIl() {if ($this->cms->Core->IsInstalled("eshop_tax_classes")) {$this->ILlL1II =$this->cms->Core->GetModOption(I4162, "tax_system"); $db =new DB_si; $this->_taxesData =array(); $this->_taxesData['tax_system'] =$this->ILlL1II; $this->ILlL1Il =array(); $sql ="SELECT * FROM cms_es_tax_classes WHERE lang='".$this->langData.I4139; $db->query($sql); while($db->next_record()) {if ($db->Record["is_default"]) {$this->ILlL1IL =$db->Record[I4163]; }$this->ILlL1Il[$db->Record[I4163]] =array( "is_default" => $db->Record["is_default"], I4145 => $db->Record[I4145], "tax_rate" => $db->Record["tax_rate"], I4164 => $db->Record[I4164], "tax_apply_type" => $db->Record["tax_apply_type"] );}if ($this->ILlL1II == 'us') {$this->_taxesData['percent'] =0; $this->_taxesData[I4165] =0; $this->_taxesData['charge_tax_type'] =$this->cms->Core->GetModOption(I4162, "charge_tax_type"); $ILl1lIL =$this->cms->VarsPost["state_custom"]; $ILl1lI1 =$this->cms->VarsPost["zip_custom"]; if (!$ILl1lI1 || !$ILl1lIL) {if (!empty($this->cms->Member)) {$ILl1llI =$this->cms->Member->getUserInfo(); $ILl1lI1 =$ILl1llI[I4166]; $ILl1lIL =$ILl1llI['state']; }}$sql ="SELECT * FROM cms_es_tax_zones WHERE lang='".$this->langData."' AND (((state = '".mysql_real_escape_string($ILl1lIL, $db->_dbLink)."' OR state = '') AND (zip = '".mysql_real_escape_string($ILl1lI1, $db->_dbLink)."' OR zip = '')) OR is_default = 1)"; $db->query($sql); $ILl1lll =array(); while($db->next_record()) {if ($db->Record[I4164] == 'percent') {if ($db->Record["is_default"]) {$ILl1lll['percent']['default'] =$db->Record[I4167]; }elseif ($ILl1lI1 && $db->Record["zip"] == $ILl1lI1) {$ILl1lll['percent'][I4166] =$db->Record[I4167]; }elseif ($ILl1lIL && $db->Record["state"] == $ILl1lIL) {$ILl1lll['percent'][I4168] =$db->Record[I4167]; }}else {if ($db->Record["is_default"]) {$ILl1lll[I4165]['default'] =$db->Record[I4167]; }elseif ($ILl1lI1 && $db->Record["zip"] == $ILl1lI1) {$ILl1lll[I4165][I4166] =$db->Record[I4167]; }elseif ($ILl1lIL && $db->Record["state"] == $ILl1lIL) {$ILl1lll[I4165][I4168] =$db->Record[I4167]; }}}if (isset($ILl1lll[I4169][I4166])) {$this->_taxesData[I4169] =$ILl1lll[I4169][I4166]; }elseif (isset($ILl1lll[I4169][I4168])) {$this->_taxesData[I4169] =$ILl1lll[I4169][I4168]; }elseif (isset($ILl1lll[I4169]['default'])) {$this->_taxesData[I4169] =$ILl1lll[I4169]['default']; }else {$this->_taxesData[I4169] =0; }if (isset($ILl1lll[I4165][I4166])) {$this->_taxesData[I4165] =$ILl1lll[I4165][I4166]; }elseif (isset($ILl1lll[I4165][I4168])) {$this->_taxesData[I4165] =$ILl1lll[I4165][I4168]; }elseif (isset($ILl1lll[I4165]['default'])) {$this->_taxesData[I4165] =$ILl1lll[I4165]['default']; }else {$this->_taxesData[I4165] =0; }}}}function setCallbackObject(&$object) {if(is_object($object)) {$this->ILlL1ll =&$object; }}function setCallbackMethod($ILl1llL, $ILl1ll1) {if($ILl1llL != I4124 && $ILl1ll1 != I4124) {$this->ILlL1lL[$ILl1llL] =$ILl1ll1; }}function TT11TI1($optionName){ $aOption =$this->mEshop->GetOption($optionName); $ILl1lLI =Array(); if(is_array($aOption)) {foreach($aOption as $key => $val) {if(mb_strpos($val, I4170) !== false) {$ILl1lLI[intval(mb_substr($val, 5))] =true; }}}else {if(mb_strpos($aOption, I4170) !== false) {$ILl1lLI[intval(mb_substr($aOption, 5))] =true; }}return $ILl1lLI; }function TT11TlT($expr) {$tmp =explode("#", $expr); $res[I4170] =isset($tmp[0]) ?$tmp[0] :null; $tmp2 =isset($tmp[1]) ?explode(I4157, $tmp[1]) :array(null, null); $res[I4150] =$tmp2[0]; $res["db_currency"] =isset($tmp2[1]) ?$tmp2[1] :null; return $res; }function issetCurrency($currCode) {$currCode =$this->TT11T1I($currCode); return isset($this->aCurrency[$currCode]); }function TT11TlI($currCode) {$res =false; $currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$res =$this->aCurrency[$currCode][I4163]; }return $res; }function getCurrencyRate($currCode) {$res =1; $currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$res =$this->aCurrency[$currCode][I4146]; }return $res; }function TT11Tll($price, $currCode, $ILl1lLl =I4124) {$currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$price *= $this->aCurrency[$currCode][I4146]; }if(isset($this->aCurrency[$ILl1lLl])) {$price /= $this->aCurrency[$ILl1lLl][I4146]; }return $price; }function getCurrencyName($currCode) {$res =false; $currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$res =$this->aCurrency[$currCode][I4145]; }return $res; }function TT11Tl1($currCode) {$res =false; $currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$res =$this->aCurrency[$currCode]["digit_code"]; }return $res; }function getCurrencyPrefix($currCode) {$res =false; $currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$res =$this->aCurrency[$currCode]["prefix"]; }return $res; }function getCurrencyPostfix($currCode) {$res =false; $currCode =$this->TT11T1I($currCode); if(isset($this->aCurrency[$currCode])) {$res =$this->aCurrency[$currCode][I4148]; }return $res; }function convertCurrency($price, $from, $to) {$from =$this->TT11T1I($from); $to =$this->TT11T1I($to); if($this->currencyEnable && $from != $to) {if(isset($this->aCurrency[$from])) {$price /= $this->aCurrency[$from][I4146]; }if(isset($this->aCurrency[$to])) {$price *= $this->aCurrency[$to][I4146]; }}return $price; }function getCurrencyList(&$result) {if($this->currencyEnable) {reset($this->aCurrency); next($this->aCurrency); while(list($code, $currency) =each($this->aCurrency)) {$this->ILlL1ll->{$this->ILlL1lL[I4171]}($result, $code, $currency); }}}function getCurrencyListCB(&$result, $code, $currency) {}function pushCurrencyData($ILl1lLL =Array(), $ILl1lL1 =I4124) {$this->_aCurrencyBackup =$this->aCurrency; $this->_baseCurrencyBackup =$this->baseCurrency; $this->aCurrency =$ILl1lLL; $this->baseCurrency =$ILl1lL1; }function TT11T1T() {$this->aCurrency =$this->_aCurrencyBackup; $this->baseCurrency =$this->_baseCurrencyBackup; }function setCurrencyData($ILl1lLL =Array(), $ILl1lL1 =I4124) {$this->aCurrency =$ILl1lLL; $this->baseCurrency =$ILl1lL1; }function TT11T1I($currCode) {if($this->currencyEnable && empty($currCode)) {$currCode =$this->baseCurrency; }return $currCode; }function getCurrencyString($price, $currency, $withHTML =true) {$res =$price; if(isset($this->aCurrency[$currency])) {$delim =($withHTML) ?"&nbsp;" :" "; $prefix =$this->aCurrency[$currency]["prefix"]; $postfix =$this->aCurrency[$currency][I4148]; $prefix .= (empty($prefix) ?I4124 :$delim); $postfix =(empty($postfix) ?I4124 :$delim).$postfix; $res =$prefix.$price.$postfix; }return $res; }function TT11T1l($price, $ILl1l1I, $cType =I4169, $chargeTaxType ="charge", $currencyRate =1, $withTax =false, $taxesData =array()) {$res =0; $tax =0; $itemData =array(); $itemData[I4172] =isset($taxesData[I4172]) ?$taxesData[I4172] :''; $itemData['id_tax_class'] =isset($taxesData['id_tax_class']) ?$taxesData['id_tax_class'] :I4173; $itemData['tax'] =$ILl1l1I; $itemData['tax_type'] =$cType; $itemData['charge_tax_type'] =$chargeTaxType; $this->calcTaxes($itemData); $ILl1l1I =$itemData['tax']; $cType =$itemData[I4174]; $chargeTaxType =$itemData['charge_tax_type']; if($chargeTaxType == "charge") {if($withTax) {if($cType == I4169) {$res =$price +$price *$ILl1l1I /100; }else {$res =$price +$ILl1l1I *$currencyRate; }}else {$res =$price; }}else {if($withTax) {$res =$price; }else {if($cType == I4169) {$c =$ILl1l1I /100; $tax =($price *$c )/($c +1); $tax =ceil($tax *1000000) /1000000; $res =$price -$tax; }else {$res =$price -$ILl1l1I *$currencyRate; }}}return $res; }function getTax($cVal, $ILl1l1I, $cType =I4169, $currencyRate =1) {$res =0; if($cType == I4169) {$res =$cVal *$ILl1l1I /100; $res =ceil($res *10000) /10000; }else {$res =$ILl1l1I *$currencyRate; }return $res; }public function TT11T11($discount, $discountType, $validity=0){ $this->ILlLLLl =array( 'discount' => $discount, 'discountType' => $discountType, I4175 => $validity, 'is_applied' => false, );}public function TT11ITT(){ return $this->ILlLLLl; }function TT11ITI($cVal, $ILl1l1I, $cType =I4169, $currencyRate =1, $cCustom =false) {$qty =empty($cCustom['qty']) ?1 :$cCustom['qty']; $ILl1l1l =$this->getTax($cVal, $ILl1l1I, $cType, $currencyRate); $ILl1l1L =array ('product' => $ILl1l1l *$qty, I4176 => $qty );if ($this->_discountsDisabled || !is_array($cCustom)) {return ($cVal -$ILl1l1l) *$qty; }$id_discount =isset($cCustom["id_discount"]) ?intval($cCustom["id_discount"]) :0; if ($this->_commonDiscountsEnabled) {$ILl1l11 =$this->_discountsData["global"]; $ILl1LII =$id_discount >0 && isset($this->_discountsData["categories"][$id_discount]) ?$this->_discountsData[I4177][$id_discount] :null; if (!is_null($ILl1l11)) {$ILl1l1L['global'] =$this->getTax($cVal, $ILl1l11["amount"], $ILl1l11[I4159], $currencyRate) *$qty; if (($ma =$ILl1l11["max_amount"] *$qty) != 0 && $ILl1l11[I4159] == I4169 && $ILl1l1L['global'] >= $ma) {$ILl1l1L[I4178] =$ma; }}if (!is_null($ILl1LII)) {$ILl1l1L['category'] =$this->getTax($cVal, $ILl1LII["amount"], $ILl1LII[I4159], $currencyRate) *$qty; if (($ma =$ILl1LII["max_amount"] *$qty) != 0 && $ILl1LII[I4159] == I4169 && $ILl1l1L['category'] >= $ma) {$ILl1l1L[I4179] =$ma; }}}$ILl1LIl =$id_discount == 0 || !isset($cCustom["qty"]) || !isset($this->_discountsData["others"][$id_discount]) || !is_array($this->productsGroupedByDiscountIds); if ($ILl1LIl && empty($cCustom['personal_discount']) ){return $this->TT11ITl($cVal, $currencyRate, $ILl1l1L); }if(!empty($cCustom['personal_discount'])){ $ILl1l1L[I4180] =$cCustom['personal_discount']; }if($ILl1LIl){ return $this->TT11ITl($cVal, $currencyRate, $ILl1l1L); }$this->totalDiscountsArePresent =true; if (!$this->useTotalDiscounts) {return $this->TT11ITl($cVal, $currencyRate, $ILl1l1L); }$discounts =$this->_discountsData["others"][$id_discount]; $ILl1LIL =array ();foreach ($discounts as $discount) {$ILl1LIL[] =$discount[I4153]; }$field =in_array($discounts[0]["condition"], array('total', I4181)) ?"max_total" :"max_items_count"; $ILl1LI1 =1; if (is_array($this->productsGroupedByDiscountIds[$id_discount])) {$value =0; $ILl1LlI =-1; $ILl1Lll =0; foreach ($this->productsGroupedByDiscountIds[$id_discount]['base_currency_price'] as $index => $price) {$q =$this->productsGroupedByDiscountIds[$id_discount][I4176][$index]; $p =$price *$q; if ($p >$ILl1Lll) {$ILl1LlI =$this->productsGroupedByDiscountIds[$id_discount]['index'][$index]; $ILl1Lll =$p; $ILl1LI1 =$q; }$value += ($field == I4182 ?$p :$q); }}$ILl1LlL =false; $ILl1Ll1 =false; $ILl1LLI =false; $ILl1LLl =false; $ILl1LLL =false; foreach ($discounts as $key => $discount) {$kind =$discount['kind']; $ILl1LL1 =$discount['kind'] == 'single'; $ILl1L1I =$discount['kind'] == I4183; if($ILl1L1I){ $value =0; $period =$discount['period']; $ILl1L1l =new DateTime("-$period days"); $ILl1L1L ="confirmed','shipped','delivered"; $memberId =(int)$this->cms->Member->getUserInfo(I4153); if($field == "max_total"){ $sql ="SELECT SUM(o.total) AS value FROM ".$this->dbTablePrefix.I4184. "WHERE o.order_date>'".$ILl1L1l->format('Y-m-d H:i:s') ."' AND o.id_member=".$memberId ." AND o.status IN ('".$ILl1L1L.I4185; }else {$sql ="SELECT count(*) AS value FROM ".$this->dbTablePrefix.I4184. "WHERE o.order_date>'".$ILl1L1l->format('Y-m-d H:i:s') ."' AND o.id_member=".$memberId ." AND o.status IN ('".$ILl1L1L.I4185; }$this->db->query($sql); if($this->db->next_record()) {$value =$this->db->Record["value"]; }if($discount['apply_to'] == 'user'){ if($field == "max_total"){ $value += $qty *$cVal; }else{ $value++; }}$discount[I4159] =I4169; }if ($ILl1L1I ?($key >0 ?$value >= $discounts[$key -1][$field] && (is_null($discount[$field]) ?true :$value <$discount[$field]) :$value >= 0 && (is_null($discount[$field]) ?true :$value <$discount[$field])) :($id_discount == $this->cms->Member->Cart->couponDiscountParentId && $discount[I4153] == $this->cms->Member->Cart->couponDiscountId) ){$ILl1LLI =true; $ILl1l1L[$kind] =$this->getTax($cVal, $discount[I4186], $discount[I4159], $currencyRate) *$qty; $ILl1l1L[I4159] =$discount[I4159]; $ILl1l1L['apply_to'] =$discount['apply_to']; $ILl1l1L['amount'] =$discount['amount']; $ILl1l1L[I4175] =$discount[I4175]; if (($ma =$discount[I4187] *$qty) != 0 && $discount[I4159] == "percent") {$ILl1l1L[$kind] =min($ILl1l1L[$kind], $ma); }}if ($ILl1LL1 ?($key >0 ?$value >= $discounts[$key -1][$field] && (is_null($discount[$field]) ?true :$value <$discount[$field]) :$value >= 0 && (is_null($discount[$field]) ?true :$value <$discount[$field])) :($id_discount == $this->cms->Member->Cart->couponDiscountParentId && $discount[I4153] == $this->cms->Member->Cart->couponDiscountId) ){if (($discount['type'] == I4165 && $ILl1LlI != $cCustom['index']) || ($ILl1LlL && $ILl1LL1) ){continue; }$ILl1LlL |= $ILl1LL1; $ILl1LLI =true; $ILl1l1L[$kind] =$this->getTax($cVal, $discount[I4186], $discount[I4159], $currencyRate) *$qty; if($ILl1LL1 && $discount['type'] == I4165 && $qty >1){ $ILl1LLL =true; }$ILl1l1L[I4159] =$discount[I4159]; $ILl1l1L[I4188] =$discount[I4188]; $ILl1l1L['amount'] =$discount['amount']; $ILl1l1L[I4175] =$discount[I4175]; if (($ma =$discount[I4187] *$qty) != 0 && $discount[I4159] == "percent") {$ILl1l1L[$kind] =min($ILl1l1L[$kind], $ma); }}}if($ILl1LLL){ $ILl1l1L['single'] =$ILl1l1L[I4189] /$qty; }if($ILl1l1L[I4188] == 'user'){ $ILl1L11 =$ILl1l1L[$kind]; if($ILl1l1L[I4159]==I4169) $ILl1L11 =$ILl1l1L['amount']; if($ILl1l1L[I4159]==I4169){ if($ILl1l1L[I4180]['amount'] <$ILl1l1L['amount']){ $this->TT11T11($ILl1L11, $ILl1l1L[I4159], $ILl1l1L[I4175]); }$ILl1l1L[$kind] =0; }if($ILl1l1L[I4159]==I4165){ $ILl1L11 =$ILl1l1L[$kind]; $validity =$ILl1l1L[I4175]; unset($ILl1l1L[I4175]); unset($ILl1l1L[I4190]); $ILl11II =$this->TT11ITl($cVal, $currencyRate, $ILl1l1L); $ILl1l1L[$kind] =0; $ILl11Il =$this->TT11ITl($cVal, $currencyRate, $ILl1l1L); unset($ILl1l1L[I4180]); $ILl11IL =$this->TT11ITl($cVal, $currencyRate, $ILl1l1L); if ($this->_useDiscountsSyncopationSum) {$this->TT11T11($ILl1L11, $ILl1l1L[I4159], $validity); return $ILl11Il; }else {if($ILl11II <$ILl11Il){ $this->TT11T11($ILl1L11, $ILl1l1L[I4159], $validity); return $ILl11IL; }else {return $ILl11Il; }}}}return $this->TT11ITl($cVal, $currencyRate, $ILl1l1L); }function TT11ITl($cVal, $currencyRate, $discounts){ $discount =0; $ILl11I1 =$discounts['product']; $qty =$discounts[I4176]; if(!empty($discounts[I4180])){ $ILII11I =strtotime($discounts[I4180]['exp_date']); $ILII11I =AMI_Lib_Date::formatDateTime($ILII11I, AMI_Lib_Date::FMT_DATE, TRUE); $now =date(AMI_Lib_Date::getFormat(AMI_Lib_Date::FMT_DATE)); $now =AMI_Lib_Date::formatDateTime($now, AMI_Lib_Date::FMT_DATE, TRUE); if($ILII11I <$now){ unset($discounts[I4180]); }}$personalDiscount =empty($discounts[I4180]) ?0 :(double)($cVal *$qty *$discounts[I4180][I4190] /100); unset($discounts['product'], $discounts[I4176], $discounts[I4180]); if ($this->_useDiscountsSyncopationSum) {unset($discounts[I4175]); unset($discounts[I4190]); $discounts['personal_discount'] =$personalDiscount; $discount =array_sum($discounts); $this->ILl1IIL =isset($discounts[I4191]); }elseif($s =sizeof($discounts)){ arsort($discounts); reset($discounts); list ($IIlLIL1, $IIlLI1I) =each ($discounts); if($s >1){ list (,$IlLILI1) =each ($discounts); }$discount =$discounts[$IIlLIL1]; if($IIlLIL1 == I4191){ $this->ILl1IIL =($IIlLIL1 == I4191 && $IIlLI1I != $IlLILI1); }}$result =$cVal *$qty -$this->getTax( $cVal, $this->_useProductsDiscountsSyncopationSum ?$ILl11I1 +$personalDiscount +$discount :max($ILl11I1, $personalDiscount, $discount), I4165, $currencyRate );if($result <0){ $result =0; }$aEvent =array( 'value' => $cVal, 'currencyRate' => $currencyRate, 'aDiscounts' => $discounts, 'result' => &$result );AMI_Event::fire('v5_on_eshop_calc_discount', $aEvent, AMI_Event::MOD_ANY); return $result; }function calcPrice($price, $priceNum, $tax, $taxType, $chargeTaxType, $discount, $discountType, $currency =I4124, $dbCurrency =I4124, $addCurrency =true, $cCustom =false, $taxesData =array()) {$res =Array(); $res["price_zero"] =false; $ILl11lI =$price; if($ILl11lI.I4124 != I4124) {$ILl11ll =1; if(isset($this->aCurrency[$dbCurrency])) {$ILl11ll =$this->aCurrency[$dbCurrency][I4146]; $price =$price /$ILl11ll; }$ILl11lI =$price; $currencyRate =1; $currency =$this->TT11T1I($currency); $dbCurrency =$this->TT11T1I($dbCurrency); if(isset($this->aCurrency[$currency])) {$currencyRate =$this->aCurrency[$currency][I4146]; }$ILl11lI *= $currencyRate; $res["originalNotFormattedPrice"] =$ILl11lI; $res["price_null"] =false; $priceWithTax =$this->priceWithTax($priceNum); if($this->isApplyCalcs($priceNum)) {if($this->TT11II1($priceNum)) {$qty =empty($cCustom[I4176]) ?1 :$cCustom[I4176]; $originalPrice =$ILl11lI; $ILl11lL =$this->TT11ITI($price, $discount, $discountType, 1, $cCustom); $ILl11lI =$ILl11lL *$currencyRate /$qty; $originalPrice =$this->formatNumber($originalPrice, true, true); $ILl11lI =$this->formatNumber($ILl11lI, true, true); $originalPrice =$this->TT11T1l($originalPrice, $tax, $taxType, $chargeTaxType, $currencyRate, $priceWithTax, $taxesData); $ILl11lI =$this->TT11T1l($ILl11lI, $tax, $taxType, $chargeTaxType, $currencyRate, $priceWithTax, $taxesData); $ILl11l1 =$ILl11lI; $originalPrice =$this->formatNumber($originalPrice, true, true); $ILl11lI =$this->formatNumber($ILl11lI, true, true); $res["difference"] =0; if($ILl11lL != $price) {$ILl11LI =$price *$qty -$ILl11lL; if($originalPrice != 0) {$percent =100 -(100 *$ILl11lL) /$price /$qty; if ($percent >100) {$percent =100; }}else {$percent =0; }$res[I4192] =$this->formatPercent($percent, false); $res["original"] =$this->formatNumber($originalPrice, true, false); $res["difference"] =$this->formatNumber($ILl11LI *$currencyRate, true, false); $res["bc_difference"] =$ILl11LI; if($addCurrency) {$res["original"] =$this->getCurrencyString($res[I4193], $currency); $res["difference"] =$this->getCurrencyString($res["difference"], $currency); }else {$res[I4193] =$this->formatNumber($originalPrice, true, false); $dp =$this->formatNumber($ILl11LI, true, true); $dp =$this->TT11T1l($dp, $tax, $taxType, $chargeTaxType, $currencyRate, $priceWithTax, $taxesData); $dp =$this->formatNumber($dp, true, true); $res["difference"] =$this->formatNumber($dp, true, false); }}}else {$ILl11lI =$this->TT11T1l($ILl11lI, $tax, $taxType, $chargeTaxType, $currencyRate, $priceWithTax, $taxesData); $ILl11l1 =$ILl11lI; $ILl11lI =$this->formatNumber($ILl11lI, true, true); }}else {$ILl11l1 =$ILl11lI; $ILl11lI =$this->formatNumber($ILl11lI, true, true); }if($ILl11lI == 0) {$res["price_zero"] =true; }$res[I4194] =$ILl11lI; }else {$res["price_null"] =true; $res[I4194] =0; }if($addCurrency) {$res[I4170] =$this->formatMoney($ILl11lI, $currency); }else {$res[I4170] =$this->formatNumber($ILl11lI, true, false); }$res["price_exact_value"] =isset($ILl11l1) ?$ILl11l1 :null; $aEvent =array( 'aData' => &$res );AMI_Event::fire('v5_on_eshop_calc_price', $aEvent, AMI_Event::MOD_ANY); return $res; }function calcTaxes(&$aData) {if ($aData[I4172] == I4195) {}elseif ($this->ILlL1II == 'us' && $aData["tax_class_type"] == "taxable") {$aData['tax'] =$this->_taxesData[I4169]; $aData[I4174] =I4169; $aData[I4196] =$this->_taxesData[I4196]; }elseif ($this->ILlL1II == 'us' && $taxesData["tax_class_type"] == "non_taxable") {$aData['tax'] =0; $aData[I4174] =I4169; $aData[I4196] =I4197; }elseif ($aData["tax_class_type"] == "taxable" || $aData["tax_class_type"] == "taxable_class") {if (isset($this->ILlL1Il[$aData[I4198]])) {$aData['tax'] =$this->ILlL1Il[$aData[I4198]]['tax_rate']; $aData[I4174] =$this->ILlL1Il[$aData[I4198]][I4174]; $aData[I4196] =$this->ILlL1Il[$aData[I4198]]['tax_apply_type']; }else {$aData['tax'] =$this->ILlL1Il[$this->ILlL1IL][I4199]; $aData[I4174] =$this->ILlL1Il[$this->ILlL1IL][I4174]; $aData[I4196] =$this->ILlL1Il[$this->ILlL1IL]['tax_apply_type']; }}elseif ($aData["tax_class_type"] == "non_taxable") {$aData['tax'] =0; }else {$aData[I4200] =empty($aData[I4200]) ?0 :$aData[I4200]; $aData[I4174] =empty($aData[I4174]) ?I4169 :$aData[I4174]; $aData[I4196] =empty($aData[I4196]) ?I4197 :$aData[I4196]; }$aEvent =array( 'aData' => &$aData );AMI_Event::fire('v5_on_eshop_calc_tax', $aEvent, AMI_Event::MOD_ANY); return true; }function setForceTaxOff() {$this->ILlLL1L =true; }function resetForceTaxOff() {$this->ILlLL1L =false; }function setForceTaxOn() {$this->ILlLL11 =true; }function resetForceTaxOn() {$this->ILlLL11 =false; }function issetPrice($numPrice) {return in_array($numPrice, $this->priceFields); }function getPriceFields($format ="%d", $delim =",", $prefix =I4201, $postfix =I4124, $replString ="%d") {return $this->TT11IT1($format, $delim, $prefix, $postfix, $replString); }function TT11IT1($format, $delim, $prefix, $postfix, $replString) {$aRes =Array(); $res =I4124; if($this->otherPricesEnabled) {if(!empty($tablePrefix)) {$tablePrefix .= "."; }for($i=0;$i<$this->numPrices ;$i++) {$aRes[] =str_replace($replString, $this->priceFields[$i], $format); }if(sizeof($aRes) >0) {$res =$prefix.implode($delim, $aRes).$postfix; }}return $res; }function TT11IIT($namePrefix, &$aValues) {return $this->TT11IIl("price_caption", $namePrefix, $aValues); }function TT11III($namePrefix, &$aValues) {return $this->TT11IIl(I4170, $namePrefix, $aValues); }function TT11IIl($fieldName, $namePrefix, &$aValues) {$res =Array(); for($i=0;$i<$this->numPrices ;$i++) {$res[$fieldName.$this->priceFields[$i]] =$aValues[$fieldName.$this->priceFields[$i]]; }return $res; }function isApplyCalcs($priceNum) {return isset($this->_aApplyCalcs[$priceNum]); }function TT11II1($priceNum) {return isset($this->_aApplyDiscounts[$priceNum]); }function priceWithTax($priceNum) {return ((!$this->ILlLL1L && isset($this->_aWithTax[$priceNum])) || $this->ILlLL11); }function formatNumber($cVal, $onlyPositive =true, $forCalc =false) {if($forCalc) {$delim =I4124; $decimalPoint ="."; }else {$delim =$this->thousandsSeparator; $decimalPoint =$this->decimalPoint; }if($onlyPositive) {$res =number_format(max(0, round($cVal, $this->numberDecimals)), $this->numberDecimals, $decimalPoint, $delim); }else {$res =number_format(round($cVal, $this->numberDecimals), $this->numberDecimals, $decimalPoint, $delim); }return $res; }function formatPercent($cVal, $onlyPositive =true, $addSign =false) {if($onlyPositive) {$res =number_format(max(0, round($cVal, $this->numberDecimalsPer)), $this->numberDecimalsPer, I4202, I4173); }else {$res =number_format(round($cVal, $this->numberDecimalsPer), $this->numberDecimalsPer, I4202, I4173); }if($addSign) {$res .= "&nbsp;%"; }return $res; }function TT11IlT($cVal, $cType =I4192, $addSign =true, $currencyFrom =I4124, $currencyTo =I4124) {if($cType == I4192) {$cVal =$this->formatPercent($cVal, false, true); }else {$cVal =$this->convertCurrency($cVal, $currencyFrom, $currencyTo); $cVal =$this->formatNumber($cVal); if($addSign) {$cVal =$this->getCurrencyString($cVal, $currencyTo); }}return $cVal; }function formatTax($cVal, $currency, $cType =I4192) {if($cType == I4169) {if(floor($cVal) == $cVal) {$res =floor($cVal); }else {$res =$cVal; }$res .= "%"; }else {if($cVal.I4124 != I4124) {$cVal =$this->formatNumber($cVal); }$res =$this->getCurrencyString($cVal, $currency); }return $res; }function formatMoney($cVal, $currency, $withHTML =true, $onlyPositive =true) {$res =I4124; if($cVal.I4124 != I4124) {$cVal =$this->formatNumber($cVal, $onlyPositive); $res =$this->getCurrencyString($cVal, $currency, $withHTML); }return $res; }function TT11IlI($exp, $ILl11Ll ='price', $keyName ='$prices') {$format =mb_strtolower($exp); $res =Array(); $format =str_replace(I4203, I4173, $format); $format =str_replace($ILl11Ll, I4203, $format); $format =preg_replace('/[^#0-9+()*\/.-]+/i', I4173, $format); $res['js'] =str_replace(I4203, $ILl11Ll, $format); $res['mysql'] =$format; $aPriceFields =$this->priceFields; arsort($aPriceFields); foreach($aPriceFields as $i=>$tmp) {$res['mysql'] =str_replace(I4203.$this->priceFields[$i], I4204.$ILl11Ll.$this->priceFields[$i].", 0)", $res['mysql']); $format =str_replace(I4203.$this->priceFields[$i], $keyName.'['.$this->priceFields[$i].']', $format); }$res[I4205] =str_replace(I4203, $keyName.'[0]', $format); $res['mysql'] =str_replace(I4203, I4204.$ILl11Ll.", 0)", $res['mysql']); return $res; }function TT11Ill(&$ILl11LL, &$aOrders) {$res =Array(); foreach($ILl11LL as $key=>$value) {if(sizeof($value) == 0) {unset($ILl11LL[$key]); $aOrders[] =$key; $res[] =$key; }}return $res; }function TT11Il1(&$aPrices, &$aOrders) {$aOrders =Array(); $ILl11LL =Array(); $error =false; $aPrices =Array(0=>0) +$aPrices; foreach($aPrices as $key => $value) {$pos =mb_strpos($value, I4206); $ILl11LL[$key] =Array(); while($pos !== false) {$value =mb_substr($value, $pos +7); $ILl11LL[$key][intval($value)] =true; $pos =mb_strpos($value, I4206); }}while(true) {$ILl11L1 =$this->TT11Ill($ILl11LL, $aOrders); if(sizeof($ILl11L1) >0) {if(sizeof($ILl11LL) >0) {foreach($ILl11LL as $key => $val) {foreach($ILl11L1 as $Ill1LlI => $ILl111I) {if(isset($ILl11LL[$key][$ILl111I])) {unset($ILl11LL[$key][$ILl111I]); }}}}else {break; }}else {if(sizeof($ILl11LL) >0) {$error =true; }else {break; }}}return !$error; }function TT11I1T($catId) {$res =0; if($catId >0) {$sql ="SELECT count(*) AS count_public_childs FROM ".$this->dbTablePrefix."_items i ". "WHERE i.public=1 AND i.id_category='".$catId.I4139; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record["count_public_childs"]; }}return $res; }function TT11I1I($II11LIl =I4207, $II11LIL ="all", $aItem =I4124) {$II11LlI =I4124; $II11Lll =I4124; $II11LLI =Array(); if(!is_array($II11LIl)) {$II11LIl =Array("public" => $II11LIl, "all" => $II11LIl); }if($II11LIl["public"] == I4207 || $II11LIl[I4208] == "-") {$II11Lll =$aItem["count_public_childs"]; }if($II11LIl["all"] == I4207 || $II11LIl["all"] == I4209) {$II11LlI =$aItem["count_childs"]; }switch($II11LIL) {case "all": $II11LLI["count_childs"] ="=|count_childs".$II11LIl[I4210].$II11LlI; break; case "both": $II11LLI["count_childs"] ="=|count_childs".$II11LIl[I4210].$II11LlI; $II11LLI["count_public_childs"] ="=|count_public_childs".$II11LIl[I4208].$II11Lll; break; case I4208: $II11LLI["count_public_childs"] ="=|count_public_childs".$II11LIl[I4208].$II11Lll; break; }return $II11LLI; }function addItem($cId, $ILl111l, $ILl111L, $ILl1111) {$aSql =Array(); $this->TTT1lI1("after_add", $cId, $aSql, $this->oEshop->NONE); if(sizeof($aSql) >0) {$sql =$this->db->GenUpdateSQL(I4124.$this->dbTablePrefix."_items", $aSql, I4211.$cId.I4139); $this->db->query($sql); }if($this->itemCountersEnable) {$aSql =$this->TT11I1I("+1", ($ILl111L && $ILl1111) ?"both" :I4210); $this->TT11I1l(); $this->tree->TI11l11($ILl111l, $aSql, true); $this->TT11I11(); }}function PrepareItemData($action, $ILLIIII, $aSql, $ILLIIIl, $cId =0, $ILLIIIL =false, $keepItemCatId =false) {$res =Array(); $aTmp =Array(); $udate =DateTools::getCorrectUDate($this->cms->VarsPost["date"], $this->cms->DFMT["conf"]); $ILLIIII += array( I4212 => NULL, 'sublink' => NULL, 'public' => NULL, 'cat' => NULL, I4200 => NULL, I4174 => NULL, 'shipping' => NULL, I4213 => NULL, 'discount ' => NULL, 'discount_type' => NULL, 'price' => NULL, 'item_type' => NULL );$name =$ILLIIII[I4145]; $sku =$ILLIIII[I4214]; $sublink =$ILLIIII["sublink"]; $public =intval($ILLIIII[I4208]); $allowFloat =$this->isFractionAllowed; if ($allowFloat) {$ILLIII1 =intval($ILLIIII["allow_fraction"]); }else {$ILLIII1 =0; $ILLIIlI =0; }$catId =intval($ILLIIII["cat"]); if(empty($catId)) {$catId =$this->rootCatId; }$tax =max(0,doubleval($ILLIIII["tax"])); $taxType =$ILLIIII[I4164]; if($taxType == I4169) {$tax =min(100, $tax); }$chargeTaxType =$ILLIIII[I4215]; if($chargeTaxType != "charge" && $chargeTaxType != "detach") {$chargeTaxType="charge"; }$shipping =max(0,doubleval($ILLIIII["shipping"])); $ILLIIll =$ILLIIII[I4216]; if($ILLIIll == I4169) {$shipping =min(100, $shipping); }$discountType =$ILLIIII["discount_type"]; $discount =max(0,doubleval($ILLIIII["discount"])); if($discountType == I4169) {$discount =min(100, $discount); }$catName =$ILLIIII["catname"]; $parentPublic =false; $ILLIIlL =false; $ILLIIl1 =false; $siteId =-1; $aPrices =Array(); $price =str_replace(I4201, ".", $ILLIIII[I4170]); if(trim($price) != I4124) {$price =doubleval($price); }else {$price =I4217; }if(($name !== I4124) && ($catId >= 0) && ($price >= 0 || $price == I4217)) {if ($action == "apply" && $keepItemCatId){ $sql ="SELECT id_category FROM ".$this->dbTablePrefix."_items WHERE id='".$cId."' AND lang='".$this->langData.I4139; $this->db->query($sql); if($this->db->next_record()) {$catId =$this->db->Record[I4218]; $catName =I4124; }}$aTmp["parentsID"] =I4124; if(!empty($catName)) {$sql ="SELECT id FROM ".$this->dbTablePrefix."_cats WHERE name='".$catName."' AND id_parent='".$catId.I4219.$this->langData.I4139; $this->db->query($sql); $this->db->next_record(); $cat =$this->db->Record[I4163]; $ILLIILI =false; if(empty($cat)) {$sql ="SELECT id, id_site, public, allow_fraction, price".$this->getPriceFields("price%d, price_caption%d").", dataset_id, dataset_data, all_parents FROM ".$this->dbTablePrefix."_cats WHERE id='".$catId.I4219.$this->langData.I4139; $this->db->query($sql); if($this->db->next_record()) {$ILLIIlL =true; $parentPublic =$this->db->Record[I4208]; $ILLIIl1 =true; $siteId =$this->db->Record[I4220]; $aTmp["parentsID"] =$this->db->Record["all_parents"].$catId; $asql =Array( I4145=>$catName, I4208=>$parentPublic, I4170=>$this->db->Record[I4170], "description"=>I4124, "id_parent"=>$catId, I4221=>$this->langData, "dataset_id"=>$this->db->Record["dataset_id"], "dataset_data"=>addslashes($this->db->Record["dataset_data"]), I4220=>$siteId, I4222 => $aTmp["parentsID"].I4201 );if ($this->cms->Core->IsInstalled($this->ownerName .'_shipping_methods')) {$asql['id_shipping_type'] =$this->TT11llT(); }$aPrices =$this->TT11III(I4170, $this->db->Record); $asql += $aPrices; $asql += $this->TT11IIT("price_caption", $this->db->Record); $this->ILlLLLL->PushPager($this->cms->Pager); $this->ILlLLLL->InitPager($this->cms->Pager); $asql[I4223] =TlT1Ill($this->db, $this->dbTablePrefix."_cats"); $sql =$this->db->GenInsertSQL($this->dbTablePrefix."_cats", $asql); $this->db->query($sql); $this->ILlLLLL->PopPager($this->cms->Pager); $this->ILlLLLL->TTlITlT(); $catId =$this->db->lastInsertId(); $aTmp["parentsID"] =mb_substr($aTmp["parentsID"], 1); $ILLIILI =true; }else {$catId =I4124; }}else {$catId =$cat; }}$ILLIILl =true; if($ILLIIIl && $sku != I4124) {$sql ="SELECT id, name FROM ".$this->dbTablePrefix."_items WHERE id<>'".$cId."' AND sku='".$sku.I4219.$this->langData."' limit 1"; $this->db->query($sql); if($this->db->next_record()) {$ILLIILl =false; $this->cms->AddStatusMsg("status_item_".$action.I4224, "red", I4124, "[".$this->db->Record[I4145]."]", Array(I4214=>$sku)); $sku =I4124; }}if(!$ILLIIlL || ($this->ILlL1lI >0 && $siteId == -1)) {$sql ="SELECT id, id_site, public, all_parents, price".$this->getPriceFields("price%d, price_caption%d")." FROM ".$this->dbTablePrefix."_cats WHERE id='".$catId.I4219.$this->langData.I4139; $siteId =0; $this->db->query($sql); if($this->db->next_record()) {$ILLIIlL =true; $parentPublic =$this->db->Record[I4208]; $siteId =$this->db->Record[I4220]; $aPrices =$this->TT11III(I4170, $this->db->Record); $aTmp["parentsID"] =$this->db->Record[I4222]; $len =mb_strlen($aTmp["parentsID"]); $aTmp[I4225] =trim(mb_substr($aTmp[I4225], 1, $len -2) .',' .$catId, ','); }}if(isset($ILLIIII['on_special']) && is_array($ILLIIII['on_special'])){ $ILLIILL =0; foreach($ILLIIII[I4226] as $ILLIIL1 => $value) {$ILLIILL =($ILLIILL |intval($value)); }$ILLIIII[I4226] =$ILLIILL; }$aFields =array ("announce", "special_announce", "description", I4226, "rest", I4227, "size"); if (in_array('ext_images', $this->mEshop->GetOption('extensions')) and is_array($this->mEshop->GetOption('item_pictures'))){ $aFields += $this->mEshop->GetOption(I4228); }TlT1IIT($aFields, $ILLIIII, $aSql, ($action == "apply")); $aSql[I4220] =$siteId; if(empty($this->cms->VarsPost['from_60']) || AMI_Skin::isModuleSpecialMode('eshop_item')){ $aSql["date"] =DateTools::toMysqlDate($udate); }$aSql[I4145] =$name; $aSql[I4218] =$catId; if(isset($ILLIIII[I4226]) || !empty($ILLIIII[I4229])) {$aSql[I4226] =isset($ILLIIII[I4226]) ?intval($ILLIIII[I4226]) :0; }$aSql[I4208] =$public; $aSql["allow_fraction"] =$ILLIII1; if(isset($ILLIIII[I4170])) {$aSql[I4170] =$price; }if(isset($ILLIIII["tax"])){ $aSql["tax"] =$tax; $aSql[I4164] =$taxType; $aSql[I4215] =$chargeTaxType; }if(isset($ILLIIII["shipping"])){ $aSql[I4230] =$shipping; $aSql[I4216] =$ILLIIll; }if(isset($ILLIIII["discount"])){ $aSql["discount"] =$discount; $aSql["discount_type"] =$discountType; }if(isset($ILLIIII["id_external"])) {$aSql[I4231] =$ILLIIII[I4231]; }if($ILLIILl) {$aSql[I4214] =$sku; }$ILLII1I =0; $one =1; $ILLII1l =Array(); $prices =Array(0=>$price); for($i=0;$i<$this->numPrices;$i++) {$numPrice =$this->priceFields[$i]; $ILLII1L =$this->TT11TlT($aPrices[I4170.$numPrice]); $aPrices[I4170.$numPrice] =$ILLII1L[I4170]; if(!empty($ILLIIII["price_checkbox".$numPrice])) {$ILLII1I += $one << ($numPrice -1); $ILLII1l[$numPrice] =$aPrices[I4170.$numPrice]; $prices[$numPrice] =0; }else {$aPrices[I4170.$numPrice] =doubleval(str_replace(I4201, ".", $ILLIIII[I4170.$numPrice])); if(!empty($ILLII1L["db_currency"])) {}else {if(!empty($ILLII1L[I4150])) {$aPrices[I4170.$numPrice] /= $this->getCurrencyRate($ILLII1L[I4150]); }}$prices[$numPrice] =$aPrices[I4170.$numPrice]; }$ILLII11 =$this->TT11IlI($aPrices[I4170.$numPrice]); $ILLII1l[$numPrice] =$ILLII11["php"]; }$aSql[I4232] =$ILLII1I; if($action == "apply") {if($this->TT11Il1($ILLII1l, $aOrders)) {$one =1; foreach($aOrders as $index => $numPrice) {if(empty($numPrice)) {continue; }$ILLIlII =$numPrice -1; if($aPrices[I4170.$numPrice] == I4124) {$aSql[I4170.$numPrice] =I4217; }elseif(is_numeric($aPrices[I4170.$numPrice])) {$aSql[I4170.$numPrice] ="=|".$aPrices[I4170.$numPrice]; }else {$aSql[I4170.$numPrice] ="=|".$aPrices[I4170.$numPrice]; }}}}else {foreach($ILLII1l as $numPrice => $priceValue) {if($aPrices[I4170.$numPrice] == I4124) {$aSql[I4170.$numPrice] =I4217; }elseif(is_numeric($aPrices[I4170.$numPrice])) {$aSql[I4170.$numPrice] =$aPrices[I4170.$numPrice]; }else {$evalRes =false; $res =@eval('$evalRes='.I4233.$ILLII1l[$numPrice].";"); if($evalRes!==false) {$aSql[I4170.$numPrice] =$evalRes; }}}}$this->TTT1lI1("before_".$action, $cId, $aSql, $this->NONE); $aTmp[I4208] =$public; $aTmp["parentPublic"] =$parentPublic; if($action == "apply") {$isNeedRecalcPropData =false; $aTmp[I4234] =false; $aTmp["oldCatId"] =$catId; $aTmp["oldPublic"] =false; $aTmp["oldParentPublic"] =false; $sql ="SELECT c.id, c.public AS cat_public, i.public FROM ".$this->dbTablePrefix."_items i INNER JOIN ".$this->dbTablePrefix."_cats c ON i.id_category=c.id WHERE i.id = '".$cId.I4139; $this->db->query($sql); if($this->db->next_record()) {$aTmp["oldCatId"] =$this->db->Record[I4163]; $aTmp["oldParentPublic"] =$this->db->Record["cat_public"]; $aTmp[I4235] =$this->db->Record[I4208]; if($aTmp["oldCatId"] != $catId) {$aTmp[I4234] =true; }}$ILLIlIl =Array(); $ILLIlIL =false; foreach(Array(I4170, I4227, "size") as $field) {if(isset($aSql[$field])) {$ILLIlIl[$field] =$aSql[$field]; $ILLIlIL =true; }}if($ILLIIIL || $ILLIlIL){ $sql ="SELECT i.id, i.price, i.weight, i.size"; if($ILLIIIL){ $sql .= ", i.public as i_pub, i.letter as i_letter, c.public as c_pub FROM ".$this->dbTablePrefix."_items i LEFT JOIN ".$this->dbTablePrefix."_cats c ON i.id_category=c.id"; }else {$sql .= " FROM ".$this->dbTablePrefix."_items i"; $aTmp["recWasPub"] =false; $aTmp[I4236] =I4124; }$sql .= " WHERE i.id='".$cId.I4139; $this->db->query($sql); if($this->db->next_record()){ if($ILLIlIL) {foreach($ILLIlIl as $ILLIlI1 => $ILLIllI) {if($ILLIllI != $this->db->Record[$ILLIlI1]) {$isNeedRecalcPropData =true; break; }}}if($ILLIIIL) {$aTmp["recWasPub"] =($this->db->Record["i_pub"] ?1 :0) &($this->db->Record["c_pub"] ?1 :0); $aTmp[I4236] =$this->db->Record[I4237]; }}}$aTmp["isNeedRecalcPropData"] =$isNeedRecalcPropData; }if (isset($ILLIIII["id_shipping_type"])) {$aSql["id_shipping_type"] =intval($ILLIIII["id_shipping_type"]); }if($ILLIIIL && !isset($aSql[I4238])){ $ILLIlll =preg_replace('/[^a-zA-Zа-яА-Я0-9]/u', I4173, unhtmlentities($aSql[I4145])); $aSql[I4238] =mb_substr($ILLIlll,0,1); }}$this->TT11I11(); $res["aSql"] =$aSql; $res["aTmp"] =$aTmp; $res["catId"] =$catId; if(!isset($res[I4239][I4170]) && $price == I4217 && ($res[I4239]["item_type"] == "eshop_account" || empty($res[I4239]["item_type"]) && $this->cms->VarsPost["item_type"] == I4240)) $res[I4239][I4170] =I4217; return $res; }function TT11I1l() {if($this->siteId >0) {$this->tree->TI11IT1($this->mainRootCatId, 0); $this->tree->TI11Il1(I4135); }}function TT11I11() {if($this->siteId >0) {$this->tree->TI11IT1($this->rootCatId, $this->rootParentCatId); $this->tree->TI11Ill(I4135); }}function extItemTypeIsEnabled($itemType) {return array_search($itemType, $this->aAllowExtItemTypes); }function extGetModulesList(&$result) {$Il11L1l =Array(); for($i=0; $i <$this->numItemTypes; $i++) {$this->ILlL1ll->{$this->ILlL1lL[I4126]}($result, $this->aAllowExtMods[$i], $this->_oExtensions[$i], $Il11L1l); }}function extGetModulesListCB(&$result, $modName, &$ILLIllL, &$Il11L1l) {}function TT11lTT($itemType) {$index =array_search($itemType, $this->aAllowExtItemTypes); if($index !== false) {$this->aPresentItemTypes[$itemType] =$index; }}function TT11lTI() {$this->aPresentItemTypes =Array(); }function TT11lTl($itemType) {return isset($this->aPresentItemTypes[$itemType]); }function TT11lT1($pageType, &$aItem, &$aData) {foreach($this->aPresentItemTypes as $itemType => $index) {$this->_oExtensions[$index]->TT11l11($pageType, $aItem, $aData); }}function TT11lIT($pageType, &$aItem, &$aData) {foreach($this->aPresentItemTypes as $itemType => $index) {$this->_oExtensions[$index]->TT111TT($pageType, $aItem, $aData); }}function TT11lII($IIL1II1) {$res =Array("select"=>I4124, "join"=>I4124, "where"=>I4124, "order"=>I4124, I4241=>I4124); for($i=0; $i <$this->numItemTypes; $i++) {$this->_oExtensions[$i]->TT11l1l($IIL1II1, $res); }return $res; }function TT11lIl(&$aActions, $ILLIll1, $IllI11L, &$aOrderData, &$ILLIlLI) {$this->TT11lTI(); $sql ="SELECT DISTINCT ei.item_type FROM ".$this->dbTablePrefix."_order_items eoi ". "LEFT JOIN ".$this->dbTablePrefix."_items ei ON eoi.id_product = ei.id ". "WHERE eoi.id_order='".$ILLIll1.I4139; $this->db->query($sql); while($this->db->next_record()) {$this->TT11lTT($this->db->Record['item_type']); }foreach($this->aPresentItemTypes as $itemType => $index) {foreach($aActions as $action) {$this->_oExtensions[$index]->updateOrderStatus($this->cms, $action, $ILLIll1, $IllI11L, $aOrderData, $ILLIlLI); }}}function TTT1lI1($action, $cId, &$itemData, &$addParams) {for($i=0; $i <$this->numItemTypes; $i++) {$this->_oExtensions[$i]->processAction($action, $cId, $itemData, $addParams); }}function TT11lI1($ownerName) {$this->_discountsDisabled =!$this->cms->Core->IsInstalled($ownerName ."_discounts"); $this->showDiscounts =$this->showDiscountsColumn =$this->showDiscountsRow =false; $this->useTotalDiscounts =$this->totalDiscountsArePresent =false; if ($this->_discountsDisabled || $this->cms->Side == 'admin') {return; }$option =$this->cms->Core->GetModOption($ownerName ."_discounts", "order_details_discount_view"); if (in_array("column", $option)) {$this->cms->Gui->AddGlobalVars(array ("SHOW_DISCOUNTS_COLUMN" => 1)); $this->cms->Gui->AddGlobalVars(array ("SHOW_DISCOUNTS" => 1)); $this->showDiscounts =$this->showDiscountsColumn =true; }if (in_array("row", $option)) {$this->cms->Gui->AddGlobalVars(array (I4242 => 1)); $this->cms->Gui->AddGlobalVars(array ("SHOW_DISCOUNTS" => 1)); $this->showDiscounts =$this->showDiscountsRow =true; }$option =$this->cms->Core->GetModOption($ownerName ."_discounts", "products_discounts_syncopation"); $this->_discountsDisabled =$option == "products_discount"; if ($this->_discountsDisabled) {return; }$this->_useProductsDiscountsSyncopationSum =$option == "sum_of_calculated_and_products_discount"; $this->_useDiscountsSyncopationSum =$this->cms->Core->GetModOption($ownerName ."_discounts", "discounts_syncopation") == "discounts_sum"; $this->_discountsData =array ("global" => null, I4177 => array (),I4243 => array ());if (!empty($this->cms->Member) && empty($this->cms->Member->Cart)) {require_once $GLOBALS['FUNC_INCLUDES_PATH'] .'func_eshop.php'; CreateCart($this->cms, $GLOBALS['oSession']); }$and =array ("`lang` = '" .$this->langData .I4139, I4244, "(`id_parent` = 0 AND `condition` IN ('global', 'category')) OR (`id_parent` != 0 AND `condition` IN ('accumulative_total', 'accumulative_items_count', 'total', 'items_count') " .(empty($this->cms->Member->Cart->couponDiscountId) ?I4173 :" OR `id` = " .$this->cms->Member->Cart->couponDiscountId) .")", I4139 .DateTools::toMysqlDate(time()) ."' BETWEEN date_start AND date_end" );if (empty($this->cms->Member->Cart->couponDiscountId)) {$and[] ="`kind` IN ('single', 'accumulative')"; }$sql ="SELECT * " ."FROM `" .$this->dbTablePrefix ."_discounts` " ."WHERE (" .implode(I4245, $and) .") " ."ORDER BY IFNULL(`max_total`, 1.7976931348623157E+308) ASC, IFNULL(`max_items_count`, 4294967295) ASC"; $this->db->query($sql); $this->_commonDiscountsEnabled =false; while ($this->db->next_record()) {$parentId =$this->db->Record["id_parent"]; $condition =$this->db->Record["condition"]; if ($parentId >0) {$this->_discountsData[I4243][$parentId][] =array (I4153 => $this->db->Record[I4153], I4246 => $condition, I4186 => $this->db->Record[I4186], I4159 => $this->db->Record[I4159], I4187 => $this->db->Record[I4187], "max_total" => $this->db->Record["max_total"], "max_items_count" => $this->db->Record["max_items_count"], I4247 => $this->db->Record[I4247], I4188 => $this->db->Record[I4188], I4175 => $this->db->Record[I4175], 'period' => $this->db->Record['period'], 'kind' => $this->db->Record['kind'] );}else if ($condition == I4248) {$this->_discountsData[I4177][$this->db->Record[I4163]] =array (I4186 => $this->db->Record[I4186], I4159 => $this->db->Record[I4159], I4187 => $this->db->Record[I4187] );$this->_commonDiscountsEnabled =true; }else if ($condition == "global") {$this->_discountsData["global"] =array (I4186 => $this->db->Record[I4186], I4159 => $this->db->Record[I4159], I4187 => $this->db->Record[I4187] );$this->_commonDiscountsEnabled =true; }}}function _initShippingModule($ownerName) {$shippingModuleName =$this->ownerName ."_shipping_methods"; $this->useShippingModule =$this->cms->Core->IsInstalled($shippingModuleName) && $this->cms->Core->GetModOption($shippingModuleName, I4249); if (!$this->useShippingModule) {return; }$this->shippingData =array ("none" => array (),I4250 => array (),I4227 => array (),"methodsIdsToCustomConditions" => array (),"methodsNames" => array ());$sql ="SELECT sm.`id`, sm.`id_parent`, sm.`name`, sm.`amount`, sm.`type`, sm.`custom_conditions`, sm.`max_total`, sm.`max_weight`, sm.`name` = '' AS `hidden`, sm.`tax_class_type`, tc.`tax_rate`, tc.`tax_type`, tc.`tax_apply_type`, sm.`id_tax_class` " ."FROM `".$this->dbTablePrefix."_shipping_methods` sm LEFT JOIN `cms_es_tax_classes` tc ON sm.id_tax_class=tc.id ". "WHERE sm.`lang` = '" .$this->langData ."' " ."ORDER BY IFNULL(sm.`max_total`, 1.7976931348623157E+308) ASC, IFNULL(sm.`max_weight`, 1.7976931348623157E+308) ASC"; $this->db->query($sql); while ($this->db->next_record()) {$id =$this->db->Record[I4163]; $parentId =$this->db->Record["id_parent"]; $customConditions =$this->db->Record[I4251]; if ($parentId) {$this->shippingData[$customConditions][$parentId][] =array (I4186 => $this->db->Record[I4186], I4159 => $this->db->Record[I4159], "max_total" => $this->db->Record["max_total"], "max_weight" => $this->db->Record["max_weight"], I4252 => $this->db->Record[I4252], "tax_class_type" => $this->db->Record["tax_class_type"], "tax_class_rate" => $this->db->Record[I4167], I4164 => $this->db->Record[I4164], "tax_class_charge_type" => $this->db->Record[I4253] );$this->shippingData["methodsIdsToCustomConditions"][$parentId] =$customConditions; }else if ($customConditions == "none") {$this->shippingData[$customConditions][$id] =array (I4186 => $this->db->Record[I4186], I4159 => $this->db->Record[I4159], I4252 => $this->db->Record[I4252], "tax_class_type" => $this->db->Record["tax_class_type"], I4254 => $this->db->Record[I4167], I4164 => $this->db->Record[I4164], "tax_class_charge_type" => $this->db->Record[I4253] );$this->shippingData["methodsIdsToCustomConditions"][$id] =$customConditions; $this->shippingData["methodsNames"][$id] =$this->db->Record[I4145]; }else {$this->shippingData["methodsNames"][$id] =$this->db->Record[I4145]; }$this->taxShippingData[$id] =array(); $this->taxShippingData[$id][I4172] =$this->db->Record[I4255]; $this->taxShippingData[$id]['id_tax_class'] =$this->db->Record[I4198]; }}function TT11llT() {$sql ="SELECT `id` " ."FROM `" .$this->dbTablePrefix ."_shipping_types` " ."WHERE `hidden` = 1 AND lang = '" .$this->langData .I4139; return intval($this->db->getValue($sql)); }function checkCoupon(&$couponDiscountId, &$couponDiscountParentId, $coupon =I4173) {$ids =array ();foreach ($this->aCloneOwners as $ownerName => $tmp) {$ids =array_merge($ids, array_keys($this->cms->Member->Cart->items[$ownerName])); }$sql ="SELECT DISTINCT `id_category` " ."FROM `" .$this->dbTablePrefix ."_items` " ."WHERE `id` IN (" .implode(I4256, array_unique($ids)) .")"; $rs =&$this->db->select($sql); $ids =array ();while (list($id) =$rs->nextRecord(MYSQL_NUM)) {$ids[] =$id; }$sql ="SELECT co.id, d.id, d.id_parent, coc.name, coc.description, co.activations_left " ."FROM `" .$this->dbTablePrefix ."_coupons` co " .I4257 .$this->dbTablePrefix ."_coupons_cats` coc ON co.id_cat = coc.id " .I4257 .$this->dbTablePrefix ."_discounts` d ON co.id_cat = d.id_coupon_cat " .I4257 .$this->dbTablePrefix ."_cats` c ON d.id_parent = c.id_discount " ."WHERE " .($coupon == I4173 ?I4173 :I4258 .$coupon ."' AND ") ."c.id IN (" .implode(I4256, $ids) .") AND " ."NOW() BETWEEN d.date_start AND d.date_end AND ". "coc.public = 1 AND d.public = 1 AND " ."IF(co.id_member != 0, co.id_member = " .intval($this->cms->Member->User[I4153]) .", 1) = 1" .($this->cms->Core->GetModOption($this->ownerName .'_coupons', 'time_limited') ?" AND SUBSTRING(NOW(), 1, 10) BETWEEN co.date_start AND co.date_end" :I4173) .($coupon == I4173 ?' LIMIT 1' :I4173); if ($record =$this->db->getRecord($sql, 0, MYSQL_NUM)) {if ($coupon == I4173) {list ($id, $couponDiscountId, $couponDiscountParentId, $tmp, $tmp, $tmp) =$record; }else {list ($id, $couponDiscountId, $couponDiscountParentId, $this->ILl1III, $this->ILl1IIl, $ILLIlLl) =$record; }if (!is_null($ILLIlLl) && intval($ILLIlLl) == 0) {$this->cms->Messages += $this->cms->Gui->ParseLangFile($GLOBALS['LOCAL_FILES_REL_PATH'] .'_admin/templates/lang/_eshop_purchase_msgs.lng'); $this->cms->AddStatusMsg('warn_coupon_no_activations_left', I4259); $couponDiscountId =$couponDiscountParentId =0; $this->ILl1III =$this->ILl1IIl; $id =0; }}else {$couponDiscountId =$couponDiscountParentId =0; $this->ILl1III =$this->ILl1IIl =I4173; }if ($coupon != I4173) {$this->couponId =$id; }return $id; }function TT11llI() {$tmp =null; if ($this->checkCoupon($tmp, $tmp, $this->cms->Member->Cart->couponId ?$this->cms->Member->Cart->coupon :I4173)) {$res =$this->cms->TTITI1l('purchase', 'confirm_coupon', array (I4191 => $this->cms->Member->Cart->coupon, I4179 => $this->cms->Member->Cart->coupon == I4173 ?I4173 :$this->ILl1III, 'description' => $this->cms->Member->Cart->coupon == I4173 ?I4173 :$this->ILl1IIl, 'id_length' => $this->cms->Core->GetModOption($this->ownerName .I4260, 'id_length'), 'wrong' => !$this->couponId ));}else {$res =I4173; }return $res; }}class EshopExtention {public $oEshop; public $cms; public $module; public $modName; function EshopExtention() {}function init(&$cms, &$oEshop, &$module, $modName) {$this->cms =&$cms; $this->oEshop =&$oEshop; $this->module =&$module; $this->modName =$modName; }function TT11lll($pageType, &$aItem, &$aData) {}function TT11ll1($action, &$vData) {$vData[$this->modName."_quantity"] =$this->module->GetOption("max_quantity"); $key =$this->modName .I4261; if(!isset($vData[$key])){ $vData[$key] =I4173; }$vData[$key] .= $this->cms->Gui->get($this->oEshop->ownerName."_item_subform:".$this->modName."_fields", $vData); }function TT11l1T(&$vData, &$aCustom) {}function TT11l1I($tableAlias, $type) {return I4124; }function TT11l1l($IIL1II1, &$result) {}function TT11l11($pageType, &$aItem, &$aData) {}function TT111TT($pageType, &$aItem, &$aData) {}function processAction($action, $cId, &$itemData, &$addParams) {switch($action) {case "edit": if($itemData["item_type"] == $this->modName) {$itemData[$itemData[I4262]."_quantity"] =$itemData["max_quantity"]; }break; case "before_add": case "before_apply": if($this->cms->VarsPost[I4262] == $this->modName) {$itemData[I4263] =intval($this->cms->VarsPost[$this->modName ."_quantity"]); if($this->oEshop->numItemTypes >1) {$itemData[I4262] =$this->cms->VarsPost[I4262]; }}if(empty($itemData[I4262])) {$itemData[I4262] =$this->oEshop->defaultItemType; }break; case "before_ssapply_add": $itemData[I4263] =$this->module->GetOption(I4263); case "before_ssapply_apply": break; }}function updateOrderStatus(&$cms, $IIIL11l, $ILLIll1, $IllI11L, $aOrderData, $ILLIlLI) {}}