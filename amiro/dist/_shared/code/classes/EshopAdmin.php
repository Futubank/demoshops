<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       12678 xkqwzsmkqymlwqnpmgynlxgqyyrnsnzmpuukqzqyuzgytuqisnlztrnztsnzwknqxklypnir
 */ ?><?php foreach(array(4270=>'wURRqNT|hcNqR',4271=>"W`GrMWQ|WZGtMHn:S",4272=>"GuYJMW",4273=>"'",4274=>"QDOHG|IZMn|WZt",4275=>'QDOHG|IZMn|WZt',4276=>"dqjqwT?.MS.?FRhi?.",4277=>"sqjqTq?FRhi?",4278=>"GrMWQ|WZGtMHn",4279=>"!",4280=>"WurrQnWB",4281=>"1[",4282=>"<",4283=>"GrMWQ",4284=>"MSD",4285=>"{",4286=>"",4287=>"WZt|GZtO|nH|rHHt",4288=>'MtQI|tBGQ|rHCD',4289=>"MtQI|tBGQ",4290=>"|SMDZYJQS",4291=>"SMDZYJQS",4292=>"|WOZnPQ|CZrn='",4293=>"|SMDGJZB",4294=>'MtQI|tBGQ') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'Eshop.php'; class EshopAdmin extends Eshop {function EshopAdmin(&$cms, &$words) {parent::Eshop($cms, $words); }function initByOwnerName($ownerName) {parent::initByOwnerName($ownerName); $this->cms->Gui->AddGlobalVars(Array(I4270 => $this->ownerName)); }function TT1l11l($ILlL1lI, $siteId, $forceInit =false) {parent::TT1l11l($ILlL1lI, $siteId, $forceInit); if($this->siteId == 0) {if(!$this->TT111TI(0)) {$this->TT111Tl(); }}}function TT11TTT() {parent::TT11TTT(); $this->tree->TI11IIT("edit", "c.*, c.name, c.announce, c.description, c.sm_data, c.details_noindex, c.sublink, c.instruction, ". "IF(c.instruct > 0,'checked','') AS instruct, IF(c.public > 0,'checked','') as public, ". "c.price".$this->getPriceFields(I4271).$this->getPriceFields("c.price%d"). ", c.price, price_mask, IF(c.is_price_list > 0,'checked','') AS price_list_checked" );$this->tree->TI11IIT("counters_info", "c.public AS cat_public, c2.public AS cat_parent_public, c.count_childs, c.count_public_childs"); $this->tree->TI11IIT(I4272, I4272); $this->tree->TI11IIT("sublink", "sublink"); }function TT111TI($siteId) {if($siteId == 0) {$sql ="SELECT id FROM ".$this->dbTablePrefix."_cats WHERE id_parent='0' AND lang='".$this->langData.I4273; }else {$sql ="SELECT is_root FROM ".$this->dbTablePrefix."_cats WHERE is_root='1' AND lang='".$this->langData."' AND id_site='".$siteId.I4273; }$this->db->query($sql); $id =0; if($this->db->next_record()) {$id =$this->db->Record["id"]; }return $id; }function TT111Tl() {unset($this->cms->Words[I4274]); $words =TlTl1I1($this->cms, 'eshop_main_cat', "templates/lang/_eshop_main.lng"); $catId =$this->cms->Core->GetOption('default_ids'); $catId =$catId[$this->langData]; $catId =intval($catId); $asql =Array( "name"=>isset($words[I4275]) ?$words[I4275] :'Main category', "id_parent"=>0, "id"=>$catId, "lang"=>$this->langData );$sql =I4276 .$this->dbTablePrefix ."_shipping_types` " ."WHERE `is_default` = 1 AND `lang` = '" .$this->langData .I4273; $this->db->query($sql); if ($this->db->next_record()) {$asql['id_shipping_type'] =$this->db->Record['id']; }$ILLIlL1 =$this->TT111T1(); $sql =I4277 .$this->dbTablePrefix ."_cats WHERE id = " .$catId; $this->db->execute($sql); $sql =$this->db->GenInsertSQL($this->dbTablePrefix."_cats", $asql +$ILLIlL1); $this->db->query($sql); }function TT111T1() {global $LOCAL_FILES_PATH, $LOCAL_FILES_REL_PATH; $aCaptions =Array(); $ILLIl1I =$this->cms->Gui->ParseLangFile($LOCAL_FILES_REL_PATH."_admin/templates/lang/price_list.lng"); for($i=0;$i<$this->numPrices;$i++) {$aCaptions["price_caption".$this->priceFields[$i]] =$ILLIl1I[I4278.$this->priceFields[$i]]; }return $aCaptions; }function TT111IT(&$aPriceData) {$res =false; $ILLIl1l =false; $ILLIl1L =Array(); $prices[0] =$aPriceData["price"]; for($i=0;$i<=$this->numPrices;$i++) {$prices[$this->priceFields[$i]] =$aPriceData["price_current".$this->priceFields[$i]]; }for($i=0;$i<$this->numPrices;$i++) {$numPrice =$this->priceFields[$i]; if($aPriceData["price".$numPrice] !="") {$tmp =str_replace(I4279, ".", $aPriceData["price".$numPrice]); $ILLII1l =$this->TT11IlI($tmp); $ILLIl1L["price".$numPrice] =$ILLII1l["js"]; $this->TT111II($aPriceData, $ILLIl1L, I4280.$numPrice, $numPrice, "#"); $this->TT111II($aPriceData, $ILLIl1L, "db_currency".$numPrice, $numPrice, ":"); $evalRes =false; $res =@eval('$evalRes='.I4281.$ILLII1l["php"].";"); if($evalRes===false) {$ILLIl1l =true; break; }}else {$ILLIl1L["price".$numPrice] =""; $this->TT111II($aPriceData, $ILLIl1L, I4280.$numPrice, $numPrice, I4282); $this->TT111II($aPriceData, $ILLIl1L, "db_currency".$numPrice, $numPrice, ":"); }}if($ILLIl1l) {$res =$numPrice; }else {$res =$ILLIl1L; }return $res; }function TT111II(&$aPriceData, &$ILLIl1L, $fieldName, $numPrice, $delim) {if(isset($aPriceData[$fieldName]) && $aPriceData[$fieldName] != "") {if(mb_strlen($aPriceData[$fieldName]) >3) {$aPriceData[$fieldName] =mb_substr($aPriceData[$fieldName], 0, 3); }$ILLIl1L["price".$numPrice] .= $delim.$aPriceData[$fieldName]; }}function TT111Il($aPrices) {$priceMask =0; $one =1; for($i=0;$i<$this->numPrices;$i++) {$tmp =$this->TT11TlT($aPrices[I4283.$this->priceFields[$i]]); if(!is_numeric($tmp[I4283]) && !empty($tmp[I4283])) {$priceMask += $one << ($this->priceFields[$i] -1); }}return $priceMask; }function TT111I1($subLink, $tableName, $filter) {$res =false; if(!empty($subLink)) {$sql ="SELECT name from ".$tableName." WHERE sublink='".$subLink.I4273.$filter." LIMIT 1"; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record["name"]; }}return $res; }function TT111lT($catIds, $ILLIlL1 =Array()) {$itemIds =Array(I4284=>""); $ILLIl11 =sizeof($ILLIlL1); if($ILLIl11 >0) {$ILLILII =I4279.implode($ILLIlL1); }$sql ="SELECT id".$ILLILII." FROM ".$this->dbTablePrefix."_items WHERE id_category IN(".$catIds.I4285; $this->db->query($sql); while($this->db->next_record()) {$itemIds[I4284] .= I4279.$this->db->Record["id"]; for($i=0;$i<$ILLIl11;$i++) {$itemIds["fields"][$this->db->Record["id"]][$ILLIlL1[$i]] =$this->db->Record[$ILLIlL1[$i]]; }}$itemIds[I4284] =mb_substr($itemIds[I4284], 1); return $itemIds; }function TT111lI(&$db, $ILLILIl, $splitter, $IlLL1LL) {$ILLILIL =Array(); $ILLILI1 =Array(); if($IlLL1LL != "") {$sql ="SELECT id, id_parent, name FROM ".$this->dbTablePrefix."_cats WHERE id IN(".$IlLL1LL.I4285; $db->query($sql); $this->tree->TI11lll($db); $this->tree->TI111TI("buildTreeOnChildsArray", "_htmlTitleBuildTreeOnChildsArrayCB", $this); $this->tree->initResult($ILLILI1); $ILLILI1 =$this->tree->buildTreeOnChildsArray(); $this->tree->TI111Tl("buildTreeOnChildsArray"); }if($ILLILIl != I4286) {$ILLILI1[] =$ILLILIl; }$maxLevel =sizeof($ILLILI1); for($i =0; $i <$maxLevel; $i++) {$ILLILIL["cat_name_lev".$i] =$ILLILI1[$i]; $ILLILIL["cat_name_parentlev".($maxLevel -$i -1)] =$ILLILI1[$i]; }if ($ILLILI1 === false) {$ILLILI1 =array ();}$ILLILlI =array_reverse($ILLILI1); $ILLILll =$splitter; $ILLILIL["cat_path"] =implode($splitter, $ILLILI1); $ILLILIL["cat_path_reverse"] =implode($ILLILll, $ILLILlI); unset($ILLILI1[0]); unset($ILLILlI[$maxLevel -1]); $ILLILIL[I4287] =implode($splitter, $ILLILI1); $ILLILIL["cat_path_reverse_no_root"] =implode($ILLILll, $ILLILlI); return $ILLILIL; }function _htmlTitleBuildTreeOnChildsArrayCB(&$res, &$child, &$Il11L1l) {$res[] =$child["name"]; return true; }function TT111ll($action, &$vData) {if($this->numItemTypes >1) {$vData["script_alerts"] =I4286; if(!isset($vData['item_type_rows'])){ $vData[I4288] =''; }for($i=0; $i<$this->numItemTypes; $i++) {$items["value"] =$this->aAllowExtMods[$i]; $items["name"] =$this->words[$this->aAllowExtMods[$i]."_title"]; if($vData[I4289] == $this->aAllowExtMods[$i]) {$items["selected"] ="selected"; $vData[$this->aAllowExtMods[$i]."_display"] ="block"; $vData[$this->aAllowExtMods[$i].I4290] =I4286; $vData["default_item_type"] =$this->aAllowExtMods[$i]; }else {$items["selected"] =I4286; $vData[$this->aAllowExtMods[$i]."_display"] ="none"; $vData[$this->aAllowExtMods[$i].I4290] =I4291; }$vData["item_type_rows"] .= $this->cms->Gui->get($this->ownerName."_item_subform:item_type_row", $items); $vData["script_alerts"] .= "var ".$this->aAllowExtMods[$i].I4292.jparse($this->words[$this->aAllowExtMods[$i]."_change_warn"])."';\n"; }$vData["item_type_list"] =$this->cms->Gui->get($this->ownerName."_item_subform:item_type_list", $vData); }elseif($this->numItemTypes >0) {$vData[$this->defaultItemType.I4293] ="block"; $vData["default_item_type"] =$this->defaultItemType; $vData['item_type_list'] =$this->cms->Gui->getAbs($this->ownerName .'_item_subform:item_type_single', array (I4294 => $this->defaultItemType)); }for($i=0; $i<sizeof($this->aUnAllowExtMods); $i++) {$vData[$this->aUnAllowExtMods[$i].I4293] ="none"; $vData[$this->aUnAllowExtMods[$i].I4290] =I4291; }for($i=0; $i <$this->numItemTypes; $i++) {$this->_oExtensions[$i]->TT11ll1($action, $vData); }}function TT111l1(&$vData, &$aCustom) {for($i=0; $i <$this->numItemTypes; $i++) {$this->_oExtensions[$i]->TT11l1T($vData, $aCustom); }}function TT1111T(&$aItem, &$aData) {for($i=0; $i <$this->numItemTypes; $i++) {$this->_oExtensions[$i]->TT11lll(I4286, $aItem, $aData); }}function TT1111I($tableAlias =I4286, $type =I4286) {$ILLILlL =I4286; if(!empty($tableAlias)) {$tableAlias .= "."; }for($i=0; $i <$this->numItemTypes; $i++) {$ILLILlL .= $this->_oExtensions[$i]->TT11l1I($tableAlias, $type); }return $ILLILlL; }}?>
