<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       17439 xkqwnkgnsnuqyiyxmqyyxgssnnzlugskwszzliqggnkswnrwqwinuxtkkqpgrlrswggnpnir
 */ ?><?php foreach(array(4523=>'wjzddqd|gzTo',4524=>'iHSuJQoHDtUDQrD`GOG',4525=>"Z",4526=>'uDQrD',4527=>'I',4528=>"1?SZB",4529=>'',4530=>'Qn',4531=>'QxGSZtQ',4532=>'JMWQnWQ|tBGQ',4533=>"JMWQnWQ|tBGQ",4534=>'St|QxGMrQD|DHHn',4535=>"QxG|St|SQJQtQ",4536=>'DuGGHrt|QIZMJ',4537=>"%",4538=>"|YHSB",4539=>"QxG|QIZMJ|tZP",4540=>'YHSB',4541=>'QxGMrQ|SZQIHn',4542=>'DuDGQnS',4543=>'WOZnPQS|YB',4544=>'rQDtZrt|OttGS',4545=>"dTzRT",4546=>"QxG|tQDt|IHSQ",4547=>"QxG|St|JZDtJHPMn",4548=>'C',4549=>'MnDtZJJQS|JZnPD',4550=>"dqjqwT?Ou`JMWQnWQ|tBGQ!Ou`MS!Ou`uDQrnZIQ!Ou`SHIZMn|HrMP?zd?SHIZMn!Ou`SYZDQ!",4551=>"UNmX|TmiqdTzig}Ou`JMWQnWQ|QxG|SZtQ{?zd?QxGSZtQ!",4552=>"zNs?Ou`QxG|SZQIHn|MPnHrQ=0?zNs?Ou`DtZtuD,='SQJQtMnP'?zNs?Ou`JMWQnWQ|tBGQ='frQQ'?",4553=>"zNs?UNmX|TmiqdTzig}Ou`JMWQnWQ|QxG|SZtQ{@0?",4554=>"coqRq?Ou`QxG|SZQIHn|MPnHrQ=0?zNs?Ou`DtZtuD,='SQJQtMnP'?zNs?Ou`DtZtuD,=',QrrHr'?zNs?Ou`JMWQnWQ|tBGQ='frQQ'?zNs?mdNUjj}JO`MS|IQIYQr{?",4555=>'JZDtJHPMn',4556=>"zNs?Ou`QxG|SZQIHn|MPnHrQ=0?zNs?Ou`DtZtuD,='SQJQtMnP'?zNs?Ou`DtZtuD,=',QrrHr'?zNs?Ou`JMWQnWQ|tBGQ='frQQ'?",4557=>"dqjqwT?Ou`JMWQnWQ|tBGQ!Ou`MS!Ou`MS|IQIYQr!Ou`uDQrnZIQ!Ou`SHIZMn|HrMP?zd?SHIZMn!Ou`SYZDQ!",4558=>"zNs?Ou`JMWQnWQ|tBGQ,='GZMS'?zNs?UNmX|TmiqdTzig}Ou`JMWQnWQ|QxG|SZtQ{@1",4559=>'JZDtrQIMnS',4560=>'SHIZMn',4561=>"RQJHZSMnP?OttGS") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'CMS_Member.php'; require_once $GLOBALS[I4523] .'Mailer.php'; require_once $GLOBALS[I4523] .I4524; define("LOG_TO_FILE",true); function _error($msg,$type='WARN') {global $LOG_PATH,$adm; $str =DateTools::toMysqlDate(time()); $str .= " $type: $msg\n"; if(LOG_TO_FILE && ($f=@fopen($LOG_PATH."expire_daemon.log",I4525))) {fputs($f,$str); fclose($f); }echo $str; flush(); if($type=='FATAL') {exit; }}function _log($msg,$obj=false) {_error($msg,'LOG'); if($obj!==false) ;}function TITTI11($user,$date) {global $users,$db; $id =$users[$user]['id']; $expr =$date ?"FROM_UNIXTIME($date)" :"'0000-00-00 00:00:00'"; $sql ="UPDATE cms_host_users SET licence_exp_date=$expr WHERE id=$id"; $db->query($sql); $GLOBALS[I4526][$user]['expdate'] =$date; _log("Setting expire date for ".$users[$user]['domain'].": ".DateTools::toMysqlDate($date)); }function TITTlTT($ILLLI1L,$lang) {if(!preg_match('/^[\+\-]?(\d+)\s+(\w)/',$ILLLI1L,$tmp)) return ''; $n =$tmp[1]; $u =$tmp[2]; preg_match('/(\d)$/',$n,$tmp); $l =$tmp[1]; if($lang=='ru') {if($u=='d') {if($l==1) return "$n день"; if($l>1 && $l<5) return "$n дня"; return "$n дней"; }elseif($u==I4527) {if($l==1) return "$n месяц"; if($l>1 && $l<5) return "$n месяца"; return "$n месяцев"; }elseif($u=='y') {if($l==1) return "$n год"; if($l>1 && $l<5) return "$n года"; return "$n лет"; }else {return ''; }}elseif($lang=='en') {if($u=='d') {return $n==1 ?I4528 :"$n days"; }elseif($u==I4527) {return $n==1 ?"1 month" :"$n months"; }elseif($u=='y') {return $n==1 ?"1 year" :"$n years"; }else {return ''; }}else {return I4529; }}function TITTlTI($user,$type,$ILLLI11=true) {global $ILLLlII; global $adm,$db,$users,$ILLLlIl,$now; global $ILLLlIL,$ILLLlI1; global $ILLLllI; $domain =$users[$user]['domain']; $member =CMS_Member::getInfo($domain,$user); TlITllI('close',$domain); $lang =$member['lang']; if($lang!='ru') $lang=I4530; $data =array(); $data['username'] =$user; $data['domain'] =$domain; $data['suspend_date'] =date($adm->DFMT['php'],$users[$user][I4531]+$ILLLlIL); $data['delete_date'] =date($adm->DFMT['php'],$users[$user][I4531]+$ILLLlIL+$ILLLlI1); $data['lastlogin'] =$users[$user]["lastlogin_$lang"]; $data[I4532] =$users[$user][I4533]; $data[I4531] =date($adm->DFMT['php'],$users[$user][I4531]); $data[I4534] =TITTlTT($ILLLlII->GetOption("exp_dt_soon"),$lang); $data['dt_suspend'] =TITTlTT($ILLLlII->GetOption("exp_dt_suspend"),$lang); $data['dt_delete_site'] =TITTlTT($ILLLlII->GetOption(I4535),$lang); $data['dt_login_never'] =TITTlTT($ILLLlII->GetOption("exp_dt_nologin"),$lang); $data['dt_login_last'] =TITTlTT($ILLLlII->GetOption("exp_dt_lastlogin"),$lang); $data[I4536] =$adm->Core->GetOption("company_email"); require_once($GLOBALS["CLASSES_PATH"]."Mailer.php"); $subject =$adm->Gui->get("mail_" .$lang .I4537 .$type ."_subject", $data); $body =$adm->Gui->get("mail_" .$lang .":header", $data); $body .= $adm->Gui->get("mail_" .$lang .I4537 .$type .I4538, $data); $body .= $adm->Gui->get("mail_" .$lang .":footer", $data); $oMail =new Mailer(); $oMail->SenderAddress =$adm->Core->GetOption("company_robot_email"); $oMail->Subject =$subject; $oMail->Body =$body; $oMail->BodyFormat ="html"; $oMail->Prepare(); $ILLLlll =$ILLLllI ?"[DEBUG - test mode]\n" :I4529; if(empty($member['email'])) {_error("Cannot get member email address for username=$user, domain=$domain",'ERROR'); }else {$oMail->RecipientAddress =$member['email']; if(!$ILLLllI) {if(!$oMail->Send()) _error("sending email failed to $oMail->RecipientAddress"); }else _log($ILLLlll."Sent notification to $member[email]: type=$type domain=$domain"); }$data['em_sort_tag'] =$ILLLlII->GetOption(I4539); $subject =$adm->Gui->get("mail_" .$lang .I4537 .$type ."_subject", $data); if(!ModuleHostUsers::TIlTT1T($adm,$ILLLlIl,$users[$user]['id'], array('subject'=>$subject,I4540=>$ILLLlll.$body,'lang'=>$lang))) _error("sending email failed to $ILLLlIl"); if($ILLLI11) {$sql ="UPDATE cms_host_users SET last_remind_sent=FROM_UNIXTIME($now) WHERE id=".$users[$user]['id']; if(!$ILLLllI) $db->query($sql); }}function TITTlTl($user,$status) {global $db,$users,$sid,$ILLLllL; $id =$users[$user]['id']; $domain =$users[$user]['domain']; $daemon =&$ILLLllL->TlTTIlI($sid,$domain); if(!ModuleHostUsers::TIlTTll($id,$status,$daemon,I4541)) _error("Cannot set admin status '$status' for $domain",'ERROR'); else _log("Set admin status '$status' for $domain"); }function TITTlT1($user) {global $db,$users,$ILLLlII,$sid,$ILLLllL; $id =$users[$user]['id']; $domain =$users[$user]['domain']; $daemon =&$ILLLllL->TlTTIlI($sid,$domain); $pref ="suspendSite($domain):"; $dp =array('action'=>I4542,'domain'=>$domain,'restart_httpd'=>0); if(!$daemon->TlTTITT($dp)) _error("$pref Daemon responds: ".$daemon->GetLastError(),'ERROR'); else {ModuleHostUsers::TIlTTl1($id,array( 'status'=>I4542, I4543=>I4541)); _log("$pref done"); }}function TITTlIT($user) {global $sid,$users,$db,$ILLLllL; global $ILLLlII,$adm; $id =$users[$user]['id']; $domain =$users[$user]['domain']; $pref ="[deleteSite($domain)]:"; _log("$pref start"); $dp =array('domain'=>$domain,'delete_subscriber'=>0,I4544=>0); $daemon =&$ILLLllL->TlTTIlI($sid,$domain); if(!$daemon->TITTlIT($dp)) {_error("$pref Daemon responds: ".$daemon->GetLastError(),'ERROR'); }else {$GLOBALS['ILLLll1'][$daemon->getUrl()] =true; if($ILLLlII->GetOption("exp_delete_profile")) {$Ill11LL =$users[$user]['id_member']; $oMember =new CMS_Member($none); $oMember->deleteMember($adm,$db,$Ill11LL); _log("$pref deleted profile username=$user"); }_log("$pref done"); }}ob_end_flush(); _log(I4545); $ILLLlLI =SiteManager::TI1llT1(); if($ILLLlLI &CLOPT_NO_UPDATE) _error("Operation prohibited by cluster options",'FATAL'); $now =time(); $ILLLlII =&$adm->Core->GetModule('wz_host_users'); $ILLLlIl =$ILLLlII->GetOption('host_admin_email'); $ILLLllI =$ILLLlII->GetOption(I4546); if($ILLLllI) _log('Test mode ON'); $ILLLlLl =strtotime($ILLLlII->GetOption("exp_dt_soon"),$now)-$now; $ILLLlIL =strtotime($ILLLlII->GetOption("exp_dt_suspend"),$now)-$now; $ILLLlI1 =strtotime($ILLLlII->GetOption(I4535),$now)-$now; $ILLLlLL =strtotime($ILLLlII->GetOption("exp_dt_nologin"),$now)-$now; $ILLLlL1 =strtotime($ILLLlII->GetOption(I4547),$now)-$now; $ILLLl1I =$ILLLl1l =$adm->DFMT['db']; $ILLLl1L =$GLOBALS["LOG_PATH"].'expire.lock'; $ILLLl11 =3; $ILLLll1 =array(); $ILLLllL =new WZDaemonPool($adm->Core); if(empty($sid)) $sid =$adm->VarsGet['expire_sid']; $lock =fopen($ILLLl1L,I4548); if(!$lock) _error("Cannot open lock file '$ILLLl1L' for writing",'FATAL'); if(!flock($lock,LOCK_EX|LOCK_NB)) _error("Expire daemon is already working",'FATAL'); foreach($adm->Core->GetOption(I4549) as $ILLLLII){ $adm->Gui->addBlock("mail_" .$ILLLLII, $LOCAL_FILES_REL_PATH ."_admin/templates/letters/_expire_daemon_" .$ILLLLII .".tpl"); }$users =array(); $sql =I4550. "UNIX_TIMESTAMP(MAX(lh.date)) AS lastlogin, ". "DATE_FORMAT(MAX(lh.date),'$ILLLl1I') AS lastlogin_ru,". "DATE_FORMAT(MAX(lh.date),'$ILLLl1l') AS lastlogin_en,". "UNIX_TIMESTAMP(hu.date_registered) AS regdate,". "DATE_FORMAT(hu.date_registered,'$ILLLl1I') AS regdate_ru,". "DATE_FORMAT(hu.date_registered,'$ILLLl1l') AS regdate_en,". I4551. "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1I') AS expdate_ru,". "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1l') AS expdate_en ". "FROM cms_host_users hu, cms_host_login_history lh ". "WHERE hu.id_member=lh.id_member ". I4552. I4553. "GROUP BY hu.id ". "HAVING lastlogin>$now-$ILLLlL1"; $db->query($sql); while($db->next_record()) {$users[$db->Record['username']] =$db->Record; }reset($users); while(list($user,)=each($users)) {TITTlTl($user,'active'); TITTI11($user,0); TITTlTI($user,'restored'); }$users =array(); $sql =I4550. "UNIX_TIMESTAMP(hu.date_registered) AS regdate,". "DATE_FORMAT(hu.date_registered,'$ILLLl1I') AS regdate_ru,". "DATE_FORMAT(hu.date_registered,'$ILLLl1l') AS regdate_en,". I4551. "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1I') AS expdate_ru,". "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1l') AS expdate_en,". "UNIX_TIMESTAMP(hu.last_remind_sent) AS lastremind ". "FROM cms_host_users hu LEFT JOIN cms_host_login_history lh ON hu.id_member=lh.id_member ". I4554. "AND UNIX_TIMESTAMP(hu.date_registered)<$now-$ILLLlLL AND UNIX_TIMESTAMP(hu.last_remind_sent)=0"; $db->query($sql); while($db->next_record()) {$users[$db->Record['username']] =$db->Record; $users[$db->Record['username']][I4555] =0; }reset($users); while(list($user,)=each($users)) {TITTI11($user,$now+$ILLLlLl+1); TITTlTI($user,'never'); }$users =array(); $sql =I4550. "UNIX_TIMESTAMP(MAX(lh.date)) AS lastlogin, ". "DATE_FORMAT(MAX(lh.date),'$ILLLl1I') AS lastlogin_ru,". "DATE_FORMAT(MAX(lh.date),'$ILLLl1l') AS lastlogin_en,". "UNIX_TIMESTAMP(hu.date_registered) AS regdate,". "DATE_FORMAT(hu.date_registered,'$ILLLl1I') AS regdate_ru,". "DATE_FORMAT(hu.date_registered,'$ILLLl1l') AS regdate_en,". I4551. "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1I') AS expdate_ru,". "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1l') AS expdate_en ". "FROM cms_host_users hu, cms_host_login_history lh ". "WHERE hu.id_member=lh.id_member ". I4556. "AND UNIX_TIMESTAMP(hu.last_remind_sent)<=$now-$ILLLlL1 ". "GROUP BY hu.id ". "HAVING lastlogin<$now-$ILLLlL1"; $db->query($sql); while($db->next_record()) {$users[$db->Record['username']] =$db->Record; }reset($users); while(list($user,)=each($users)) {TITTI11($user,$now+$ILLLlLl+1); TITTlTI($user,'long'); }$users =array(); $sql =I4557. "UNIX_TIMESTAMP(hu.date_registered) AS regdate,". "DATE_FORMAT(hu.date_registered,'$ILLLl1I') AS regdate_ru,". "DATE_FORMAT(hu.date_registered,'$ILLLl1l') AS regdate_en,". I4551. "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1I') AS expdate_ru,". "DATE_FORMAT(hu.licence_exp_date,'$ILLLl1l') AS expdate_en, ". "UNIX_TIMESTAMP(hu.last_remind_sent) AS lastremind ". "FROM cms_host_users hu ". "WHERE hu.exp_daemon_ignore=0 AND hu.status!='deleting' AND hu.status!='!error' ". I4558; $db->query($sql); while($db->next_record()) {$users[$db->Record['username']] =$db->Record; }reset($users); while(list($user,)=each($users)) {@set_time_limit(150); $ILLLLIl =intval($users[$user]['regdate']); $ILLLLIL =intval($users[$user][I4531]); $ILLLLI1 =intval($users[$user][I4559]); echo "Reg: $ILLLLIl   Exp: $ILLLLIL   Lr: $ILLLLI1\n"; if($ILLLLIL-$now<=$ILLLlLl && $now<=$ILLLLIL) {if($ILLLLIL-$ILLLLI1>=$ILLLlLl) {TITTlTI($user,'soon'); }}elseif($now>=$ILLLLIL && $now<=$ILLLLIL+$ILLLlIL) {if($ILLLLI1<=$ILLLLIL) {if(!$ILLLllI) TITTlTl($user,I4542); TITTlTI($user,'adm_suspended'); }}elseif($now>=$ILLLLIL+$ILLLlIL && $now<=$ILLLLIL+$ILLLlIL+$ILLLlI1) {if($ILLLLI1<=$ILLLLIL+$ILLLlIL) {if(!$ILLLllI) {@set_time_limit(150); TITTlT1($user); }TITTlTI($user,'site_suspended'); }}elseif($now>=$ILLLLIL+$ILLLlIL+$ILLLlI1) {if($ILLLlLI &CLOPT_NO_DELETE) _error('['.$users[$user][I4560].'] Deletion prohibited by cluster options','WARN'); else {TITTlTI($user,'deleted'); if(!$ILLLllI) {@set_time_limit(150); TITTlIT($user); }}}elseif($now<$ILLLLIL-$ILLLlLl) {}else {_error("Unknown state for user $user",'WARN'); }}if(sizeof($ILLLll1)) {_log(I4561); $ILLLllL->TlTTIlT(true); foreach($ILLLll1 as $url=>$tmp) {$daemon =&$ILLLllL->TlTTIll($url,$sid); if($daemon===false) {trigger_error("Daemon url '$url' not cached",E_USER_WARNING); _error("Daemon url '$url' not cached, skipping",'ERROR'); continue; }if(!$daemon->TlTTIIl()) {_error("Daemon [$url] says: ".$daemon->GetLastError(),'ERROR'); }else {_log("Daemon: $url"); }}_log("Reload done"); }fclose($lock); _log("DONE"); 