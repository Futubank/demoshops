<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    gui 
 * @version    $Id$ 
 * @size       54108 xkqwwpwslgyutxrtgyzmnlmtyxggupnzmgszylkllpnmunlnkilqpqspumkimilgkmxspnir
 */ ?><?php foreach(array(5223=>"|ihVq|dTzRT",5224=>"OMSSQn",5225=>"DuYIMt",5226=>"",5227=>"DQZrWO",5228=>"SZtQtH",5229=>"DtZtMW",5230=>"FYJHWK",5231=>"fJt|nZIQD|GHDtfMx",5232=>"PuMiHSNZIQ",5233=>"vZJuQ",5234=>"SZtZ",5235=>"OZD|SQtZMJD",5236=>"tZYJQ|fMQJS",5237=>"MntQrvZJ",5238=>"MnvZJMS|vZJuQ|",5239=>"IQDDZPQ",5240=>"WHnf",5241=>"uvZJuQ",5242=>"IuJtM|vZJuQD",5243=>"VDGJMttQr",5244=>"SMDZYJQdej",5245=>"QxWQGtMHn",5246=>"SZtQ",5247=>"GHDMtMHn",5248=>"tBGQ",5249=>'nZIQ',5250=>"]",5251=>"OQJG|MS",5252=>"fMQJS|",5253=>'WHnf|StMIQ',5254=>"nuIQrMW",5255=>"vZJuQ|tH",5256=>"WZGtMHn",5257=>"WOQWKQS",5258=>"fMQJS|DuYIMt",5259=>"fMQJS|fJZPIZG",5260=>"GZrZID",5261=>"IuJtMGJQ|DQJQWt",5262=>"DMAQ",5263=>"DQJQWt",5264=>"WOQWKYHx",5265=>"DQJQWtQS",5266=>"%fMQJS|fJZP|rZSMH",5267=>"nZIQ",5268=>"IuJtMGJQ",5269=>"WHunt",5270=>"fMQJS|oDGJMttQr",5271=>"fMQJS|OMSSQn",5272=>"fMQJS|SZtZ",5273=>"fMJtQr|YHSB",5274=>'Gf',5275=>"%fMQJS|DQZrWO",5276=>"%fMQJS|OMSSQn",5277=>'fJt|',5278=>'fHrWQ|DBnW',5279=>'QnWHSQoTij',5280=>"?",5281=>"%",5282=>"0",5283=>"WHnSMtMHn",5284=>'JMKQ',5285=>"u",5286=>"QEuZJ",5287=>"'!?2!?10{=whNV}'",5288=>'',5289=>"]whNV}'",5290=>"?=?'0'?",5291=>"'!?2!?10{=",5292=>"?zNs?}}",5293=>"}",5294=>"@=",5295=>'Mnt',5296=>"'",5297=>'?md?NUjj{?',5298=>"?hR?",5299=>"{",5300=>"fHrWQ",5301=>"?zNs?",5302=>"GHDtfMx",5303=>"*",5304=>"rQD",5305=>"fMQJS",5306=>"WHnS",5307=>"|",5308=>'~\[-~DM',5309=>'|',5310=>':',5311=>"vZJ",5312=>"=_") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} define("_MOVE_PREV", -1); define("_MOVE_NEXT", 1); define(I5223, -9999); define("_MOVE_END", 9999); class Filter{ const MOVE_PREV =-1; const MOVE_NEXT =1; const MOVE_START =-9999; const MOVE_END =9999; public $Captions; public $Fields; public $Messages; public $IL11lLl; public $IL11lLL =array(); public $IL11lL1; public $IL11l1I; public $Status; public $IL11l1l; public $ScriptName; public $IL11l1L; public $IL11l11; public $IL11LII; public $Base; public $Gui; public $IL11LIl; public $IL11LIL; public $IL11LI1; public $IL11LlI; public $IL11Lll; private $IL11LlL =array(); function __construct(&$IL11Ll1, $IL11LLI ="templates/filter_box.tpl", $IL11LLl ="templates/filter_form.tpl"){ $this->IL11lLl =array("static", I5224, "text", "date", "select", "radio", I5225, "button", "checkbox", "subcats_search", "flagmap", I5226, "Vsplitter", "Hsplitter", "Sblock", "Fblock", I5227, "sql", "timestamp",'numeric'); $this->IL11l1L =array("datefrom", I5228, "limit"); $this->IL11lL1 =false; $this->IL11l1I =true; $this->IL11l1l =false; $this->IL11LII =false; $this->Messages =array(); $this->Fields =array(); $this->IL11l11 =0; $this->Captions =array(); $this->Status =array(); $this->ScriptName =I5226; $this->templateBox =$IL11LLI; $this->templateForm =$IL11LLl; $this->blockBox ="_filterBox"; $this->blockForm ="_filterForm"; $this->Base =&$IL11Ll1; $this->Gui =&$this->Base->Gui; $this->Gui->addBlock($this->blockBox, $this->templateBox); $this->Gui->addBlock($this->blockForm, $this->templateForm); $this->IL11LlI =$this->Base->Core->GetProperty("html_area_fields"); $this->IL11LIl =Array(I5229, I5225, "button", "Vsplitter", "Hsplitter", "Sblock", I5230, "sql"); $this->IL11LIL =I5226; $this->IL11LI1 =I5226; $this->IL11Lll =array ();require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_convert.php"); }function TITIllT($IL11LLL =I5226) {if($IL11LLL != I5226) {$IL11LLL ="_".$IL11LLL; }$this->IL11LIL =$IL11LLL; $this->Gui->AddGlobalVars(Array(I5231 => $this->IL11LIL)); }function TITIllI($IL11LL1 =I5226) {$this->IL11LI1 =$IL11LL1; }function ReInitTemplates($IL11LLI ="templates/filter_box.tpl", $IL11LLl ="templates/filter_form.tpl") {$this->templateBox =$IL11LLI; $this->templateForm =$IL11LLl; $this->Gui->addBlock($this->blockBox, $this->templateBox); $this->Gui->addBlock($this->blockForm, $this->templateForm); }function TITIlll(){ $cPath =(empty($this->Base->AdminPathWWW) ?'' :$this->Base->AdminPathWWW) .$this->Base->ActiveScript; foreach($this->IL11l1L as $IILLIIl){ if(array_key_exists($IILLIIl, $this->Fields)){ $val =$this->Fields[$IILLIIl]["value"]; SetLocalCookie($IILLIIl,$val, time() +30 *24 *3600, $cPath); }else{ }}return true; }function TITIll1($IIlLlLI){ $res =$this->issetField($IIlLlLI); if($res){ $this->IL11l1L[] =$IIlLlLI; }else{ trigger_error('Filter: Uknown field [' .$IIlLlLI .']', E_USER_WARNING); }return $res; }function SetDateFormat($aDateFMT){ $this->IL11lL1 =$aDateFMT; return true; }function TITIl1T($IL11L1I){ if($IL11L1I==1){ $this->IL11l1l =1; }else{ $this->IL11l1l =0; }return true; }function SetCaptions($aCaptions){ $this->Captions =$aCaptions; return true; }function AddCaptions($aCaptions){ $this->Captions =array_merge($this->Captions, $aCaptions); return true; }function GetCaptions(){ return $this->Captions; }function SetMessages($aMessages){ $this->Messages =$aMessages; return true; }function GetStatusMessages(){ return $this->Status; }function TITIl1I(){ $this->IL11LII =true; return true; }function TITIl1l(){ $this->IL11LII =false; return true; }function TITIl11(&$db, $IL11L1l, $IL11L1L, $IL11L11=20, $IL111II =false, $IL111Il =false){ $res =array(); $res["data"] =array(); while($db->next_record()){ $III1lLL =array(); $III1lLL["caption"] =$this->Base->StripLine($db->Record[$IL11L1L], $IL11L11); $III1lLL["value"] =$IL111II ?floatval($db->Record[$IL11L1l]) :$db->Record[$IL11L1l]; if(is_array($IL111Il) && is_object($IL111Il[0]) && !empty($IL111Il[1]) && is_array($IL111Il[2]) && is_array($IL111Il[3])){ $IL111Il[2][I5232] =$this->blockForm; $IL111Il[0]->{$IL111Il[1]}($db->Record, $IL111Il[2]); foreach($IL111Il[3] as $fld){ $III1lLL[$fld] =$db->Record[$fld]; }}$res["data"][] =$III1lLL; }return $res; }function AddItemsToMultiField($IL111IL, $IL111I1, $IL11L11=20, $IL111lI =true){ $IL111IL =(array) $IL111IL; $res =$IL111IL; if(!isset($res['data']) && $IL111lI){ $res['data'] =array(); }foreach($IL111I1 as $IL111ll=>$IILlLlL){ $III1lLL =array(); $III1lLL["caption"] =$this->Base->StripLine($IL111ll, $IL11L11); $III1lLL[I5233] =$IILlLlL; if($IL111lI) {$res["data"][] =$III1lLL; }else {$res["data"] =Array(0 => $III1lLL); if(isset($IL111IL['data']) && is_array($IL111IL['data'])) {$res[I5234] =array_merge($res[I5234], $IL111IL[I5234]); }}}return $res; }function TITI1TT($IL111IL, $IL111I1, $IL11L11=20, $IL111lI =true){ return $this->AddItemsToMultiField($IL111IL, $IL111I1, $IL11L11, $IL111lI); }function TITI1TI($IL111IL, $IL111I1, $IL11L11=20, $IL111lI =true){ return $this->AddItemsToMultiField($IL111IL, $IL111I1, $IL11L11, $IL111lI); }function TITI1Tl($IL111IL, $IL111I1, $IL11L11=20, $IL111lI =true){ return $this->AddItemsToMultiField($IL111IL, $IL111I1, $IL11L11, $IL111lI); }function issetField($cName){ return array_key_exists($cName, $this->Fields); }function setExtraFieldParams($params) {$this->IL11Lll =$params; }function AddField( $cName, $cType, $cValue=I5226 ,$cDefaultValue=I5226, $cCondition=I5226, $cTableFieldName=I5226, $cMultiValues=I5226, $cMultiple=0, $cSize=1, $cHasDetails =false ){if(!in_array($cType, $this->IL11lLl)){ trigger_error("Unknown filter field [$cName] type [$cType]...", E_USER_WARNING); return false; }if(is_array($cValue)) {foreach($cValue as $index=>$val) {$cValue[$index] =trim($val); }$vVal =$cValue; }else {$vVal =trim($cValue); if( $vVal==I5226 ){$vVal =$cDefaultValue; }}$res =$vVal; $aField =$this->IL11Lll; $aField["type"] =$cType; $aField["multiple"] =$cMultiple; $aField["size"] =($cSize>1)?$cSize:"1";; $aField[I5235] =$cHasDetails; $aField["condition"] =$cCondition; $aField["table_field"] =$cTableFieldName; $aField["disableSQL"] =false; if( empty( $aField["table_field"] )){$aField[I5236] =$cName; }switch ($cType) {case "numeric": $aField[I5233] =doubleval($vVal); break; case "timestamp": case "date": if($cDefaultValue === false){ if(!is_array($cValue) && empty($cValue)){ $res =$vVal =I5226; break; }else if(is_array($cValue) && mb_strpos($aField["condition"], I5237) !== false && empty($cValue[0]) && empty($cValue[1])){ $res =$vVal =array(I5226, I5226); break; }else if(is_array($cValue)){ $isEmpty =true; for($i =0; $i <count($cValue); $i++){ if(!empty($cValue[$i])){ $isEmpty =false; break; }}if($isEmpty){ $res =$vVal =array(); break; }}}$vDefault =$cDefaultValue; if($vDefault === false) $vDefault =I5226; else if(empty($vDefault)) $vDefault =time(); if(!is_array($this->IL11lL1)){ trigger_error("Filter: date formats is not initialized...", E_USER_ERROR); }$valIsArr =is_array($vVal); if(!$valIsArr){ $vVal =array($vVal); $cValue =array($cValue); $uDate =array(); $aField["uvalue"] =array(); $aField[I5233] =array(); }$isMessgGenerated =false; for($i =0; $i <sizeof($vVal); $i++){ if(empty($cValue[$i]) && $cDefaultValue === false) continue; if(!$isMessgGenerated && !empty($cValue[$i]) && (DateTools::isvaliddate($vVal[$i], $this->IL11lL1["conf"]) === false) && !$this->IL11LII){ $aStat =array(); $aStat["message"] =$this->Captions[$cName]; if(isset($this->Messages[I5238.$cName])){ $aStat["type"] =I5238.$cName; $aStat["message"] =$this->Messages[I5238.$cName]; }else{ $aStat["type"] ="invalid_value"; $aStat[I5239] =$this->Messages["invalid_value"]." [".$aStat[I5239]."]"; }$this->Status[] =$aStat; $isMessgGenerated =true; }if ($cCondition != '<=') {$uDate[$i] =DateTools::getCorrectUDate($vVal[$i], $this->IL11lL1[I5240], $vDefault); }else {$uDate[$i] =DateTools::getCorrectUDate($vVal[$i], $this->IL11lL1[I5240], $vDefault); $uDate[$i] =DateTools::getEndDayTimestamp($uDate[$i]); }$vVal[$i] =date($this->IL11lL1["php"], $uDate[$i]); if($cType == "timestamp" && empty($cDefaultValue) && empty($cValue[$i])) {$aField[I5233][$i] =I5226; }else {$aField[I5233][$i] =$vVal[$i]; }$aField["uvalue"][$i] =$uDate[$i]; }if(!$valIsArr){ $vVal =$vVal[0]; $cValue =$cValue[0]; $uDate =$uDate[0]; $aField["uvalue"] =$aField[I5241][0]; $aField[I5233] =$aField[I5233][0]; }$aField["min_max"] =$cMultiValues; $res =$uDate; break; case "flagmap": $aField[I5233] =$vVal; $aField["params"] =$cMultiValues; break; case "select": $aField[I5233] =$vVal; $aField[I5242] =$cMultiValues; break; case "radio": $aField[I5233] =$vVal; $aField[I5242] =$cMultiValues; break; case "checkbox": $aField[I5233] =$vVal; $aField[I5242] =$cMultiValues; break; case I5229: $aField["disableSQL"] =true; $aField["template"] =empty($cValue) ?I5229 :$cValue; $aField[I5233] =$cDefaultValue; break; case I5243: $aField["disableSQL"] =true; break; case "Hsplitter": $aField["disableSQL"] =true; break; case "Sblock": $aField[I5244] =true; break; case I5230: $aField[I5244] =true; break; default: $aField[I5233] =$vVal; $res =$vVal; break; }if(!isset($this->Fields[$cName])) {$aField["position"] =$this->IL11l11; $this->IL11l11 ++; }else {$aField["position"] =$this->Fields[$cName]["position"]; }$this->Fields[$cName] =$aField; return $res; }public function TITI1T1($fieldName){ $this->IL11LlL[$fieldName] =true; }public function TITI1IT($fieldName){ if(isset($this->IL11LlL[$fieldName])){ unset($this->IL11LlL[$fieldName]); }}function TITI1II($cName, $IL111lL, $IL111l1 ="regular"){ if(!array_key_exists($cName, $this->Fields)){ trigger_error("Unknown filter field [$cName]...", E_USER_WARNING); return false; }$this->Fields[$cName][I5245] =$IL111lL; $this->Fields[$cName]["exception_type"] =$IL111l1; return true; }function TITI1Il($IL111LI, $IL111Ll){ $this->Fields[$IL111LI]["output_value"] =$IL111Ll; }function TITI1I1($IL111LI, $cId=I5226){ $res =true; if(is_array($IL111LI)){ $aFields =$IL111LI; }else{ $aFields =array($IL111LI=>$cId); }foreach($aFields as $vName => $vId){ if(!array_key_exists($vName, $this->Fields)){ trigger_error("Unknown filter field [$vName]...", E_USER_WARNING); $res =false; }$this->Fields[$vName]["help_id"] =$vId; }return $res; }function UpdateField($cName, $cValue){ if(!array_key_exists($cName, $this->Fields)){ trigger_error("Unknown filter field [$cName]...", E_USER_WARNING); return false; }switch ($this->Fields[$cName]["type"]){ case I5246: $this->Fields[$cName][I5241] =$cValue; $this->Fields[$cName][I5233] =date($this->IL11lL1["php"], $cValue); break; default: $this->Fields[$cName][I5233] =$cValue; break; }return true; }function UpdateFieldDBName($cName, $cDBName){ if(!array_key_exists($cName, $this->Fields)){ trigger_error("Unknown filter field [$cName]...", E_USER_WARNING); return false; }$this->Fields[$cName][I5236] =$cDBName; return true; }function DisableFieldSql($cName){ if(!array_key_exists($cName, $this->Fields)){ trigger_error("Unknown filter field [$cName]...", E_USER_WARNING); return false; }$this->Fields[$cName][I5244] =true; return true; }function TITI1lT($cName){ if(!array_key_exists($cName, $this->Fields)){ trigger_error("Unknown filter field [$cName]...", E_USER_WARNING); return false; }$this->Fields[$cName][I5244] =false; return true; }function TITI1lI($IL111LL =I5226){ $res =array(); foreach($this->Fields as $vName => $vData){ if(empty($IL111LL)){ $res[$vData["position"]] =$vName; }else{ $res[$vData["position"]] =$vData[$IL111LL]; }}return $res; }function TITI1ll($IL111L1){ for($i=0; $i<count($IL111L1); $i++){ $this->Fields[$IL111L1[$i]]["position"] =$i; }return true; }function MoveField($cName, $IL1111I, $IL1111l =1){ if(!array_key_exists($cName, $this->Fields)){ trigger_error("Unknown filter field [$cName]...", E_USER_WARNING); return false; }$IL1111L =$this->Fields[$cName][I5247]; $IL11111 =$this->TITI1lI(); switch ($IL1111I) {case self::MOVE_PREV: do{ $I1IIIII =($IL1111L>0)?($IL1111L-1):0; if($I1IIIII>=0){ $I1IIIIl =$IL11111[$I1IIIII]; $IL11111[$I1IIIII] =$IL11111[$IL1111L]; $IL11111[$IL1111L] =$I1IIIIl; if($this->Fields[$I1IIIIl]["type"]==I5224){ $IL1111L =$I1IIIII; continue; }}break; }while(true); break; case self::MOVE_NEXT: do{ $I1IIIII =$IL1111L+1; if($I1IIIII<count($IL11111)){ $I1IIIIl =$IL11111[$I1IIIII]; $IL11111[$I1IIIII] =$IL11111[$IL1111L]; $IL11111[$IL1111L] =$I1IIIIl; if($this->Fields[$I1IIIIl]["type"]==I5224){ $IL1111L =$I1IIIII; continue; }}break; }while(true); break; case self::MOVE_START: if($IL11111[0]!=$cName){ $j =1; $I1IIIIL[0] =$cName; for($i=0; $i<count($IL11111); $i++){ if($IL11111[$i]!=$cName){ $I1IIIIL[$j] =$IL11111[$i]; $j++; }}$IL11111 =$I1IIIIL; }break; case self::MOVE_END: $I1IIIII =count($IL11111)-1; if($IL11111[$I1IIIII]!=$cName){ $j =$I1IIIII-1; $I1IIIIL[$I1IIIII] =$cName; for($i=count($IL11111)-1; $i>=0; $i--){ if($IL11111[$i]!=$cName){ $I1IIIIL[$j] =$IL11111[$i]; $j--; }}$IL11111 =$I1IIIIL; }break; default: trigger_error("Unknown action in MoveField [$IL1111I]...", E_USER_WARNING); break; }$this->TITI1ll($IL11111); if( $IL1111l>1 && in_array($IL1111I, array(self::MOVE_PREV, self::MOVE_NEXT))){ $this->MoveField($cName, $IL1111I, $IL1111l-1); }return true; }function TITI1l1($cName){ $aName =(array) $cName; $aPos =$this->TITI1lI(); ksort($aPos); foreach($aName as $name) {if(!in_array($name, $aPos)){ trigger_error("Unknown filter field [$name]...", E_USER_WARNING); continue; }unset($aPos[$this->Fields[$name][I5247]]); unset($this->Fields[$name]); $this->IL11l11--; }$this->TITI1ll(array_slice($aPos, 0)); return true; }function TITI11T($aSkipFields =Array()){ $aName =Array(); foreach($this->Fields as $name => $aField) {if($aField["type"] != I5224 && !in_array($name, $aSkipFields)) {$aName[] =$name; }}$this->TITI1l1($aName); }function GetFieldsAsHidden($fieldsNamePrefix =''){ $res =I5226; $this->Gui->AddBlock($this->blockForm, $this->templateForm); foreach($this->Fields as $vName => $vData){ if(in_array($vData[I5248], $this->IL11LIl)){ continue; }$I1IIII1 =array(); if(is_array($vData[I5233])) {$I1IIII1['name'] =$fieldsNamePrefix .$vName .'[]'; foreach($vData[I5233] as $value) {$I1IIII1[I5233] =$this->Base->htmlchars($value); $I1IIII1["end_value"] =rawurlencode($value); $res .= $this->Gui->get($this->blockForm.":field_hidden", $I1IIII1); }}else {$I1IIII1[I5249] =$fieldsNamePrefix .$vName; $I1IIII1[I5233] =$this->Base->htmlchars($vData[I5233]); $I1IIII1["end_value"] =rawurlencode($vData[I5233]); $res .= $this->Gui->get($this->blockForm.":field_hidden", $I1IIII1); }}return $res; }function GetFieldsAsUrlParams(){ $res =I5226; foreach($this->Fields as $vName => $vData){ if(in_array($vData[I5248], $this->IL11LIl)){ continue; }if(is_array($vData[I5233])) {$i =0; foreach($vData[I5233] as $val) {$res .= "&".$vName."[]=".rawurlencode($val); }}else {$vData[I5233] =I5226.$vData[I5233]; if($vData[I5233].I5226 !== I5226) {$res .= I5250.$vName."=".rawurlencode($vData[I5233]); }}}return $res; }function GetFieldValue($IIlLlLI) {return $this->Fields[$IIlLlLI][I5233]; }function TITI11I($IIlLlLI) {return $this->Fields[$IIlLlLI][I5236]; }function GetFieldsAsArray(){ $res =Array(); foreach($this->Fields as $vName => $vData){ if(in_array($vData[I5248], $this->IL11LIl)){ continue; }if(!empty($vData[I5233])) {$res[$vName] =$vData[I5233]; }}return $res; }function GetFilterHtml($I1IIIlI =false, $I1IIIll =true){ $res =I5226; $this->Gui->AddBlock($this->blockBox, $this->templateBox); $this->Gui->AddBlock($this->blockForm, $this->templateForm); $aFilter =array(); $aFilter["script_name"] =$this->ScriptName; $aFilter["filter_body"] =I5226; $aFields =array(); $I1IIIlL =array(); $I1IIIl1 =false; foreach($this->Fields as $vName => $vData){ if($vData[I5248] != I5224 && $vData[I5248] != I5227 && $vData[I5248] != "subcats_search"){ $I1IIIl1 =true; break; }}foreach($this->Fields as $vName => $vData){ $I1IIII1 =array(); $I1IIII1[I5247] =$vData[I5247]; $I1IIII1[I5251] =I5226; $I1IIII1[I5235] =$vData[I5235]; $I1IIII1["details_id"] =$vName; if(isset($vData[I5251])) $I1IIII1[I5251] =$vData[I5251]; if(isset($vData["output_value"])) {$vData[I5233] =$vData["output_value"]; }$out =false; $I1IIILI =$vName; $I1IIILl =empty($this->Captions[$vName]) ?'' :preg_replace('/^(.*?)\[(.*?)\]\s*$/', '\1 \2', $this->Captions[$vName]); switch ($vData[I5248]){ case I5229: $I1IIII1["name"] =$vData["template"]; $I1IIII1[I5233] =$vData[I5233]; $I1IIII1["caption"] =$I1IIILl; $I1IIILL =I5252.$vData["template"]; $out =true; break; case I5246: $I1IIII1["date_format"] =$this->IL11lL1['conf']; $I1IIII1["datetime_format"] =$this->IL11lL1[I5253]; $I1IIII1["min_max"] =$vData["min_max"]; case "timestamp": case "text": case I5254: if (is_string($vData[I5233])) {$vData[I5233] =$this->Base->htmlchars($vData[I5233]); }$I1IIII1["name"] =$vName; if(mb_strpos($vData["condition"], I5237) === false){ $I1IIII1[I5233] =$vData[I5233]; $I1IIII1["caption"] =$I1IIILl; $I1IIILL =I5252.($vData[I5248] == I5246 ?I5246 :"text"); }else{ if(is_array($vData[I5233])){ $I1IIII1[I5233] =$vData[I5233][0]; $I1IIII1[I5255] =$vData[I5233][1]; }else $I1IIII1[I5233] =$I1IIII1[I5255] =$vData[I5233]; $I1IIII1["caption"] =$I1IIILl; if(($pos =mb_strpos($I1IIII1["caption"], "||")) !== false){ $I1IIII1["caption_to"] =mb_substr($I1IIII1[I5256], $pos+2); $I1IIII1[I5256] =mb_substr($I1IIII1[I5256], 0, $pos); }$I1IIILL =I5252.($vData[I5248] == I5246 ?I5246 :"text")."_interval"; }$out =true; break; case "subcats_search": if($I1IIIl1){ $I1IIII1["name"] =$vName; $I1IIII1[I5233] =$vData[I5233]; if($I1IIII1[I5233]>0){ $I1IIII1[I5257] =I5257; }$I1IIII1[I5256] =$I1IIILl; $I1IIILL ="field_subcats_search"; $out =true; }break; case I5225: if(empty($vName) || $vName == I5225) {$I1IIII1["name"] ="btnFlt_apply"; }else {$I1IIII1["name"] =$vName; }$I1IIII1[I5256] =$I1IIILl; $I1IIILL =I5258; $out =true; break; case "button": $I1IIII1["name"] =$vName; $I1IIII1[I5256] =$I1IIILl; $I1IIILL ="field_button"; $out =true; break; case "flagmap": $I1IIIL1 =TlTllT1($vData[I5233]); $I1IIILL =I5259; $I1IIII1[I5256] =$I1IIILl; $I1IIII1['value'] =''; if($vData["params"][0] == "select" || $vData[I5260][0] == "multiple_select"){ $I1IIILL ="field_select"; $I1IIII1["name"] =$vName."_flag"; if($vData[I5260][0] == I5261) {$I1IIII1["multiple"] ="multiple"; $I1IIII1["name"] .= "[]"; $I1IIII1[I5262] =3; }}if(is_array($vData[I5260][1])){ $flagsData =&$vData[I5260][1]; $isFirst =true; for($i =1; $i <= sizeof($flagsData); $i++){ if($flagsData[$i]["u"] == "1" && $flagsData[$i]["f"] == "1"){ if($isFirst && ($vData[I5260][0] == I5263 || $vData[I5260][0] == I5261)){ $I1III1I =Array("name" => I5226, I5233 => I5226, I5257 => I5226, "selected" => I5226, I5256 => $vData[I5260][2]); $I1IIII1[I5233] .= $this->Gui->get($this->blockForm.":field_select_row", $I1III1I); $isFirst =false; }$I1III1I =Array("name" => $vData[I5260][0] == I5264 ?$vName."_flag_".$i :$vName."_flag", I5233 => $i, I5257 => empty($I1IIIL1[$i -1]) ?'' :'checked', I5265 => empty($I1IIIL1[$i -1]) ?'' :'selected', I5256 => $flagsData[$i]["c"]); if($vData[I5260][0] == "radio") $I1IIII1[I5233] .= $this->Gui->get($this->blockForm.I5266, $I1III1I); else if($vData[I5260][0] == I5263 || $vData[I5260][0] == I5261) $I1IIII1[I5233] .= $this->Gui->get($this->blockForm.":field_select_row", $I1III1I); else $I1IIII1[I5233] .= $this->Gui->get($this->blockForm.":field_flag", $I1III1I); if($flagsData[$i]["s"] == "1") $I1IIII1[I5233] .= $this->Gui->getAbs($this->blockForm.":field_flag_VSplitter"); }}}$out =true; break; case I5264: $I1IIII1["name"] =$vName; $I1IIII1[I5233] =I5226; $I1IIII1[I5256] =$I1IIILl; $I1IIILL =I5252.($vData["multiple"] ?"checkboxes" :I5264); if($vData["multiple"]) {$I1IIII1[I5267] .= "[]"; if(is_array($vData[I5242])){ if(is_array($vData[I5242][I5234])){ $count =0; foreach($vData[I5242][I5234] as $IL111ll => $ILLll11){ $ILLll11[I5265] =I5226; if(is_array($vData[I5233])) {if(in_array($ILLll11[I5233], $vData[I5233])) {$ILLll11[I5265] =I5257; }}else {if($ILLll11[I5233].I5226==$vData[I5233].I5226){ $ILLll11[I5265] =I5257; }}$ILLll11[I5267] =$I1IIII1[I5267]; $ILLll11["count"] =$count++; $I1IIII1[I5233] .= $this->Gui->get($this->blockForm.":field_checkboxes_row", $ILLll11); }}}}else{ $I1IIII1[I5233] =$vData[I5233]; if($I1IIII1[I5233]>0){ $I1IIII1[I5257] =I5257; }}$out =true; break; case "radio": case I5263: $I1IIII1[I5267] =$vName; $I1IIII1[I5256] =$I1IIILl; $I1IIILL =I5252.$vData[I5248]; $IIIlLlL =$vData[I5242]; $I1IIII1[I5233] =I5226; $I1IIII1[I5262] =$vData[I5262]; if($vData[I5268]) {$I1IIII1[I5268] =I5268; $I1IIII1[I5267] .= "[]"; }if(is_array($IIIlLlL)){ if(is_array($IIIlLlL[I5234])){ $count =0; foreach($IIIlLlL[I5234] as $IL111ll => $ILLll11){ $ILLll11[I5265] =I5226; if(is_array($vData[I5233])) {if(in_array($ILLll11[I5233], $vData[I5233])) {$ILLll11[I5265] =($vData[I5248] == "radio" ?I5257 :I5265); }}else {if($ILLll11[I5233].I5226==$vData[I5233].I5226){ $ILLll11[I5265] =($vData[I5248] == "radio" ?I5257 :I5265); }}if($vData[I5248] == "radio"){ $ILLll11[I5267] =$vName; $ILLll11[I5269] =$count++; }$I1IIII1[I5233] .= $this->Gui->get($this->blockForm.":field_".$vData[I5248]."_row", $ILLll11); }}}$out =true; break; case I5243: $I1IIILL ="field_Vsplitter"; $out =true; break; case "Hsplitter": $I1IIILL =I5270; $out =true; break; case "Sblock": $I1IIILL ="field_Sblock"; $out =true; break; case I5230: $I1IIILL ="field_Fblock"; $out =true; break; case I5224: $I1IIILI ="hidden_fields"; case I5227: if($I1IIIlI) {$I1IIII1[I5267] =$vName; $I1IIII1[I5233] =$vData[I5233]; $I1IIILL =I5271; $out =true; }break; default: break; }if($out){ if($I1IIII1[I5235]){ $I1IIII1["details"] =$this->Gui->getDefPostf($this->blockForm.":"."field_details", "_".$vName, $I1IIII1); }if(!isset($I1IIIlL[$I1IIILI])) {$I1IIIlL[$I1IIILI] =I5226; }$I1IIII1[I5272] =$this->Gui->getDefPostf($this->blockForm.":".$I1IIILL, "_".$vName, $I1IIII1); $aFields[$I1IIII1[I5247]] =$this->Gui->getDefPostf($this->blockForm.":field_row", "_".$vName, $I1IIII1); $I1IIIlL[$I1IIILI] .= $aFields[$I1IIII1[I5247]]; }}ksort($aFields, SORT_NUMERIC); reset($aFields); foreach($aFields as $vData){ $aFilter[I5273] .= $vData; }$aFilter += $I1IIIlL; $I1III1l =array(); $I1III1l["header"] =I5226; $aFilter["name_postfix"] =$I1III1l["name_postfix"] =$this->IL11LIL; if($this->IL11LI1 != I5226) {$aFilter["submit_url"] =$this->IL11LI1; }$aFilter[I5274] =1; $I1III1l["content"] =$this->Gui->get($this->blockForm, $aFilter); if($I1IIIll) {$res =$this->Gui->get($this->blockBox, $I1III1l); }else {$res =$I1III1l["content"]; }return $res; }function TITI11l($I1IIIll =true) {$res =I5226; $fields["content"] =I5226; $fields[I5274] =1; $out =false; $I1III1L =false; $I1IIII1 =array(); $I1III11 =array(); foreach($this->Fields as $vName => $vData) {$I1IIII1[I5251] =I5226; if(isset($vData[I5251])) $I1IIII1[I5251] =$vData[I5251]; if($vData[I5248] == I5227) {$I1IIII1[I5267] =$vName; $I1IIII1[I5233] =$vData[I5233]; $I1IIII1[I5256] =$this->Captions[$vName]; $out =true; }if($vName == "letter"){ $I1III11[I5267] =$vName; $I1III11[I5233] =$vData[I5233]; $I1III1L =true; }}if($out){ $I1IIII1[I5272] =$this->Gui->get($this->blockForm.I5275, $I1IIII1); $fields["content"] .= $this->Gui->getDefPostf($this->blockForm.":field_row", "_".$vName,$I1IIII1); }if($I1III1L){ $fields["content"] .= $this->Gui->get($this->blockForm.I5276, $I1III11); }if(!empty($fields)) {if($I1IIIll) {$fields["name_postfix"] =$this->IL11LIL; $res =$this->Gui->get($this->blockBox.":search_box", $fields); }else {$res =$fields["content"]; }}return $res; }function TITI111($fieldName, $fieldValue, $fieldType, $encodeHTML =true){ if($fieldType == 'text'){ $I1IIlII =$fieldName; if(strncmp($I1IIlII, I5277, 4) == 0){ $I1IIlII =mb_substr($I1IIlII, 4); }if(!isset($this->IL11LlL[$fieldName])){ if(in_array($I1IIlII, $this->IL11LlI)){ $fieldValue =$this->Base->TTITIT1($fieldValue); }else if ($encodeHTML) {$fieldValue =$this->Base->htmlchars($fieldValue, 'htmlchars'); }}}$fieldValue =addslashes($fieldValue); return $fieldValue; }function GetFilterSql(){ if(AMI::getSingleton('env/request')->get('force_sync', FALSE) && !$this->issetField('force_sync')){ $this->AddField(I5278, 'hidden', 1); $this->DisableFieldSql(I5278); }$sql =" "; $oSearchCmd =false; foreach($this->Fields as $vName => $vData){ if((!empty($vData["condition"]) || $vData[I5248] == I5227) && !($vData[I5244])){ if(is_array($vData[I5233])) {foreach($vData[I5233] as $index=>$value) {$vData[I5233][$index] =$this->TITI111($vName, $value, $vData[I5248]); }$val =$vData[I5233]; }else {$val =$this->TITI111($vName, $vData[I5233], $vData[I5248], !isset($vData['encodeHTML']) ?true :$vData[I5279]); }$prefix =I5226; $postfix =I5226; $reverse =false; if(isset($vData[I5245]) && !empty($vData[I5245])){ $prefix ="( "; $I1IIlIl =''; if(in_array($vName, $this->IL11lLL)){ $I1IIlIl =" OR ".$vData[I5236]." = '0' "; }$postfix =I5280.$vData[I5245].$I1IIlIl." )"; }switch ($vData[I5248]){ case "timestamp": $val =$vData[I5241]; break; case I5246: if(empty($vData[I5241])){ $val =I5226; break; }else if(is_array($vData[I5241])){ foreach($vData[I5241] as $k => $uval) if(!empty($uval)){ $val[$k] =DateTools::toMysqlDate($uval); }}else $val =DateTools::toMysqlDate($vData[I5241]); break; case "flagmap": $val =explode(":", chunk_split(TlTllT1($vData[I5233]), 63, I5281)); if(empty($val[sizeof($val)-1])) unset($val[sizeof($val)-1]); break; case I5227: if(!is_object($oSearchCmd)) {require_once $GLOBALS['CLASSES_PATH'] .'searchCmd.php'; $searchModule =$GLOBALS["cms"]->ActiveModule->GetName(); $oSearchCmd =new searchCmd($GLOBALS["cms"], $searchModule); }$fSql =I5282; if($oSearchCmd->parseCmd($vData[I5233])) {if(sizeof($vData[I5236]) >0){ $fSql =$oSearchCmd->getSuperSQL($vData[I5236]); }}if(!empty($vData['exception'])){ $fSql .= $vData['exception']; }if(!empty($fSql)) {$sql .= " AND (" .$fSql .")"; }continue 2; break; }$vcond =mb_strtolower(trim($vData[I5283])); if(($vcond=="like" || $vcond=="not like") && $vData[I5248] != "flagmap"){ if((!is_array($val) && $val==I5226) || (is_array($val) && sizeof($val) == 0)){ continue; }$reverse =true; $aCond =$this->GetLikeSQL($val, $vData['table_field'], $vcond == I5284, isset($vData['exception']) ?$vData['exception'] :false, false, in_array($vName, $this->IL11lLL)); $sql .= $aCond["res"]; }else {if($vData[I5248] == "flagmap"){ $usedFlagsMask =array(); if(is_array($vData[I5260][1])){ $flagsData =&$vData[I5260][1]; for($i =1; $i <= sizeof($flagsData); $i++){ $usedFlagsMask[ceil($i/63)].= ($flagsData[$i][I5285] == "1" && $flagsData[$i]["f"] == "1" ?"1" :I5282); }}$I1IIlIL =false; if(in_array($vName, $this->IL11lLL)){ $I1IIlIL =true; }$fSql =I5226; switch($vcond){ case I5286: $fldCount =1; foreach($val as $null => $realVal){ if(mb_strpos($realVal, "1") !== false) $fSql .= (!empty($fSql) ?" AND " :I5226).$vData[I5236]."_".$fldCount."&CONV('".strrev(str_pad($usedFlagsMask[$fldCount], 64, I5282)).I5287.strrev(str_pad($realVal, 64, I5282))."', 2, 10)". ($I1IIlIL ?' OR '.$vData[I5236]."_".$fldCount." = '0' " :I5288); $fldCount ++; }break; case "like": $fldCount =1; foreach($val as $null => $realVal){ if(mb_strpos($realVal, "1") !== false) $fSql .= (!empty($fSql) ?" OR " :I5226).$vData[I5236]."_".$fldCount.I5289.strrev(str_pad($usedFlagsMask[$fldCount], 64, I5282))."', 2, 10)&CONV('".strrev(str_pad($realVal, 64, I5282))."', 2, 10)<>0". ($I1IIlIL ?' OR '.$vData[I5236]."_".$fldCount.I5290 :I5288); $fldCount ++; }break; default: $fldCount =1; foreach($val as $null => $realVal){ if(mb_strpos($realVal, "1") !== false) $fSql .= (!empty($fSql) ?" AND " :I5226).$vData[I5236]."_".$fldCount."|CONV('".strrev(str_pad($realVal, 64, I5282)).I5291.$vData[I5236]."_".$fldCount. ($I1IIlIL ?' OR '.$vData[I5236]."_".$fldCount.I5290 :I5288); $fldCount ++; }break; }if(!empty($vData[I5245]) && mb_strpos($vData[I5245], "=|") === 0) $fSql =I5292.$fSql.")".mb_substr($vData[I5245], 2).")"; else if(!empty($vData[I5245])) $fSql =" AND ".$prefix.I5282.$postfix; else $fSql =" AND ".$prefix.I5293.$fSql.")".$postfix; }else{ $condPart =I5226; $condPartDirect =I5226; if(mb_strpos($vcond, 'interval') !== false){ if(!is_array($val)){ $vcond ="="; }else{ $fieldType =mb_substr($vcond, 10, mb_strlen($vcond) -11); $leftCond =$vcond[0] == "[" ?I5294 :">"; $rightCond =$vcond[0] == "[" ?"<=" :"<"; if($fieldType == I5295){ $I1IIlI1 =intval($val[0]); $val2 =intval($val[1]); }elseif($fieldType == 'float'){ $I1IIlI1 =floatval($val[0]); $val2 =floatval($val[1]); }else{ $I1IIlI1 =empty($val[0]) ?I5288 :"'".$val[0]."'"; $val2 =empty($val[1]) ?I5288 :"'".$val[1].I5296; }$condPartDirect =(!empty($I1IIlI1) ?$vData[I5236].$leftCond.$I1IIlI1 :I5226).(!empty($I1IIlI1) && !empty($val2) ?" AND " :I5226).(!empty($val2) ?$vData[I5236].$rightCond.$val2 :I5226); if($reverse) $condPart =(!empty($I1IIlI1) ?$I1IIlI1.$rightCond.$vData[I5236] :I5226).(!empty($I1IIlI1) && !empty($val2) ?" AND " :I5226).(!empty($val2) ?$val2.$leftCond.$vData[I5236] :I5226); else $condPart =$condPartDirect; if(in_array($vName, $this->IL11lLL)){ $condPartDirect ='(('.$condPartDirect.') OR '.$vData[I5236].I5297; $condPart ='(('.$condPart.') OR '.$vData[I5236].I5297; }}}else{ if(!is_array($val)) $val =array($val); for($i =0; $i <count($val); $i++){ $condPartDirect .= ($i >0 ?" OR " :I5226).$vData[I5236].$vcond.I5296.$val[$i].I5296; if($reverse) $condPart .= ($i >0 ?" OR " :I5226).I5296.$val[$i].I5296.$vcond.$vData[I5236]; else $condPart .= ($i >0 ?I5298 :I5226).$vData[I5236].$vcond.I5296.$val[$i].I5296; }if(in_array($vName, $this->IL11lLL)){ $condPartDirect .= ' OR '.$vData[I5236].' IS NULL '; $condPart .= ' OR '.$vData[I5236].' IS NULL '; }$condPartDirect =I5293.$condPartDirect.I5299; $condPart =I5293.$condPart.I5299; }if($reverse){ $fSql =" AND ".$prefix.$condPart.$postfix; }else{ if(!empty($vData[I5245]) && mb_strpos($vData[I5245], "=|") === 0) {$fSql =" AND (".$condPartDirect.(empty($condPartDirect) && $vData["exception_type"] == I5300 ?'0 ' :I5288).mb_substr($vData[I5245], 2).I5299; }else if(!empty($vData[I5245])) {if($vData["exception_type"] == I5300) {$fSql =" AND ".$prefix.I5282.$postfix; }else {$fSql =" AND ".$prefix.$condPart.$postfix; }}else {$fSql =I5301.$prefix.$condPart.$postfix; }}}$sql .= $fSql; }}}$sql .= I5280; return $sql; }function GetLikeSQL($aVal, $field, $positive =true, $exception =I5226, $condition =false, $I1IIllI =false) {$res =Array( "prefix"=>I5226, "field"=>$field, "cond"=>" like ", I5302=>I5226, "res"=>I5226 );if(!is_array($aVal)) {$aVal =Array($aVal); }$num =sizeof($aVal); if($condition && $condition != "like" && $condition != "not like"){ if(mb_strpos($condition, 'interval') !== false){ if(!isset($aVal[1])) $aVal[1] =$aVal[0]; $leftCond =$condition[0] == I5303 ?I5294 :">"; $rightCond =$condition[0] == I5303 ?"<=" :"<"; $fieldType =mb_substr($condition, 10, mb_strlen($condition) -11); if($fieldType == I5295){ $I1IIlI1 =intval($aVal[0]); $val2 =intval($aVal[1]); }elseif($fieldType == 'float'){ $I1IIlI1 =floatval($aVal[0]); $val2 =floatval($aVal[1]); }else{ $I1IIlI1 =empty($aVal[0]) ?I5288 :I5296.$aVal[0].I5296; $val2 =empty($aVal[1]) ?I5288 :I5296.$aVal[1].I5296; }$res[I5304] .= $res["prefix"].$res["field"].$leftCond.$I1IIlI1.(!empty($val2) ?I5301.$res["field"].$rightCond.$val2 :I5226).$res[I5302]; }else{ for($i=0; $i<$num; $i++) {$res[I5304] .= $res["prefix"].$res[I5305].$condition.I5296.$aVal[$i].I5296.$res[I5302]; if($i <($num -1)) {$res[I5304] .= I5298; }}}}else{ if($condition == "like") $positive =true; else if($condition == "not like") $positive =false; for($i=0; $i<$num; $i++) {$res["val"] =$aVal[$i]; $res["val"] =preg_replace('/^(&#039;|&amp;|&quot;)(.*)\1$/si', '$2', $res["val"]); $isEqualCondition =false; if($res["val"] != $aVal[$i]){ $aVal[$i] =$res["val"]; $isEqualCondition =true; }if(!$positive) $res[I5306] =" not".$res[I5306]; $res["val"] =$aVal[$i]; $res["val"] =str_replace(array("%", I5307), array("\\%", "\\_"), $res["val"]); $res["val"] =preg_replace(I5308, '%', $res["val"]); $res["val"] =preg_replace('/\?+/si', I5309, $res["val"]); if(mb_strlen($res["val"]) >0 && $res["val"][mb_strlen($res["val"])-1] != I5310 && !$isEqualCondition) $res["val"] .= "%"; if(mb_strlen($res["val"]) >0 && $res["val"][0] != I5310 && !$isEqualCondition) $res[I5311] ="%".$res[I5311]; $res[I5304] .= $res["prefix"].$res[I5305].$res[I5306].I5296.$res[I5311].I5296.$res[I5302]; if($i <($num -1)) {$res[I5304] .= I5298; }}}if($I1IIllI){ $res[I5304] .= ' OR '.$res[I5305].' IS NULL '; }if($num >1 || !empty($exception)) {if(!empty($exception) && mb_strpos($exception, I5312) === 0) $res[I5304] =" AND (".$res[I5304].mb_substr($exception, 2).I5299; else if(!empty($exception)) $res[I5304] =" AND (0".$exception.I5299; else{ $res[I5304] =" AND (".$res[I5304].I5299; }}else {$res[I5304] =" AND (".$res[I5304].I5299; }return $res; }}