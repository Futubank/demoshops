<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       9057 xkqwimtipimrtwgpyylqwrqnzzzrmkyzpnqsuwrpininqillxxzxnxiwqppzympnqsqzpnir
 */ ?><?php foreach(array(5631=>'PQt',5632=>'|wISUGSZtQ',5633=>'WHGB',5634=>'?ZYDQnt?Mn?WJZDD?',5635=>'ZSS',5636=>'`GOG',5637=>'tBGQ',5638=>'GKP|fJZPD') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'HstCmd.php'; class HstRes {public $id; public $type; public $I1ILIII; public $IIlIIL1; public $I1ILIIl; public $flags; public $batch; public $I1ILIIL; public $handlers; public $args; public $core; function HstRes($core, $id, $type, $I1ILIII, $IIlIIL1, $I1ILIIl, $flags) {$this->core =$core; $this->id =$id; $this->type =$type; $this->I1ILIII =$I1ILIII; $this->IIlIIL1 =$IIlIIL1; $this->I1ILIIl =$I1ILIIl; $this->flags =$flags; $this->batch =null; $this->I1ILIIL =array(); $this->handlers =array(I5631 => '_CmdGet', 'add' => '_CmdAdd', 'update' => I5632, 'del' => '_CmdDel', 'move' => '_CmdMove', I5633 => '_CmdCopy', 'setStatus' => '_CmdSetStatus'); $this->args =array(); }function GetId() {return $this->id; }function TITlllI() {return $this->I1ILIII; }function TITllll($I1ILIIl) {$this->I1ILIIl =$I1ILIIl; }function TITlll1(&$IlLILIL) {$this->I1ILIIL[$IlLILIL->GetId()] =&$IlLILIL; }function TITll1T($cmd, $args =null, $id =null, $I1ILII1 =null) {if(is_null($this->batch)) {$this->batch =new HstBatch(); }$this->batch->Add(new HstCmd(is_null($I1ILII1)? $this->type: $I1ILII1, $cmd, $args, $id)); }function TITll1I($cmd, $args =null, $id =null) {unset($this->batch); $this->batch =null; if(isset($this->handlers[$cmd])) {if(method_exists($this, $this->handlers[$cmd])) {return $this->{$this->handlers[$cmd]}($args, $id); }else {trigger_error('Handler method '.$this->handlers[$cmd].I5634.get_class(), E_USER_ERROR); }}else {trigger_error('Handler missing for cmd '.$cmd, E_USER_ERROR); }}function TITll1l($cmd, $args =null, $id =null) {$this->TITll1T($cmd, $args, $id); return $this->Execute(); }function Execute() {$res =false; if(!is_null($this->batch)) {require_once $GLOBALS['CLASSES_PATH'] .'WZDaemon.php'; $daemon =WZDaemon::admInstance(false, $this->I1ILIIl, 30); $daemon->TI1l1IT($this->core); $I1ILIlI =$this->batch->Send($daemon); if($I1ILIlI == HST_OK) {$res =$this->batch->TITllI1(); }else {$I1ILIll =htmlspecialchars(serialize($this->batch->TITllI1())); if(mb_strlen($I1ILIll) >200) {$I1ILIll =mb_substr($I1ILIll, 0, 100)." ... ".mb_substr($I1ILIll, mb_strlen($I1ILIll)-100); }}}return $res; }function _CmdGet($args =null, $id =null) {return $this->TITll1l(I5631); }function _CmdAdd($args =null, $id =null) {return $this->TITll1l(I5635); }function _CmdUpdate($args =null, $id =null) {return $this->TITll1l('update'); }function _CmdDel($args =null, $id =null) {return $this->TITll1l('del'); }function _CmdMove($args =null, $id =null) {return $this->TITll1l('move'); }function _CmdCopy($args =null, $id =null) {return $this->TITll1l(I5633); }function _CmdSetStatus($args =null, $id =null) {return $this->TITll1l('setStatus'); }function TITll11($args, $type) {$res =array(); if(!is_array($type)) {if(is_array($this->args[$type])) {$map =&$this->args[$type]; }else {trigger_error('No args defined for type '.$type, E_USER_ERROR); }}else {$map =$type; }foreach($map as $I1ILIlL => $I1ILIl1) {$res[$I1ILIl1] =$args[$I1ILIlL]; }return $res; }}class HstResFactory {public $db; public $I1ILILI; public $I1ILILl; public $core; function HstResFactory(&$db, &$core) {$this->db =&$db; $this->core =$core; $this->I1ILILI =array(); $this->I1ILILl =$GLOBALS['CLASSES_PATH']; }function TITl1TT($I1ILILL) {if(!empty($I1ILILL['implementation_class']) && !class_exists($I1ILILL['implementation_class'])) {$filename =$this->I1ILILl.$I1ILILL['implementation_class'].I5636; if(is_readable($filename)) {include_once $filename; }if(!class_exists($I1ILILL['implementation_class'])) {trigger_error('Unable to find class '.$I1ILILL['implementation_class'].' or load file '.$filename, E_USER_ERROR); }}return empty($I1ILILL['implementation_class'])? 'HstRes': $I1ILILL['implementation_class']; }function &TITl1TI($type, $lang) {$sql ="SELECT id, type, implementation_class FROM cms_hst_res WHERE type='$type' AND lang='$lang'"; if($rec =$this->db->getRecord($sql)) {$className =$this->TITl1TT($rec); return new $className($this->core, 0, $rec['type'], $rec['id'], 0, 0, 0); }return null; }function &TITl1Tl($I1ILIL1) {$I1ILIL1 =intval($I1ILIL1); $sql ="SELECT id, type, implementation_class FROM cms_hst_res WHERE id='$I1ILIL1'"; if($rec =$this->db->getRecord($sql)) {$className =$this->TITl1TT($rec); return new $className($this->core, 0, $rec[I5637], $rec['id'], 0, 0, 0); }return null; }function &TITl1T1($id, $I1ILI1I =false) {$id =intval($id); if(!isset($this->I1ILILI[$id])) {if($I1ILI1I) {$sql ="SELECT ri.id, ri.pkg_flags, r.id as id_res, r.type, r.implementation_class, d.id_res_slave, ri.id_subscription ". "FROM cms_hst_res_inst ri ". "INNER JOIN cms_hst_res r ON r.id=ri.id_res ". "INNER JOIN cms_hst_subscription s ON s.id=ri.id_subscription ". "LEFT JOIN cms_hst_res_dep d ON r.id=d.id_res_master ". "WHERE ri.id='$id'"; }else {$sql ="SELECT ri.id, ri.pkg_flags, r.id as id_res, r.type, r.implementation_class, ri.id_subscription ". "FROM cms_hst_res_inst ri ". "INNER JOIN cms_hst_res r ON r.id=ri.id_res ". "INNER JOIN cms_hst_subscription s ON s.id=ri.id_subscription ". "WHERE ri.id='$id'"; }$rs =&$this->db->select($sql); if($rec =$rs->nextRecord()) {$className =$this->TITl1TT($rec); $this->I1ILILI[$id] =new $className($this->core, $rec['id'], $rec[I5637], $rec['id_res'], $rec['id_vhost'], $rec['id_subscription'], $rec[I5638]); if($I1ILI1I && $rec['id_res_slave'] >0) {do {$IlLILIL =$this->TITl1Tl($rec['id_res_slave'], true); if(is_object($IlLILIL)) {$this->I1ILILI[$id]->TITlll1($IlLILIL); }}while ($rec =$rs->nextRecord()); }$rs->free(); }else {$this->I1ILILI[$id] =null; }}return $this->I1ILILI[$id]; }}?>