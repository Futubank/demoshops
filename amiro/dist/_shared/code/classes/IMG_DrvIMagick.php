<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       20258 xkqwnuirzsnkngqrmkuqyuwpusznikmplxmiqixyuxknkllxlkxkmpgxzlltkplmpgrwpnir
 */ ?><?php foreach(array(5728=>"PMf",5729=>"LGP",5730=>"",5731=>"1",5732=>"4",5733=>"WQntQr",5734=>"GnP",5735=>"JZBQr",5736=>"HrMQnt",5737=>"rC",5738=>'<FFFFFF') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class IMG_DRVIMAGICK{ public $I1ILl1I; public $I1ILl1l; function IMG_DRVIMAGICK(){ $this->I1ILl1I =0; $this->I1ILl1l =75; }function TIT1TIT($I1ILl1L){ if(!empty($I1ILl1L)){ $data =false; $img =new Imagick(); $img->readImage($I1ILl1L); $data[0] =$img->getImageWidth(); $data[1] =$img->getImageHeight(); switch(mb_strtolower($img->getImageFormat())){ case "jpeg": case "jpg": $data[2] =2; break; case I5728: $data[2] =1; break; case "png": $data[2] =3; break; default: $data =false; break; }return $data; }else return false; }function TIT1TII($I1ILl11, $I1ILLII, $I1ILLIl ="", $I1ILLIL =65, $I1ILLI1 ="center", $cX =0, $cY =0, $I1ILLlI =0){ set_time_limit(60); if(!empty($I1ILl11) && !empty($I1ILLII)){ $I1ILLll =new Imagick(); $I1ILLlL =false; if($I1ILLll->readImage($I1ILl11)) $I1ILLlL =array($I1ILLll->getImageWidth(), $I1ILLll->getImageHeight(), str_replace("jpeg", I5729, mb_strtolower($I1ILLll->getImageFormat()))); $I1ILLl1 =new Imagick(); $I1ILLLI =false; if($I1ILLl1->ReadImage($I1ILLII)) $I1ILLLI =array($I1ILLl1->getImageWidth(), $I1ILLl1->getImageHeight(), str_replace("jpeg", I5729, mb_strtolower($I1ILLl1->getImageFormat()))); if($I1ILLlL !== false && $I1ILLLI !== false && in_array($I1ILLlL[2], array(I5729, I5728, "png")) && in_array($I1ILLLI[2], array(I5729, I5728, "png"))){ if($this->I1ILl1I >0){ $I1ILLLl =$I1ILLlL[0]*$I1ILLlL[1]*4 +$I1ILLLI[0]*$I1ILLLI[1]*4; if($I1ILLLl >$this->I1ILl1I){ $I1ILLll->destroy(); $I1ILLl1->destroy(); return false; }}if(empty($I1ILLIl) || preg_match('/.*\.((gif)|(jpg)|(jpeg)|(png))$/i', $I1ILLIl, $I1ILLLL)){ $this->TIT1TIl($I1ILLll, $I1ILLl1, $I1ILLI1, $I1ILLIL, $cX, $cY); $I1ILLl1->destroy(); $I1ILLL1 =I5730; $fileExt =I5730; if(empty($I1ILLIl)){ $I1ILLL1 =$I1ILl11; $fileExt =$I1ILLlL[2]; }else{ $I1ILLL1 =$I1ILLIl; $fileExt =mb_strtolower($I1ILLLL[1]); if($fileExt == "jpeg") $fileExt =I5729; }if($I1ILLlI >0 && $fileExt == I5729) $I1ILLll->setCompressionQuality($I1ILLlI >0 ?$I1ILLlI :$this->I1ILl1l); $I1ILLll->setImageFormat(mb_strtoupper($fileExt)); if($I1ILLll->writeImage($I1ILLL1)) chmod($I1ILLL1, 0666); $I1ILLll->destroy(); return true; }}}return false; }function TIT1TIl(&$I1ILL1I, &$I1ILL1l, $I1ILLI1 ="center", $I1ILLIL =80, $cX =0, $cY =0){ set_time_limit(60); $I1ILLlL[0] =$I1ILL1I->getImageWidth(); $I1ILLlL[1] =$I1ILL1I->getImageHeight(); $I1ILLLI[0] =$I1ILL1l->getImageWidth(); $I1ILLLI[1] =$I1ILL1l->getImageHeight(); $I1ILL1L =0; $I1ILL11 =0; switch($I1ILLI1){ case "6": $I1ILLI1 ="tile"; case I5731: case "tile": case "upleft": break; case "2": case "upright": $I1ILL1L =max(0, $I1ILLlL[0]-$I1ILLLI[0]); break; case I5732: case "downleft": $I1ILL11 =max(0, $I1ILLlL[1]-$I1ILLLI[1]); break; case "5": case "downright": $I1ILL1L =max(0, $I1ILLlL[0]-$I1ILLLI[0]); $I1ILL11 =max(0, $I1ILLlL[1]-$I1ILLLI[1]); break; case "3": case I5733: $I1ILL1L =max(0, floor(($I1ILLlL[0]-$I1ILLLI[0])/2)); $I1ILL11 =max(0, floor(($I1ILLlL[1]-$I1ILLLI[1])/2)); break; default: $I1ILL1L =$cX; $I1ILL11 =$cY; break; }$I1IL1II =$I1ILL1I->getQuantumRange(); $I1IL1II =$I1IL1II['quantumRangeLong']; $opacity =$I1IL1II -($I1IL1II *max(0, 127-$I1ILLIL)/127); if($opacity >$I1IL1II){ $opacity =$I1IL1II; }elseif($opacity <0){ $opacity =0; }$I1ILL1l->setImageIndex(0); $I1ILL1l->setImageType(imagick::IMGTYPE_TRUECOLORMATTE); $I1ILL1l->evaluateImage(imagick::EVALUATE_SUBTRACT ,$opacity, imagick::CHANNEL_OPACITY); if($I1ILLI1 != "tile" && $I1ILLI1 != "6"){ $I1ILL1I->compositeImage($I1ILL1l, imagick::COMPOSITE_OVER, $I1ILL1L, $I1ILL11); }else{ $I1ILL1L =0; $I1ILL11 =0; for($w =0; $w <$I1ILLlL[0]; $w+=$I1ILLLI[0]){ set_time_limit(25); for($h =0; $h <$I1ILLlL[1]; $h+=$I1ILLLI[1]){ $I1ILL1I->compositeImage($I1ILL1l, imagick::COMPOSITE_OVER, $w, $h); }}}}function TIT1TI1($I1ILl11, $I1ILLIl, $I1IL1Il, $I1IL1IL, $I1IL1I1 =true, $I1ILLlI =0, $I1IL1lI =array(), $I1IL1ll =array()){ set_time_limit(60); if(!empty($I1ILl11)){ $I1IL1lL =new Imagick(); $I1ILLlL =false; if($I1IL1lL->readImage($I1ILl11)) $I1ILLlL =array($I1IL1lL->getImageWidth(), $I1IL1lL->getImageHeight(), str_replace("jpeg", I5729, mb_strtolower($I1IL1lL->getImageFormat()))); if($I1ILLlL !== false && in_array($I1ILLlL[2], array(I5729, I5728, I5734))){ if($this->I1ILl1I >0){ if($I1ILLlL[0]*$I1ILLlL[1]*4*2 >$this->I1ILl1I){ $I1IL1lL->destroy(); return false; }}if(empty($I1ILLIl) || preg_match('/.*\.((gif)|(jpg)|(jpeg)|(png))$/i', $I1ILLIl, $I1ILLLL)){ if($I1IL1I1){ if($I1IL1Il <= 0 && $I1IL1IL <= 0){ $I1IL1lL->destroy(); return false; }if(!($I1ILLlL[0]>0) || !($I1ILLlL[1]>0)){ $I1IL1lL->destroy(); trigger_error('Image dimension detection fail:'.$I1ILl11, E_USER_WARNING); return false; }if($I1IL1Il >0 and $I1IL1IL >0){ $I1IL1l1 =$I1IL1Il/$I1ILLlL[0]; $I1IL1LI =$I1IL1IL/$I1ILLlL[1]; if($I1IL1l1 <$I1IL1LI){ $I1IL1IL =ceil($I1ILLlL[1]*$I1IL1Il/$I1ILLlL[0]); }else{ $I1IL1Il =ceil($I1ILLlL[0]*$I1IL1IL/$I1ILLlL[1]); }}}else{ if($I1IL1Il <= 0) $I1IL1Il =$I1ILLlL[0]; if($I1IL1IL <= 0) $I1IL1IL =$I1ILLlL[1]; }$I1ILLIl =str_replace(array("[NEWWIDTH]", "[NEWHEIGHT]"), array($I1IL1Il, $I1IL1IL), $I1ILLIl); if(!$I1IL1lL->resizeImage($I1IL1Il, $I1IL1IL, imagick::FILTER_LANCZOS, 1)){ $I1IL1lL->destroy(); return false; }else{ if(is_array($I1IL1lI) && sizeof($I1IL1lI) >0 && is_file($I1IL1lI[I5735])){ $I1ILLl1 =new Imagick(); $I1ILLLI =false; if($I1ILLl1->readImage($I1IL1lI[I5735])) $I1ILLLI =array($I1ILLl1->getImageWidth(), $I1ILLl1->getImageHeight(), str_replace("jpeg", I5729, mb_strtolower($I1ILLl1->getImageFormat()))); if($I1ILLLI !== false && in_array($I1ILLLI[2], array(I5729, I5728, I5734))) $this->TIT1TIl($I1IL1lL, $I1ILLl1, $I1IL1lI["orient"], $I1IL1lI["alpha"]); $I1ILLl1->destroy(); }if(is_array($I1IL1ll) && sizeof($I1IL1ll) >0 && is_file($I1IL1ll[I5735])){ $I1ILLl1 =new Imagick(); $I1ILLLI =false; if($I1ILLl1->readImage($I1IL1ll[I5735])) $I1ILLLI =array($I1ILLl1->getImageWidth(), $I1ILLl1->getImageHeight(), str_replace("jpeg", I5729, mb_strtolower($I1ILLl1->getImageFormat()))); if($I1ILLLI !== false && in_array($I1ILLLI[2], array(I5729, I5728, I5734))) $this->TIT1TIl($I1IL1lL, $I1ILLl1, $I1IL1ll[I5736], $I1IL1ll["alpha"]); $I1ILLl1->destroy(); }$I1ILLL1 =I5730; $fileExt =I5730; if(empty($I1ILLIl)){ $I1ILLL1 =$I1ILl11; $fileExt =$I1ILLlL[2]; }else{ $I1ILLL1 =$I1ILLIl; $fileExt =mb_strtolower($I1ILLLL[1]); if($fileExt == "jpeg") $fileExt =I5729; }if($I1ILLlI >0 && $fileExt == I5729) $I1IL1lL->setCompressionQuality($I1ILLlI >0 ?$I1ILLlI :$this->I1ILl1l); $I1IL1lL->setImageFormat(mb_strtoupper($fileExt)); AMI_Registry::push('disable_error_mail', true); if($I1IL1lL->writeImage($I1ILLL1)){ chmod($I1ILLL1, 0666); }if(is_file($I1ILLL1) && filesize($I1ILLL1) === 0){ unlink($I1ILLL1); }AMI_Registry::pop('disable_error_mail'); $I1IL1lL->destroy(); return true; }}}}return false; }function TIT1TlT($cType =I5730, $IL111LL =I5737){ $img =new Imagick(); $I1IL1Ll =$img->queryFormats(); foreach($I1IL1Ll as $I1IL1LL){ if(mb_strtolower($I1IL1LL) == mb_strtolower($cType)) return true; }return false; }function TIT1TlI($I1ILLIl, $I1IL1L1, $I1IL11I, $I1IL11l, $I1IL11L, $errData){ $font =$GLOBALS["ROOT_PATH"].'templates/fonts/tahoma.ttf'; $I1IL111 =11; if(preg_match('/^\d+$/', $I1IL11L)) $I1IL11L ="#".$I1IL11L; $I1I1III =$I1IL11l; $img =new Imagick(); $I1I1IIl =new ImagickDraw(); $I1I1IIL =new ImagickPixel(); $img->NewImage($I1IL1L1, $I1IL11I, I5738); $I1I1IIl->setFont($font); $I1I1IIl->setFontSize($I1IL111); $I1I1IIl->setFontWeight(100); $I1I1IIl->setTextEncoding('UTF-8'); $I1I1IIl->setTextAntialias(true); $I1I1IIL->SetColor($I1IL11L); $I1I1IIl->setFillColor($I1I1IIL); $I1I1IIl->setTextAlignment(imagick::ALIGN_CENTER); $I1I1IIl->setGravity(imagick::GRAVITY_CENTER); $I1I1IIl->annotation($I1IL1L1/2, $I1IL111+2, $I1I1III); $img->drawImage(); $img->setFormat('GIF'); $res =false; if($img->writeImage($I1ILLIl)) $res =true; $img->destroy(); $I1I1IIl->destroy(); $I1I1IIL->destroy(); return $res; }}?>
