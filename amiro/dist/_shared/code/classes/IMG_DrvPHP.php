<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       23691 xkqwnzquktkllrlzgwqtwwzuiptusxpruzkysrupluliwtqltxqrgyzktyixuiynxtxxpnir
 */ ?><?php foreach(array(5751=>"1",5752=>"PMf",5753=>"LGP",5754=>"uGJQft",5755=>"5",5756=>"tMJQ",5757=>"3",5758=>"",5759=>'PrQQn',5760=>"JZBQr",5761=>'SMDZYJQ|QrrHr|IZMJ',5762=>"MIZPQPMf",5763=>"GnP",5764=>"<",5765=>"^",5766=>"{") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class IMG_DRVPHP{ public $I1ILl1I; public $I1ILl1l; function IMG_DRVPHP(){ $this->I1ILl1I =0; $this->I1ILl1l =75; }function TIT1TIT($I1ILl1L){ if(!empty($I1ILl1L)) {return imageGetSize($I1ILl1L); }else {return array(); }}function TIT1TII($I1ILl11, $I1ILLII, $I1ILLIl ="", $I1ILLIL =65, $I1ILLI1 ="center", $cX =0, $cY =0, $I1ILLlI =0){ set_time_limit(60); if(!empty($I1ILl11) && !empty($I1ILLII)){ $I1ILLlL =imageGetSize($I1ILl11); $I1ILLLI =imageGetSize($I1ILLII); if(in_array($I1ILLlL[2], array(I5751, "2", "3")) && in_array($I1ILLLI[2], array(I5751, "2", "3"))){ if($this->I1ILl1I >0){ $I1ILLLl =$I1ILLlL[0]*$I1ILLlL[1]*4 +$I1ILLLI[0]*$I1ILLLI[1]*4; if($I1ILLLl >$this->I1ILl1I) return false; }if(empty($I1ILLIl) || preg_match('/.*\.((gif)|(jpg)|(jpeg)|(png))$/i', $I1ILLIl, $I1ILLLL)){ $I1IL1lL =""; switch($I1ILLlL[2]){ case 1: $I1IL1lL =imagecreatefromgif($I1ILl11); break; case 2: $I1IL1lL =imagecreatefromjpeg($I1ILl11); break; case 3: $I1IL1lL =imagecreatefrompng($I1ILl11); break; }if(empty($I1IL1lL)) return false; $I1ILL1I =imagecreatetruecolor($I1ILLlL[0], $I1ILLlL[1]); imagecopy($I1ILL1I, $I1IL1lL, 0, 0, 0, 0, $I1ILLlL[0], $I1ILLlL[1]); imagedestroy($I1IL1lL); if(empty($I1ILL1I)){ return false; }$I1ILL1l =""; switch($I1ILLLI[2]){ case 1: $I1ILL1l =imagecreatefromgif($I1ILLII); break; case 2: $I1ILL1l =imagecreatefromjpeg($I1ILLII); break; case 3: $I1ILL1l =imagecreatefrompng($I1ILLII); break; }if(empty($I1ILL1l)){ imagedestroy($I1ILL1I); return false; }$this->TIT1TIl($I1ILL1I, $I1ILL1l, $I1ILLI1, $I1ILLIL, $cX, $cY); $I1ILLL1 =""; $fileExt =""; if(empty($I1ILLIl)){ $I1ILLL1 =$I1ILl11; switch($I1ILLlL[2]){ case 1: $fileExt =I5752; break; case 2: $fileExt ="jpg"; break; case 3: $fileExt ="png"; break; }}else{ $I1ILLL1 =$I1ILLIl; $fileExt =mb_strtolower($I1ILLLL[1]); if($fileExt == "jpeg") $fileExt ="jpg"; }switch($fileExt){ case I5752: imagegif($I1ILL1I, $I1ILLL1); chmod($I1ILLL1, 0666); break; case I5753: imagejpeg($I1ILL1I, $I1ILLL1, $I1ILLlI >0 ?$I1ILLlI :$this->I1ILl1l); chmod($I1ILLL1, 0666); break; case "png": imagepng($I1ILL1I, $I1ILLL1); chmod($I1ILLL1, 0666); break; }imagedestroy($I1ILL1l); imagedestroy($I1ILL1I); return true; }}}return false; }function TIT1TIl(&$I1ILL1I, &$I1ILL1l, $I1ILLI1, $I1ILLIL, $cX =0, $cY =0){ set_time_limit(60); $I1ILLlL[0] =imagesx($I1ILL1I); $I1ILLlL[1] =imagesy($I1ILL1I); $I1ILLLI[0] =imagesx($I1ILL1l); $I1ILLLI[1] =imagesy($I1ILL1l); $I1ILL1L =0; $I1ILL11 =0; switch($I1ILLI1){ case "6": $I1ILLI1 ="tile"; case I5751: case "tile": case I5754: break; case "2": case "upright": $I1ILL1L =max(0, $I1ILLlL[0]-$I1ILLLI[0]); break; case "4": case "downleft": $I1ILL11 =max(0, $I1ILLlL[1]-$I1ILLLI[1]); break; case I5755: case "downright": $I1ILL1L =max(0, $I1ILLlL[0]-$I1ILLLI[0]); $I1ILL11 =max(0, $I1ILLlL[1]-$I1ILLLI[1]); break; case "3": case "center": $I1ILL1L =max(0, floor(($I1ILLlL[0]-$I1ILLLI[0])/2)); $I1ILL11 =max(0, floor(($I1ILLlL[1]-$I1ILLLI[1])/2)); break; default: $I1ILL1L =$cX; $I1ILL11 =$cY; break; }$I1I1Ill =imagecolortransparent($I1ILL1l); $I1I1IlL =min($I1ILLI1 != "tile" ?$I1ILL1L+$I1ILLLI[0] :$I1ILLlL[0], $I1ILLlL[0]); $I1I1Il1 =min($I1ILLI1 != I5756 ?$I1ILL11+$I1ILLLI[1] :$I1ILLlL[1], $I1ILLlL[1]); for($i =$I1ILL1L; $i <$I1I1IlL; $i++){ set_time_limit(25); for($j =$I1ILL11; $j <$I1I1Il1; $j++){ $I1I1ILI =$i; $I1I1ILl =$j; if($I1ILLI1 == I5756){ while($I1I1ILI >= $I1ILLLI[0]) $I1I1ILI -= $I1ILLLI[0]; while($I1I1ILl >= $I1ILLLI[1]) $I1I1ILl -= $I1ILLLI[1]; }$col =imagecolorat($I1ILL1l, $I1I1ILI-$I1ILL1L, $I1I1ILl-$I1ILL11); $I1I1ILL =imagecolorsforindex($I1ILL1l, $col); if(!$I1I1Ill || $I1I1Ill != $col){ $I1I1IL1 =imagecolorallocatealpha($I1ILL1I, $I1I1ILL["red"], $I1I1ILL["green"], $I1I1ILL["blue"], $I1ILLIL); imagesetpixel($I1ILL1I, $i, $j, $I1I1IL1); }}}}function TIT1TI1($I1ILl11, $I1ILLIl, $I1IL1Il, $I1IL1IL, $I1IL1I1 =true, $I1ILLlI =0, $I1IL1lI =array(), $I1IL1ll =array()){ set_time_limit(60); if(!empty($I1ILl11)){ $I1ILLlL =imageGetSize($I1ILl11); if(in_array($I1ILLlL[2], array(I5751, "2", I5757))){ if($this->I1ILl1I >0){ $I1ILLLl =$I1ILLlL[0]*$I1ILLlL[1]*4*2; if($I1ILLLl >$this->I1ILl1I) return false; }if(empty($I1ILLIl) || preg_match('/.*\.((gif)|(jpg)|(jpeg)|(png))$/i', $I1ILLIl, $I1ILLLL)){ if($I1IL1I1){ if($I1IL1Il <= 0 && $I1IL1IL <= 0) return false; if(!($I1ILLlL[0]>0) || !($I1ILLlL[1]>0)){ imagedestroy($I1IL1lL); trigger_error('Image dimension detection fail:'.$I1ILl11, E_USER_WARNING); return false; }if($I1ILLlL[0] >$I1ILLlL[1] && $I1IL1Il >0){ $I1IL1IL =ceil($I1ILLlL[1]*$I1IL1Il/$I1ILLlL[0]); }else{ if($I1IL1IL >0) $I1IL1Il =ceil($I1ILLlL[0]*$I1IL1IL/$I1ILLlL[1]); else $I1IL1IL =ceil($I1ILLlL[1]*$I1IL1Il/$I1ILLlL[0]); }}else{ if($I1IL1Il <= 0) $I1IL1Il =$I1ILLlL[0]; if($I1IL1IL <= 0) $I1IL1IL =$I1ILLlL[1]; }$I1ILLIl =str_replace(array("[NEWWIDTH]", "[NEWHEIGHT]"), array($I1IL1Il, $I1IL1IL), $I1ILLIl); $I1IL1lL =I5758; switch($I1ILLlL[2]){ case 1: $I1IL1lL =imagecreatefromgif($I1ILl11); break; case 2: $I1IL1lL =imagecreatefromjpeg($I1ILl11); break; case 3: $I1IL1lL =imagecreatefrompng($I1ILl11); break; }if(empty($I1IL1lL)) return false; $I1ILL1I =imagecreatetruecolor($I1IL1Il, $I1IL1IL); if(empty($I1ILL1I)){ imagedestroy($I1IL1lL); return false; }$I1I1I1I =imagecolortransparent($I1IL1lL); $I1I1I1l =false; if($I1I1I1I>=0){ $I1I1I1l =true; $I1I1I1L =$I1I1I1I; $I1I1I1I =-1; $I1I1I11 =array('red' => 255, 'green' => 255, 'blue' => 255); $I1I1I11 =imagecolorsforindex($I1IL1lL, $I1I1I1L); $I1I1I1L =imagecolorallocate($I1ILL1I, $I1I1I11['red'], $I1I1I11[I5759], $I1I1I11['blue']); imagefill($I1ILL1I, 0, 0, $I1I1I1L); imagecolortransparent($I1ILL1I, $I1I1I1L); }if($I1ILLlL[2] == IMAGETYPE_PNG and $I1I1I1I <0){ imagealphablending($I1ILL1I, false); $I1I1lII =imagecolorallocatealpha($I1ILL1I, 0, 0, 0, 127); imagefill($I1ILL1I, 0, 0, $I1I1lII); imagesavealpha($I1ILL1I, true); }$I1I1lIl =NULL; if($I1I1I1l){ $I1I1lIl =imagecopyresampled($I1ILL1I, $I1IL1lL, 0, 0, 0, 0, $I1IL1Il, $I1IL1IL, $I1ILLlL[0], $I1ILLlL[1]); }else{ $I1I1lIl =imagecopyresized($I1ILL1I, $I1IL1lL, 0, 0, 0, 0, $I1IL1Il, $I1IL1IL, $I1ILLlL[0], $I1ILLlL[1]); }if(!$I1I1lIl){ imagedestroy($I1IL1lL); imagedestroy($I1ILL1I); return false; }else{ if(is_array($I1IL1lI) && sizeof($I1IL1lI) >0 && is_file($I1IL1lI["layer"])){ $I1ILL1l =I5758; $I1ILLLI =imageGetSize($I1IL1lI["layer"]); switch($I1ILLLI[2]){ case 1: $I1ILL1l =imagecreatefromgif($I1IL1lI["layer"]); break; case 2: $I1ILL1l =imagecreatefromjpeg($I1IL1lI[I5760]); break; case 3: $I1ILL1l =imagecreatefrompng($I1IL1lI[I5760]); break; }if(!empty($I1ILL1l)) $this->TIT1TIl($I1ILL1I, $I1ILL1l, $I1IL1lI["orient"], $I1IL1lI["alpha"]); }if(is_array($I1IL1ll) && sizeof($I1IL1ll) >0 && is_file($I1IL1ll[I5760])){ $I1ILL1l =I5758; $I1ILLLI =imageGetSize($I1IL1ll[I5760]); switch($I1ILLLI[2]){ case 1: $I1ILL1l =imagecreatefromgif($I1IL1ll[I5760]); break; case 2: $I1ILL1l =imagecreatefromjpeg($I1IL1ll[I5760]); break; case 3: $I1ILL1l =imagecreatefrompng($I1IL1ll[I5760]); break; }if(!empty($I1ILL1l)) $this->TIT1TIl($I1ILL1I, $I1ILL1l, $I1IL1ll["orient"], $I1IL1ll["alpha"]); }$I1ILLL1 =empty($I1ILLIl)? $I1ILl11 :$I1ILLIl; AMI_Registry::push(I5761, true); switch($I1ILLlL[2]){ case IMAGETYPE_GIF:{ if(imagegif($I1ILL1I, $I1ILLL1)){ if($I1I1I1I >= 0){ imagedestroy($I1ILL1I); $I1ILL1I =imagecreatefromgif($I1ILLL1); imagecolortransparent($I1ILL1I, $I1I1I1I); imagegif($I1ILL1I, $I1ILLL1); }chmod($I1ILLL1, 0666); }break; }case IMAGETYPE_PNG: if(imagepng($I1ILL1I, $I1ILLL1)){ if($I1I1I1I >= 0){ imagedestroy($I1ILL1I); $I1ILL1I =imagecreatefrompng($I1ILLL1); imagecolortransparent($I1ILL1I, $I1I1I1I); imagepng($I1ILL1I, $I1ILLL1); }}chmod($I1ILLL1, 0666);break; case IMAGETYPE_JPEG: imagejpeg($I1ILL1I, $I1ILLL1, $I1ILLlI >0 ?$I1ILLlI :$this->I1ILl1l); chmod($I1ILLL1, 0666); break; }AMI_Registry::pop(I5761); if(is_file($I1ILLL1) && filesize($I1ILLL1) === 0){ unlink($I1ILLL1); }imagedestroy($I1IL1lL); imagedestroy($I1ILL1I); return true; }}}}return false; }function TIT1TlT($cType =I5758, $IL111LL ="rw"){ $retVal =array(); $I1I1II1 =(mb_strpos($IL111LL, "r") !== false); $I1I1IlI =(mb_strpos($IL111LL, "w") !== false); if(empty($cType) || $cType == I5752) if((function_exists("imagecreatefromgif") && $I1I1II1 || !$I1I1II1) && (function_exists(I5762) && $I1I1IlI || !$I1I1IlI)) array_push($retVal, I5752); if(empty($cType) || $cType == I5753 || $cType == "jpeg") if((function_exists("imagecreatefromjpeg") && $I1I1II1 || !$I1I1II1) && (function_exists("imagejpeg") && $I1I1IlI || !$I1I1IlI)) array_push($retVal, I5753, "jpeg"); if(empty($cType) || $cType == I5763) if((function_exists("imagecreatefrompng") && $I1I1II1 || !$I1I1II1) && (function_exists("imagepng") && $I1I1IlI || !$I1I1IlI)) array_push($retVal, I5763); if(empty($cType)) return $retVal; else return in_array($cType, $retVal); }function TIT1TlI($I1ILLIl, $I1IL1L1, $I1IL11I, $I1IL11l, $I1IL11L, $errData){ $font =$GLOBALS["ROOT_PATH"]."templates/fonts/tahoma.ttf"; $I1IL111 =7; $I1I1lIL =array(80, 80, 80); if($I1IL11L[0] == I5764) $I1IL11L =mb_substr($I1IL11L, 1); if(mb_strlen($I1IL11L) == 6){ $I1I1lIL[0] =hexdec(mb_substr($I1IL11L, 0, 2)); $I1I1lIL[1] =hexdec(mb_substr($I1IL11L, 2, 2)); $I1I1lIL[2] =hexdec(mb_substr($I1IL11L, 4, 2)); }$I1I1lI1 =imagecreate($I1IL1L1, $I1IL11I); $I1I1llI =imagecolorallocate($I1I1lI1, 255, 255, 255); $I1I1lIL =imagecolorallocate($I1I1lI1, $I1I1lIL[0], $I1I1lIL[1], $I1I1lIL[2]); $I1IL11l =convert_cyr_string($I1IL11l, "w", "i"); $I1I1III =I5758; for($i =0; $i <mb_strlen($I1IL11l); $i++){ if($I1IL11l[$i] != "\r"){ $I1I1lll =ord($I1IL11l[$i]); $I1I1III .= ($I1I1lll >175) ?"&#".(1040+($I1I1lll-176)).I5765 :$I1IL11l[$i]; }}if(!function_exists("imageftbbox")) $I1I1III ="Maximum\nresolution\nexceeded\n".$errData[0]." Mpx\n(about ".$errData[1]."x".$errData[2].I5766; $lines =explode("\n", $I1I1III); $I1I1llL =array(); $maxWidth =0; $maxHeight =0; for($i =0; $i <sizeof($lines); $i++){ if(function_exists("imageftbbox")){ $I1I1ll1 =imageftbbox($I1IL111, 0, $font, $lines[$i]); $width =$I1I1ll1[2]-$I1I1ll1[0]; if($maxHeight == 0) $maxHeight =$I1I1ll1[1]-$I1I1ll1[7] >$maxHeight ?$I1I1ll1[1]-$I1I1ll1[7] :$maxHeight; imagefttext($I1I1lI1, $I1IL111, 0, max(($I1IL1L1-$width)/2, 0), ($maxHeight+2)*($i+1), $I1I1lIL, $font, $lines[$i]); }else{ $I1I1lLI =2; $width =mb_strlen($lines[$i])*imagefontwidth($I1I1lLI); if($maxHeight == 0) $maxHeight =max(imagefontheight($I1I1lLI), 0); imagestring($I1I1lI1, $I1I1lLI, max(($I1IL1L1-$width)/2, 0), ($maxHeight+2)*($i), $lines[$i], $I1I1lIL); }}imagecolortransparent($I1I1lI1, 0); imagegif($I1I1lI1, $I1ILLIl); imagedestroy($I1I1lI1); return true; }}