<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       20244 xkqwtuipprprwqxswpnpulrzwuiynrsixnsmxlksgwngziqkggsggmiltxglngusiytxpnir
 */ ?><?php foreach(array(5820=>"mIPqxWOZnPQsrMvQr",5821=>"DuGGHrtQS|ZWtMHnD",5822=>"[`LGP",5823=>"CZtQrIZrK|IZDK",5824=>'~;',5825=>"WHunt",5826=>"SQDtMnZtMHn|WZt|MS",5827=>"MIGHrt|GZtO",5828=>"CtMS",5829=>"SMrD|GrHW",5830=>"fMJQD|GrHW",5831=>"WZJJYZWK|QrrHr",5832=>"wzTzjhp",5833=>"fMJQD",5834=>"~",5835=>"GrQGZrQ|MIZPQD",5836=>"ZWtMHn",5837=>"MS",5838=>"DtHrQ|nZIQ",5839=>"MS|QxtQrnZJ",5840=>"GrQGZrQ|WZtQPHrMQD",5841=>"`",5842=>"GMS",5843=>"",5844=>"|",5845=>"fMQJSD",5846=>"GrHW|CZtQr",5847=>"ZSS|GrMWQ|tBGQ",5848=>"ZJJ",5849=>"SMrD") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ImgExchangeDriver extends ExchangeDriver{ public $Il11l1L; public $importPath; public $I1lIllI; public $I1lIlll; function TIT1lIT(&$gui, &$module) {parent::ExchangeDriver($gui, $module); require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_translit.php"); $this->name =I5820; $this->Il11l1L =0; $this->I1lIllI =""; $this->I1lIlll =array(); }function GetInfo() {$aInfo =Array( "name"=>I5820, "title"=>$this->words["title"], I5821=>Array("import"), "pathtypes"=>Array("dirs"), "filemask"=>Array(I5822, "*.jpeg", "*.gif", "*.png") );return $aInfo; }function GetForm($type, &$formData) {parent::GetForm($type, $formData); $formData["watermark_condition"] =$this->module->TTII111(I5823); $html =$this->gui->get($this->name.":".$type."_form", $formData); return $html; }function TTIIlIl($I1IIl1I, $I1IIl1l){ if($I1IIl1I >$I1IIl1l) $I1IIl1I =$I1IIl1l; return parent::TTIIlIl($I1IIl1I, $I1IIl1l); }function Start($actionType, &$aParams) {$II1LIlI =parent::Start($actionType, $aParams); $this->_config["fields"] =$this->module->TTII111("fields_map"); $this->I1lIllI =$this->module->TTII111(I5823); if(!empty($this->I1lIllI)) $this->I1lIllI =I5824.str_replace("\\*", ".*?", quotemeta($this->I1lIllI)).'$/i'; if($II1LIlI) {$dataSource =$aParams["data_source"]; if($this->TIT1lll($dataSource, $I1lIllL)){ $this->II1LIIL =$I1lIllL[I5825]*2+1; $this->TTIIlIl(0, $this->II1LIIL); $II1LIlI =$this->TTIIlIT(Array("action"=>"common")); if($II1LIlI) {$I1lIllL["dirs_proc"] =$this->TIT1lI1($I1lIllL, $aParams["eshop_params"][I5826]); $I1lIllL["files_proc"] =$this->TIT1llT($I1lIllL, $aParams["eshop_params"][I5826]); $II1LIlI =$this->TIT1lIl($I1lIllL); if($II1LIlI) $II1LIlI =$this->TIT1lII($I1lIllL, $aParams["import_path"], $dataSource); if($II1LIlI) $II1LIlI =$this->TT1TTlI($I1lIllL, $aParams["eshop_params"][I5826]); if($II1LIlI) $II1LIlI =$this->_PrepareImages($I1lIllL, $aParams[I5827]); if($II1LIlI) {$II1LIlI =$this->TT1TTll($I1lIllL); }if($II1LIlI) $this->TTIIlIl($this->II1LIIL, $this->II1LIIL); }}else {$this->TTIIlT1("10010", "data_not_found"); $II1LIlI =false; }}return $II1LIlI; }function TT1TTlI(&$I1lIll1, $catID =0) {if($this->TTIIlIT(Array("action"=>"process_categories"))) {$II1LIlI =true; $Il11L11 =0; if(!empty($this->I1lIlll[I5828])) $I1lIll1["dirs_proc"] =array("ROOTPATH" => array(I5828 => $this->I1lIlll[I5828], "cat_id" => $catID)) +$I1lIll1["dirs_proc"]; if(is_array($I1lIll1[I5829])){ foreach($I1lIll1[I5829] as $path => $aData){ $aCatData =Array(); $Il11L11++; foreach($this->_config["fields"]["CATEGORY"] as $fieldName => $fieldData) {if($fieldName == "UPDATE_FIELDS" && $path != "ROOTPATH") continue; $I1lIlLI =!empty($aData[I5828]) ?$I1lIll1[I5830][$aData[I5828]] :array(); $aCatData[$fieldName] =$this->TT1TIT1($fieldData, $aData, $I1lIlLI); }$this->II1I1IL->{$this->II1I1I1["process_categories"]}($aCatData); $this->Il11l1L++; $this->TTIIlIl($this->Il11l1L, $this->II1LIIL); }}if(isset($I1lIll1[I5829]["ROOTPATH"])) unset($I1lIll1[I5829]["ROOTPATH"]); }else {$this->TTIIlT1("10012", I5831); $II1LIlI =false; }return $II1LIlI; }function TT1TTll(&$I1lIll1) {if($this->TTIIlIT(Array("action"=>"process_items"))) {$II1LIlI =true; $Il11L11 =0; if(is_array($I1lIll1[I5830])){ foreach($I1lIll1[I5830] as $path => $aData){ if(!empty($aData["is_wt"])) continue; $aItemData =Array(); $Il11L11++; foreach($this->_config["fields"][I5832] as $fieldName=>$fieldData) {$aItemData[$fieldName] =$this->TT1TIT1($fieldData, $aData); }$aItemData += $this->TT1TITI($aData); $this->II1I1IL->{$this->II1I1I1["process_items"]}($aItemData); $this->Il11l1L++; $this->TTIIlIl($this->Il11l1L, $this->II1LIIL); }}}else {$this->TTIIlT1("10012", I5831); $II1LIlI =false; }$this->TTIIlII(Array("action"=>"process_items")); return $II1LIlI; }function _PrepareImages(&$I1lIll1, $I1lIlLl) {$II1LIlI =true; if(is_array($I1lIll1[I5833]) && sizeof($I1lIll1[I5833]) >0) {if($this->TTIIlIT(Array("action"=>"prepare_images"))) {$I1lIlLL =str_replace("\\", "/", $I1lIlLl); if($I1lIlLL[mb_strlen($I1lIlLL)-1] == I5834) $I1lIlLL =mb_substr($I1lIlLL, 0, mb_strlen($I1lIlLL)-1); foreach($I1lIll1[I5833] as $key => $fileName) {if(!empty($I1lIll1[I5830][$fileName]["is_wt"])) continue; $I1lIlL1 =str_replace("\\", I5834, $fileName); if(mb_strlen($I1lIlLL) >0) if(($pos =mb_strpos($I1lIlL1, $I1lIlLL)) !== false) if($pos == 0) $I1lIlL1 =mb_substr($I1lIlL1, mb_strlen($I1lIlLL) +1); $I1lIl1I =$this->TIT1ll1($I1lIlL1, $I1lIll1[I5830][$fileName]["id"]); $I1lIll1[I5830][$fileName]["store_name"] =$I1lIl1I; $this->II1I1IL->{$this->II1I1I1[I5835]}(Array("file_name"=>$I1lIlL1, "store_name"=>$I1lIl1I)); $this->Il11l1L++; $this->TTIIlIl($this->Il11l1L, $this->II1LIIL); }}else {$this->TTIIlT1("10012", I5831); $II1LIlI =false; }$this->TTIIlII(Array("action"=>I5835)); }return $II1LIlI; }function TIT1lII(&$I1lIll1, $I1lIlLl, $I1lIl1l) {$II1LIlI =true; if(empty($this->I1lIllI)) return $II1LIlI; if(is_array($I1lIll1[I5833]) && sizeof($I1lIll1[I5833]) >0) {if($this->TTIIlIT(Array(I5836=>"prepare_cat_images"))) {$I1lIlLL =str_replace("\\", I5834, $I1lIlLl); if($I1lIlLL[mb_strlen($I1lIlLL)-1] == I5834) $I1lIlLL =mb_substr($I1lIlLL, 0, mb_strlen($I1lIlLL)-1); $I1lIl1l =str_replace("\\", I5834, $I1lIl1l); if($I1lIl1l[mb_strlen($I1lIl1l)-1] == I5834) $I1lIl1l =mb_substr($I1lIl1l, 0, mb_strlen($I1lIl1l)-1); foreach($I1lIll1[I5833] as $key => $fileName) {$I1lIlL1 =str_replace("\\", I5834, $fileName); if(!preg_match($this->I1lIllI, basename($fileName))) continue; $filePath =dirname($fileName); $I1lIl1L =false; if($I1lIl1l == $filePath) $I1lIl1L =true; if(!isset($I1lIll1[I5829][$filePath]) && !$I1lIl1L) continue; if(!$I1lIl1L && !empty($I1lIll1[I5829][$filePath][I5828]) || $I1lIl1L && !empty($this->I1lIlll[I5828])) continue; if(mb_strlen($I1lIlLL) >0) if(($pos =mb_strpos($I1lIlL1, $I1lIlLL)) !== false) if($pos == 0) $I1lIlL1 =mb_substr($I1lIlL1, mb_strlen($I1lIlLL) +1); $I1lIl1I =$this->TIT1ll1($I1lIlL1, $I1lIll1[I5830][$fileName][I5837]); if($I1lIl1L) $this->I1lIlll[I5828] =$fileName; else{ $I1lIll1[I5829][$filePath][I5828] =$fileName; }$I1lIll1[I5830][$fileName]["store_name"] =$I1lIl1I; $I1lIll1[I5830][$fileName]["is_wt"] =true; $this->II1I1IL->{$this->II1I1I1["prepare_cat_images"]}(Array("file_name"=>$I1lIlL1, I5838=>$I1lIl1I)); $this->Il11l1L++; $this->TTIIlIl($this->Il11l1L, $this->II1LIIL); }}else {$this->TTIIlT1("10012", I5831); $II1LIlI =false; }$this->TTIIlII(Array(I5836=>"prepare_cat_images")); }return $II1LIlI; }function TIT1lIl(&$I1lIll1) {$II1LIlI =true; if($this->TTIIlIT(Array(I5836=>"prepare_categories"))) {$numCats =sizeof($I1lIll1[I5829]); $i =0; foreach($I1lIll1[I5829] as $path => $data) {$this->II1I1IL->{$this->II1I1I1["prepare_categories"]}(Array(I5839=>$I1lIll1[I5829][$path][I5837], "id_parent_external"=>$I1lIll1[I5829][$path]["pid"], "is_mark_deleted"=>0)); $this->Il11l1L++; $this->TTIIlIl($this->Il11l1L, $this->II1LIIL); $i++; }}else {$this->TTIIlT1("10012", I5831); $II1LIlI =false; }$this->TTIIlII(Array(I5836=>I5840)); return $II1LIlI; }function TIT1lI1(&$I1lIll1, $catId){ $I1lIl11 =array(); if(is_array($I1lIll1["dirs"])){ foreach($I1lIll1["dirs"] as $key => $dir){ $I1lILII =str_replace(array(I5834, "\\"), array(".", I5841), $dir[mb_strlen($dir)-1] == I5834 ?$dir[mb_strlen($dir)-2] :$dir[mb_strlen($dir)-1]); if($this->module->TTII111("use_transliterate")) $I1lILII =str_replace(array("\\", I5834), array("_", "_"), cms_transliterate($I1lILII, $this->langData)); $I1lIl11[$dir][I5837] =$catId.I5841.mb_substr(md5($dir), 16, 8).$I1lILII; }foreach($I1lIl11 as $dir => $data){ $I1lILIl =$this->TIT1llI($dir); $I1lIl11[$dir][I5842] =$I1lIl11[$I1lILIl[1]][I5837]; $I1lIl11[$dir]["dir"] =$I1lILIl[0]; }}return $I1lIl11; }function TIT1llT(&$I1lIll1, $catId){ $I1lIl11 =array(); if(is_array($I1lIll1[I5833])){ foreach($I1lIll1[I5833] as $key => $file){ $fileName =$file; $filePath =""; if(($pos =mb_strrpos($fileName, I5841)) !== false) $fileName =mb_substr($fileName, 0, $pos); $I1lILIL =mb_strrpos($fileName, I5834); if($I1lILIL === false) $I1lILIL =-1; $I1lILI1 =mb_strrpos($fileName, "\\"); if($I1lILI1 === false) $I1lILI1 =-1; $pos =max($I1lILIL, $I1lILI1); if($pos >= 0){ $filePath =mb_substr($fileName, 0, $pos); $fileName =mb_substr($fileName, $pos+1); }$I1lIl11[$file]["cid"] =isset($I1lIll1[I5829][$filePath]) ?$I1lIll1[I5829][$filePath][I5837] :I5843; $I1lIl11[$file]["name"] =$fileName; $I1lIl11[$file][I5837] =(isset($I1lIll1[I5829][$filePath]) ?$I1lIll1[I5829][$filePath][I5837] :$catId)."|".mb_substr(md5($file), 16, 8); $I1lILlI =mb_substr($fileName, max(0, mb_strlen($fileName)-50)); if($this->module->TTII111("use_transliterate")) $I1lILlI =str_replace(array("\\", I5834), array(I5844, I5844), cms_transliterate($I1lILlI, $this->langData)); $I1lIl11[$file][I5837] =$I1lILlI.I5841.$I1lIl11[$file][I5837].($this->module->TTII111("use_transliterate") ?"tr" :I5843); }}return $I1lIl11; }function TIT1llI($cPath){ $I1lILll =$cPath; $I1lILlL =I5843; if($cPath[mb_strlen($cPath)-1] == I5834 || $cPath[mb_strlen($cPath)-1] == "\\") $cPath =mb_substr($cPath, 0, mb_strlen($cPath)-1); $I1lILIL =mb_strrpos($cPath, I5834); if($I1lILIL === false) $I1lILIL =-1; $I1lILI1 =mb_strrpos($cPath, "\\"); if($I1lILI1 === false) $I1lILI1 =-1; $pos =max($I1lILIL, $I1lILI1); if($pos >= 0){ $I1lILll =mb_substr($cPath, $pos+1); $I1lILlL =mb_substr($cPath, 0, $pos); }return array($I1lILll, $I1lILlL); }function TT1TITl(&$aRowData) {$prices =Array(); foreach($this->_config[I5845]["PRICE_TYPE"] as $numPrice=>$Il111lI) {foreach($Il111lI as $fieldName=>$fieldData) {$prices[$numPrice][$fieldName] =$this->TT1TIT1($fieldData, $aRowData); }}return $prices; }function TT1TIT1($fieldData, &$aRowData, $I1lIlLI =I5843) {$value =I5843; switch($fieldData["type"]) {case "proc_data": $value =$aRowData[$fieldData["value"]]; break; case I5846: $value =is_array($I1lIlLI) && isset($I1lIlLI[$fieldData["value"]]) ?$I1lIlLI[$fieldData["value"]] :I5843; break; case "value": $value =$fieldData["value"]; break; case I5847: $value =$this->TT1TITl($aRowData); break; }return $value; }function TIT1lll($Ill1III, &$vRes, $Ill1IlI =true){ if($Ill1III[mb_strlen($Ill1III)-1] == '/' || $Ill1III[mb_strlen($Ill1III)-1] == '\\') $Ill1III =mb_substr($Ill1III, 0, mb_strlen($Ill1III)-1); if($Ill1IlI) $vRes =array(I5825 => 0, "count_files" => 0, "count_dirs" => 0, I5848 => array(), I5833 => array(), "dirs" => array()); if(is_dir($Ill1III)){ if($dir =opendir($Ill1III)){ if($outType != I5833 && !$Ill1IlI){ $vRes[I5825] ++; $vRes["count_dirs"] ++; $vRes["dirs"][] =$Ill1III; $vRes[I5848][] =$Ill1III; }while(($file =readdir($dir)) !== false){ if(!in_array($file, array(I5841, ".."))){ if(is_dir($Ill1III.I5834.$file)){ $this->TIT1lll($Ill1III.I5834.$file, $vRes, $outType, false); }else{ if($outType != I5849){ if(preg_match('/^.*\.((jpg)|(jpeg)|(gif)|(png))$/i', $file)){ $vRes[I5825] ++; $vRes["count_files"] ++; $vRes[I5833][] =$Ill1III.I5834.$file; $vRes[I5848][] =$Ill1III.I5834.$file; }}}}}closedir($dir); return true; }}return false; }function TIT1ll1($file, $key){ $ext =".dat"; if(($pos =mb_strrpos($file, I5841)) !== false) $ext =mb_substr($file, $pos); $key =str_replace("\\", I5834, $key); if(($pos =mb_strrpos($key, I5834)) !== false) $key =mb_substr($key, $pos+1); $key =preg_replace('/[^a-zA-Z0-9_\-А-Яа-я]/u', '_', $key); return $key.$ext; }function TT1TITI(&$aRowData) {$images =Array(); foreach($this->_config[I5845]["IMAGE"] as $fieldName=>$fieldData) {$images[$fieldName] =$this->TT1TIT1($fieldData, $aRowData); }return $images; }}?>