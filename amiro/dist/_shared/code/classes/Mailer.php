<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       18626 xkqwpkqwnzsrxgllmtrkplnuulkqimpwgxnlruznxgwkqxtgznwrgmuiyuqxmgnuzyzypnir
 */ ?><?php foreach(array(5923=>'zim|RQPMDtrB',5924=>'RhhT|gzTo',5925=>'IZMJQr',5926=>"",5927=>"UTF+8",5928=>'DWOQIQ',5929=>'uDQr',5930=>'DItG',5931=>"%?",5932=>"OtIJ",5933=>"\"?",5934=>"imiq+VQrDMHn",5935=>"++",5936=>"GJZMn",5937=>"\r\n",5938=>"\"\r\n",5939=>"fMS",5940=>"ftBGQ",5941=>"frMQnSJB",5942=>"++\r\n\r\n",5943=>'Hn|QIZMJ|DQnS',5944=>"qvQntzGGJBVZrD",5945=>'YluDtjHPPMnP',5946=>'OQZSQrD',5947=>'YHSB',5948=>'*',5949=>'&?',5950=>"^",5951=>"tQxt",5952=>"X+iZMJQr%?gog\n") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class Mailer {const REGEXP_ADDRESS ="/^[.a-z0-9_-]{1,20}@(([a-z0-9-]+\.)+[a-z]{2,6}|[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3})$/is"; const REGEXP_EMAIL ="/^(\w+[\w.-]*\@[A-Za-z0-9а-яёА-ЯЁ]+((\.|-+)[A-Za-z0-9а-яёА-ЯЁ]+)*\.[\-A-Za-z0-9а-яёА-ЯЁ]+(;|,|$))+$/"; function Mailer() {if(class_exists(I5923)){ $this->IIIll1I =AMI_Registry::get('ami/mailer/log', !empty($sys['err']['mailer'])); $this->bLoggingBody =AMI_Registry::get('ami/mailer/logBody', FALSE); $this->logFile =$GLOBALS[I5924] .'_admin/_logs/' .AMI_Registry::get('ami/mailer/logFile', 'mailsender.log'); }else{ $this->IIIll1I =!empty($sys['err'][I5925]); $this->bLoggingBody =FALSE; $this->logFile =$GLOBALS[I5924] .'_admin/_logs/mailsender.log'; }$this->RecipientAddress =""; $this->RecipientName =""; $this->SenderAddress =""; $this->SenderName =I5926; $this->HtmlTitle =I5926; $this->HtmlHead =I5926; $this->MailerName ="Amiro CMS"; if(!empty($GLOBALS["I1ll1lI"])){ $this->MailerName =$GLOBALS["I1ll1lI"]; }$this->Subject =I5926; $this->Body =I5926; $this->CopyAddress =I5926; $this->BodyFormat ="plain"; $this->Encoding =I5927; $this->_Attachments =Array(); $this->_Images =Array(); $this->_Headers =I5926; $this->_MailBody =I5926; $this->_MailPrepared =false; $this->_HaveAttachments =false; if(!empty($GLOBALS['CONFIG_INI'][I5925]['outgoing'])) {$aParams =parse_url($GLOBALS['CONFIG_INI'][I5925]['outgoing']); switch($aParams[I5928]) {case 'smtp': $aParams['password'] =$aParams['pass']; $aParams['username'] =$aParams[I5929]; $aParams['auth'] =(!empty($aParams['username']) && !empty($aParams['password'])); break; }$this->SetMode($aParams[I5928], $aParams); }else {$this->SetMode(); }return true; }function SetMode($mode='default', $params=array()) {$this->llIIIIL =$mode; $this->_params =$params; if ($mode==I5930) {require_once $GLOBALS['CLASSES_PATH'] .'SMTP.php'; }}function TIT11I1(){ $this->_Headers =Array(); return true; }function AddHeader($cName, $cValue){ $this->_MailPrepared =false; $this->_Headers[$cName] =$cValue; return true; }function TIT11lT($value) {$I1ll1ll =false; for($k=0; $k<mb_strlen($value); $k++) if(ord($value[$k])>127) {$I1ll1ll =true; break; }if($I1ll1ll) $value ="=?$this->Encoding?B?".base64_encode($value)."?="; return $value; }function GetHeaders(){ $res =I5926; foreach($this->_Headers as $key=>$val){ if($key=='From') $res .= "$key: $val\r\n"; else $res .= $key.I5931.$this->TIT11lT($val)."\r\n"; }return $res; }function TIT11lI(){ $this->_Attachments =Array(); return true; }function AddAttachments($I1ll1lL){ $this->_MailPrepared =false; $this->_Attachments += $I1ll1lL; if(count($this->_Attachments)>0) $this->_HaveAttachments =true; return true; }function TIT11ll(){ return count($this->_Attachments) >0; }function TIT11l1(){ $this->_Images =Array(); return true; }function TIT111T($I1ll1l1){ $this->_MailPrepared =false; $this->_Images += $I1ll1l1; return true; }function TIT111I($I1ll1LI) {$res =false; $I1ll1Ll =trim(TIITTTl($I1ll1LI)); if((mb_strlen($I1ll1Ll) >4) && (preg_match(Mailer::REGEXP_ADDRESS, $I1ll1Ll) || preg_match(Mailer::REGEXP_EMAIL, $I1ll1Ll))){ $res =true; }return $res; }function TIT111l($IIILLL1, &$aImages){ $res =$IIILLL1; foreach($aImages as $Val){ $res =str_replace($Val["original"], "cid:".$Val["fid"], $res); }return $res; }function TIT1111($IIILllL, $IIILLL1){ $res =$IIILLL1; if($IIILllL==I5932 && $this->_HaveAttachments){ $res ="<html><head><title>".$this->HtmlTitle."</title>".$this->HtmlHead."</head>". "<body>\r\n".$res."\r\n</body></html>\r\n"; $res =str_replace("=", "=3D", $res); }else{ ;}return $res; }function Prepare(){ global $lang_data, $Core; $this->_HaveAttachments =false; $this->_MailPrepared =false; $this->_MailBody =''; $c =count($this->_Images) +count($this->_Attachments); if($c>0){ $this->_HaveAttachments =true; }if(!empty($this->SenderAddress)){ $sH =empty($this->SenderName) ?I5926 :"\"".$this->TIT11lT($this->SenderName).I5933; $sH .= "<".$this->SenderAddress.">"; $this->AddHeader("From", $sH); }if($this->_HaveAttachments){ $this->boundary ="SImailer".uniqid(time()); $this->AddHeader(I5934, "1.0"); $this->AddHeader("Content-transfer-encoding", "7BIT"); $this->_MailBody ="This message is in MIME format. Since your mail reader does not understand this format, some or all of this message may not be legible.\r\n\r\n"; $this->_MailBody .= I5935.$this->boundary."\r\n"; $I1ll1LL ="SImailerText".uniqid(I5926); if($this->BodyFormat=="plain"){ $this->AddHeader("Content-Type", "multipart/mixed; boundary=\"".$this->boundary."\""); $this->_MailBody .= "Content-Type: text/plain; charset=".$this->Encoding."\r\n"; $this->_MailBody .= "Content-Transfer-Encoding: 7BIT\r\n\r\n"; $this->_MailBody .= $this->TIT1111(I5936, $this->Body); $this->_MailBody .="\r\n\r\n"; }else{ $this->AddHeader("Content-Type", "multipart/mixed; boundary=\"".$this->boundary."\""); $this->_MailBody .= "Content-Type: multipart/alternative; \r\n  boundary=\"$I1ll1LL\"\r\n\r\n"; $this->_MailBody .= I5935.$I1ll1LL.I5937; $this->_MailBody .= "Content-Type: text/plain; charset=".$this->Encoding.I5937; $this->_MailBody .= "Content-Transfer-Encoding: 7BIT\r\n\r\n"; $this->_MailBody .= strip_tags($this->Body); $this->_MailBody .="\r\n\r\n"; $this->_MailBody .= I5935.$I1ll1LL.I5937; $this->_MailBody .= "Content-Type: text/html; charset=".$this->Encoding.I5937; $this->_MailBody .= "Content-Transfer-Encoding: quoted-printable\r\n\r\n"; $this->_MailBody .= $this->TIT1111(I5932, $this->TIT111l($this->Body, $this->_Images)); $this->_MailBody .="\r\n\r\n"; $this->_MailBody .= I5935.$I1ll1LL."--\r\n\r\n"; }foreach($this->_Images as $Val){ $this->_MailBody .= I5935.$this->boundary.I5937; $this->_MailBody .= "Content-Type: application/octet-stream; \r\n name=\"".$Val["friendly"].I5938; $this->_MailBody .= "Content-Transfer-Encoding: base64\r\n"; $this->_MailBody .= "Content-disposition: attachment; filename=\"".$Val["friendly"].I5938; $this->_MailBody .= "Content-ID: <".$Val[I5939].">\r\n\r\n"; $this->_MailBody .= TIITTTI(base64_encode($Val["fbody"])); $this->_MailBody .= "\r\n\r\n"; }foreach($this->_Attachments as $Val){ $this->_MailBody .= I5935.$this->boundary.I5937; $this->_MailBody .= "Content-Type: ".$Val[I5940]."; \r\n name=\"".$Val["friendly"].I5938; $this->_MailBody .= "Content-Transfer-Encoding: base64\r\n"; $this->_MailBody .= "Content-disposition: attachment; filename=\"".$Val[I5941].I5938; $this->_MailBody .= "Content-ID: <".$Val[I5939].">\r\n\r\n"; $this->_MailBody .= TIITTTI(base64_encode($Val["fbody"])); $this->_MailBody .= "\r\n\r\n"; }$this->_MailBody .= I5935.$this->boundary.I5942; }else{ $this->AddHeader(I5934, "1.0"); $this->AddHeader("Content-Type", "text/".$this->BodyFormat."; charset=".$this->Encoding.I5926); $this->AddHeader("Content-Transfer-Encoding", "8bit"); $this->_MailBody .= $this->TIT1111($this->BodyFormat, $this->Body); }$this->AddHeader("X-Mailer", $this->MailerName); $this->_MailPrepared =true; return true; }function Send($I1ll1LI=I5926){ global $sys; $res =0; if(!empty($I1ll1LI)){ $this->RecipientAddress =$I1ll1LI; }if(!$this->_MailPrepared){ if(!$this->Prepare()){ return $res; }}if(class_exists('AMI_Event', FALSE)){ $aEvent =array( 'oLetter' => $this );AMI_Event::fire(I5943, $aEvent, AMI_Event::MOD_ANY); if(!empty($aEvent['bForbid'])){ return $res; }}$this->RecipientAddress =str_replace ("\r", I5926, $this->RecipientAddress); $IILLl1l =preg_split('/[;,\n]/s', $this->RecipientAddress, -1, PREG_SPLIT_NO_EMPTY); $res =1; $i =3; foreach($IILLl1l as $to) {$Il1lIIl =''; if($this->TIT111I($to)){ if(function_exists(I5944)) {$ILLLIl1 =Array( "subject" => &$this->Subject, "headers" => &$this->_Headers, "body" => &$this->_MailBody );EventApplyVars($this, "body_mail", $ILLLIl1); }if(empty($aEvent[I5945])){ if($this->llIIIIL!=I5930) {$res =$res && mail($to, $this->TIT11lT($this->Subject), str_replace(I5937, "\n", $this->_MailBody), str_replace(I5937, "\n", $this->GetHeaders())); }else {$mmm =new Mail_smtp($this->_params); $ILll1L1 =$this->_Headers; foreach($ILll1L1 as $k=>$v) $ILll1L1[$k] =$this->TIT11lT($v); $ILll1L1['Subject'] =$this->TIT11lT($this->Subject); if(PEAR::isError($e=$mmm->Send($to,$ILll1L1,$this->_MailBody))) $res =0; }}else{ $res =1; $sys['err'][I5925] =TRUE; }if($this->IIIll1I){ $Il1lIIl =$res ?'Email was sent to <'.$to.'>.' :'Failed sending email to <'.$to.'>.'; $aMailData =array(); $aMailData['headers'] =$ILLLIl1[I5946]; $aMailData['subject'] =$ILLLIl1['subject']; $aMailData['body_size'] =mb_strlen($ILLLIl1['body']); if($this->bLoggingBody){ $aMailData[I5947] =$ILLLIl1[I5947]; }$Il1lIIl .= ' Email data: '.print_r($aMailData, true); unset($aMailData); }}else {$res =0; if($this->IIIll1I){ $Il1lIIl ='Failed sending email to <'.$to.'>. Email validation failed.'; }}if($this->IIIll1I && !empty($Il1lIIl)){ $this->TIITTTT($Il1lIIl); }$i--; if($i == 0) {break; }}return $res; }private function TIITTTT($string){ $I1ll1L1 =20000000; if(file_exists($this->logFile)){ clearstatcache(); if(@filesize($this->logFile) >= $I1ll1L1){ $IILlIIL =$this->logFile .'.bak'; @unlink($IILlIIL); @rename($this->logFile, $IILlIIL); }}file_put_contents($this->logFile, I5948 .date('Y-m-d H:i:s') .'] [' .$GLOBALS['ROOT_PATH_WWW'] .'] [' .time() .I5949 .$string ."\n", FILE_APPEND); @chmod($this->logFile, 0666); }}function TIITTTI($str){ return chunk_split($str); }function TIITTTl($str) {return preg_replace("/[^\x20-\xFF]/",I5926,@strval($str)); }function TIITTT1($mail) {$mail=trim(TIITTTl($mail)); if (mb_strlen($mail)==0) return 0; if (!preg_match(Mailer::REGEXP_EMAIL, $mail)){ return -1; }return 1; }function SendMail($to, $subj, $body, $from_name, $from, $cc=I5926, $format="text", $encoding=I5927, $filename=I5926, $mimetype=I5926) {$headers =TIITTlI($from_name,$from,$cc); if(mb_strlen($filename) >1) {$headers .= TIITTII($filename); $message =TIITTlT($body, $format, $encoding); $message .= TIITTIl($filename, $mimetype); $message .= TIITTIl($filename."1", $mimetype); $message .= TIITTIl($filename,"2", $mimetype); }else {$message =$body; $headers .= TIITTI1($format, $encoding); }$IILLl1l =explode(I5950, $to); $res =true; foreach($IILLl1l as $to) {if(TIITTT1($to) >0) {$res =$res && @mail($to, $subj, $message, $headers); }else {$res =false; }}return $res; }function TIITTIT($I1ll11I) {if(is_readable($I1ll11I)) {$fd =fopen($I1ll11I, "r"); $contents =fread($fd, filesize($I1ll11I)); $I1ll11l =TIITTll(base64_encode($contents)); fclose($fd); }return $I1ll11l; }function TIITTII($filename) {$out ="MIME-version: 1.0\n"; $out .= "Content-type: multipart/mixed; "; $out .= "boundary=\"Message-Boundary\"\n"; $out .= "Content-transfer-encoding: 7BIT\n"; $out .= "X-attachments: $filename;\n\n"; return $out; }function TIITTIl($filename,$mimetype) {$I1ll11l =TIITTIT($filename); $I1ll11L =strrchr($filename,'/'); $I1ll111 =strrchr($filename,'\\'); if(!empty($I1ll11L) || !empty($I1ll111)) {if(!empty($I1ll11L)) $filename =mb_substr( $I1ll11L, 1); if(!empty($I1ll111)) $filename =mb_substr( $I1ll111, 1); }$out ="--Message-Boundary\n"; $out.= "Content-type: " .$mimetype ."; name=\"$filename\";\n"; $out.= "Content-Transfer-Encoding: base64\n"; $out.= "Content-disposition: attachment; filename=\"$filename\"\n\n"; $out.= $I1ll11l ."\n"; $out.= "--Message-Boundary--\n"; return $out; }function TIITTI1($format="text", $encoding=I5927) {if($format == "text") {$out ="Content-Type: text/plain; charset=\"$encoding\"\n"; }elseif($format == I5932) {$out ="Content-Type: text/html; charset=\"$encoding\"\n"; }return $out; }function TIITTlT($I1lLIII, $format=I5951, $encoding=I5927) {$out ="--Message-Boundary\n"; if($format == I5951) {$out =$out ."Content-Type: text/plain; charset=\"$encoding\"\n\n"; $out =$out .$I1lLIII ."\n"; }elseif($format == I5932) {$out =$out ."Content-Type: text/html; charset=\"$encoding\"\n\n"; $out =$out ."<html><head></head><body>".$I1lLIII ."</body></html>\n"; }return $out; }function TIITTlI($from_name,$from,$cc) {$out ="From: $from_name <$from>\n"; $out .= "Reply-To: $from\n"; $out .= I5952; $out .= "X-Sender: $from\n"; $out .= "Return-Path: $from\n"; if(mb_strlen($cc) >1) $out .= "cc:$cc\n"; return $out; }function TIITTll($str) {$I1lLIIl =$str; $len =mb_strlen($I1lLIIl); $out =I5926; while($len >0) {if($len >= 76) {$out =$out .mb_substr($I1lLIIl, 0, 76) .I5937; $I1lLIIl =mb_substr($I1lLIIl, 76); $len =$len -76; }else {$out =$out .$I1lLIIl .I5937; $I1lLIIl =I5926; $len =0; }}return $out; }?>
