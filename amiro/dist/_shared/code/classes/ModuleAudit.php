<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       27797 xkqwmurtqzlpmwxxzupylirwxuxlquukukpniqursqwsrugtrnngngswtlnwppxmsymkpnir
 */ ?><?php foreach(array(6729=>"",6730=>"unSQfMnQS",6731=>'FMJtQr`GOG',6732=>"m1jmjmj",6733=>"|fHrI`tGJ",6734=>"JZnP~|",6735=>"wZnnHt?fMnS?ZuSMt?QxtQnDMHn?fHr?IHSuJQ?",6736=>"frHnt",6737=>"wZnnHt?fMnS?rQZJ?IHSuJQ%",6738=>"Z`SZtQ",6739=>"fJt|IHSuJQ",6740=>"Z`IHSuJQ|nZIQ",6741=>"fJt|MtQI|MS",6742=>"ZSSQS",6743=>"ZGGrHvQS",6744=>"ZJJ",6745=>"=",6746=>"fJt|HrMP|DtZtuD",6747=>"I`uDQrnZIQ",6748=>"I`JZDtnZIQ",6749=>"?Z`IHSuJQ|nZIQ!?Z`MtQI|nZIQ!?Z`MS|MtQI!?Z`HrMPMnZJ|DtZtuD!?Z`ZuSMt|DtZtuD!",6750=>'tZYJQD',6751=>'LHMnD',6752=>'jqFT',6753=>'I`uDQrnZIQ',6754=>"WID|IQIYQrD",6755=>"IHSuJQ|JMnK",6756=>"IQtOHS",6757=>"|iHSuJQjMnKwy",6758=>"IHSuJQ|nZIQ",6759=>"ZWtMHn",6760=>"PQt|CHrS",6761=>"SQfZuJt|CHrS",6762=>"QSMt|MS",6763=>"Z`MS",6764=>"fHrI|SZtZ",6765=>"YHSB|MtQID",6766=>'UDQr?SH?nHt?OZvQ?GQrIMDDMHn?tH?uDQ?ZuSMt?IHSuJQD?Hn?DMtQ?frHnt',6767=>"'?MD?nHt?ZJJHCQS?fHr?IHSuJQ?'",6768=>"zuSMt?QxtQnDMHn?MD?nHt?turnQS?Hn?fHr?IHSuJQ?'",6769=>"DtZtuD|IQDDZPQD",6770=>"frHnt|JMnK",6771=>"DtBJQ|DQJQWtQS",6772=>"SQfZuJt",6773=>"ZSIMn",6774=>"~#Yr}?\\~{ @~M",6775=>"JHWZtQ",6776=>"IHSuJQ|OQZSQr",6777=>"HrMPMnZJ|DtZtuD",6778=>"OMDtHrB",6779=>"MtQI|MS",6780=>"MS|MtQI",6781=>"MS|HCnQr",6782=>"{",6783=>"DtZtuD",6784=>"uDQrnZIQ",6785=>"MS|ZWtHr",6786=>"Qxt|ZuSMt",6787=>"WJZDD") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleAudit extends CMS_ActModule {public $I1LIl11; public $I1LILII; public $adm; public $backup; public $ILLLLLl; public $ILLLLlI; public $I1LILIl; function ModuleAudit(&$cms, &$db, &$cModule) {$this->I1LIl11 =null; $this->I1LILII ="undefined"; $this->adm =null; $this->backup =Array(); $this->ILLLLLl =Array(); $this->ILLLLlI =null; $this->I1LILIl =Array(); parent::CMS_ActModule($cms, $db, $cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll =I6729, $aOptions =Array()) {$IIIIL11 =Array(); $IIIIL11["default_prefix"] ="a"; $IIIIL11["front_require_login"] =true; $aOptions += $IIIIL11; switch($this->side) {case "admin": break; default: if(is_object($this->cms->ActiveModule)) {$this->I1LILII =$this->TIITI11($this->cms->ActiveModule->GetName()); }if($this->I1LILII != I6730 && !empty($this->I1LILII) && $this->cms->ActiveModule->GetParentName() == "srv_audit") {$this->cms->PushFrontSettings($this->db, $this->langData); require_once $GLOBALS['CLASSES_PATH'] .'Admin.php'; $this->adm =new Admin($this->cms->Core); $this->adm->constructorPostActions(); $this->I1LIl11 =&$this->cms->Core->GetModule($this->I1LILII); if(is_object($this->I1LIl11)) {$this->adm->InitFromObject($this->cms, $this->I1LIl11); require_once $GLOBALS['CLASSES_PATH'] .I6731; $this->adm->Filter =new Filter($this->adm); $this->adm->Filter->SetDateFormat($this->adm->DFMT); $this->adm->Filter->AddField("offset", "hidden", $this->adm->Vars["offset"]); $this->I1LIl11->InitEngine($this->adm, $this->db); $aTemplates =Array( $this->I1LILII."_list" => Array($GLOBALS[I6732].$this->I1LILII."_list.tpl", "templates/audit/".$this->I1LILII."_list.tpl"), $this->I1LILII."_subform" => Array($GLOBALS[I6732].$this->I1LILII.I6733, "templates/audit/".$this->I1LILII.I6733), $this->I1LILII."_form" => $GLOBALS[I6732]."form.tpl", );$this->I1LIl11->Engine->IIlll11 =$GLOBALS[I6732]; $this->I1LIl11->Engine->realSide ="front"; $this->I1LIl11->Engine->Init($aTemplates, $GLOBALS[I6732].I6734.$this->I1LILII."_msgs.lng", $GLOBALS[I6732]."lang/".$this->I1LILII.".lng"); $this->I1LIl11->Engine->browser->InitPager($this->I1LIl11->Engine->browser->Position, $this->module->GetOption("page_size")); $IIlLIIl =$this->TIITI1T($this->I1LIl11); if(empty($IIlLIIl)) {trigger_error(I6735.$this->I1LILII, E_USER_ERROR); }$aExt =$this->I1LIl11->Engine->TTT1lIl($IIlLIIl); $aExt[$IIlLIIl]->realSide =I6736; $aExt[$IIlLIIl]->TITTl1l($this->I1LIl11->Engine); }else {$this->I1LIl11 =null; trigger_error(I6737.$this->I1LILII, E_USER_WARNING); }$this->cms->PopFrontSettings($this->db, $this->langData); }break; }parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _ApplyFilters($prefix ='', $bodyType ='', $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); $res .= " AND a.id_iteration=0 "; return $res; }function TTTlIII() {$this->filter->UpdateFieldDBName("datefrom", I6738); $this->filter->UpdateFieldDBName("dateto", I6738); $module =$this->cms->Vars[I6739]; $aMap =$this->TIITI1l(); foreach(array_keys($aMap) as $modName) {$aModules =$this->filter->TITI1TT($aModules, array($this->words[$modName] => $modName), 64); }$aModules =$this->filter->TITI1TT($aModules, array($this->words["all"]=>I6729), 64); $this->filter->AddField(I6739, "select", $module, I6729, "=", I6740, $aModules); $this->filter->MoveField(I6739,_MOVE_PREV); if($module==I6729) {$this->filter->DisableFieldSQL(I6739); }$this->filter->AddField(I6741, "text", stripslashes(unhtmlentities($this->cms->Vars[I6741])), I6729, " =", "a.id_item"); $this->filter->MoveField(I6741,_MOVE_PREV); if($this->cms->Vars[I6741] == I6729) {$this->filter->DisableFieldSQL(I6741); }$I1LILI1 =$this->cms->Vars["flt_audit_status"]; $aAction =$this->filter->TITI1TT($aAction, array($this->words[I6742] => I6742), 35); $aAction =$this->filter->TITI1TT($aAction, array($this->words["changed"] => "changed"), 35); $aAction =$this->filter->TITI1TT($aAction, array($this->words["deleted"] => "deleted"), 35); $I1LILlI =$aAction; $aAction =$this->filter->TITI1TT($aAction, array($this->words[I6743] => I6743), 35); $aAction =$this->filter->TITI1TT($aAction, array($this->words["rejected"] => "rejected"), 35); $aAction =$this->filter->TITI1TT($aAction, array($this->words["purged"] => "purged"), 35); $aAction =$this->filter->TITI1TT($aAction, array($this->words[I6744] => I6729), 35); $aAction =$this->filter->TITI1TT($aAction, array($this->words["not_checked"] => "not_checked"), 35); $this->filter->AddField("flt_audit_status", "select", $I1LILI1, I6729, I6745, "a.audit_status", $aAction); if($I1LILI1 == I6729) {$this->filter->DisableFieldSQL("flt_audit_status"); }elseif($I1LILI1 == "not_checked") {$this->filter->TITI1II("flt_audit_status", "OR a.audit_status IN ('added','changed','deleted')"); }$IIIL1LI =$this->cms->Vars["flt_orig_status"]; $I1LILlI =$this->filter->TITI1TT($I1LILlI, array($this->words[I6744] => I6729), 35); $this->filter->AddField("flt_orig_status", "select", $IIIL1LI, I6729, I6745, "a.original_status", $I1LILlI); if($IIIL1LI == I6729) {$this->filter->DisableFieldSQL(I6746); }$this->filter->AddField("flt_username", "text", stripslashes(unhtmlentities($this->cms->Vars["flt_username"])), I6729, " like ", I6747); $this->filter->AddField("flt_lastname", "text", stripslashes(unhtmlentities($this->cms->Vars["flt_lastname"])), I6729, " like ", I6748); parent::TTTlIII(); }function TTTlI11(&$vData, &$aCustom) {$this->browser->InitSQL("a.id, a.date, date_format(a.date,'".$this->cms->DFMT["db_dtime"]."') as fdate,". I6749. " a.id_owner, m.username, m.firstname, m.lastname", Array(I6750=>Array('a'=>'cms_srv_audit', 'm'=>'cms_members'), I6751=>Array("m|a"=>"a.id_owner=m.id"), 'joins_types'=>Array('m|a'=>I6752) ),"WHERE 1 ".$this->_ApplyFilters().$this->TTTlIl1(), I6729, "date", "a.id desc", Array( 'username'=>I6753, 'owner_name'=>'CONCAT(m.firstname, \' \', m.lastname)' ));$this->browser->AddSQLJoinedTables($this->cms->Core, "a", Array("m"=>I6754)); $aCustom["fields"] += Array( I6755=>Array("action"=>"callback", "object"=>&$this, I6756=>I6757), "item_name"=>Array("action"=>"stripline", "size"=>30), I6758=>Array(I6759=>"get_word", "words"=>&$this->words, "default_word"=>I6730), "original_status"=>Array(I6759=>I6760, "words"=>&$this->words, "default_word"=>I6730), "audit_status"=>Array(I6759=>I6760, "words"=>&$this->words, I6761=>I6730), "action_edit"=>Array(I6759=>"flagicon", "value"=>I6729, "id"=>I6762, "on"=>$this->moduleName."_list:edit","off"=>I6729), );$aCustom["applied_id"] =I6763; $aCustom["legend"] =Array("leg_yellow", "leg_blue", "leg_edit"); $aCustom[I6764]["buttons"] =Array(); parent::TTTlI11($vData, $aCustom); }function TTTllTI(&$aCustom) {if(is_object($this->I1LIl11)) {$this->SetBodyType("body_items"); }else {$this->SetBodyType("body_itemD"); }parent::TTTllTI($aCustom); }function TTTll1T(&$vData, &$aCustom) {$aDefault =Array(); foreach($this->IIllIL1 as $IIlL1L1 => $tmp) {$IIlL1Ll =$this->TTITTT1($aCustom, $IIlL1L1); switch($IIlL1L1) {case "body_itemD": break; case I6765: if(!$this->module->GetOption('audit_front')){ trigger_error(I6766, E_USER_ERROR); }if(is_object($this->I1LIl11)) {$this->cms->Core->Cache->Disable(); $IIlLIIl =$this->TIITI1T($this->I1LIl11); if(!empty($IIlLIIl)) {$ext =&$this->GetExtension($IIlLIIl); if(!is_object($ext) || !$ext->TITTlII($this->cms, $this->I1LIl11, $this->db)) {trigger_error("Extension '".$IIlLIIl.I6767.$this->I1LILII."'", E_USER_ERROR); }}else {trigger_error(I6768.$this->I1LILII."'", E_USER_ERROR); }$this->cms->PushFrontSettings($this->db, $this->langData); $html =$this->I1LIl11->Engine->GetHtml($NONE); $html[I6769] =$this->I1LIl11->Engine->cms->TTITlII(I6769); $vData["item_list"] =$this->cms->Gui->get($this->moduleName."_list:item_list", $html); $this->I1LIl11->TTlITl1(); $this->cms->PopFrontSettings($this->db, $this->langData); }break; }}}function TTTll1I(&$vRes, &$aCustom, $cType, $IIlLlII) {if(is_object($this->cms->Member)) {$I1lLILI =$this->cms->Gui->getAbs($this->moduleName."_list:special_selected_style", I6729); $IllI1II =$this->cms->Member->isLoggedIn(); $I1LILll =$this->TIITI1l(); $I1LILlL =array_keys($I1LILll); $aModules =$I1LILlL; foreach($aModules as $modName) {$I1LILl1 =$this->TIITlTT($modName); if($this->cms->Core->IsPresentInPMandPublic($I1LILl1) && (!in_array($modName, $I1LILlL) || ($IllI1II && in_array($modName, $I1LILlL)))) {$ext =&$this->TIITI1I($I1LILll[$modName]); if($ext->TITTlII($this->cms, $this->module, $this->db) && $this->module->GetOption('audit_front')){ $aData =Array(); $aData[I6770] =$ext->TITT1TI($this->cms, $modName); $aData[$I1LILl1 .'_script'] =null; $aData["header"] =$this->words[$modName."_menu_header"]; if($this->cms->ActivePage == $I1LILl1) {$aData["style_selected"] =$I1lLILI; }else {$aData[I6771] =I6729; }$vRes[$I1LILl1]["vars"] =$aData; $vRes[$I1LILl1]["default"] =$this->cms->Gui->get($this->moduleName."_list:special_menu_".$I1LILl1, $aData); if(empty($vRes[$I1LILl1]["default"])) {$vRes[$I1LILl1][I6772] =$this->cms->Gui->get($this->moduleName."_list:special_menu_item", $aData); }}}}}}function TTTlITT($IIIL11l, $cId, $cModule =I6729) {if($IIIL11l == "edit") {require_once $GLOBALS['CLASSES_PATH'] .'AuditObject.php'; $this->ILLLLlI =new AuditObject($this->cms, $this->db); }switch($this->side) {case I6773: parent::TTTlITT($IIIL11l, $cId, $cModule); break; default: if(is_object($this->I1LIl11)) {switch ($IIIL11l) {case "edit": $this->cms->PushFrontSettings($this->db, $this->langData); $this->I1LIl11->Engine->ProcessAction($IIIL11l, $cId); if(!$this->ILLLLlI->Init($cId, $this->I1LILII)) {trigger_error("Audit object was not initialized",E_USER_ERROR); }foreach($this->cms->Core->TTlTTTI("html_area_fields") as $field) {if(isset($this->I1LIl11->Engine->itemData[$field])) {$I1LILLI =$this->ILLLLlI->TTTT1lT()? I6729: "\n"; $this->I1LIl11->Engine->itemData[$field] =preg_replace(I6774, $I1LILLI, unhtmlentities($this->I1LIl11->Engine->itemData[$field])); }}$this->cms->PopFrontSettings($this->db, $this->langData); break; case "add": case "apply": case "save": foreach($this->cms->Core->TTlTTTI("html_area_fields") as $field) {if(isset($this->I1LIl11->Engine->cms->VarsPost[$field])) {$this->I1LIl11->Engine->realSide =I6736; $this->I1LIl11->Engine->cms->VarsPost[$field] =nl2br($this->cms->htmlchars($this->cms->TTITIIT($this->I1LIl11->Engine->cms->VarsPost[$field]))); $this->I1LIl11->Engine->cms->Vars[$field] =$this->I1LIl11->Engine->cms->VarsPost[$field]; }}$this->I1LIl11->Engine->realSide =I6736; $this->cms->PushFrontSettings($this->db, $this->langData); $this->I1LIl11->Engine->ProcessAction($IIIL11l, $cId); $this->cms->PopFrontSettings($this->db, $this->langData); break; case I6775: case "del": $this->cms->PushFrontSettings($this->db, $this->langData); $this->I1LIl11->Engine->ProcessAction($IIIL11l, $cId); $this->cms->PopFrontSettings($this->db, $this->langData); break; }}break; }}function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); $sql ="SELECT a.*, DATE_FORMAT(a.date,'".$this->cms->DFMT["db_dtime"]."') AS fdate, ". "UNIX_TIMESTAMP(a.date) as unix_date, mo.firstname, mo.lastname ". "FROM cms_srv_audit a ". "LEFT JOIN cms_members mo ON a.id_owner=mo.id ". "WHERE a.id='".$cId."'".$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()) {$this->itemData =$this->db->Record; $this->_ModuleLinkCB($this->itemData, $this->itemData); $this->itemData[I6776] =$this->words[$this->itemData[I6758]]; $this->itemData[I6777] =$this->words[$this->itemData[I6777]]; $this->itemData["audit_status"] =$this->words[$this->itemData["audit_status"]]; $ILLL1L1 =Array( "items" => I6729, "fields" => Array( I6778 => Array(I6759 => "callback", "object"=>&$this, I6756=>"_GetHistoryRowCB"), ),"list_data" => Array(I6779 => $this->itemData["id_item"], I6758 => $this->itemData[I6758]), "last_edited_id" => $this->itemData["unix_date"]."_9999", );if(!$this->ILLLLlI->Init($this->db->Record[I6780], $this->db->Record[I6758])) {trigger_error("Audit object was not initialized",E_USER_ERROR); }$this->itemData["changes_history"] =$this->ILLLLlI->TTTT111(0); foreach($this->itemData["changes_history"] as $date=>$val) {$this->ILLLLLl[intval($val["id_actor"])] =false; $this->ILLLLLl[intval($val[I6781])] =false; $this->itemData["changes_history"][$date]["id"] =$date; }$sql ="SELECT * FROM cms_members WHERE id IN (".implode(",", array_keys($this->ILLLLLl)).I6782; $this->db->query($sql); while($this->db->next_record()) {$this->ILLLLLl[$this->db->Record["id"]] =$this->db->Record; }$this->itemData["changes_history"] =$this->TTT1lT1(serialize($this->itemData["changes_history"]), $ILLL1L1); }}function _ModuleLinkCB(&$aItem, &$aData) {$vMod =&$this->cms->Core->GetModule($aItem[I6758]); $aItem[I6755] =(is_object($vMod))? $vMod->GetAdminLink(): I6729; }function _GetHistoryRowCB(&$vItem, &$vData) {$vItem["status"] =$this->words[$vItem[I6783]]; $vItem["owner"] =$this->ILLLLLl[$vItem[I6781]]["username"]; $vItem["username"] =$this->ILLLLLl[$vItem["id_actor"]][I6784]; $vItem["firstname"] =$this->ILLLLLl[$vItem["id_actor"]]["firstname"]; $vItem["lastname"] =$this->ILLLLLl[$vItem[I6785]]["lastname"]; $vItem["changed_by"] =$this->words[$this->cms->Core->TTllIII($this->itemData[I6758], $vItem[I6785])]; $vItem["comments_short"] =$this->cms->stripLine($vItem["comments"], 30, true); }function TIITI1T(&$vMod) {$res =I6729; $I1LILLl =$this->cms->Core->GetModProperty(I6786, "class"); $aExtensions =$vMod->IssetOption("extensions") ?$vMod->GetAOption("extensions"): Array(); foreach($aExtensions as $ext) {if(!empty($ext) && is_string($ext)) {$I1LILLL =&$this->cms->Core->GetModule($ext); if(is_object($I1LILLL)) {if($I1LILLL->issetProperty("class")){ $aClasses =$I1LILLL->TTlTTTI(I6787); if(in_array($I1LILLl, $aClasses) && $I1LILLL->IsInstalled($ext)) {$res =$ext; break; }}}else {trigger_error("Trying to get wrong extension module '$ext' for module '".$vMod->GetName()."'", E_USER_WARNING); }}}return $res; }function &TIITI1I($I1LILL1) {if(empty($this->I1LILIl[$I1LILL1]) || !is_object($this->I1LILIl[$I1LILL1])){ $this->I1LILIl[$I1LILL1] =&$this->GetExtension($I1LILL1); }return $this->I1LILIl[$I1LILL1]; }function TIITI1l() {$aModules =Array(); $I1LIL1I =&$this->module->GetSubModules(); foreach(array_keys($I1LIL1I) as $modName) {$I1LIl11 =$this->TIITI11($modName); if(!empty($I1LIl11)) {$vMod =&$this->cms->Core->GetModule($I1LIl11); if(is_object($vMod) && $vMod->IsInstalled()) {$IIlLIIl =$this->TIITI1T($vMod); if(!empty($IIlLIIl)) {$ext =&$this->TIITI1I($IIlLIIl); if(is_object($ext) && $ext->TITTlII($this->cms, $vMod, $this->db) && $this->cms->Core->IsFrontAllowed($modName)) {$aModules[$I1LIl11] =$IIlLIIl; }}}}}return $aModules; }function TIITI11($IIILLII) {$res =(mb_substr($IIILLII, 0, 10) == "srv_audit_")? mb_substr($IIILLII, 10): I6729; return $res; }function TIITlTT($IIILLII) {$res ="srv_audit_".$IIILLII; return $res; }}