<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       20366 xkqwuknuxzzitklplsmnkupilylrpxwgnyymmkpwgxkkliwgkqkgruslgkknxitgyqrqpnir
 */ ?><?php foreach(array(6888=>'wjzddqd|gzTo',6889=>'zSIiHSuJQ`GOG',6890=>'FUNw|mNwjUsqd|gzTo',6891=>"ZJJHCQS|ZWtMHnD",6892=>"MIGHrt|ZrWO",6893=>'RhhT|gzTo',6894=>"tDtZIG",6895=>'',6896=>"~|ZSIMn~|JHPD",6897=>'SMDZYJQS',6898=>'YK|MtQID',6899=>"fMQJSD",6900=>'IQtOHS',6901=>"DMAQ",6902=>"JQP|SQJ",6903=>'WHSQ',6904=>'!?',6905=>'fMJQ|DMAQ',6906=>'SQJ|MS',6907=>"|JMDt%MWHn|nHnQ",6908=>'fMJQnZIQ',6909=>'ZWtMHn|SQJ',6910=>'OrQf',6911=>"ftGPQtfMJQ`GOG IHSuJQ=",6912=>":S`:S",6913=>'WHntQntD',6914=>'rQS',6915=>'ZrWO|MIGHrt|Qrr',6916=>'rQDtHrQ',6917=>'frHnt|rQDtHrQ',6918=>'ZSIMn',6919=>'WDD|LD|vQrDMHn',6920=>'WHIIHn|DQttMnPD',6921=>"|DuYfHrI",6922=>"SQDWrMGtMHn",6923=>'frHnt',6924=>'YZWKuG|SQJQtQS') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'CMSBackup.php'; require_once $GLOBALS[I6888] .'SiteArchive.php'; require_once $GLOBALS[I6888] .'SiteLock.php'; require_once $GLOBALS[I6888] .I6889; require_once $GLOBALS[I6888] .'ProgressIndicator.php'; require_once $GLOBALS[I6888] .'ProgressDisplay.php'; require_once $GLOBALS[I6890] .'func_file_system.php'; define('ALLOW_HOSTADMIN_BACKUPS',false); class ModuleBackups extends AdmModule {public $I1LI1LL; public $I1LI1L1; public $I1LI11I; public $I1LI11l; public $IIlIlII; function ModuleBackups(&$cms, &$db, &$cModule) {parent::AdmModule($cms,$db,$cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()) {$IIIIL11[I6891] =Array("restore", "add", "del", "special",I6892); $IIIIL11["lang_data"] =false; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin() {require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_gui.php"); parent::_InitAdmin(); $this->I1LI1LL =60; $single =($this->cms->Core->HostMode() &HOSTMODE_SHARED)==0; $this->I1LI11I =TI1lIII()==1; $this->I1LI1L1 =!$single || $this->I1LI11I; $this->I1LI11l ='_mod_files/_upload/'; $this->IIlIlII =$GLOBALS[I6893].'_shared/sys/var/backup/'; }function TTlTll1() {parent::TTlTll1(); }function TTTlIII() {parent::TTTlIII(); $this->filter->UpdateFieldDBName("datefrom", "tstamp"); $this->filter->UpdateFieldDBName("dateto", I6894); }function TIITlT1(&$items) {foreach($items as $code=>$str) $items[$code] =$this->words[$str]; }function TIITlIT() {return !($this->cms->Core->HostMode() &HOSTMODE_SHARED) || $GLOBALS['SHARED_OPT']['allow_archive_import']; }function TTTlI1I(&$vData) {$files =getFiles($GLOBALS[I6893]."/_shared/sys/dbdumps"); foreach ($files as $file) {if ($file !== $GLOBALS[I6893]."/_shared/sys/dbdumps/.placeholder") {@unlink($file); }}$I1LI11L =Array(); $this->db->query('select filename from cms_site_archives'); while ($this->db->nextRecord()) {$I1LI11L[$GLOBALS[I6893]."/_shared/sys/var/backup/".$this->db->Record['filename']] =1; }$files =getFiles($GLOBALS[I6893]."/_shared/sys/var/backup"); foreach ($files as $file) {if ($file !== $GLOBALS[I6893]."/_shared/sys/var/backup/.placeholder" and !isset($I1LI11L[$file])) {@unlink($file); }}$I1LI111 =$items =CMSBackup::TTTIllT(BK_USER_MASK); $this->TIITlT1($I1LI111); $html =I6895; $I1LlIII =I6895; $single =($this->cms->Core->HostMode() &HOSTMODE_SHARED)==0; $I1LlIIl =0; foreach($I1LI111 as $code=>$str) {if($code == 2) {$size =0; $sql ="SHOW TABLE STATUS"; $this->db->query($sql); while ($this->db->nextRecord()) {$size =$size +$this->db->Record['Data_length'] +$this->db->Record['Index_length']; }}elseif ($code == 16) {$I1LlIIL =TlTl1T1($GLOBALS[I6893]); $I1LlII1 =TlTl1T1($GLOBALS[I6893]."/_shared/sys/var"); $I1LlIlI =TlTl1T1($GLOBALS[I6893].I6896); $size =$I1LlIIL -$I1LlII1 -$I1LlIlI; }else {$size =1024 *1024; }$I1LlIIl =$I1LlIIl +$size; $size =getBytesAsText($size, $adm->Words, 2, 2); $newsize="($size Mb)"; $html .= $this->cms->Gui->getAbs($this->moduleName.'_subform:bk_item', array('id'=>$items[$code],'itemcode'=>$code,'itemname'=>$str,I6897=>$I1LlIII,'newsize'=>$newsize)); }if(!$single) {$adb =&DB_si::admInstance(); $oSess =admSession(); $domain =$oSess->TlIT11I(); $sql ="select disk_quota from cms_host_users where domain_orig='$domain'"; $adb->query($sql); $adb->next_record(); $quota =$adb->Record['disk_quota'] *1024 *1024; if(isset($adb)) unset($adb); $quota =$quota -$I1LlIIL; $vData['quota'] =getBytesAsText($quota, $adm->Words, 2, 2); if ($I1LlIIl *1.5 >= $quota) {$vData['quota_low'] =1; trigger_error("BACKUP_QUOTA_IS_LOW"); }}else {$quota =0; $vData['quota'] =0; }$I1LlIll =$I1LlIIl +10 *1024 *1024 +$I1LlII1 +$I1LlIlI; $vData['distr_size'] =getBytesAsText($I1LlIll, $adm->Words, 2, 2); if (!$single and $I1LlIll *1.5 >= $quota) {trigger_error("DISTRIB_QUOTA_IS_LOW"); $vData['quota_low_d'] =1; }$vData[I6898] =$html; $vData['arch_upload_dir'] =$this->I1LI11l; $vData['ALLOW_ARCH_IMPORT'] =$this->TIITlIT() ?1 :0; $vData['ALLOW_CREATE_DISTRIB'] =1; if ($GLOBALS['SHARED_OPT']['allow_create_distrib1'] === false and !$this->TTTTII1()) {$vData['ALLOW_CREATE_DISTRIB'] =0; $vMod =$this->cms->Core->GetModule('files'); if(is_object($vMod)) {$vMod->SetInstalled(false); }}if ($GLOBALS['SHARED_OPT']['allow_create_distrib'] === false) $vData['ALLOW_CREATE_DISTRIB'] =0; if(!$this->I1LI1L1) $this->cms->AddStatusMsg('no_file_write_perm','red'); parent::TTTlI1I($vData); }function TTTlI11(&$vData, &$aCustom) {$this->browser->InitSQL("id,description,arch_type,sys_type,tstamp,". "contents,meta,filename,file_size ", "FROM cms_site_archives ", "WHERE sys_type!=".ARCH_SYSTYPE_SYS." ".$this->_ApplyFilters().$this->TTTlIl1(), "", I6894, "id desc" );$aCustom[I6899] += Array( 'items'=>array('action'=>'callback','object'=>&$this,I6900=>'_cbRow'), "description"=>Array("action"=>"stripline", I6901=>100), );$aCustom["applied_id"] ="id"; $aCustom["legend"] =Array("leg_restore",I6902); $aCustom["form_data"]["buttons"] =Array("add"); parent::TTTlI11($vData, $aCustom); }function TIITlII($archVer) {return true; $I1LlIlL =intval($archVer/100); $I1LlIl1 =intval($this->db->TT1lITI()/100); return $I1LlIlL<=$I1LlIl1; }function TIITlIl($vers,$items) {$core =&$this->cms->Core; foreach($vers as $prod=>$v) {if(($items &(BK_CODE|BK_LOCALS)) && $core->compareVersions($vers[$prod]['code'],$core->getVersion($prod,I6903))) return false; if(($items &(BK_DB|BK_OPTIONS|BK_TEMPLATES)) && $core->compareVersions($vers[$prod]['act_db'],$core->getVersion($prod,'act_db'))) return false; }return true; }function TIITlI1($cmsVer,$I1LlILI,$contents) {if($contents &BK_SYS_MASK || !$this->TIITlIl($cmsVer,$contents) || ($contents &BK_FILES_MASK) && !$this->I1LI1L1 || ($contents &BK_DB_MASK) && !$this->TIITlII($I1LlILI)) return false; return true; }function _cbRow(&$aItem,&$aData) {static $I1LlILl; $I1LlILL =$aItem['contents']; $items =CMSBackup::TTTIllT($I1LlILL); $this->TIITlT1($items); $aItem['items'] =implode(I6904,$items); if(!file_exists($this->IIlIlII.$aItem['filename'])) {$aItem['filename'] ='-'; $aItem['file_size'] =0; }else {$order =$aItem[I6905]<1024*1024 ?1 :2; $aItem[I6905] =getBytesAsText($aItem[I6905], $this->words, 2, $order); }$aItem['arch_type'] =$this->words['arch_type_'.$aItem['arch_type']]; $I1LlIL1 =$this->cms->Gui->getAbs($this->moduleName."_list:del",array(I6906=>$aItem['id'])); $I1LlI1I =$this->cms->Gui->getAbs($this->moduleName."_list:restore",array('restore_id'=>$aItem['id'])); $I1LlI1l =$this->cms->Gui->getAbs($this->moduleName.I6907,array()); $meta =unserialize($aItem['meta']); $aItem['site_id'] =$meta['site_id']; if($aItem['sys_type']==ARCH_SYSTYPE_SYS) $I1LlIL1 =$I1LlI1I =$I1LlI1l; elseif($aItem[I6908]==='-' || !$this->TIITlI1($meta['cms_versions'],$meta['db']['mysqlver'],$I1LlILL)) {$I1LlI1I =$I1LlI1l; }$aItem[I6909] =$I1LlIL1; $aItem['action_restore'] =$I1LlI1I; if($aItem['sys_type']==ARCH_SYSTYPE_USER && $aItem[I6908]!=='-') {if (is_null($I1LlILl)) {$I1LlILl =$this->cms->Core->IsInstalled('files'); }if ($I1LlILl) {$d =array(I6910=>I6911.$this->moduleName."&id=$aItem[id]", I6908=>$aItem[I6908]); $aItem[I6908] =$this->cms->Gui->getAbs($this->moduleName."_list:download",$d); }}}function TTTlITT($IIIL11l, $cId, $cModule =I6895) {switch($IIIL11l) {case 'restore': $this->TIITllI($cId,$cModule); break; case 'import_arch': $this->TTIITT1($IIIL11l); break; case 'create_distr': $this->TTTll11($cId,$cModule); default: parent::TTTlITT($IIIL11l,$cId,$cModule); }}function TTIITT1($action) {if(!$this->TIITlIT()) {trigger_error("Archive import forbidden but ".get_class($this)."::_ActionImport() called"); return; }$fname =$this->cms->VarsPost['archname']; $archive =$GLOBALS[I6893].$this->I1LI11l.$fname; if(!file_exists($archive)) {$this->cms->AddStatusMsg('arch_not_found','red'); return; }$IIlIlLL =new CMSBackup($this->db); if(!$IIlIlLL->TTTIlI1($archive)) {trigger_error("Cannot load archive from file: ".$IIlIlLL->errorsAsString()); $this->cms->AddStatusMsg('arch_import_err','red'); return; }$meta =$IIlIlLL->meta(); if(!$this->TIITlIl($meta['cms_versions'],$meta['contents'])) {$this->cms->AddStatusMsg('cms_version_mismatch','red'); return; }$I1LlI1L =$meta['db']['mysqlver']; if($meta['contents'] &BK_DB_MASK && !$this->TIITlII($I1LlI1L)) {$I1LlI1L =sprintf(I6912,intval($I1LlI1L/10000),intval(($I1LlI1L%10000)/100)); $I1LlI11 =$this->db->TT1lITI(); $I1LlI11 =sprintf(I6912,intval($I1LlI11/10000),intval(($I1LlI11%10000)/100)); $this->cms->AddStatusMsg('mysql_version_mismatch','red',I6895,I6895, array('archver'=>$I1LlI1L,'curver'=>$I1LlI11)); return; }if($meta[I6913] &BK_SYS_MASK || $meta['sys_type']!=ARCH_SYSTYPE_USER) {$this->cms->AddStatusMsg('invalid_archive_type','red'); return; }if(($contents &BK_FILES_MASK) && !$this->I1LI1L1) {$this->cms->AddStatusMsg('arch_db_only',I6914); return; }$ts =addslashes($IIlIlLL->tstamp()); $siteId =addslashes($IIlIlLL->TI1lI11()); $rec =$this->db->getRecord("SELECT id FROM cms_site_archives ". "WHERE tstamp=FROM_UNIXTIME($ts) AND site_id='$siteId'"); if($rec) {$this->cms->AddStatusMsg('arch_already_imported',I6914); $this->TIITllT($rec['id']); return; }if(!$IIlIlLL->save()) {trigger_error("Cannot save imported archive: ".$IIlIlLL->errorsAsString()); $this->cms->AddStatusMsg(I6915,I6914); return; }$id =$IIlIlLL->id(); $this->TIITllT($id); $this->cms->AddStatusMsg('arch_import_ok','blue'); }function TIITllT($id) {$rec =$this->db->getRecord("SELECT tstamp FROM cms_site_archives WHERE id=$id"); $this->appliedId =$id; $sql ="INSERT cms_site_archives (tstamp) VALUES('$rec[tstamp]')"; $this->browser->SetApplied($this->db,$sql,$this->langData); }function TIITllI($cId, $cModule) {ignore_user_abort(true); $pi =new ProgressIndicator($this->cms->Gui,$this->moduleName."_subform"); $pi->show(); $IIlILl1 =new SiteArchDisplay($pi,$this->words); $IIlILl1->setHeader($this->words['restoring_backup']); $IIlILl1->init(I6916); $IIlIlLL =new CMSBackup($this->db,$cId); $meta =$IIlIlLL->meta(); if($meta===false) $IIlILl1->TI1TIll($IIlIlLL->errorsAsString()); if($meta[I6913] &BK_SYS_MASK) $IIlILl1->TI1TIll("Cannot restore archive: it contains system files. archive id=$cId"); if(!$this->TIITlIl($meta['cms_versions'],$meta[I6913])) $IIlILl1->TI1TIll("Cannot restore archive: CMS version mismatch: archive id=$cId"); if($meta[I6913] &BK_DB_MASK && !$this->TIITlII($meta['db']['mysqlver'])) {$IIlILl1->TI1TIll("Cannot restore archive: MySQL version mismatch. Archive id=$cId"); }if(($meta[I6913] &BK_FILES_MASK) && !$this->I1LI1L1) {$IIlILl1->TI1TIll("Cannot restore archive: no write permission on files. Archive id=$cId"); }$lock =new SiteLock($this->cms->Gui); $IIlI1lL =$lock->put('front',I6917); $IIlI1l1 =$lock->put('admin','admin_restore'); $IIlIlLL->TTTIT11('sitearch_restore',$IIlILl1); $auth =($this->cms->Core->HostMode() &HOSTMODE_SHARED) && !$this->I1LI11I ?$this->TTTTIl1() :false; $res =$IIlIlLL->restore($auth); if($res || !$IIlIlLL->TTTITl1()) {$lock->remove('front'); $lock->remove(I6918); }if($res) {$IIlILl1->TI1TI1T($this->words['backup_restored']); if(AMI::issetOption('common_settings', 'css_js_version')){ $I1LllII =AMI::getOption('common_settings', I6919); list($I1LllIl, $I1LllIL) =explode('-', $I1LllII); $I1LllIl =sprintf("%04d", (int)$I1LllIl +1); $I1LllIL =date('dmHi'); $I1LllII =$I1LllIl .'-' .$I1LllIL; AMI::setOption(I6920, I6919, $I1LllII); $GLOBALS['Core']->SaveOptions(I6920, false); }}else {if($IIlIlLL->TTTITl1()) {$lock->put(I6918,'status_err',array('op_info'=>$IIlIlLL->errorsAsString("\n"))); }$errmsg =$IIlIlLL->errorsAsString(); trigger_error("Cannot restore backup: $errmsg"); }$pi->TI1TlII(); exit; }function TTTll11($cId, $cModule) {ignore_user_abort(true); $pi =new ProgressIndicator($this->cms->Gui,$this->moduleName.I6921); $pi->show(); $IIlILl1 =new SiteArchDisplay($pi,$this->words); $IIlILl1->setHeader($this->words['backing_up']); $IIlILl1->init('create'); $data =array( 'sys_type' => ARCH_SYSTYPE_USER, 'description' => stripslashes($this->cms->VarsPost[I6922]), 'skip_existing_backups' => false );if($this->cms->Vars['action']=='create_distr') {$I1LllI1 =intval($this->cms->VarsPost['skip_existing_backups']); $data['skip_existing_backups'] =$I1LllI1; $IIlIlLL =new CMSDistrib($this->db); }else {$items =explode('|',$this->cms->VarsPost['item_id']); if(!is_array($items)) $IIlILl1->TI1TIll("Invalid item_id GET var"); $mask =0; foreach($items as $i=>$code) $mask |= intval($code); $mask &= BK_USER_MASK; $data[I6913] =$mask; $IIlIlLL =new CMSBackup($this->db); }if(!$IIlIlLL->prepare($data)) $IIlILl1->TI1TIll($IIlIlLL->errorsAsString()); $I1LlllI =intval($this->cms->VarsPost['skip_front_lock']); $lock =new SiteLock($this->cms->Gui); if(!$I1LlllI) $IIlI1lL =$lock->put(I6923,'front_backup'); $IIlI1l1 =$lock->put(I6918,'admin_backup'); $IIlIlLL->TTTIT11('sitearch_create',$IIlILl1); if(!$IIlIlLL->create()) {$errmsg =$IIlIlLL->errorsAsString(); trigger_error("Cannot create backup: $errmsg"); }else $IIlILl1->TI1TI1T($this->words['backup_created']); if(!$I1LlllI) $lock->remove(I6923); $lock->remove(I6918); $pi->TI1TlII(); exit; }function _ActionDel($cId, $cModule) {ignore_user_abort(true); $cId =intval($cId); $IIlIlLL =new CMSBackup($this->db,$cId); if($IIlIlLL->delete()) $this->cms->AddStatusMsg(I6924,'blue'); else {trigger_error("Cannot delete backup: ".$IIlIlLL->errorsAsString()); $this->cms->AddStatusMsg('cannot_delete_backup',I6914); }}}?>