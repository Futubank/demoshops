<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       43900 xkqwzyqkipnyqmptumxkmtsrrwtzgqsrsyytklrtxruirzgiygyupgxpzirwyyqrpxuypnir
 */ ?><?php foreach(array(7963=>'qDOHGzSIMn`GOG',7964=>"SQfZuJt|GrQfMx",7965=>"WHGB",7966=>"QSMt",7967=>"GHGuG",7968=>"fJt|tBGQ",7969=>"fJt|GuYJMW",7970=>"WHuGHn",7971=>'HrSQr',7972=>"GQrWQnt",7973=>"tHtZJ",7974=>"SZtQ|DtZrt",7975=>"=",7976=>"",7977=>"fJt|nZIQ",7978=>'',7979=>"fSZtQ|QnS",7980=>"tBGQ",7981=>'QxtrZ|GrMWQ|',7982=>'GrMWQ',7983=>']GrMWQ|OZDO=',7984=>"IZx|ZIHunt",7985=>"GuYJMW",7986=>"nZIQ",7987=>"HGtMHn|rHC",7988=>"tBGQ|HGtMHnD",7989=>"WHnSMtMHn",7990=>"MtQID|WHunt",7991=>"DhrSQr",7992=>"GrMWQ|",7993=>"|",7994=>'|',7995=>"|JMDt",7996=>"ZIHunt",7997=>"ZGGJB|tH",7998=>"ZWWuIuJZtMvQ|tHtZJ",7999=>'ZWWuIuJZtMvQ',8000=>"|SMDWHuntD.?",8001=>".!?",8002=>"GQrMHS",8003=>"WHnSMtMHn|",8004=>'JQvQJ',8005=>'!',8006=>"'",8007=>'tBGQ|WHuGHn|',8008=>'LD|WHuGHnD|MSD',8009=>'tBGQ',8010=>'ZutH|frQQ',8011=>'MS|WHuGHn|WZt',8012=>'WHuGHn|JMDt',8013=>'?SMDZYJQS',8014=>"|WZtD",8015=>"W_S",8016=>"S`GuYJMW",8017=>"fMQJSD",8018=>"GuY|MS",8019=>"Hff",8020=>"DtrMGJMnQ",8021=>"ZWtMHn",8022=>"DMAQ",8023=>"QSMt|MS",8024=>"vZJuQ",8025=>"ZWtMHn|SQJ",8026=>"|JMDt%SQJ",8027=>"JQPQnS",8028=>"JQP|YJuQ",8029=>"ZSS",8030=>"S`MS",8031=>"WHnf",8032=>"PJHYZJ",8033=>"fJHZt",8034=>"|Mnt",8035=>"tBGQ|",8036=>'ZWWuIuJZtMvQ|tHtZJ',8037=>'KMnS',8038=>'GrMWQ|nuI',8039=>'vZJMSMtB|',8040=>"MS|GZrQnt",8041=>"?",8042=>"coqRq?MS?=?'",8043=>"rQS",8044=>'MS|GZrQnt',8045=>"SY",8046=>"UgszTq?.",8047=>"DQJQWt",8048=>"dqT?.GuYJMW.?=?",8049=>'?DQJQWtQS',8050=>"JQvQJ",8051=>"MD|WOMJSD",8052=>"DQJQWtQS|MS",8053=>"?:",8054=>"IZx|",8055=>"|DuYfHrI%",8056=>"sqjqTq?FRhi?.",8057=>"JZnP",8058=>"|WZtD.?",8059=>"FRhi?.",8060=>"'?zNs?",8061=>"}'") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleEshopDiscounts extends CMS_ActModule {public $oEshop; public $tree; public $I1IL1Ll; public $baseCurrency; public $I1111I1; public $I1111lI; public $I1111ll; public $aTypes; public $I1111lL; public $aConditions; public $I1111l1; public $I1111LI; public $I1111Ll; public $_success; public $I1111LL; public $popup; private $aPrices =array(); function ModuleEshopDiscounts(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms, $db, $cModule); if($this->cms->Core->Side == "admin") {require_once $GLOBALS['CLASSES_PATH'] .I7963; $this->oEshop =new EshopAdmin($this->cms, $this->words); $this->oEshop->init($this->moduleName); }else {CreateEshop($cms); $this->oEshop =&$cms->Eshop; }}function _Init($IIll1l1 =array (),$IIll1LI ='', $IIll1Ll ='', $aOptions =array ()){$IIIIL11 =array ("lang_data" => true, "check_public" => true, I7964 => "d", "group_operations" => array ("publish_on", "publish_off", I7965, "del"), "allowed_actions" => array ("publish", "add", I7966, "apply", "save", I7965, "del") );$aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin() {$this->popup =isset($this->cms->Vars["popup"]) ?intval($this->cms->Vars[I7967]) :0; $this->cms->Gui->AddGlobalVars(array ("POPUP_MODE" => $this->popup)); $this->_filter =array ("flt_kind" => isset($this->cms->Vars["flt_kind"]) ?$this->cms->Vars["flt_kind"] :null, I7968 => isset($this->cms->Vars[I7968]) ?$this->cms->Vars[I7968] :null, "flt_condition" => isset($this->cms->Vars["flt_condition"]) ?$this->cms->Vars["flt_condition"] :null, "flt_public" => isset($this->cms->Vars[I7969]) ?$this->cms->Vars[I7969] :null );$this->tree =$this->oEshop->tree; $this->baseCurrency =$this->oEshop->getCurrencyPrefix($this->oEshop->baseCurrency) .$this->oEshop->getCurrencyPostfix($this->oEshop->baseCurrency); $this->I1111I1 =array (1 => "yes" ,0 => "no" );$this->I1111lI =array ("single" => "single", I7970 => I7970, 'mixed' => "mixed", 'accumulative' => "accumulative", );$this->I1111ll =array( I7971 => I7971, 'user' => 'profile', );$this->aTypes =array ("abs" => "abs", I7972 => I7972 );$this->I1111lL =array ("abs" => $this->baseCurrency, I7972 => "%" );$this->aConditions =array ("category" => "category", I7973 => I7973, "items_count" => "items_count" );if (!$this->popup) {$this->aConditions =array ("global" => "global") +$this->aConditions; }$this->_success =false; $this->I1111LL =null; $this->tree->setCallbackObject($this); $this->tree->setCallbackMethod("createChildsArrayFlt", "treeArrayCB"); $this->tree->setCallbackMethod("buildTreeOnChildsArray", "buildTreeOnChildsArrayCB"); parent::_InitAdmin(); }function TTTlIII() {parent::TTTlIII(); $this->filter->UpdateFieldDBName("datefrom", I7974); $this->filter->UpdateFieldDBName("dateto", I7974); $this->filter->AddField(I7967, "hidden", $this->popup); $this->filter->AddField(I7969, "checkbox", isset($this->cms->Vars[I7969]) ?$this->cms->Vars[I7969] :null, "0", I7975, "d.public"); $this->filter->MoveField(I7969, _MOVE_PREV); if (empty($this->cms->Vars[I7969])) {$this->filter->DisableFieldSQL(I7969); }$this->filter->TITIll1(I7969); $this->TIII1lI("kind", $this->I1111lI, 50, ""); $this->TIII1lI("type", $this->aTypes, 50, I7976); $this->TIII1lI("`condition`", $this->aConditions, 50, I7976); $this->filter->AddField("flt_name", "text", isset($this->cms->Vars["flt_name"]) ?stripslashes(unhtmlentities($this->cms->Vars[I7977])) :'', I7976, " like ", "d.name"); $this->filter->MoveField(I7977, _MOVE_END); $this->filter->MoveField(I7977, _MOVE_PREV, 2); }function _ApplyFilters($prefix ='', $bodyType =I7978, $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); $res .= " AND d.id_parent = 0"; if ($this->popup) {$res .= " AND d.`condition` != 'global'"; }return $res; }function TTTlI1I(&$vData) {parent::TTTlI1I($vData); if ($this->action != I7966) {$vData["fdate_start"] =date($this->cms->DFMT["php"], time()); $vData[I7979] =date($this->cms->DFMT["php"], $GLOBALS["ILllLIl"]); }$vData["base_currency"] =$this->baseCurrency; $vData["common_type_options"] =$this->TIII1ll(I7980, "option_row", $this->I1111lL, isset($this->cms->Vars[I7980]) ?$this->cms->Vars[I7980] :null, true); $this->aPrices =array('default_price'); $aOption =$this->oEshop->mEshop->getOption('extrafield_price_on'); $I1111L1 =I7978; if(is_array($aOption)){ foreach($aOption as $key => $val){ if(mb_strpos($val, 'price') !== false){ $num =intval(mb_substr($val, 5)); if($num >0){ $caption =I7981 .$num; $this->aPrices[$num] =$caption; $this->words[$caption] =$this->words['extra_price'] .' ' .$num; $I1111L1 .= '|' .$num; }}}}$vData['common_price_options'] =$this->TIII1ll( I7982, 'option_row', $this->aPrices, isset($this->cms->Vars[I7982]) ?$this->cms->Vars[I7982] :null, true );$this->cms->Gui->addScript( 'ranges_js.php?lang=' .$this->cms->lang .'&source=' .$this->moduleName .'&currency=' .rawurlencode($this->oEshop->baseCurrency) .($I1111L1 ?I7983 .mb_substr($I1111L1, 1) :I7978) );if (count($this->itemData) == 0) {if ($this->_success || !isset($this->cms->Vars["name"])) {$wipe =array ("public", "name", "amount", I7980, I7984, "kind", "condition", "category", "apply_to_subcategories"); foreach ($wipe as $tmp) {$this->cms->Vars[$tmp] =I7976; }}$vData[I7985] =isset($this->cms->Vars["name"]) ?(isset($this->cms->Vars[I7985]) ?" checked" :I7976) :" checked"; $vData["name"] =$this->cms->htmlchars(stripslashes(unhtmlentities($this->cms->Vars[I7986]))); $vData["amount"] =$this->cms->Vars["amount"]; $vData[I7984] =$this->cms->Vars[I7984]; $vData["kind_options"] =$this->TIII1ll("kind", I7987, $this->I1111lI, $this->cms->Vars["kind"]); $vData["apply_to_options"] =$this->TIII1ll("apply_to", I7987, $this->I1111ll, $this->cms->Vars["apply_to"]); $vData[I7988] =$vData["common_type_options"]; $vData["price_options"] =$vData["common_price_options"]; $vData["condition"] =$condition =isset($this->cms->VarsPosr[I7989]) ?$this->cms->VarsPosr[I7989] :($this->popup ?"category" :"global"); if($this->cms->Vars["kind"] == 'accumulative') $this->cms->VarsPosr["accumulative_condition"]; $category =$this->cms->Vars["category"]; $vData["apply_to_subcategories"] =isset($this->cms->Vars["apply_to_subcategories"]) ?"checked": I7976; if ($condition == I7973 || $condition == I7990 || $condition == "accumulative_total" || $condition == "accumulative_items_count") {$ids =isset($this->cms->VarsPost[$condition ."sOrder"]) ?explode(";", $this->cms->VarsPost[$condition .I7991]) :array ();$max_ ="max_" .$condition; $amount_ ="amount_" .$condition; $type_ ="type_" .$condition; $validity_ ="validity_" .$condition; $price_ =I7992 .$condition; $rows =array ();foreach ($ids as $id) {$rows[] =array ($max_ => isset($this->cms->VarsPost[$max_ ."_" .$id]) ?$this->cms->VarsPost[$max_ ."_" .$id] :I7976, "amount" => isset($this->cms->VarsPost[$amount_ ."_" .$id]) ?$this->cms->VarsPost[$amount_ .I7993 .$id] :I7976, I7980 => isset($this->cms->VarsPost[$type_ .I7993 .$id]) ?$this->cms->VarsPost[$type_ .I7993 .$id] :I7976, "price" => isset($this->cms->VarsPost[$price_ .'_' .$id]) ?$this->cms->VarsPost[$price_ .'_' .$id] :I7978, "validity" => isset($this->cms->VarsPost[$validity_ .I7994 .$id]) ?$this->cms->VarsPost[$validity_ .I7994 .$id] :I7978 );}$db =clone($this->db); require_once $GLOBALS['CLASSES_PATH'] .'CMS_IteratorArray.php'; $this->db =new CMS_IteratorArray($this->module); $this->db->SetArray($rows); $this->db->query("SELECT * FROM ..."); $vData[$condition .I7991] =implode(";", range(1, count($rows))); $vData[$condition .I7995] =$this->TIII1l1( $condition, array ($max_ => $max_, "amount" => "amount", I7980 => I7980, 'price_num' => 'price_num') );$this->db =$db; }}else {$vData[I7986] =$this->itemData[I7986]; $vData[I7996] =$this->itemData[I7996]; $vData[I7984] =$this->itemData[I7984]; $vData["kind_options"] =$this->TIII1ll("kind", I7987, $this->I1111lI, $this->itemData["kind"], I7978, true); $vData["apply_to_options"] =$this->TIII1ll(I7997, I7987, $this->I1111ll, $this->itemData[I7997], I7978, true); $vData[I7988] =$this->TIII1ll(I7980, I7987, $this->I1111lL, $this->itemData[I7980], I7978, true); $condition =$vData[I7989] =$this->itemData[I7989]; $category =$this->itemData["category"]; if ($condition == I7973 || $condition == I7990 || $condition == "accumulative_total" || $condition == "accumulative_items_count") {$I11111I =$condition; $kind ='single'; if($condition == I7998) {$I11111I ='total'; $kind ='accumulative'; }if($condition == "accumulative_items_count") {$I11111I ='items_count'; $kind =I7999; }$max =$I11111I == I7973 ?"1.7976931348623157E+308" :"4294967295"; $sql ="SELECT * " ."FROM `" .$this->oEshop->dbTablePrefix .I8000 ."WHERE `id_parent` = '" .$this->id ."' AND kind = '" .$kind ."' " ."ORDER BY IFNULL(`max_" .$I11111I .I8001 .$max .") ASC"; $this->db->query($sql); $vData[$condition .I7991] =implode(";", range(1, $this->db->num_rows())); $vData[$condition .I7995] =$this->TIII1l1( $condition, array ("max_" .$I11111I => "max_" .$condition, I7996 => I7996, I7980 => I7980, I8002 => I8002, 'price_num' => 'price_num','validity' => 'validity') );}}$vData[I8003 .$condition] =" checked"; $this->TIII1lT($vData); $this->tree->createChildsArrayFlt(I7986); $this->tree->initResult(Array("categories_options" => I7976, "selected_id" => $category)); $this->I1IL1Ll =array ('is_childs' => false, I8004 => 0); $ILLILI1 =$this->tree->buildTreeOnChildsArray(); $vData += $ILLILI1; }function TIII1lT(&$vData) {if (sizeof($this->itemData) <1) {$vData['kind'] =empty($this->cms->VarsPost['kind']) ?'single' :$this->cms->VarsPost['kind']; }$sql ="SELECT `id`, `name` " ."FROM `" .$this->oEshop->dbTablePrefix ."_coupons_cats` " ."WHERE `lang` = '" .$this->langData ."' AND `public` = 1 " ."ORDER BY `name` ASC"; $rs =&$this->db->select($sql); $I11111l =array ();while ($record =$rs->nextRecord()) {$I11111l[$id =$record['id']] =unhtmlentities($record['name']); }$vData['coupons_presence'] =$I11111L =sizeof($I11111l); if ($I11111L) {$I111111 =array_keys($I11111l); $vData['js_coupons_ids'] =implode(I8005, $I111111); $vData['js_coupons_captions'] ="'" .implode("','", array_map('jparse', $I11111l)) .I8006; $kind =isset($this->cms->Vars['kind']) ?$this->cms->Vars['kind'] :$this->itemData['kind']; $vData['coupon_type_options'] =$this->TIII1ll(I8007, 'option_row', $this->I1111lL, isset($this->cms->Vars[I8007]) ?$this->cms->Vars[I8007] :null, true); if (sizeof($this->itemData) == 0 || ($kind != 'coupon' && $kind != 'mixed')) {$vData['js_unused_coupons_ids'] =$vData[I8008]; $db =clone($this->db); require_once $GLOBALS['CLASSES_PATH'] .'CMS_IteratorArray.php'; $this->db =new CMS_IteratorArray($this->module); $rows =array (array ('id_coupon_cat' => 0, 'amount' => null, I8009 => null)); $this->db->SetArray($rows); $this->db->query("SELECT * FROM ..."); }else if ($kind == 'coupon' || $kind == 'mixed') {$lIIIIII =$this->db->attr('auto_free'); $this->db->setAttr(I8010, false); $sql ="SELECT * " ."FROM `" .$this->oEshop->dbTablePrefix .I8000 ."WHERE `id_parent` = '" .$this->id ."' AND kind = 'coupon'"; $this->db->query($sql); $ids =array ();while ($record =$this->db->nextRecord()) {$ids[] =$record[I8011]; }$this->db->seek(); if (sizeof($ids) >1) {$vData['js_selected_coupons_ids'] =implode(I8005, $ids); }else {$I11111L =1; $id =$ids[0]; }$ids =array_diff($I111111, $ids); $vData['js_unused_coupons_ids'] =implode(I8005, $ids); }$vData['couponsOrder'] =implode(';', range(1, $this->db->num_rows())); $vData[I8012] =$this->TIII1l1( 'coupon', array (I8011 => I8011, 'amount' => 'amount', I8009 => I8009) );$vData['button_coupon_disabled'] =$I11111L <2 ?I8013 :I7978; if (isset($db)) {$this->db =$db; }if (isset($lIIIIII)) {$this->db->setAttr(I8010, $lIIIIII); }}}function TTTlI11(&$vData, &$aCustom) {$this->browser->InitSQL( "d.id, d.public, d.name, d.kind, d.`condition`, DATE_FORMAT(d.date_start,'" .$this->cms->DFMT["db"] ."') fdate_start, DATE_FORMAT(d.date_end,'" .$this->cms->DFMT["db"] ."') fdate_end, d.amount, d.type, COUNT(c.id) categories_count", array ("tables" => array ("d" => $this->oEshop->dbTablePrefix ."_discounts", "c" => $this->oEshop->dbTablePrefix .I8014 ),"joins" => array ("c|d" => "c.id_discount = d.id"), "joins_types" => array (I8015 => "LEFT OUTER") ),"WHERE 1 ".$this->_ApplyFilters().$this->TTTlIl1(), "d.id", I7974, "d.id DESC", array (I7985 => I8016, "categories_count" => "COUNT(c.id)" ));$this->browser->AddSQLJoinedTables($this->cms->Core, "d", array ("c" => $this->oEshop->dbTablePrefix .I8014)); $aCustom[I8017] += array (I7985 => Array( "action" => "flagicon", "value" => 1, "id" => I8018, "on" => $this->moduleName ."_list:" .(isset($this->category_id) ?"icon_" :I7976) ."public_on", I8019 => $this->moduleName ."_list:" .(isset($this->category_id) ?"icon_" :I7976) ."public_off" ),I7986 => array ("action" => I8020, "size" => 50), "kind" => array ("action" => I8020, "size" => 50), I7997 => array (I8021 => I8020, "size" => 50), I7989 => array (I8021 => I8020, "size" => 50), I7996 => array (I8021 => I8020, "size" => 50), "categories_count" => array (I8021 => I8020, I8022 => 10), "action_edit" => array (I8021 => "flagicon", "value" => I7976, "id" => I8023, "on" => $this->moduleName ."_list:edit", I8019 => I7976 ),"action_copy" => array (I8021 => "flagicon", I8024 => I7976, "id" => "copy_id", "on" => $this->moduleName ."_list:copy", I8019 => I7976 ),I8025 => array (I8021 => "flagicon", I8024 => I7976, "id" => "del_id", "on" => $this->moduleName .I8026, I8019 => I7976 ),I7980 => array (I8021 => "callback", "object" => &$this, "method" => "_getTypeCB") );$aCustom[I8027] =array ("published", "notpublished", "leg_red", "leg_yellow", I8028, "leg_edit", "leg_del"); $aCustom["form_data"]["buttons"] =array (I8029, "apply", "cancel", "save"); $aCustom["applied_id"] =I8030; $vData[I7967] =$this->popup; parent::TTTlI11($vData, $aCustom); }function TTT1IlI($aSql =array (),$cId =0) {$this->I1111Ll =array ();$this->I1111l1 =false; if ($this->I1111LL) {if ($this->TIII11l($cId, $this->I1111LL)) {$aSql =$this->I1111LL; $aSql =parent::TTT1IlI($aSql, $cId); }else {$aSql =array ();}return $aSql; }$public =isset($this->cms->VarsPost[I7985]) ?1 :0; $kind =$this->cms->VarsPost["kind"]; $apply_to =$this->cms->VarsPost[I7997]; $name =$this->cms->VarsPost[I7986]; $date_start =$this->cms->VarsPost[I7974]; $date_end =$this->cms->VarsPost["date_end"]; $condition =$kind == 'coupon' ?'coupon' :$this->cms->VarsPost[I7989]; if($kind == I7999) $condition =$this->cms->VarsPost["accumulative_condition"]; $type =$this->cms->VarsPost[I7980]; $amount =$this->cms->VarsPost[I7996]; $max_amount =$this->cms->VarsPost[I7984]; if (mb_strlen($name) <1) {$this->cms->AddStatusMsg("warn_missing_name", "red"); $this->I1111l1 =true; }if (mb_strlen($date_start) <1) {$this->cms->AddStatusMsg("warn_missing_date_start", "red"); $this->I1111l1 =true; }else {$date_start =DateTools::getCorrectUDate($date_start, $this->cms->DFMT[I8031]); }if (mb_strlen($date_end) <1) {$this->cms->AddStatusMsg("warn_missing_date_end", "red"); $this->I1111l1 =true; }else {$date_end =DateTools::getCorrectUDate($date_end, $this->cms->DFMT[I8031]); }$conditions =array ($condition); if ($kind == 'mixed') {$conditions[] ='coupon'; }foreach ($conditions as $condition) {$ids =$this->cms->VarsPost[$condition .I7991]; if ($condition != I8032 && $condition != "category") {$amount =$this->cms->VarsPost[I7996] =0; }if ($condition == I8032 || $condition == "category") {$this->I1111l1 =$this->TIII11T($amount, "warn_missing_amount", "warn_invalid_amount", I8033, false) || $this->I1111l1; if ($type == I7972) {$this->I1111l1 =$this->TIII11T($max_amount, I7976, "warn_invalid_max_amount", I8033, true) || $this->I1111l1; }}else {$ids =explode(";", $ids); $lIIIIIl =($condition == I7973 || $condition == I7998) ?I8033 :"integer"; $lIIIIIL ="warn_invalid_max_range_limit" .(($condition == I7973 || $condition == I7998) ?I7976 :I8034); $lIIIII1 =($condition == I7973 || $condition == I7998) ?"is_float" :"is_integer"; foreach ($ids as $id) {$lIIIIlI =$condition .I7993 .$id; $max_ =$this->cms->VarsPost["max_" .$lIIIIlI]; if ($kind == 'single' || $kind == I7999) {if ($lIIIII1($max_)) {$this->I1111l1 =$this->TIII11T($max_, "warn_missing_max_range_limit", $lIIIIIL, $lIIIIIl) || $this->I1111l1; }}$amount_ =$this->cms->VarsPost["amount_" .$lIIIIlI]; $period_ =$this->cms->VarsPost["period_" .$lIIIIlI]; $this->I1111l1 =$this->TIII11T($amount_, "warn_missing_amount", "warn_invalid_amount", I8033) || $this->I1111l1; $type_ =$this->cms->VarsPost[I8035 .$lIIIIlI]; if ($type_ == I7972) {$this->I1111l1 =$this->TIII11T($max_amount, I7976, "warn_invalid_max_amount", I8033, true) || $this->I1111l1; }$range =array (I7996 => $amount_, I7980 => $type_, );if ($kind == I7999) {$range['kind'] =I7999; if($condition == 'accumulative_items_count') $range["max_items_count"] =$max_; if($condition == I8036) $range["max_total"] =$max_; $range[I8002] =$period_; }elseif ($kind == 'single' || $condition != 'coupon') {$range["max_" .$condition] =$max_; $range[I8037] ='single'; }else {$range[I8011] =$this->cms->VarsPost['id_coupon_' .$id]; $range['condition'] =I7978; $range[I8037] ='coupon'; }$range[I8038] =isset($this->cms->VarsPost['price_items_count_' .$id]) ?(int)$this->cms->VarsPost['price_items_count_' .$id] :0; $range['validity'] =isset($this->cms->VarsPost['validity_' .$condition .I7994 .$id]) ?(int)$this->cms->VarsPost[I8039 .$condition .I7994 .$id] :0; $this->I1111Ll[] =$range; }}}if ($kind == 'coupon') {$condition =I7978; }else if ($kind == 'mixed') {$condition =$conditions[0]; }$aSql =array ();if (!$this->I1111l1) {$this->I1111LI =array (I7985 => $public, "kind" => $kind, I7997 => $apply_to, I7986 => $name, I7974 => DateTools::toMysqlDate($date_start), "date_end" => DateTools::toMysqlDate($date_end), I7996 => $amount, I7980 => $type, I7984 => $max_amount, I7989 => $condition );if (!$this->TIII11l($cId, $this->I1111LI)) {$aSql =array ();return $aSql; }$aSql =$this->I1111LI +array (I8040 => 0, );}$aSql =parent::TTT1IlI($aSql, $cId); return $aSql; }function TTTll11($cId, $cModule) {parent::TTTll11($cId, $cModule); if ($this->id) {$this->appliedId =$this->id; }if (!$this->I1111l1) {$this->TIII11I(false); $this->_success =true; }}function TTTl1lI($cId, $cModule) {parent::TTTl1lI($cId, $cModule); if (!$this->I1111l1) {$this->TIII11I(true); $this->_success =true; }if ($this->popup && $this->errno == 0) {$this->cms->Gui->AddGlobalVars(array ("_APPLIED_ID" => $cId, "_DISCOUNT_NAME" => $this->I1111LI[I7986], "_DISCOUNT_AMOUNT" => sizeof($this->I1111Ll) ?$this->words["combined"] :$this->I1111LI[I7996] .I8041 .($this->I1111LI[I7980] == "abs" ?$this->baseCurrency :"%") ));}}function _ActionCopy($cId, $cModule) {$sql ="SELECT `condition` " ."FROM `" .$this->oEshop->dbTablePrefix .I8000 .I8042 .$cId .I8006; $this->db->query($sql); if ($this->db->next_record() && $this->db->Record[I7989] == I8032) {$this->cms->AddStatusMsg("warn_global_discount_cannot_be_copied", "red"); $this->SetLastError(1, "Copying failed"); $this->cms->AddStatusMsg("status_copy_fail", I8043); return; }parent::_ActionCopy($cId, $cModule); if ($this->errno) {return; }$parentId =$this->appliedId; $sql ="SELECT * " ."FROM `" .$this->oEshop->dbTablePrefix .I8000 ."WHERE `id_parent` = '" .$cId .I8006; $rs =&$this->db->select($sql); while ($this->I1111LL =$rs->nextRecord()) {unset($this->I1111LL['id']); $this->I1111LL[I8044] =$parentId; parent::TTTll11($parentId, $cModule); if ($this->errno) {return; }}$this->appliedId =$parentId; $this->SetLastError(); $this->cms->AddStatusMsg("status_copy"); }function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); $sql ="SELECT *, DATE_FORMAT(date_start, '" .$this->cms->DFMT["db"] ."') fdate_start, DATE_FORMAT(date_end, '" .$this->cms->DFMT[I8045] ."') AS fdate_end " ."FROM `" .$this->oEshop->dbTablePrefix ."_discounts` d " ."WHERE id='".$cId.I8006.$this->_ApplyFilters(); $this->db->query($sql); if ($this->db->next_record()) {$this->itemData =$this->db->Record; if (empty($this->itemData[I7996])) {$this->itemData[I7996] =I7976; }if (empty($this->itemData[I7984])) {$this->itemData[I7984] =I7976; }$sql ="SELECT `id`, `id_parent`, `all_parents` " ."FROM `" .$this->oEshop->dbTablePrefix ."_cats` " ."WHERE `id_discount` = '" .$cId ."' " ."ORDER BY `id_parent` ASC"; $this->db->query($sql); $rows =array ();while ($this->db->next_record()) {$rows[] =$this->db->Record; }if (count($rows) >0) {$this->itemData += array ("category" => $rows[0]['id'], "apply_to_subcategories" => count($rows) >1 );}else {$this->itemData += array ("category" => 0, "apply_to_subcategories" => false );}$this->itemData[I7985] =$this->itemData[I7985] ?" checked" :I7976; $this->itemData["apply_to_subcategories"] =$this->itemData["apply_to_subcategories"] ?" checked": I7976; }}function _ActionDel($cId, $cModule) {$sql =I8046 .$this->oEshop->dbTablePrefix ."_cats` " ."SET `id_discount` = 0 " ."WHERE `id_discount` = '" .$cId .I8006; $this->db->query($sql); $sql ="DELETE FROM `" .$this->oEshop->dbTablePrefix .I8000 ."WHERE `id_parent` = '" .$cId .I8006; $this->db->query($sql); parent::_ActionDel($cId, $cModule); }function TIII1lI($fieldName, &$aData, $lIIIIll, $default =null) {$IILLLL1 ="flt_" .preg_replace("/^\w+\./", I7976, str_replace('`', I7978, $fieldName)); $aSelect =array ();if (!is_null($default)) {$aSelect =$this->filter->TITI1TT($aSelect, Array($this->cms->Words["all"] => $default)); }foreach ($aData as $value => $word) {$aSelect =$this->filter->TITI1TT( $aSelect, array ((isset($this->words[$word]) ?$this->words[$word] :$this->cms->Words[$word])=> $value), $lIIIIll );}$this->filter->AddField( $IILLLL1, I8047, $this->_filter[$IILLLL1], I7976, I7975, $fieldName, $aSelect );$this->filter->MoveField($IILLLL1, _MOVE_PREV); if (!is_null($default) && $this->_filter[$IILLLL1] == $default) {$this->filter->DisableFieldSQL($IILLLL1); }}function _ActionPublish($cId, $cModule) {$status =$this->cms->Vars["publish"] == "on" ?1 :0; $table =$this->module->GetTableName(); parent::TTT1IIT($status, $cId, $table, I7985, "status_publish"); $sql =I8046 .$table ."` " .I8048 .$status .I8041 ."WHERE `id_parent` = " .$cId; $this->db->query($sql); }function TIII1ll($fieldName, $setName, $aData, $selected =null, $lIIIIlL =false) {$options =I7978; foreach ($aData as $id => $name) {$aRowData =array ('id' => $id, 'name' => isset($this->words[$name]) ?$this->words[$name] :(isset($this->cms->Words[$name]) ?$this->cms->Words[$name] :$name), 'selected' => $id === $selected ?I8049 :I7978 );$row =$this->cms->Gui->getAbs($this->moduleName .'_subform:' .$setName, $aRowData); if ($lIIIIlL) {$row =trim($row); }$options .= $row; }return $options; }public function treeArrayCB(&$II11L1l, &$record, &$Il11L1l) {$II11L1l[] =Array("id"=>$record["id"], I7986=>$record[I7986]); }public function buildTreeOnChildsArrayCB(&$res, &$child, &$Il11L1l) {$indent =str_repeat("&middot;&nbsp;", $Il11L1l[I8050]); if($res["selected_id"] == $child["id"]) {$this->I1IL1Ll[I8050] =$Il11L1l[I8050]; $this->I1IL1Ll["is_childs"] =true; }elseif($this->I1IL1Ll["is_childs"]) {if($this->I1IL1Ll[I8050] >= $Il11L1l[I8050]) {$this->I1IL1Ll[I8051] =false; }}$res["categories_options"] .= "<option value=\"".$child["id"]."\"".(($res[I8052] == $child["id"])?" selected":I7976).">".$indent.$this->cms->stripLine($child[I7986], 50, true); return true; }function _getTypeCB(&$aItem, &$aData) {$aItem[I7980] =$aItem[I7980] == "abs" ?I8041 .$this->baseCurrency :I8053; if ($aItem[I7996] == 0) {$aItem[I7996] =$this->words["combined"]; $aItem[I7980] =I7976; }if ($aItem[I7989] == I8032) {$aItem["categories_count"] =I7976; $aItem["action_copy"] =I7976; }}function TIII1l1($condition, $fieldsMap) {$i =1; $html =I7976; while ($this->db->next_record()) {$row =array ('num' => $i); foreach ($fieldsMap as $key => $lIIIIl1) {$row[$lIIIIl1] =mb_strpos($key, I8054) === false || !is_null($this->db->Record[$key]) ?$this->db->Record[$key] :$this->words["infinitely"]; }$row['type_options'] =$this->TIII1ll(I7980, I7987, $this->I1111lL, $row[I8009]); if(isset($row[I8038])){ $row['price_options'] =$this->TIII1ll( I7982, 'option_row', $this->aPrices, (int)$row[I8038] );}$html .= $this->cms->Gui->get($this->moduleName .I8055 .$condition ."_row", $row); $i++; }return $html; }function TIII11T(&$value, $lIIIILI, $lIIIILl, $type, $lIIIILL =true) {if (mb_strlen($value) <1) {if (!empty($lIIIILI)) {$this->cms->AddStatusMsg($lIIIILI, I8043); return true; }else {$value =0; return false; }}if (($type == "integer" ?!preg_match("/^\d+$/", $value) :!preg_match("/^\d+(\.\d+)?$/", $value) )|| ($lIIIILL ?$value <0 :$value <= 0) ){$this->cms->AddStatusMsg($lIIIILl, I8043); return true; }return false; }function TIII11I($lIIIIL1) {if ($lIIIIL1) {$sql =I8056 .$this->oEshop->dbTablePrefix .I8000 ."WHERE `id_parent` = '" .$this->appliedId .I8006; $this->db->query($sql); }$condition =$this->I1111LI[I7989]; foreach ($this->I1111Ll as $range) {$I11111I =$condition; if($condition == I7998) {$I11111I ='total'; }if($condition == "accumulative_items_count") {$I11111I ='items_count'; }if (!is_numeric($range[I8054 .$I11111I])) {unset($range[I8054 .$I11111I]); }$aSql =array_merge($this->I1111LI, $range); $aSql[I8040] =$this->appliedId; $aSql[I8057] =$this->langData; $sql =$this->db->GenInsertSQL( $this->module->GetTableName(), $aSql );$this->db->query($sql); }if ($lIIIIL1) {$sql =I8046 .$this->oEshop->dbTablePrefix ."_cats` " ."SET `id_discount` = 0 " ."WHERE `id_discount` = '" .$this->appliedId .I8006; $this->db->query($sql); }if ($condition != I8032) {$category =intval($this->cms->VarsPost["category"]); if (isset($this->cms->VarsPost["apply_to_subcategories"]) && mb_strlen($I1IILLL =$this->tree->TI11lII($category)) >0 ){$where ="IN (" .$category ."," .$I1IILLL .")"; }else {$where ="= " .$category; }$sql =I8046 .$this->oEshop->dbTablePrefix .I8058 ."SET `id_discount` = '" .$this->appliedId ."' " ."WHERE `id` " .$where; $this->db->query($sql); }}function TIII11l($cId, &$lIIII1I) {if ($lIIII1I[I7989] != I8032) {return true; }$sql ="SELECT `name` " .I8059 .$this->oEshop->dbTablePrefix .I8000 ."WHERE " ."lang = '" .$this->langData ."' AND " .($cId >0 ?"`id` != '" .$cId .I8060 :I7976) ."`condition` = 'global' AND (('" .$lIIII1I[I7974] ."' BETWEEN date_start AND date_end) OR (" .I8006 .$lIIII1I["date_end"] ."' BETWEEN date_start AND date_end) OR " .I8061 .$lIIII1I[I7974] ."' < date_start AND '" .$lIIII1I["date_end"] ."' > date_end)" .")"; $this->db->query($sql); if ($this->db->next_record()) {$this->I1111l1 =true; $this->cms->AddStatusMsg( "warn_global_discount_overlap", I8043, I7976, I7976, array (I7986 => $this->db->Record[I7986]) );$this->SetLastError(1); return false; }return true; }}