<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       38973 xkqwnxxxtzmtpgqgwgiyzsqgkquxuwqynmkqqzkwnkxiugkynmsypzinxnwwygpipixrpnir
 */ ?><?php foreach(array(8976=>'',8977=>"ZGGJB",8978=>"GuYJMDO|Hff",8979=>'WOQWK|GuYJMW',8980=>'SZtQfrHI',8981=>"Qxt|",8982=>"dqjqwT?[?FRhi?",8983=>"SQfZuJt|WZGtMHn",8984=>"|WuDtHI|tBGQD?",8985=>"vZJuQ|tBGQ",8986=>"MDnHt|ZJJ",8987=>"GrHG|",8988=>"fMQJS|nZIQ",8989=>"fMQJSD|fMJtQr",8990=>"tQxt",8991=>":04S",8992=>"DBD|ZJMZD|",8993=>'W',8994=>'fJZPMWHn',8995=>'|JMDt%GuYJMW|Hn',8996=>'WZJJYZWK',8997=>'ZWtMHn',8998=>'HYLQWt',8999=>'|vZJuQTBGQwy',9000=>'IQtOHS',9001=>'JQP|rQS',9002=>"fHrI|SZtZ",9003=>"SQJ|MS",9004=>"fJS|nuI",9005=>"1",9006=>"ZWtMHnD",9007=>"DBD|ZJMZD",9008=>"nZIQ",9009=>"ftBGQ|",9010=>"FRhi?",9011=>"GuYJMW",9012=>"HrMP|ftBGQ",9013=>"",9014=>"WHunt",9015=>"fJZPIZG",9016=>"rQJZtQS|MtQID",9017=>"ftBGQ",9018=>"=''",9019=>"tZYJQ|nuI",9020=>"SQJQtQ|tBGQ",9021=>"vZJuQ",9022=>"MtQIs|",9023=>"coqRq?t`MS='",9024=>"YHSB|MtQID",9025=>"fSZtQ",9026=>"coqRq?1?",9027=>"HYLQWt",9028=>"|",9029=>"DMIGJQ|GrQfMx",9030=>"wjzddqd|gzTo",9031=>"DY|SZtZ",9032=>"DGQW|IHSuJQ|YHSB",9033=>'JZnP|SZtZ',9034=>"fMQJSD",9035=>"rQfQrQnWQ|",9036=>"DIZJJ|",9037=>"WZt|MS",9038=>"DQZrWO|",9039=>"|JMDt%",9040=>"SQDWrMGtMHn",9041=>"PQtZJJvZJuQD",9042=>"MS",9043=>"WHrrQWtvZJuQ",9044=>"'",9045=>"'!'",9046=>"WZGtMHn") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleEshopReferenceTypes extends CMS_ActModule {public $oEshop; public $lIllL1L; public $lIllL11; public $lIll1II; public $lIll1Il; public $lIll1IL; public $lIll1I1; public $lIll1lI; public $lIll1ll; public $lIll1lL; public $lIll1l1; public $I11l1I1; public $lIll1LI; public $lIll1Ll; public $lIll1LL; public $lIll1L1; function ModuleEshopReferenceTypes(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms, $db, $cModule); $this->lIllL1L =Array(); $this->lIllL11 =false; $this->lIll1II =false; $this->lIll1Il =Array(); $this->lIll1IL =-1; $this->lIll1I1 =Array(); $this->lIll1lI =Array(); $this->lIll1ll =Array(); $this->lIll1lL =false; $this->lIll1l1 =-1; $this->lIll1LI =""; $this->lIll1Ll =0; $this->lIll1LL =false; $this->lIll1L1 =""; }function _Init($IIll1l1 =Array(), $IIll1LI =I8976, $IIll1Ll =I8976, $aOptions =Array()) {$IIIIL11["allowed_actions"] =Array("publish", "add", "edit", I8977, "save", "del"); $IIIIL11["group_operations"] =Array("publish_on", I8978, "del"); $IIIIL11["lang_data"] =false; $IIIIL11['default_prefix'] ='t'; $IIIIL11[I8979] =false; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); if($this->side == "front") {$this->TIIll11(); }}function _InitAdmin() {parent::_InitAdmin(); require_once $GLOBALS['CLASSES_PATH'] .'EshopAdmin.php'; $this->oEshop =new EshopAdmin($this->cms, $this->words); $this->oEshop->init($this->moduleName); $this->oEshop->TT1l11l($this->options["multi_sites"], $this->siteId); if($this->filter->issetField(I8980)){ $this->filter->TITI1l1(I8980); }if($this->filter->issetField('dateto')){ $this->filter->TITI1l1('dateto'); }$this->filter->IL11l1L =array('limit'); }function TTTlTI1() {parent::TTTlTI1(); CreateEshop($this->cms); $this->oEshop =&$this->cms->Eshop; $this->oEshop->init($this->moduleName); $this->oEshop->TT1l11l($this->options["multi_sites"], $this->siteId); }function TIIll11() {$this->lIll1LI =$this->cms->Core->GetModOption(I8981.$this->oEshop->ownerName."_custom_fields", "custom_name"); $this->lIll1Ll =$this->module->GetOption("search_field_cat"); if($this->lIll1Ll <1) {$this->lIll1Ll =$this->oEshop->rootCatId; }$this->lIll1lI =Array(); $this->lIll1ll =Array(); $this->lIll1IL =$this->module->GetOption("show_ref_id"); $sql =I8982.$this->oEshop->dbTablePrefix."_ref_types WHERE id='".$this->lIll1IL."' AND public=1"; $this->db->query($sql); if($this->db->next_record()) {$this->lIll1I1 =$this->db->Record; $aNames =unserialize($this->db->Record["name"]); $this->lIll1I1["name"] =$aNames[$this->langData]; $aCaptions =unserialize($this->db->Record[I8983]); $this->lIll1I1["caption"] =$aCaptions[$this->langData]; $lIll11I =$this->module->GetOption("search_ref_fields"); if(is_array($lIll11I) && sizeof($lIll11I) >0) {$sql ="SELECT *, (body_type LIKE '%;body_search;%') AS is_body_search, (body_type LIKE '%;body_items;%') AS is_body_items " ."FROM " .$this->oEshop->dbTablePrefix .I8984 ."WHERE id IN('".implode("','", $lIll11I)."') AND ref_table_num='".$this->db->Record["table_num"]."' AND public=1 AND value_type IN('ref_value', 'ref_reference', 'ref_set') AND ftype IN('char', 'int', 'float', 'date')"; $this->db->query($sql); $IL1l1LL =Array(); $I11ll1L =Array(); while($this->db->next_record()) {$aNames =unserialize($this->db->Record["name"]); $aCaptions =unserialize($this->db->Record[I8983]); $aTmp =Array( "field_title" => $aNames[$this->langData], "field_num" => $this->db->Record["fnum"], I8985 => $this->db->Record[I8985], "field_default_caption" => $aCaptions[$this->langData], "is_prop" => $this->db->Record["is_prop"], "isnot_all" => $this->db->Record[I8986] );$lIll11l =true; if($this->db->Record[I8986]) {if($this->db->Record["is_body_search"]) {$IL1l1LL[] =$this->db->Record["id"]; $lIll11l =false; $aTmp["field_name"] =($this->db->Record["is_prop"]) ?I8987 :"ext_custom_"; }}else {if($this->db->Record["is_body_search"] || $this->db->Record["is_body_items"]) {$I11ll1L[] =$this->db->Record["id"]; $lIll11l =false; $aTmp[I8988] =($this->db->Record["is_prop"]) ?I8987 :"ext_custom_"; }}if(!$lIll11l) {$aTmp[I8988] .= $this->db->Record["fnum"]; $this->lIll1lI[$this->db->Record["id"]] =$aTmp; }}if(sizeof($this->lIll1lI) >0) {$sql ="SELECT c.dataset_data FROM ".$this->oEshop->dbTablePrefix."_cats AS c WHERE c.id='".$this->lIll1Ll."'"; $this->db->query($sql); if($this->db->next_record()) {$lIll11L =unserialize($this->db->Record["dataset_data"]); if(is_array($lIll11L) && isset($lIll11L["fields_filter"])) {foreach($this->lIll1lI as $fieldId => $tmp) {if(mb_strpos($lIll11L[I8989], ";".$fieldId.";") === false) {unset($this->lIll1lI[$fieldId]); }}}}}}}else {$this->lIll1IL =-1; $this->lIll1I1["table_num"] =1; }$this->lIll1lL =(($this->module->GetOption("description_text_mode")) == I8990); $this->lIll1l1 =$this->module->GetOption("show_description_mode"); $this->I11l1I1 ="cms_".$this->cms->Core->GetModOption($this->oEshop->ownerName."_reference", "table_name").sprintf(I8991, $this->lIll1I1["table_num"]); }function ProcessAction($IIIL11l, $cId, $cModule ="") {parent::ProcessAction($IIIL11l, $cId, $cModule); }function TTTlIII() {parent::TTTlIII(); }function TTTlI1I(&$vData) {parent::TTTlI1I($vData); }function TTTlI11(&$vData, &$aCustom) {$sql ="select sys_alias from ".$this->oEshop->dbTablePrefix."_ref_types where sys_alias!='' group by sys_alias"; $this->db->query($sql); while($this->db->next_record()) if(!isset($vData[I8992.$this->db->Record["sys_alias"]."_allowed"])) $vData[I8992.$this->db->Record["sys_alias"]."_allowed"] =false; if(!isset($vData["sys_alias_gtd_numbers_allowed"])) $vData["sys_alias_gtd_numbers_allowed"] =true; if(!isset($vData["sys_alias_manufacturers_allowed"])) $vData["sys_alias_manufacturers_allowed"] =true; $vData["sys_alias_allowed"] =$vData["sys_alias_gtd_numbers_allowed"] || $vData["sys_alias_manufacturers_allowed"]; $this->browser->InitSQL("t.id, t.public, t.table_num, t.name, t.default_caption, t.ftype, t.sys_alias, sum(IF(c.value_type='ref_value', 1, 0)) as val_num,  sum(IF(c.value_type!='scalar', 1, 0)) as fld_num", "FROM ".$this->oEshop->dbTablePrefix."_ref_types t LEFT JOIN ".$this->oEshop->dbTablePrefix."_custom_types c ON t.table_num=c.ref_table_num", "WHERE 1 ".$this->_ApplyFilters().$this->TTTlIl1(), "t.id", "t.table_num" );$this->browser->AddSQLJoinedTables($this->cms->Core, 't', Array(I8993=>$this->oEshop->dbTablePrefix."_custom_types")); $aCustom['fields'] =Array( 'public'=>Array('action'=>I8994, 'value'=>1, 'id'=>'pub_id', 'on'=>$this->moduleName.I8995,'off'=>$this->moduleName.'_list:public_off'), 'table_num'=>Array('action'=>I8996, 'object'=>&$this, 'method'=>'_tableNumCB'), 'name'=>Array(I8997=>I8996, 'object'=>&$this, 'method'=>'_refNameCB'), 'default_caption'=>Array(I8997=>I8996, I8998=>&$this, 'method'=>'_defCaptionCB'), 'ftype'=>Array(I8997=>I8996, I8998=>&$this, 'method'=>I8999), 'sys_alias'=>Array(I8997=>I8996, I8998=>&$this, 'method'=>'_sysAliasCB'), 'actions'=>Array(I8997=>I8996, I8998=>&$this, I9000=>'_actionsRow'), );$aCustom['applied_id'] ='t.id'; $aCustom['legend'] =Array(I9001, 'leg_yellow', 'leg_blue', 'leg_edit', 'leg_del'); $aCustom[I9002]["buttons"] =Array("add", I8977, "cancel", "save"); parent::TTTlI11($vData, $aCustom); }function _actionsRow(&$aItem, &$aData) {$links[I9003] =$links["edit_id"] =$links["pub_id"] =$aItem["id"]; $links["delete_nothing"] =$aItem[I9004] >0 ?"1" :"0"; $links["modify_allowed"] =$aItem["val_num"] >0 ?I9005 :"0"; if(intval($aItem["table_num"]) != intval($this->fn->ILLILLI)) {$aItem["actions"] =$this->cms->Gui->get($this->moduleName."_list:icons_edit", $links); $aItem[I9006] .= $this->cms->Gui->get($this->moduleName."_list:del", $links); }else {$aItem[I9006] =$this->cms->Gui->get($this->moduleName."_list:icons_edit_deloff", $links); $aItem[I9006] .= $this->cms->Gui->get($this->moduleName."_list:icon_none", $links); }}function _sysAliasCB(&$aItem, &$aData){ $aItem["sys_alias"] =$this->words[I8992.$aItem[I9007]]; }function _tableNumCB(&$aItem, &$aData){ $aItem["table_num"] =sprintf("%0".$this->fn->ILLILl1."d", $aItem["table_num"]); }function _refNameCB(&$aItem, &$aData){ $data =unserialize($aItem[I9008]); $found =false; if(is_array($data)){ if(!empty($data[$this->langData])){ $aItem[I9008] =$this->cms->stripLine($data[$this->langData], 25); $found =true; }}if(!$found){ $aItem[I9008] =$this->words["unknown"]; }}function _defCaptionCB(&$aItem, &$aData){ $data =unserialize($aItem[I8983]); $found =false; if(is_array($data)){ if(!empty($data[$this->langData])){ $aItem[I8983] =$this->cms->stripLine($data[$this->langData], 25); $found =true; }}if(!$found){ $aItem[I8983] =$this->words["unknown"]; }}function _valueTypeCB(&$aItem, &$aData){ if(!empty($aItem["ftype"])) $aItem["ftype"] =$this->words[I9009.$aItem["ftype"]]; else $aItem["ftype"] =$this->words["unknown"]; }function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); $sql ="SELECT * ". I9010.$this->oEshop->dbTablePrefix."_ref_types ". "WHERE id='".$cId."'".$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()) {$this->itemData =$this->db->Record; $this->itemData["public"] =($this->itemData[I9011] == 1) ?"checked": ""; $this->itemData[I9009.$this->itemData["ftype"]] ="selected"; $this->itemData[I9012] =$this->itemData["ftype"]; $this->itemData[I8992.$this->itemData[I9007]] ="selected"; $this->itemData[I8992.$this->itemData[I9007]."_allowed"] =true; $this->itemData["sys_alias_allowed"] =true; $data =unserialize($this->itemData[I9008]); $found =false; if(is_array($data)){ if(!empty($data[$this->langData])){ $this->itemData[I9008] =$data[$this->langData]; $found =true; }}if(!$found){ $this->itemData[I9008] =I9013; }$data =unserialize($this->itemData[I8983]); $found =false; if(is_array($data)){ if(!empty($data[$this->langData])){ $this->itemData[I8983] =$data[$this->langData]; $found =true; }}if(!$found){ $this->itemData[I8983] =I9013; }$sql ="select count(*) as count from ".$this->oEshop->dbTablePrefix."_custom_types where ref_table_num='".$this->itemData["table_num"]."' and value_type!='scalar'"; $this->db->query($sql); $this->db->next_record(); if($this->db->Record[I9014] >0) $this->itemData["attached_to_field"] =I9005; else $this->itemData["attached_to_field"] ="0"; }}function TTTll11($cId, $cModule){ parent::TTTll11($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL['errno']) && $cId == 0 && $this->appliedId >0){ $this->fn->TT11111($this->oEshop->dbTablePrefix, intval($this->appliedId)); }}function TTTl1lI($cId, $cModule) {$ILLIL1I =I9013; $tableNum =0; $sql ="select ftype, table_num from ".$this->oEshop->dbTablePrefix."_ref_types where id=".intval($cId); $this->db->query($sql); if($this->db->next_record()){ $ILLIL1I =$this->db->Record["ftype"]; $tableNum =intval($this->db->Record["table_num"]); }$lIll111 =array(); $sql ="select id, fnum, ftype, value_type from ".$this->oEshop->dbTablePrefix."_custom_types where value_type!='scalar' AND ref_table_num='".$tableNum."'"; $this->db->query($sql); while($this->db->next_record()) $lIll111[] =$this->db->Record; parent::TTTl1lI($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL['errno']) && $cId >0 && $ILLIL1I != $this->cms->VarsPost["ftype"] && $tableNum >0){ $sql ="select flagmap_data from ".$this->oEshop->dbTablePrefix."_ref_types where id=".intval($cId); $this->db->query($sql); $ILLIL1l =array(); if($this->db->next_record()){ $ILLIL1l =$this->db->Record["flagmap_data"]; }$lIlLIII =true; $tableNum =sprintf("%0".$this->fn->ILLILl1."d", $tableNum); if($this->cms->VarsPost["ftype_modify"] != I9005 || $ILLIL1I == I9015 || $ILLIL1I == "related_items" || $ILLIL1I == "related_cats" || $this->cms->VarsPost["ftype"] == I9015 || $this->cms->VarsPost["ftype"] == I9016 || $this->cms->VarsPost["ftype"] == "related_cats"){ $sql ="delete from ".$this->oEshop->dbTablePrefix."_reference_".$tableNum; $this->db->query($sql); $lIlLIII =false; }$this->fn->TT1111l($this->oEshop->dbTablePrefix, $ILLIL1I, $this->cms->VarsPost[I9017], $tableNum, $ILLIL1l); foreach($lIll111 as $key => $rec){ $this->fn->TITTTTI($this->oEshop->dbTablePrefix, $ILLIL1I, $this->cms->VarsPost[I9017], $rec); }$lIlLIIl =true; if(!$lIlLIII || $this->cms->VarsPost["field_modify"] != I9005){ foreach($lIll111 as $key => $rec){ $sql ="update ".$this->oEshop->dbTablePrefix."_items set custom_field_".intval($rec["fnum"]).I9018; $this->db->query($sql); $lIlLIIl =false; }}}}function _ActionDel($cId, $cModule) {$tableNum =0; $sql ="select table_num from ".$this->oEshop->dbTablePrefix."_ref_types where id=".intval($cId); $this->db->query($sql); $lIlLIIL =array(); if($this->db->next_record()){ $tableNum =sprintf("%0".$this->fn->ILLILl1."d", $this->db->Record[I9019]); $sql ="select id, fnum, value_type, ftype, type_owner from ".$this->oEshop->dbTablePrefix."_custom_types where value_type!='scalar' AND ref_table_num=".intval($this->db->Record[I9019]); $this->db->query($sql); while($this->db->next_record()) $lIlLIIL[] =$this->db->Record; }if(intval($tableNum) != intval($this->fn->ILLILLI)){ parent::_ActionDel($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL['errno']) && $tableNum >0){ for($i =0; $i <count($lIlLIIL); $i++){ if($lIlLIIL[$i][I8985] == "ref_value" && $this->cms->VarsGet[I9020] == "2"){ $this->fn->TITTTTl($this->oEshop->dbTablePrefix, $lIlLIIL[$i]); }else{ $this->fn->TITTTT1($this->oEshop->dbTablePrefix, $lIlLIIL[$i]); }}$this->db->setSafeSQLOptions("drop"); $sql ="DROP TABLE IF EXISTS ".$this->oEshop->dbTablePrefix."_reference_".$tableNum; $this->db->query($sql); }}else $this->SetLastError(100, "unable to delete default reference type"); }function TTT1IlI($aSql =Array(), $cId =0) {$aSql =$this->fn->TTT1IlI($this->oEshop->dbTablePrefix, $this->cms->VarsPost, $aSql, $cId); $aSql =parent::TTT1IlI($aSql, $cId); return $aSql; }function TTTllTI(&$aCustom) {if($this->lIll1IL >0) {if($this->id >0) {$this->SetBodyType("body_itemD"); }elseif($this->id != -1) {$this->SetBodyType("body_items"); }}parent::TTTllTI($aCustom); }function TTTlllT(&$vData) {parent::TTTlllT($vData); }function TTTll1T(&$vData, &$aCustom) {$aDefault =Array(); foreach($this->IIllIL1 as $IIlL1L1 => $tmp) {$IIlL1Ll =$this->TTITTT1($aCustom, $IIlL1L1); switch($IIlL1L1) {case "body_itemD": $IIlL1Ll["simple_set_fields"] =Array(I9008, I9021, "fdate", "description"); $IIlL1Ll["list_data"]["simple_prefix"] =I9022; $this->TIIl1TT($vData, $IIlL1Ll); $sql ="SELECT *,  t.value_1 AS value, DATE_FORMAT(t.date,'".$this->cms->DFMT["db"]."') AS fdate ". I9010.$this->I11l1I1." AS t ". I9023.$this->id."' ".$this->_ApplyFilters().$this->TTTlIl1()." LIMIT 1"; $this->db->query($sql); $vData["id"] =$this->id; break; case "body_items": if($IIlL1L1 == I9024) {$IIlL1Ll["list_data"]["simple_prefix"] ="item_"; }$IIlL1Ll["simple_set_fields"] =Array(I9008, I9021, I9025); $this->TTTllll($vData, $IIlL1Ll); $this->TIIl1TT($vData, $IIlL1Ll); $this->browser->InitSQL("t.id, t.name, t.value_1 AS value, t.description, t.sublink, DATE_FORMAT(t.date,'".$this->cms->DFMT["db"]."') AS fdate FROM ".$this->I11l1I1." AS t", I9026.$this->_ApplyFilters().$this->TTTlIl1(), I9013, I9008 );$IIlL1Ll["fields"]["description"] =Array("action"=>"callback", I9027=>&$this, "method"=>"_GetItemDescriptionCB"); break; }parent::TTTll1T($vData, $IIlL1Ll); }}function TTTll1I(&$vRes, &$aCustom, $cType, $IIlLlII) {$this->TIIll11(); $lIlLII1 =$this->module->GetOption("search_ref_fields"); $hash =$this->lIll1IL."_".$this->lIll1Ll; if(sizeof($lIlLII1) >0) {foreach($lIlLII1 as $lIlLIlI) {$hash .= I9028.$lIlLIlI; }}$specName =$this->module->GetProperty("active_spec_blocks"); $this->cms->Core->Cache->TT1TI1l("eshop_refs", $hash, $specName); $this->cms->Core->Cache->TT1TI1T($specName."_hash", $hash); if($this->lIll1IL >0) {$aDefault =Array(); $aDefault["simple_set_fields"] =Array(I9008, I9021, I9025); $aCustom += $aDefault; $aCustom[I9029] ="small_"; $aCustom["list_data"]["splitter_prefix"]= "small_"; if($this->lIll1LL === false) {require_once($GLOBALS[I9030].files_subpath."Page.php"); $tmpPage =new Page($this->cms); $this->lIll1LL =$tmpPage->TTlllll($this->moduleName, Array("sb_data")); }$pageId =0; if($this->lIll1LL) {foreach($this->lIll1LL as $aPageData) {$pageId =$aPageData["id"]; if($aPageData["sb_data"] != I9013) {$lIlLIll =unserialize($aPageData[I9031]); if(isset($lIlLIll[I9032][$this->moduleName]["show_ref_id"]) && $lIlLIll[I9032][$this->moduleName]["show_ref_id"] == $this->lIll1IL.I9013) {break; }}}}$this->lIll1L1 =$this->module->GetFrontLink($pageId); $aCustom["list_data"]["front_link"] =$this->lIll1L1; $this->TIIl1TT($vData, $aCustom); $this->options[I9033] =true; $this->browser->InitSQL("t.id, t.name, t.value_1 AS value, t.description, t.sublink, DATE_FORMAT(t.date,'".$this->cms->DFMT["db"]."') AS fdate FROM ".$this->I11l1I1." AS t", I9026.$this->_ApplyFilters().$this->TTTlIl1(), I9013, I9008 );$this->options[I9033] =false; $aCustom[I9034]["description"] =Array("action"=>"callback", I9027=>&$this, "method"=>"_GetSmallDescriptionCB"); parent::TTTll1I($vRes, $aCustom, $cType, $IIlLlII); }else {AMI_Registry::push('disable_error_mail', true); trigger_error(mb_strtoupper($this->moduleName).": reference not exists...", E_USER_WARNING); AMI_Registry::pop('disable_error_mail'); }}function TIIl1TT(&$vData, &$aCustom) {foreach(Array(I9008, "caption") as $fieldName) {$vData[I9035.$fieldName] =$aCustom["list_data"][I9035.$fieldName] =$this->cms->Gui->get($this->moduleName."_list:".$aCustom["list_data"][I9029].I9035.$fieldName, $this->lIll1I1); }}function _GetSmallDescriptionCB(&$aItem, &$aData) {$aItem["front_link"] =$this->lIll1L1; $this->_GetDescriptionCB(I9036, $aItem, $aData); }function _GetItemDescriptionCB(&$aItem, &$aData) {$this->_GetDescriptionCB("item_", $aItem, $aData); }function TTT1lTl($IILIIl1, &$IILIILI, &$vData, &$IILIILl) {parent::TTT1lTl($IILIIl1, $IILIILI, $vData, $IILIILl); $lIlLIlL =$this->lIll1l1; $this->lIll1l1 =0; $lIlLIl1 =$this->lIll1lL; $this->lIll1lL =false; $this->_GetDescriptionCB(I9022, $vData, $vData); $this->lIll1l1 =$lIlLIlL; $this->lIll1lL =$lIlLIl1; }function _GetDescriptionCB($tplPrefix, &$aItem, &$aData) {$aItem["value_enc"] =rawurlencode(unhtmlentities($aItem["_value"])); $aTmp =Array(); $splitter =$this->cms->Gui->getAbs($this->moduleName."_list:".$tplPrefix."search_link_splitter", I9013); $lIlLILI =$this->cms->Gui->getAbs($this->moduleName."_list:".$tplPrefix."search_link_cat_splitter", I9013); foreach($this->lIll1lI as $fieldId => $IlL1L1I) {$IIlL1IL =$aItem +$IlL1L1I; if($IlL1L1I["is_prop"]) {$lIlLILl ="link"; $IIlL1IL[I9037] =$this->module->GetOption("search_field_cat"); }else {$lIlLILl ="link"; $IIlL1IL[I9037] =$this->module->GetOption("search_field_cat"); }$aTmp[] =$this->cms->Gui->get($this->moduleName."_list:".$tplPrefix.I9038.$lIlLILl."_row", $IIlL1IL); }if(sizeof($aTmp) >0) {$aItem["search_links_list"] =implode($splitter, $aTmp); $aData["search_links_list"] =$aItem["search_links_list"] =$this->cms->Gui->get($this->moduleName.I9039.$tplPrefix."search_link_list", $aItem); }$showDetailLink =false; $lIlLILL =false; $aItem["eshop_link"] =isset($aData["eshop_link"]) ?$aData["eshop_link"] :I8976; if($aItem[I9040] != I9013) {if($this->lIll1l1 == -1) {$aItem[I9040] =I9013; $showDetailLink =true; }elseif($this->lIll1l1 >0) {$tmp =unhtmlentities(strip_tags($aItem[I9040])); if(mb_strlen($tmp) >$this->lIll1l1) {$aItem[I9040] =$this->cms->stripLine($aItem[I9040], $this->lIll1l1, true); $lIlLILL =true; $showDetailLink =true; }}if($this->lIll1lL && !$lIlLILL) {$showDetailLink =true; $aItem[I9040] =strip_tags($aItem[I9040]); }$aItem[I9040] =$this->cms->Gui->get($this->moduleName.I9039.$tplPrefix.I9040, $aItem); }if($showDetailLink || $this->isSmallMode) {$aItem["details_link"] =$this->cms->Gui->get($this->moduleName.I9039.$tplPrefix."details_link", $aItem); }else {$aItem["details_link"] =I9013; }}function getOptionsModColsCB($cData, $IIL1lL1, &$res, &$aData, $IIL1l1I ="getallvalues"){ switch($IIL1l1I){ case I9041: $res =Array(); if($cData[I9008] == "show_ref_id") {if(!$this->lIllL11) {$db =new DB_si; $this->lIllL1L =Array(); $sql ="SELECT t.id, t.name FROM ".$this->module->GetTableName()." AS t INNER JOIN ".$this->oEshop->dbTablePrefix."_custom_types AS ct ON ct.ref_table_num=t.table_num AND ct.value_type IN('ref_value', 'ref_reference', 'ref_set') WHERE t.public=1"; $this->lIllL11 =true; $db->query($sql); while($db->next_record()) {$aNames =unserialize($db->Record[I9008]); $this->lIllL1L[$db->Record[I9042]] =$aNames[$this->langData]; }asort($this->lIllL1L); }foreach($this->lIllL1L as $id => $name) {$res[] =array( I9008 => $id, "caption" => $name, "selected" => (($cData[I9021] == $id) ?"selected" :I9013) );}}elseif($cData[I9008] == "search_ref_fields") {$this->TIIl1TI($cData[I9021]); $res =$this->lIll1Il; }break; case I9043: $this->TIIl1TI($cData[I9021]); $aIds =Array(); foreach($this->lIll1Il as $aData) {$aIds[] =$aData[I9042]; }if(is_array($cData[I9021])) {$res =array_intersect($aIds, $cData[I9021]); }else {$res =Array(); }break; case "getvalue": $res =$cData[I9021]; break; }return true; }function TIIl1TI($I11llLL) {if(!$this->lIll1II) {$this->lIll1II =true; $this->lIll1Il =Array(); $db =new DB_si; $catId =$this->module->GetOption("search_field_cat"); $I11ll1I =I9013; if($catId >0) {$sql ="SELECT dataset_data FROM ".$this->oEshop->dbTablePrefix."_cats WHERE id='".$catId.I9044; $db->query($sql); if($db->next_record()) {if($db->Record["dataset_data"] != I9013) {$aDataset =unserialize($db->Record["dataset_data"]); if($aDataset[I8989] != I9013) {$I11ll1l =explode(";", $aDataset[I8989]); $I11ll11 =sizeof($I11ll1l); unset($I11ll1l[$I11ll11 -1]); unset($I11ll1l[0]); if($I11ll11 >2) {$I11ll1I =" OR t.id IN('".implode(I9045, $I11ll1l)."')"; }}}}}$refId =$this->cms->Core->GetModOption($this->oEshop->ownerName."_reference_types", "show_ref_id"); $sql ="SELECT t.* FROM ".$this->oEshop->dbTablePrefix."_ref_types AS r INNER JOIN ".$this->oEshop->dbTablePrefix."_custom_types AS t ON t.ref_table_num=r.table_num AND t.value_type IN('ref_value', 'ref_reference', 'ref_set') WHERE r.id='".$refId."' AND r.public=1 AND (t.isnot_all=0".$I11ll1I.")"; $db->query($sql); while($db->next_record()) {if(in_array($db->Record[I9042], $I11llLL)) {$selected ="selected"; }else {$selected =I9013; }$aCaption =unserialize($db->Record[I8983]); $this->lIll1Il[] =array( I9008 => $db->Record[I9042], I9046 => $aCaption[$this->langData], "selected" => $selected );}}}}