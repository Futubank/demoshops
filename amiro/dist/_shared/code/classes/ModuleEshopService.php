<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    Service 
 * @since      x.x.x 
 * @size       3818 xkqwzkmiinlxxyuymgzwrupswyumgtytrzsrguspyiryqmgizzmgsqztxzwxgqzkiugtpnir
 */ ?><?php foreach(array(8901=>'HcQYdQrvMWQ',8902=>'JZnP',8903=>'qRR|ihsUjq|gzpq|NhT|FhUNs',8904=>'iHSuJQ?"QDOHG|MtQI"?OZD?nH?GuYJMW?GZPQ',8905=>'ZJJHC|IuJtM|JZnP',8906=>'rQturnyHSB',8907=>'HffDQt',8908=>'rDrtIQ',8909=>'DSMI',8910=>'JMDt',8911=>'') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleEshopService{ protected $oRequest; protected $oWebService; public function getItemList(array &$aEvent){ $this->oRequest =AMI::getSingleton('env/request'); if(isset($aEvent['oWebService'])){ $this->oWebService =$aEvent[I8901]; }else{ return $aEvent; }$categoryId =$this->oRequest->get('catId', FALSE); if($categoryId === FALSE){ $this->oWebService->error('ERR_MISSING_REQUIRED_ARGUMENT', 'Missing category ID (catId) argument'); }$modLink =AMI_PageManager::getModLink('eshop_item', AMI_Registry::get(I8902), 0, TRUE); if($modLink === FALSE){ $this->oWebService->error(I8903, I8904); }$oEshopCatModel =AMI::getResourceModel('eshop_cat/table'); $oCat =$oEshopCatModel->find($categoryId); if(!$oCat->getId()){ $this->oWebService->error('ERR_INVALID_ARGUMENT_VALUE', 'Invalid category ID (cat_id) argument value'); }$lang =AMI::getOption('core', I8905) ?(AMI_Registry::get(I8902) .'/') :''; $link =AMI_Registry::get('path/www_root') .$lang .$modLink .'/' .$oCat->sublink; $aSettings =array( I8906 => TRUE, 'returnHeaders' => FALSE, 'followLocation' => TRUE, );$aParams =array( 'response_type' => 'json' );$offset =$this->oRequest->get(I8907, FALSE); $sortCol =$this->oRequest->get('sortCol', FALSE); $sortDir =$this->oRequest->get('sortDir', FALSE); $options =$this->oRequest->get('options', FALSE); if($offset !== FALSE){ $aParams += array( 'action' => I8908, 'catid' => $categoryId, I8907 => $offset );}if($sortDir !== FALSE){ $aParams += array( 'sdim' => $sortDir );}if($sortCol !== FALSE){ $aParams += array( 'action' => I8908, 'sort' => $sortCol, I8909 => 'asc' );}if($options !== FALSE){ $aParams += array( 'response_options' => $options, );}$oHTTPRequest =new AMI_HTTPRequest($aSettings); $content =$oHTTPRequest->send($link, $aParams, AMI_HTTPRequest::METHOD_GET); $aContent =json_decode($content, true); if(!is_array($aContent)){ $this->oWebService->error('ERR_UNKNOWN', 'Unknown error'); }$aEvent[I8910] =isset($aContent['data']['list_rows']) ?$aContent['data']['list_rows'] :I8911; unset($aContent['data']['list_rows']); $aEvent['listData'] =$aContent['data']; $this->oWebService->ok($aEvent); return $aEvent; }}