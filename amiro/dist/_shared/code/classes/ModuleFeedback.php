<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       21984 xkqwuqulmugyqxkplimulplsqyitriguxyiuprmgszyqlztkznllywrsngmzwwmpmqtwpnir
 */ ?><?php foreach(array(9489=>"PrHuG|HGQrZtMHnD",9490=>"fMrDtnZIQ",9491=>'fJt|ZutOHrQIZMJ',9492=>"",9493=>"tQxt",9494=>'',9495=>"'{?ZD?ftMIQ?",9496=>"MS?SQDW",9497=>"DMAQ",9498=>"ZWtMHn",9499=>"MS",9500=>"ZWtMHn|SQJ",9501=>"|JMDt%SQJ",9502=>"JQP|SQJ",9503=>"ZSS",9504=>"JZDtnZIQ",9505=>"CQY",9506=>"WMtB",9507=>"WuDtHI|fMQJSD",9508=>"WuDtHI|",9509=>"YMrtOSZtQ",9510=>"fZx",9511=>"ZSSrQDD1",9512=>"AMG",9513=>"JZnP",9514=>"fHrI|tQIGJZtQ",9515=>"tQIGJZtQD~JQttQrD~",9516=>"wjzddqd|gzTo",9517=>"QIZMJ|DuYLQWt",9518=>"GJZMn",9519=>"fQQSYZWK|WHGB|DQnS",9520=>'SMDZYJQ|QrrHr|IZMJ',9521=>"ZWtMvQ|MtQI|tBGQ",9522=>"|JMDt%YZWK",9523=>"rQEuMrQS",9524=>"nZIQ",9525=>"fHrI|fMQJSD",9526=>"ZSSrQDD2",9527=>"?coqRq?MS='",9528=>"vZJuQ",9529=>"MnfH",9530=>"tBGQ",9531=>"fHrI|MtQID") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleFeedback extends CMS_ActModule{ function ModuleFeedback(&$cms, &$db, &$cModule){ parent::CMS_ActModule($cms, $db, $cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()){ $IIIIL11[I9489] =array("del"); $IIIIL11["use_id_page"] =true; $IIIIL11["use_options_form"] =true; $IIIIL11["name_field_name"] =I9490; $IIIIL11["description_field_name"] ="lastname"; $IIIIL11["multi_sites"] =true; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin(){ parent::_InitAdmin(); }function TTTlTI1(){ parent::TTTlTI1(); }function TTTlITT($IIIL11l, $cId, $cModule =""){ parent::TTTlITT($IIIL11l, $cId, $cModule); }function GetHtml(&$aCustom){ return parent::GetHtml($aCustom); }function TTlTll1(){ parent::TTlTll1(); }function TTTlIII(){ parent::TTTlIII(); if(!isset($this->cms->Vars[I9491])){ $this->cms->Vars[I9491] =''; }$author =stripslashes(unhtmlentities($this->cms->Vars["flt_authoremail"])); $this->filter->AddField("flt_authoremail", "text", $author, I9492, " LIKE ", "email"); $this->filter->TITI1II( "flt_authoremail", " OR email LIKE '%".addslashes($author)."%' OR firstname LIKE '%".addslashes($author)."%' OR lastname LIKE '%".addslashes($author)."%' OR CONCAT(lastname, ' ', firstname) LIKE '%".addslashes($author)."%' " );$this->filter->AddField("flt_info", I9493, stripslashes(unhtmlentities($this->cms->Vars["flt_info"])), I9492, " LIKE ", "info"); }function _ApplyFilters($prefix ='', $bodyType =I9494, $IIlLLl1 =true){ $res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); return $res; }function &TTTlI1T(&$aCustom){ return parent::TTTlI1T($aCustom); }function TTTlI1I(&$vData){ parent::TTTlI1I($vData); }function TTTlI11(&$vData, &$aCustom){ $this->browser->InitSQL( "id, info, (CONCAT(lastname,' ', firstname)) as author, email, date, date_format(date,'".$this->cms->DFMT["db"]."') as fdate, date_format(date,'".$this->cms->DFMT["db_time"].I9495, "FROM ".$this->module->GetTableName()." ", "WHERE 1 ".$this->_ApplyFilters().$this->TTTlIl1(), I9492, "date", I9496 );$aCustom["fields"] += array( "info" => array("action" => "stripline", I9497 => 40), "author" => array("action" => "stripline", I9497 => 50), "email" => array(I9498 => "stripline", I9497 => 255), "action_view" => array(I9498 => "flagicon", "value" => I9492, I9499 => "view_id", "on" => $this->moduleName."_list:view", "off" => I9492), I9500 => array(I9498 => "flagicon", "value" => I9492, I9499 => "del_id", "on" => $this->moduleName.I9501, "off" => I9492) );$aCustom["applied_id"] =I9499; $aCustom["legend"] =array("leg_view", I9502); $aCustom["form_data"]["buttons"] =array("apply", "cancel"); parent::TTTlI11($vData, $aCustom); }function &TTTllTl(&$aCustom){ return parent::TTTllTl($aCustom); }function TTTllTI(&$aCustom){ if($this->action == I9503){ $this->SetBodyType("body_result"); }else{ $this->SetBodyType("body_form"); }parent::TTTllTI($aCustom); }function TTTlllT(&$vData){ parent::TTTlllT($vData); }function TTTll1T(&$vData, &$aCustom){ require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_gui.php"); $aDefault =array(); $lIl1ILI =array(I9490, I9504, "birthdate", "email", "phone", "fax", I9505, "company", "title", "address1", "address2", I9506, "state", "zip", "country", "info"); $lIl1ILI =$this->TIIl11I($lIl1ILI); $aCustomFields =$this->module->GetOption(I9507); $lIl1ILl =$this->TIIl11l("enabled_fields"); $aRequiredFields =$this->TIIl11l("required_fields"); foreach($this->IIllIL1 as $IIlL1L1 => $tmp){ $IIlL1Ll =$this->TTITTT1($aCustom, $IIlL1L1); switch($IIlL1L1){ case "body_result": $pageId =intval($this->cms->Vars['pageId']); if($this->cms->Gui->isValidFile("templates/lang/feedback".$IllIL1I.".lng")){ $this->cms->InitMessages($this->cms->Gui->ParseLangFile("templates/lang/feedback".$IllIL1I.".lng")); }else{ $this->cms->InitMessages($this->cms->Gui->ParseLangFile("templates/lang/feedback.lng")); }$aCustomData =array(); foreach($lIl1ILl as $fieldName => $val){ if(strstr($fieldName, I9508)){ $lIl1ILL =intval(mb_substr($fieldName, 7)); if($lIl1ILL >0){ $customData[$fieldName] =removeSpecial($this->cms->VarsPost[$fieldName], "slashes"); }}}$I1LI1I1 =false; foreach($aRequiredFields as $fieldName => $val){ if($this->cms->VarsPost[$fieldName] == I9492 && array_key_exists($fieldName, $lIl1ILl)){ $I1LI1I1 =true; break; }}if(!$I1LI1I1){ $aSql =array( "id_page" => $pageId, "date" => "=|now()", I9490 => $this->cms->VarsPost[I9490], I9504 => $this->cms->VarsPost[I9504], I9509 => $this->cms->VarsPost[I9509], "email" => $this->cms->VarsPost["email"], "phone" => $this->cms->VarsPost["phone"], I9510 => $this->cms->VarsPost[I9510], I9505 => $this->cms->VarsPost[I9505], "company" => $this->cms->VarsPost["company"], "title" => $this->cms->VarsPost["title"], I9511 => $this->cms->VarsPost[I9511], "address2" => $this->cms->VarsPost["address2"], I9506 => $this->cms->VarsPost[I9506], "state" => $this->cms->VarsPost["state"], I9512 => $this->cms->VarsPost[I9512], "country" => TlTl11T($this->cms, $this->cms->VarsPost["country"], false), "info" => $this->cms->VarsPost["info"], I9513 => $this->langData, "custom" => addslashes(serialize($customData)) );$sql =$this->db->GenInsertSQL("cms_feedback", $aSql); $this->db->query($sql); $lIl1IL1 =$this->cms->VarsPost; $lIl1IL1 =removeSpecial($lIl1IL1); $lIl1IL1["country"] =TlTl11T($this->cms, $lIl1IL1["country"], false); $form_template =$this->module->GetOption(I9514); $form_template =str_replace(array ('/', '\\', '..'), I9494, $form_template); $this->cms->Gui->addBlock("feedback_mail", I9515.$form_template); $errStatus =I9494; $aEvent =array( 'aData' => &$lIl1IL1, 'errStatus' => &$errStatus );AMI_Event::fire('on_create_feedback_email', $aEvent, AMI_Event::MOD_ANY); $mbody =$this->cms->Gui->get("feedback_mail", $lIl1IL1); if(!$errStatus && !empty($mbody)){ require_once($GLOBALS[I9516]."Mailer.php"); $oMail =new Mailer(); $oMail->RecipientAddress =$this->module->GetOption("email_to"); $oMail->SenderAddress =$this->cms->VarsPost["email"]; $oMail->SenderName =$this->cms->Core->GetOption("company_name"); $oMail->Subject =I9492; if($this->module->IssetOption(I9517)){ $oMail->Subject =$this->module->GetOption(I9517); }if(empty($oMail->Subject)){ $oMail->Subject =$this->cms->Gui->get("feedback_mail:subject", $lIl1IL1); }$oMail->Body =$mbody; $oMail->BodyFormat =($this->module->IssetOption("feedback_text_mode_html") && $this->module->GetOption("feedback_text_mode_html")) ?"html" :I9518; $oMail->Prepare(); if(!$oMail->Send()){ AMI_Registry::push('disable_error_mail', true); trigger_error("Feedback: sending email failed...", E_USER_WARNING); AMI_Registry::pop('disable_error_mail'); }$this->cms->AddStatusMsg("status_add"); if($this->module->IssetOption(I9519) && $this->module->GetOption(I9519) && isset($this->cms->VarsPost["email"]) && !empty($this->cms->VarsPost["email"])){ $oMail->RecipientAddress =$this->cms->VarsPost["email"]; $oMail->SenderAddress =$this->cms->Core->GetOption("company_robot_email"); $oMail->Prepare(); if(!$oMail->Send()){ AMI_Registry::push(I9520, true); trigger_error("Feedback: sending email failed...", E_USER_WARNING); AMI_Registry::pop(I9520); }}}elseif(!$errStatus){ trigger_error("Feedback: sending email failed because template is absent.", E_USER_WARNING); }}else{ $this->cms->AddStatusMsg("status_error", "red"); }$IIlL1Ll[I9521] ="body_result"; $IIlL1Ll["page_item_type"] ="body_empty"; $vData["back"] =$this->cms->Gui->getAbs($this->moduleName.I9522, I9492); break; case "body_form": $this->cms->Words += $this->cms->Gui->ParseLangFile("templates/lang/feedback.lng"); $lIl1I1I =I9492; $lIl1I1l =I9492; $required =$this->cms->Gui->getAbs($this->moduleName."_list:required_mark", I9492); $IllLIlI =false; $aCountries =$this->cms->Core->GetOption("default_country"); foreach($lIl1ILl as $fieldName => $value){ if(isset($lIl1ILI[$fieldName])){ if(isset($aRequiredFields[$fieldName])){ $lIl1I1L[I9523] =$required; $lIl1I1l .= $this->cms->Gui->getAbs($this->moduleName."_list:required_script_".$fieldName, I9492); $IllLIlI =true; }else{ $lIl1I1L[I9523] =I9492; }if($fieldName == "country"){ $lIl1I1L["country_selectbox"] =TlTl11T($this->cms, $aCountries[$this->langData]); }$field =$this->cms->Gui->get($this->moduleName."_list:field_".$fieldName, $lIl1I1L); $lIl1I1I .= $field; }else{ if(strstr($fieldName, I9508)){ $lIl1ILL =intval(mb_substr($fieldName, 7)); if($lIl1ILL >0){ $lIl1I1L =$aCustomFields[$fieldName]; $lIl1I1L[I9524] =I9508.$lIl1ILL; $lIl1I1L["title"] =$this->cms->Words[I9508.$lIl1ILL]; if(isset($aRequiredFields[$fieldName])){ $lIl1I1L[I9523] =$required; $lIl1I1l .= $this->cms->Gui->get($this->moduleName."_list:required_custom", $lIl1I1L); }$field =$this->cms->Gui->get($this->moduleName."_list:field_custom_".$lIl1I1L["type"], $lIl1I1L); $lIl1I1I .= $field; }}else{ continue; }}$lIl1I11[$fieldName] =$field; }$lIl1I11[I9525] =$lIl1I1I; $lIl1I11["required_script"] =$lIl1I1l; if($IllLIlI){ $lIl1I11["required_field_legend"] =$this->cms->Gui->get($this->moduleName."_list:required_field_legend", $lIl1I1L); }if (is_object($this->ext['ext_twist_prevention'])) {$this->ext['ext_twist_prevention']->_GetFrontFormCB($vData, $vData); }EventApplyVars($this->cms, "body_form", $lIl1I11); $vData += $lIl1I11; $vData["form"] =$this->cms->Gui->get($this->moduleName."_list:form", $vData); break; }parent::TTTll1T($vData, $IIlL1Ll); }}function TTTll1l($cId, $cModule){ global $LOCAL_FILES_REL_PATH; parent::TTTll1l($cId, $cModule); $this->cms->Words =array_merge( $this->cms->Words, $this->cms->Gui->ParseLangFile($LOCAL_FILES_REL_PATH .'_admin/templates/lang/feedback.lng'), $this->cms->Gui->ParseLangFile('templates/lang/feedback.lng') );$lIl1ILI =array(I9490, I9504, I9509, "email", "phone", I9510, I9505, "company", "title", I9511, I9526, I9506, "state", I9512, "country", "info"); $lIl1ILI =$this->TIIl11I($lIl1ILI); $sql ="SELECT * FROM ".$this->module->GetTableName().I9527.$cId."'".$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()){ $this->itemData =$this->db->Record; $aCustom =unserialize($this->itemData["custom"]); $aCustomFields =$this->module->GetOption(I9507); $lIl1ILl =$this->TIIl11l("enabled_fields"); $lIl1I1I =I9494; foreach($lIl1ILl as $fieldName => $val){ if(isset($lIl1ILI[$fieldName])){ if($this->itemData[$fieldName] == I9492){ continue; }$lIl1I1L =array("title" => $this->cms->Words[$fieldName], I9528 => $this->itemData[$fieldName]); switch($fieldName){ case "email": $lIl1I1I .= $this->cms->Gui->get("feedback_subform:form_item_email", $lIl1I1L); break; case I9505: $lIl1I1L[I9528] =preg_replace('/^https?\:\/\//i', I9494, $lIl1I1L[I9528]); $lIl1I1I .= $this->cms->Gui->get("feedback_subform:form_item_web", $lIl1I1L); break; case I9529: $lIl1I1I .= $this->cms->Gui->get("feedback_subform:form_item_area", $lIl1I1L); break; default: $lIl1I1I .= $this->cms->Gui->get("feedback_subform:form_item_other", $lIl1I1L); }}else{ if(strstr($fieldName, I9508)){ $lIl1ILL =intval(mb_substr($fieldName, 7)); if($lIl1ILL >0){ $lIl1I1L =$aCustomFields[$fieldName]; if($aCustom[$fieldName] == I9492 && $lIl1I1L["type"] != "checkbox"){ continue; }if($lIl1I1L[I9530] == "checkbox"){ $lIl1I1L[I9528] =(!empty($aCustom[$fieldName])) ?"checked" :I9492; }else{ $lIl1I1L[I9528] =$aCustom[$fieldName]; }$lIl1I1L["title"] =$this->cms->Words[I9508.$lIl1ILL]; $lIl1I1I .= $this->cms->Gui->get("feedback_subform:field_custom_".$lIl1I1L[I9530], $lIl1I1L); }}}}$this->itemData[I9531] =$lIl1I1I; }}function _ActionDel($cId, $cModule){ parent::_ActionDel($cId, $cModule); }function TIIl11I($arr){ $res =array(); foreach($arr as $key => $value){ $res[$value] =I9492; }return $res; }function TIIl11l($optionName){ $res =Array(); $tmp =$this->module->GetOption($optionName); if(!is_array($tmp)) {if(!empty($tmp)) {$res[$tmp] =I9492; }}else {$res =$this->TIIl11I($tmp); }return $res; }}