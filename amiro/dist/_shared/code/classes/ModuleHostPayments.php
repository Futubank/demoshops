<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       41442 xkqwggkytrtwtullmpmunlxstgpsknsypyzusqgtgrussxwpskqixpwlumwwywsyznuipnir
 */ ?><?php foreach(array(9875=>'zSIiHSuJQ`GOG',9876=>'iHSuJQoHDtgZBIQntDoMDtHrB`GOG',9877=>'wjzddqd|gzTo',9878=>'iHSuJQoHDtUDQrD`GOG',9879=>"PrHuG|HGQrZtMHnD",9880=>"SQJZB|GZBIQnt",9881=>"|DIZJJ",9882=>"fJt|IHSQ",9883=>"@=",9884=>"WOQWKYHx",9885=>"fJt|SQYtHrD",9886=>"ZJJ",9887=>"",9888=>"ZSIMn|DtZt|MS",9889=>"DuDGQnS",9890=>"DQJQWt",9891=>"DtZt|MS",9892=>"tBGQ|trMZJ",9893=>"trMZJ",9894=>"frQQ",9895=>"u`JMWQnWQ|tBGQ",9896=>'tBGQ|MS',9897=>"fJt|ZIHunt|frHI",9898=>'fJt|ZIHunt|frHI',9899=>"#=",9900=>"nuIQrMW",9901=>'fJt|ZIHunt|IMn|tH',9902=>"=",9903=>"fJt|MS|rQDQJJQr",9904=>"G`ZIHunt!G`ZIHunt|IHntO!u`JMWQnWQ|tBGQ!u`DtZtuD!u`ZSIMn|DtZtuD!G`nHtQ!G`OMSSQn|nHtQ!",9905=>"G`ZIHunt|IMn!",9906=>"szTq|FhRizT}u`JMWQnWQ|QxG|SZtQ!'",9907=>"'{?zd?JMWQnWQ|QxG|SZtQ!?",9908=>"UNmX|TmiqdTzig}u`JMWQnWQ|QxG|SZtQ{?zd?uSZtQ|JQ",9909=>"'?",9910=>"UNmX|TmiqdTzig}u`JMWQnWQ|QxG|SZtQ{",9911=>'SZtQ|ZIHunt|AQrH',9912=>"fMQJSD",9913=>'IQtOHS',9914=>"JQP|rQS",9915=>"|DuYfHrI",9916=>'uDQrnZIQ',9917=>"SHIZMn",9918=>"uDQrnZIQ",9919=>'JMWQnWQ|tBGQ',9920=>'YMJJMnP|Hn',9921=>'DtZtuD|',9922=>'DtZtuD',9923=>'ZIHunt',9924=>"ZIHunt|IMn",9925=>'+',9926=>'JMWQnWQ|QxG|SZtQ',9927=>'nHtQ',9928=>'GJuD',9929=>'nHnQ',9930=>'UdqR',9931=>"SY",9932=>"G`ZIHunt!G`ZIHunt|IHntO!u`JMWQnWQ|tBGQ!G`nHtQ!G`OMSSQn|nHtQ!G`ZIHunt|tHtZJ|GJuD!G`ZIHunt|tHtZJ|IMnuD!",9933=>'MS',9934=>"YMJJMnP|Hn",9935=>'YMJJMnP|SZtQ',9936=>"JMWQnWQ|tBGQ",9937=>"JMWQnWQ|tBGQ|rQZJ",9938=>'YZJZnWQ',9939=>'uSZtQ|ZA',9940=>"GZBIQnt|ZIHunt|IMn",9941=>"ZIHunt|IHntO|Dtr",9942=>":`02f",9943=>"trZf|GrMWQ",9944=>'JZDt|GZBIQnt',9945=>'rQIMnS|GQrMHS',9946=>'SZBD',9947=>"GZBIQntD|ZSS|urJ",9948=>"?coqRq?MS=",9949=>'GZB|JZtQr',9950=>"'",9951=>"ZIHunt",9952=>"MS|uDQr",9953=>'DuYLQWt',9954=>'ZIHunt|IMn',9955=>'MS|uDQr',9956=>"ZIHunt|IHntO",9957=>"nHtQ",9958=>'ZIHunt|IHntO',9959=>'IHn',9960=>'ZIHunt|tHtZJ|IMnuD',9961=>'uSZA',9962=>"G`YMJJMnP|Hff!?",9963=>'Qxt|MnfH',9964=>"zNs?}u`DtZtuD='ZWtMvQ'?hR?u`DtZtuD='DuDGQnS'{?zNs?JMWQnWQ|tBGQ='GZMS'?") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .I9875; require_once $GLOBALS['CLASSES_PATH'] .I9876; require_once $GLOBALS[I9877] .I9878; class ModuleHostPayments extends AdmModule {public $lILIl1I,$lILIl1l; public $lILIl1L; function ModuleHostPayments(&$cms, &$db, &$cModule) {parent::AdmModule($cms,$db,$cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()) {require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_format.php"); $IIIIL11[I9879] =Array(); $IIIIL11["lang_data"] =false; $this->docsLang =HOST_DOCS_LANG; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin() {parent::_InitAdmin(); $lILIl11 =$this->cms->Core->GetModule('srv_host_payments_history'); $this->lILIl1L =$lILIl11->GetAdminLink(); $IIIlLl1 =AdmModule::TTTTI1l($this->cms->Core); $this->lL1IlIL =$IIIlLl1['main_currency']; }function TTTlITT($IIIL11l, $cId, $cModule ="") {switch($IIIL11l) {case I9880: $this->TII1lIT($cId, $cModule); parent::TTTlITT('view', $cId, $cModule); break; case "reset": $this->_ActionReset($cId, $cModule); break; default: parent::TTTlITT($IIIL11l, $cId, $cModule); break; }}function GetHtml(&$aCustom) {return parent::GetHtml($aCustom); }function TTTlIT1(&$aCustom, $cType ="small", $IIlLI11 ="", $IIlLlII =I9881) {return parent::TTTlIT1($aCustom, $cType, $IIlLI11, $IIlLlII); }function TTlTll1() {parent::TTlTll1(); }function TTTlIII() {$this->filter->TITI1l1("dateto"); $this->filter->TITI1l1("datefrom"); if($this->TTTTIIl() || $this->TTTTII1()) {parent::TTTlIII(); $this->filter->AddField("flt_mode", "hidden", $this->cms->Vars[I9882]); $this->filter->AddField("flt_billing_off", "checkbox", $this->cms->Vars["flt_billing_off"], "0", I9883, "p.billing_off"); $this->filter->MoveField('flt_billing_off',_MOVE_START); $this->filter->TITIll1("flt_billing_off"); $this->filter->AddField("flt_debtors", I9884, $this->cms->Vars["flt_debtors"], "0", I9883, "(p.amount-p.amount_min<0)"); $this->filter->MoveField('flt_debtors',_MOVE_START); $this->filter->TITIll1(I9885); $aStatus =Array(); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["status_suspend"]=>"suspend"), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["status_active"]=>"active"), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words[I9886]=>"0"), 45, false); $this->filter->AddField("admin_stat_id", "select", $this->cms->Vars["admin_stat_id"], I9887, "=", "u.admin_status", $aStatus); $this->filter->MoveField('admin_stat_id',_MOVE_START); $this->filter->TITIll1("admin_stat_id"); if($this->cms->Vars[I9888] == "0" || empty($this->cms->Vars[I9888])) {$this->filter->DisableFieldSql(I9888); }$aStatus =Array(); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["status_!error"]=>"!error"), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["status_suspend"]=>I9889), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["status_active"]=>"active"), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words[I9886]=>"0"), 45, false); $this->filter->AddField("stat_id", I9890, $this->cms->Vars["stat_id"], I9887, "=", "u.status", $aStatus); $this->filter->MoveField('stat_id',_MOVE_START); $this->filter->TITIll1(I9891); if($this->cms->Vars[I9891] == "0" || empty($this->cms->Vars[I9891])) {$this->filter->DisableFieldSql(I9891); }$aStatus =Array(); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["type_paid"]=>"paid"), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words[I9892]=>I9893), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words["type_free"]=>I9894), 45, false); $aStatus =$this->filter->TITI1TT($aStatus, Array($this->words[I9886]=>"0"), 45, false); $type =$this->cms->Vars["type_id"]; $this->filter->AddField("type_id", I9890, $type, I9887, "=", I9895, $aStatus); $this->filter->MoveField(I9896,_MOVE_START); $this->filter->TITIll1("type_id"); if($type == "0" || !isset($type) || $type=='') {$this->filter->DisableFieldSql("type_id"); }$this->filter->AddField(I9897, "numeric", $this->cms->Vars['flt_amount_from'], "-1000000", I9883, "p.amount"); $this->filter->MoveField(I9898,_MOVE_PREV); $this->filter->TITIll1(I9897); $this->filter->AddField("flt_amount_to", "numeric", $this->cms->Vars['flt_amount_to'], "1000000", I9899, "p.amount"); $this->filter->MoveField('flt_amount_to',_MOVE_PREV); $this->filter->TITIll1("flt_amount_to"); $this->filter->AddField("flt_amount_min_from", I9900, $this->cms->Vars['flt_amount_min_from'], "-1000000", I9883, "p.amount_min"); $this->filter->MoveField('flt_amount_min_from',_MOVE_PREV); $this->filter->TITIll1("flt_amount_min_from"); $this->filter->AddField("flt_amount_min_to", I9900, $this->cms->Vars['flt_amount_min_to'], "1000000", I9899, "p.amount_min"); $this->filter->MoveField(I9901,_MOVE_PREV); $this->filter->TITIll1("flt_amount_min_to"); $search =stripslashes(unhtmlentities($this->cms->Vars["flt_search"])); $this->cms->Filter->AddField("flt_search", "text", $search, I9887, I9902, "u.username"); $this->cms->Filter->TITI1II("flt_search"," OR u.domain LIKE '%".addslashes(TlT1III($search)). "%' OR u.username LIKE '%".addslashes($search)."%'  OR u.ext_info LIKE '%".addslashes($search)."%'"); $this->cms->Filter->MoveField("flt_search", _MOVE_PREV); if ($this->TTTTIIl()){ $lILILII =ModuleHostUsers::TIlTT1I(); $lILILIl =Array(); foreach($lILILII as $key=>$value){ $lILILIl =$this->filter->TITI1TT($lILILIl, Array($value["name"]=>$key), 45, false); }$lILILIl =$this->filter->TITI1TT($lILILIl, Array($this->words[I9886]=>"0"), 45, false); $this->filter->AddField(I9903, I9890, $this->cms->Vars[I9903], I9887, I9902, "u.id_reseller", $lILILIl); if($this->cms->Vars[I9903] == "0" || empty($this->cms->Vars[I9903])) {$this->filter->DisableFieldSql(I9903); }}}}function _ApplyFilters($prefix ='', $bodyType ='', $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); return $res; }function &TTTlI1T(&$aCustom) {return parent::TTTlI1T($aCustom); }function TTTlI1I(&$vData) {parent::TTTlI1I($vData); }function &TTTlTIT() {return DB_si::admInstance(); }function TTTlI11(&$vData, &$aCustom) {if($this->TTTTIIl() || $this->TTTTII1()) {$sql =" p.id,DATE_FORMAT(u.date_registered,'".$this->cms->DFMT["db"]."') AS date_registered,". "p.id_user,". "UNIX_TIMESTAMP(u.date_registered) AS datereg_sort,". "u.username,u.domain, ". I9904. "p.amount_total_plus,p.amount_total_minus,p.billing_off,". "DATE_FORMAT(p.last_payment_date,'".$this->cms->DFMT["db"]."') AS last_payment_date, p.last_payment_amount,". I9905. "DATE_FORMAT(DATE_SUB(p.date_amount_zero,INTERVAL p.remind_period SECOND),'".$this->cms->DFMT["db"]."') AS remind_start,". "UNIX_TIMESTAMP(p.date_amount_zero)-p.remind_period AS remind,". "(DATE_SUB(p.date_amount_zero,INTERVAL p.remind_period SECOND)<=NOW()) AS balance_warn,". "p.amount<p.amount_min AS is_debtor,". "p.remind_period,DATE_FORMAT(p.date_amount_zero,'".$this->cms->DFMT["db"]."') AS date_amount_zero,". "UNIX_TIMESTAMP(p.date_amount_zero) AS udate_az,". I9906.$this->cms->DFMT["db"].I9907. I9908; $from ="FROM cms_host_users u LEFT JOIN cms_host_payments p ". "ON u.id = p.id_user "; if ($this->TTTTII1()){ $lILILIL ="AND u.id_reseller='".$this->TTTTIlI().I9909; }$this->browser->InitSQL($sql,$from, "WHERE 1 ".$lILILIL.$this->_ApplyFilters().$this->TTTlIl1(), I9887,"date_amount_zero","username ASC" ,array( 'udate_az'=>"UNIX_TIMESTAMP(p.date_amount_zero)", 'udate_le'=>I9910, 'datereg_sort'=>"UNIX_TIMESTAMP(u.date_registered)", 'remind'=>"UNIX_TIMESTAMP(p.date_amount_zero)-p.remind_period", 'amount'=>'p.amount', 'amount_min'=>'p.amount_min', I9911=>'p.date_amount_zero' ));$this->browser->AddSQLJoinedTables($this->cms->Core,'u',array( 'cms_host_payments'=>'p')); $aCustom[I9912] += Array( 'username'=>array('action'=>'callback','object'=>&$this,I9913=>'CBRow') );$aCustom["applied_id"] ="p.id"; $aCustom["legend"] =Array(I9914, "leg_blue", "leg_edit", "leg_payments_reset"); $sql ="SELECT SUM(p.amount_total_plus) AS total_plus,SUM(p.amount_total_minus) AS total_minus ". "FROM cms_host_users u LEFT JOIN cms_host_payments p ". "ON u.id = p.id_user WHERE 1 ".$lILILIL.$this->_ApplyFilters().$this->TTTlIl1(); $db =&$this->TTTlTIT(); $db->query($sql); $db->next_record(); $this->lILIl1I =$db->Record['total_plus']; $this->lILIl1l =$db->Record['total_minus']; parent::TTTlI11($vData, $aCustom); }else {$vData["subform"] =$this->cms->Gui->get($this->moduleName.I9915, $vData); $vData["form_header"] =$this->words[$this->moduleName."_view"]; }}function CBRow(&$aItem,&$aData) {global $ADMIN_PATH_WWW; $link =array('history_href'=>"$this->lILIl1L?flt_search_domain=".TlT1III($aItem['domain']), I9916 => $aItem[I9916], 'domain' => TlT1III($aItem['domain'])); $aItem['history_url'] =$this->cms->Gui->get($this->moduleName."_list:history_url",$link); if(empty($aItem[I9917])) {$aItem[I9917] =$this->words["is_absent"]; $links[I9917] =$this->words["is_absent"]; }else {$aDomainData =Array("domain_href" => TlT1III($aItem[I9917]), "domain_strip" => $this->cms->stripLine($aItem[I9917], 30), I9917 => TlT1III($aItem[I9917])); $links[I9917] =TlITI1l(TlT1III($aItem[I9917])); $aItem[I9917] =$this->cms->Gui->get("srv_host_payments_list:domain_url", $aDomainData); }$links["view_id"] =$links["edit_id"] =$aItem['id']; $links["username"] =TlITI1l($aItem[I9918]); $aItem[I9919] =$this->words['type_'.$aItem[I9919]]; $yesno =$aItem['billing_off'] ?'no' :'yes'; $aItem[I9920] =$this->words[$yesno]; if ($this->TTTTII1()){ $actions =$this->cms->Gui->get("srv_host_payments_list:icons_view", $links); }else{ $actions =$this->cms->Gui->get("srv_host_payments_list:icons_edit", $links); $actions .= $this->cms->Gui->get("srv_host_payments_list:icon_payments_reset", $links); }$aItem["actions"] =$actions; $status =$this->words[I9921.$aItem['status']]; $aItem['admin_status'] =$this->words[I9921.$aItem['admin_status']]; if($this->TTTTIIl() || $this->TTTTII1()) $aItem['status'] =$this->cms->Gui->getAbs('srv_host_payments_list:host_edit_url', array('href'=>$ADMIN_PATH_WWW."wz_host_users.php?action=locate&id=".$aItem['id_user'], 'status'=>$status)); else $aItem[I9922] =$status; $tmp =array('balance'=>FormatMoney($this->cms, $aItem["amount"],$this->lL1IlIL,2,2,true,false)); if($aItem['is_debtor']) $aItem['amount'] =$this->cms->Gui->get('srv_host_payments_list:is_debtor',$tmp); elseif($aItem['balance_warn'] && $aItem['udate_az']!=0) $aItem['amount'] =$this->cms->Gui->get('srv_host_payments_list:balance_warn',$tmp); else $aItem[I9923] =$tmp['balance']; $aItem['amount_month'] =FormatMoney($this->cms, $aItem["amount_month"],$this->lL1IlIL,2,2); $aItem["amount_min"] =FormatMoney($this->cms, $aItem[I9924],$this->lL1IlIL,2,2,true,false); $aItem["payment_amount_min"] =FormatMoney($this->cms, $aItem["payment_amount_min"],$this->lL1IlIL,2,2,true,false); $aItem["amount_total_plus_f"] =FormatMoney($this->cms, $aItem["amount_total_plus"],$this->lL1IlIL,2,2,true,false); $aItem["amount_total_minus_f"] =FormatMoney($this->cms, $aItem["amount_total_minus"],$this->lL1IlIL,2,2,true,false); if($aItem['last_payment_amount']>0){ $aItem['last_payment_amount'] =FormatMoney($this->cms, $aItem["last_payment_amount"],$this->lL1IlIL,2,2,true,false); }else{ $aItem['last_payment_amount'] ='-'; $aItem['last_payment_date'] =''; }if($aItem['udate_az']==0) $aItem[I9911] =I9925; if($aItem['udate_le']==0) $aItem[I9926] =I9925; if(!isset($aItem['remind_start']) || $aItem['udate_az']==0) $aItem['remind_start'] =I9925; $aItem[I9927] =$this->cms->stripLine($aItem[I9927],10); $aItem['hidden_note'] =$this->cms->stripLine($aItem['hidden_note'],10); if($aData["_num_rows"] == ($aItem["row_index"] +1)) {$lILILI1 =array( I9928=>FormatMoney($this->cms, $this->lILIl1I,$this->lL1IlIL,2,2,true,false), 'minus'=>FormatMoney($this->cms, $this->lILIl1l,$this->lL1IlIL,2,2,true,false), 'total'=>FormatMoney($this->cms, $this->lILIl1I+$this->lILIl1l,$this->lL1IlIL,2,2,true,false) );$aItem["row_total"] =$this->cms->Gui->get($this->moduleName."_list:row_total", $lILILI1); }}function TTTll11($cId, $cModule) {parent::TTTll11($cId, $cModule); }function TTTlT1I($aActions) {if($this->TTTTIIl()) $res =$aActions; else $res =array(I9929,'view','delay_payment'); return $res; }function TTTll1l($cId, $cModule) {require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_gui.php"); parent::TTTll1l($cId, $cModule); $db =&DB_si::admInstance(); if($this->TTTTIIl()){ $this->itemData[I9930] ='admin'; }else if($this->TTTTII1()){ $this->itemData[I9930] ='reseller'; }else{ $this->itemData[I9930] ='user'; }if(!$this->TTTTIIl() && !$this->TTTTII1()) {$sql ="SELECT p.id ". "FROM cms_host_users u,cms_host_payments p ". "WHERE u.domain_orig='".$this->TTTTIlT()."' AND p.id_user=u.id"; $db->query($sql); $db->next_record(); $cId =$db->Record['id']; }$sql ="SELECT p.id,DATE_FORMAT(u.date_registered,'".$this->cms->DFMT[I9931]."') AS date_registered,". "u.username,u.domain,u.traf_quota, ". I9932. "p.amount_min,p.payment_amount_min,p.traf_amount,p.traf_price,p.billing_off,p.id_user,". "DATE_FORMAT(p.billing_date,'".$this->cms->DFMT[I9931]."') AS billing_date,". "DATE_FORMAT(DATE_SUB(p.date_amount_zero,INTERVAL p.remind_period SECOND),'".$this->cms->DFMT[I9931]."') AS remind_start,". "(DATE_SUB(p.date_amount_zero,INTERVAL p.remind_period SECOND)<=NOW()) AS balance_warn,". "p.amount<p.amount_min AS is_debtor,p.remind_period, ". "DATE_FORMAT(p.date_amount_zero,'".$this->cms->DFMT[I9931]."') AS date_amount_zero,". "UNIX_TIMESTAMP(p.date_amount_zero) AS udate_az, ". "DATE_FORMAT(p.last_payment_date,'".$this->cms->DFMT[I9931]."') AS last_payment_date,p.last_payment_amount ". "FROM cms_host_users u LEFT JOIN cms_host_payments p ON u.id = p.id_user ". "WHERE p.id=".intval($cId); $db->query($sql); if($db->next_record()) {$this->itemData["action"] ="view"; $this->itemData["id"] =$db->Record[I9933]; $this->itemData["date_registered"] =$db->Record["date_registered"]; if(empty($db->Record[I9918])) {$this->itemData[I9918] =$this->words['unknown']; }else {$this->itemData[I9918] =$db->Record[I9918]; }if(empty($db->Record[I9917])) {$this->itemData[I9917] =$this->words["is_absent"]; }else {$this->itemData[I9917] =TlT1III($db->Record[I9917]); }$this->itemData[I9934] =$db->Record['billing_off'] ?'' :'checked'; $this->itemData["billing_date"] =$db->Record[I9935]; $this->itemData[I9936] =$this->words['type_'.$db->Record[I9919]]; $this->itemData[I9937] =$db->Record[I9919]; $this->itemData["note"] =htmlspecialchars($db->Record[I9927]); $this->itemData["hidden_note"] =htmlspecialchars($db->Record['hidden_note']); $tmp =array(I9938=>FormatMoney($this->cms, $db->Record["amount"],$this->lL1IlIL,2,2,true,false)); if($db->Record['is_debtor']) $this->itemData[I9938] =$this->cms->Gui->get('srv_host_payments_subform:is_debtor',$tmp); elseif($db->Record['balance_warn'] && $db->Record[I9939]!=0) $this->itemData[I9938] =$this->cms->Gui->get('srv_host_payments_subform:balance_warn',$tmp); else $this->itemData[I9938] =$tmp[I9938]; $this->itemData[I9924] =sprintf("%.02f",round($db->Record[I9924],2)); $this->itemData["payment_amount_min"] =sprintf("%.02f",round($db->Record[I9940],2)); $this->itemData["amount_min_str"] =FormatMoney($this->cms,$db->Record[I9924],$this->lL1IlIL,2,2,true,false); $this->itemData["amount_month"] =sprintf("%.02f",round($db->Record["amount_month"],2)); $this->itemData[I9941] =FormatMoney($this->cms,$db->Record["amount_month"],$this->lL1IlIL,2,2,true,false); $this->itemData["traf_amount"] =$db->Record["traf_amount"]/1024/1024; $this->itemData["traf_price"] =sprintf(I9942,round($db->Record["traf_price"],2)); $this->itemData["traf_quota"] =getBytesAsText($db->Record["traf_quota"],$this->words,2,2); $this->itemData["traf_price_str"] =FormatMoney($this->cms,$this->itemData[I9943],$this->lL1IlIL,2,2,true,false); $this->itemData["traf_amount_str"] =getBytesAsText($db->Record["traf_amount"],$this->words,2,2); $lILILlI =$db->Record["last_payment_amount"]; if($lILILlI>0) {$this->itemData["last_payment"] =FormatMoney($this->cms,$lILILlI,$this->lL1IlIL,2,2,true,false); $this->itemData[I9944] .= ", ".$db->Record['last_payment_date']; }else $this->itemData[I9944] ='---'; if($db->Record[I9939]==0) $this->itemData[I9911] =I9925; else $this->itemData[I9911] =$db->Record[I9911]; $rp =$db->Record['remind_period']; if($rp%(3600*24*30)==0) {$this->itemData[I9945] =intval($rp/3600/24/30); $this->itemData['months'] ='selected'; }elseif($rp%(3600*24*7)==0) {$this->itemData[I9945] =intval($rp/3600/24/7); $this->itemData['weeks'] ='selected'; }else {$this->itemData[I9945] =intval($rp/3600/24); $this->itemData[I9946] ='selected'; }$this->itemData['last_down_payment'] =ModuleHostPaymentsHistory::TII11Il($db->Record['id_user']); $lILILll =$this->cms->Core->getModule("srv_host_payments_add"); $this->itemData[I9947] =$lILILll->GetAdminLink(); }}function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); $this->TTTll1l($cId,$cModule); $this->itemData["action"] ="apply"; }function TTTl1lI($cId, $cModule) {if(!$this->TTTTIIl()) {trigger_error("SECURITY: Attempt to modify balance by non-admin: domain=".$this->TTTTIlT(),E_USER_WARNING); return; }parent::TTTl1lI($cId, $cModule); }function TII1lIT($cId, $cModule) {$db =&DB_si::admInstance(); $sql ="SELECT p.id, p.id_user ". "FROM cms_host_users u,cms_host_payments p ". "WHERE u.domain_orig='".$this->TTTTIlT()."' AND p.id_user=u.id"; $db->query($sql); $db->next_record(); $cId =$db->Record[I9933]; $uId =$db->Record['id_user']; $sql ="SELECT p.id, p.amount,p.amount_month, p.amount_min ". "FROM cms_host_users u LEFT JOIN cms_host_payments p ON u.id = p.id_user ". "WHERE p.id=".intval($cId); $db->query($sql); if($db->next_record()) {$amount =intval($db->Record[I9923]); $amount_month =intval($db->Record['amount_month']); $amount_min =intval($db->Record['amount_min']); $payment =-(intval($amount_month /30 *7) +1); if ($amount_min == 0 and $amount >$payment) {$sql ="UPDATE cms_host_payments SET amount_min=".$payment.I9948.intval($cId); $db->query($sql); $db->query("UPDATE cms_host_users SET admin_status='active' WHERE id=".intval($uId)); ModuleHostUsers::TIlTTl1(intval($uId),array('admin_status'=>'active','changed_by'=>I9949,'comment'=>'pay later function')); $this->cms->AddStatusMsg("delay_of_payment_success", "blue"); }}}function _ActionReset($cId, $cModule) {if(!$this->TTTTIIl()) {trigger_error("SECURITY: Attempt to modify balance by non-admin: domain=".$this->TTTTIlT(),E_USER_WARNING); return; }$db =&DB_si::admInstance(); $sql ="SELECT hu.id, hu.domain_orig as domain ". "FROM cms_host_payments hp LEFT JOIN cms_host_users hu ". "ON hp.id_user=hu.id ". "WHERE hp.id='".$cId.I9950; $db->query($sql); $db->next_record(); $domain =$db->Record[I9917]; $lILILlL =$db->Record["id"]; $sql ="SELECT ph.id_payment, SUM(ph.amount) as amount, ph1.rest as payment_rest ". "FROM cms_host_payments_history ph ". "LEFT JOIN cms_host_payments_history ph1 ON ph.id_payment = ph1.id ". "WHERE ph.id_invoice = 0 AND ph.payment_type > 100 AND ph.id_user='".$lILILlL.I9909. "GROUP BY id_payment"; $db->query($sql); while($db->next_record()){ $lILILl1[] =$db->Record; }if(sizeof($lILILl1)>0){ $lILILLI =0; foreach($lILILl1 as $key=>$value){ if($value["id_payment"] >0){ $sql ="UPDATE cms_host_payments_history SET ". "rest=rest+'".(-round($value[I9951], 2)).I9909. "WHERE id='".$value["id_payment"].I9950; $db->query($sql); }$lILILLI +=round($value[I9951], 2); }$sql ="DELETE FROM cms_host_payments_history ". "WHERE id_invoice = 0 AND payment_type > 100 AND id_user='".$lILILlL.I9950; $db->query($sql); $lILILLl[I9951] =$lILILLI; $lILILLl[I9952] =$lILILlL; $lILILlI =ModuleHostPaymentsHistory::TII11II($lILILlL); ModuleHostPayments::TII1lIl($lILILLl,false,time(),$lILILlI); $mp =&$this->cms->Core->GetModule('wz_host_users'); $ILLLlIl =$mp->GetOption('bill_admin_email'); $lIl1IIl =$this->cms->Gui->getAbs("srv_host_notifications:balance_mail_subj_".$this->langData, Array(I9917=>$lILILLL)); $mailBody =$this->cms->Gui->get("srv_host_notifications:balance_mail_body_".$this->langData, $lILILL1); ModuleHostUsers::TIlTT1T($this->cms,$ILLLlIl, $lILILlL, Array(I9953=>$lIl1IIl,'body'=>$mailBody,'lang'=>$this->docsLang)); $this->cms->AddStatusMsg("payments_reset_success", "blue", I9887, I9887, Array(I9917=>$domain)); }else{ $this->cms->AddStatusMsg("payments_reset_fail", "red", I9887, I9887, Array(I9917=>$domain)); }}function TTT1IlI($aSql =Array(), $cId =0) {$this->db->query("SELECT amount, id_user, amount_month,billing_off, DATE_FORMAT(billing_date, '".$this->cms->DFMT[I9931]."') AS billing_date FROM cms_host_payments WHERE id=".intval($cId)); $this->db->next_record(); $lILIL1I =$this->db->Record['amount_month']; $lILIL1l =$this->db->Record[I9954]; $amount =$this->db->Record[I9923]; $lILIL1L =intval($this->cms->VarsPost[I9920]); $lILIL11 =DateTools::getCorrectUDate($this->db->Record["billing_date"], $this->cms->DFMT["conf"]); $lILI1II =DateTools::getCorrectUDate($this->cms->VarsPost["billing_date"], $this->cms->DFMT["conf"]); $lILI1Il =ModuleHostPaymentsHistory::TII11Il($this->db->Record[I9955]); if ($lILI1Il !=I9925){ $lILI1IL =DateTools::getCorrectUDate($lILI1Il, $this->cms->DFMT["conf"]); if($lILI1II <= $lILI1IL){ $lILI1II =$lILIL11; $this->cms->AddStatusMsg("billing_date_fail", "red"); }}$tstamp =time(); $aSql =array( 'amount_month'=>doubleval($this->cms->VarsPost[I9956]), 'payment_amount_min'=>doubleval($this->cms->VarsPost[I9940]), I9954=>doubleval($this->cms->VarsPost[I9924]), 'traf_amount'=>doubleval($this->cms->VarsPost["traf_amount"])*1024*1024, 'traf_price'=>doubleval($this->cms->VarsPost[I9943]), I9927=>$this->cms->VarsPost[I9957], 'hidden_note'=>$this->cms->VarsPost["hidden_note"], 'billing_off' => ($lILIL1L+1)%2, I9935=>DateTools::toMysqlDate($lILI1II) );if($amount>$aSql[I9954]) $aSql[I9911] =DateTools::toMysqlDate(ModuleHostPayments::TII1lII($this->db->Record[I9923], $aSql[I9954],$aSql['amount_month']),$tstamp); elseif($amount>$lILIL1l) $aSql[I9911] =DateTools::toMysqlDate($tstamp); if($aSql[I9958]==0) $aSql[I9911] =DateTools::toMysqlDate(0); switch($this->cms->VarsPost['remind_units']) {case I9946: $sec =3600*24; break; case 'weeks': $sec =3600*24*7; break; case 'months': $sec =3600*24*30; break; default: $sec =3600*24; break; }$aSql[I9945] =intval($this->cms->VarsPost[I9945])*$sec; $aSql =parent::TTT1IlI($aSql, $cId); return $aSql; }function TII1lII($amount,$lILI1I1,$lILI1lI,$udate=0) {if($lILI1lI<=0.0) return 0; if(!$udate) $udate =time(); $d =getdate($udate); $day =$d['mday']; $month =$d[I9959]; $year =$d['year']; $lILI1ll =DateTools::TT1lI1T($month,$year); $lILI1lL =$lILI1lI/$lILI1ll; $utime =mktime(0,0,0,$month,$day,$year); $amount -= $lILI1I1; $lILI1l1 =$lILI1lI-round($lILI1lL*($day-1),2); if($amount<=$lILI1l1) {return mktime(0,0,0,$month,$day+round($amount/$lILI1lL),$year); }else {$amount -= $lILI1l1; $lILI1LI =$month; $lILI1Ll =$year; DateTools::TT1lI1I($month,$year); while($amount>0) {$amount -= $lILI1lI; $lILI1LI =$month; $lILI1Ll =$year; DateTools::TT1lI1I($month,$year); }$lILI1ll =DateTools::TT1lI1T($lILI1LI,$lILI1Ll); $day =round(($lILI1lI+$amount)/$lILI1lI*$lILI1ll)+1; if($day>$lILI1ll) {return mktime(0,0,0,$month,$day-$lILI1ll,$year); }else {return mktime(0,0,0,$lILI1LI,$day,$lILI1Ll); }}}function TII1lIl($lILI1LL,$lILI1L1,$tstamp,$lILI11I=false) {if(($lILI1LL==false) && ($lILI1L1!=false)) {$lILI11l =$lILI1L1[I9955]; $lILI11L =$lILI1L1[I9923]; $lILI111 =$lILI11L>0 ?'amount_total_plus' :'amount_total_minus'; }elseif(($lILI1LL!=false) && ($lILI1L1!=false)) {$lILI11l =$lILI1LL[I9955]; $lILI11L =-$lILI1LL[I9923]; $lILI111 =$lILI11L<0 ?'amount_total_plus' :I9960; $lILlIII =$lILI1L1[I9923]; $lILlIIl =$lILlIII>0 ?'amount_total_plus' :I9960; }elseif(($lILI1LL!=false) && ($lILI1L1==false)) {$lILI11l =$lILI1LL[I9955]; $lILI11L =-$lILI1LL[I9923]; $lILI111 =$lILI11L<0 ?'amount_total_plus' :I9960; }else return false; $db =&DB_si::admInstance(); $db->query("SELECT amount,amount_min,amount_month,amount_total_minus,amount_total_plus,". "UNIX_TIMESTAMP(date_amount_zero) AS udaz ". "FROM cms_host_payments WHERE id_user=$lILI11l"); $db->next_record(); $lILlIIL =$db->Record; $lILlII1 =$lILlIIL[I9923]; $lILlIlI =$lILlIIL[I9961]; $lILlIIL[I9923] += $lILI11L; $lILlIIL[$lILI111] += $lILI11L; if(isset($lILlIII)) {$lILlIIL[I9923] += $lILlIII; $lILlIIL[$lILlIIl] += $lILlIII; }if($lILlIIL[I9923]>$lILlIIL[I9954]) {$lILlIlI =ModuleHostPayments::TII1lII($lILlIIL[I9923],$lILlIIL[I9954],$lILlIIL[I9958],$tstamp); $daz ="FROM_UNIXTIME($lILlIlI)"; }elseif($lILlII1>$lILlIIL[I9954]) {$daz ="FROM_UNIXTIME($tstamp)"; $lILlIlI =$tstamp; }else $daz =I9911; if($lILI11I!==false) {$lILlIll =doubleval($lILI11I[I9923]).I9887; $lILlIlL =I9950.$lILI11I['date'].I9950; }else {$lILlIll ='last_payment_amount'; $lILlIlL ='last_payment_date'; }$sql ="UPDATE cms_host_payments SET amount=%lf,date_amount_zero=%s,". "amount_total_minus=%lf,amount_total_plus=%lf,last_payment_amount=%s,last_payment_date=%s WHERE id_user=%d"; $lILlIl1 =sprintf($sql,$lILlIIL[I9923],$daz, $lILlIIL[I9960],$lILlIIL['amount_total_plus'],$lILlIll,$lILlIlL,$lILI11l); $db->query($lILlIl1); return $lILlIlI; }function TII1lI1($filter) {$sql ="SELECT p.id_user,UNIX_TIMESTAMP(u.date_registered) AS date_registered,". "u.username,u.domain_orig AS domain,u.dbase,u.traf_quota,u.status, u.admin_status, ". I9932. "p.amount_min,p.payment_amount_min,p.remind_period,p.traf_amount,p.traf_price,UNIX_TIMESTAMP(p.billing_date) AS billing_date, ". I9962. "UNIX_TIMESTAMP(p.date_amount_zero) AS date_amount_zero, UNIX_TIMESTAMP(p.date_last_remind_sent) AS date_last_remind_sent, ". "m.lang, pp.type, pp.name, pp.code, pp.email, pp.ext_info ". "FROM cms_host_users u, cms_host_payments p, cms_members m LEFT JOIN cms_host_payments_props pp ON u.id=pp.id_user ". "WHERE u.id=p.id_user AND m.id=u.id_member $filter"; $db =&DB_si::admInstance(); $db->query($sql); $al =array(); while($db->next_record()){ $al[$db->Record[I9955]] =$db->Record; $al[$db->Record[I9955]]['ext_info'] =unserialize($al[$db->Record[I9955]][I9963]); }return $al; }function TII1llT($lILlILI=0,$ignored=false) {$sql =I9964; if(!$ignored) $sql .= "AND p.billing_off=0 "; if($lILlILI) $sql .= "AND p.billing_date<=FROM_UNIXTIME($lILlILI) "; return ModuleHostPayments::TII1lI1($sql); }function TII1llI($lILlILl) {$sql ="AND u.id='".$lILlILl.I9909; $lILlIIL =ModuleHostPayments::TII1lI1($sql); return $lILlIIL[$lILlILl]; }function TII1lll($userId,$tstamp,$field) {$db =&DB_si::admInstance(); $db->query("UPDATE cms_host_payments SET $field=FROM_UNIXTIME($tstamp) WHERE id_user=$userId"); }}?>
