<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       52892 xkqwnpzslpyrntimqqzttzkwurpurgtmzssltprmupwprqrxmuqkupwmqgiswysrruwupnir
 */ ?><?php foreach(array(10089=>'iHSuJQoHDtUDQrD`GOG',10090=>'iHSuJQoHDtgZBIQntDoMDtHrB`GOG',10091=>'wjzddqd|gzTo',10092=>'zSIiHSuJQ`GOG',10093=>'iHSuJQoHDtgZBIQntDgrHGD`GOG',10094=>"ZJJHCQS|ZWtMHnD",10095=>'ZSS',10096=>"UdqR",10097=>"",10098=>"SZtQtH",10099=>"oDGJMttQr",10100=>"=",10101=>'fJt|GZBnuI',10102=>"fJt|DQZrWO|SHIZMn",10103=>"u`uDQrnZIQ",10104=>":'",10105=>"+1000000",10106=>"nuIQrMW",10107=>'fJt|ZIHunt|tH',10108=>"0",10109=>"tBGQ|BZnSQx",10110=>'11',10111=>"tBGQ|MnnQr",10112=>"99",10113=>"tBGQ|trZffMW",10114=>"DQJQWt",10115=>'fJt|GZBDrW',10116=>"fJt|SZMJB",10117=>"WOQWKYHx",10118=>"fJt|nH|ZWt",10119=>"fJt|MS|rQDQJJQr",10120=>'',10121=>'rZtQ',10122=>"ZIHunt",10123=>'MnvHMWQ|SZtZ|MtQID',10124=>"DQJQWtQS",10125=>"uDQrnZIQ?zdw",10126=>'GO`rZtQ',10127=>'u',10128=>'WID|OHDt|GZBIQntD',10129=>'WZJJYZWK',10130=>"GO`MS",10131=>"fHrI|SZtZ",10132=>'DuI',10133=>"MD|ZYDQnt",10134=>"SHIZMn",10135=>'SQJ|MS',10136=>"SHWuIQnt|nuI",10137=>"GZBIQntD|SHWD|urJ",10138=>'YZJZnWQ',10139=>"ZWtMHnD",10140=>"rQDt",10141=>'nHtQ',10142=>'tBGQ|',10143=>'IMnuD',10144=>'vMQC',10145=>"ZWtMHn",10146=>'GOG|StMIQ',10147=>'ZIHunt',10148=>'MS|YMJJ',10149=>"WHntrZWtHr|nZIQ",10150=>'GZBIQnt|tBGQ',10151=>'fMQJSD',10152=>'MnvHMWQ',10153=>'iHSuJQoHDtgZBIQntD`GOG',10154=>'SHIZMn',10155=>"MS",10156=>"MS|WJMQnt",10157=>"MS|YMJJ",10158=>'MS|uDQr',10159=>"GZBIQnt|tBGQ",10160=>'rQS',10161=>'MS|WHntrZWtHr',10162=>'rQDt',10163=>'MS',10164=>"FUNw|mNwjUsqd|gzTo",10165=>'JZnP',10166=>"`tGJ",10167=>'ZIHunt|nuI',10168=>'IHY|GOHnQ',10169=>'WurSZtQ',10170=>"?DtZtuD%?",10171=>'YMJJ|ZSIMn|QIZMJ',10172=>"OtIJ",10173=>'YJuQ',10174=>"MS|WHntrZWtHr",10175=>"'!?MS|WJMQnt='",10176=>"MS|uDQr",10177=>"DtZrt|SZtQ",10178=>"SZMJB",10179=>"I",10180=>"'{?ZD?QnS|SZtQ!?",10181=>"GQrMHS",10182=>"09",10183=>"SHW|nuI",10184=>":",10185=>"SQDW|",10186=>"tZx|GQrWQnt",10187=>"tZx|vZJuQ",10188=>"SHW|tBGQ",10189=>"nHtQ",10190=>"zNs?GO2`MS|uDQr='",10191=>'DHurWQ',10192=>'QnS|SZtQ',10193=>'GZBIQnt|nuI',10194=>"+1?SZBD",10195=>'MS|WJMQnt',10196=>'DtZrt|SZtQ',10197=>"MS|GZBIQnt",10198=>"SY",10199=>"-0?SZBD") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .I10089; require_once $GLOBALS['CLASSES_PATH'] .I10090; require_once $GLOBALS[I10091] .I10092; require_once $GLOBALS[I10091] .I10093; class ModuleHostPaymentsHistory extends AdmModule {public $formData; public $lILlL1L; public $total; function ModuleHostPaymentsHistory(&$cms, &$db, &$cModule) {parent::AdmModule($cms,$db,$cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()) {require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_format.php"); $IIIIL11[I10094] =Array("edit", "apply", "view",'del',I10095); $IIIIL11["group_operations"] =Array(); $IIIIL11["lang_data"] =false; $this->docsLang =HOST_DOCS_LANG; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin() {parent::_InitAdmin(); if($this->TTTTIIl() || $this->TTTTII1()) $this->cms->Gui->AddGlobalVars(Array("USER"=>"admin")); else $this->cms->Gui->AddGlobalVars(Array(I10096=>"user")); $IIIlLl1 =AdmModule::TTTTI1l($this->cms->Core); $this->lL1IlIL =$IIIlLl1['main_currency']; }function TTTlITT($IIIL11l, $cId, $cModule ="") {parent::TTTlITT($IIIL11l, $cId, $cModule); }function GetHtml(&$aCustom) {return parent::GetHtml($aCustom); }function TTTlIT1(&$aCustom, $cType ="small", $IIlLI11 =I10097, $IIlLlII ="_small") {return parent::TTTlIT1($aCustom, $cType, $IIlLI11, $IIlLlII); }function TTlTll1() {parent::TTlTll1(); }function TTTlIII() {parent::TTTlIII(); $this->filter->AddField("flt_mode", "hidden", $this->cms->Vars["flt_mode"]); $this->filter->UpdateFieldDBName(I10098, "ph.date"); $this->filter->UpdateFieldDBName("datefrom", "ph.date"); $this->filter->AddField("flt_Hsplitter1", I10099); $this->filter->MoveField('flt_Hsplitter1',_MOVE_PREV); $lILlL11 =stripslashes(unhtmlentities($this->cms->Vars["flt_paynum"])); $this->filter->AddField("flt_paynum", "text", $lILlL11, I10097, I10100, "ph.payment_num"); $this->filter->TITI1II("flt_paynum"," OR ph.payment_num LIKE '%".addslashes($lILlL11)."%'"); $this->filter->MoveField(I10101,_MOVE_PREV); if($this->TTTTIIl() || $this->TTTTII1()) {$domain =unhtmlentities($this->cms->Vars["flt_search_domain"]); if (!empty($domain)){ $this->filter->AddField("flt_search_domain", "sql", TlT1III($domain), I10097, I10100, "u.domain"); $this->filter->MoveField(I10102, _MOVE_PREV); $this->cms->Vars["flt_search"] =$domain; }$search =stripslashes(unhtmlentities($this->cms->Vars["flt_search"])); $this->filter->AddField("flt_search", "text", $search, $search, I10100, I10103); $this->filter->TITI1II("flt_search"," OR u.domain LIKE '%".addslashes(TlT1III($search)) ."%' OR u.username LIKE '%".addslashes($search)."%'  OR u.ext_info LIKE '%".addslashes($search).I10104); $this->filter->MoveField("flt_search", _MOVE_PREV); $this->filter->AddField("flt_amount_from", "numeric", $this->cms->Vars['flt_amount_from'], I10105, ">=", "ph.amount"); $this->filter->MoveField('flt_amount_from',_MOVE_PREV); $this->filter->AddField("flt_amount_to", I10106, $this->cms->Vars['flt_amount_to'], "1000000", "<=", "ph.amount"); $this->filter->MoveField(I10107,_MOVE_PREV); $this->filter->AddField("flt_Vsplitter1", "Vsplitter"); $this->filter->MoveField('flt_Vsplitter1',_MOVE_START); $lILlllL =Array(); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_unknown"]=>I10108), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_card"]=>"3"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_webmoney"]=>"4"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words[I10109]=>"5"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_qiwi"]=>"10"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, array($this->words['type_paypal'] => I10110), 45, FALSE); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_euroset"]=>"6"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_terminals"]=>"7"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words[I10111]=>"8"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_prepaidcard"]=>"9"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_bonus"]=>I10112), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_bank"]=>"1"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words["type_hosting"]=>"101"), 45, false); $lILlllL =$this->filter->TITI1TT($lILlllL, Array($this->words[I10113]=>"102"), 45, false); $src =$this->cms->Vars["flt_paysrc"]; if(!isset($src) || $src=='') {$src =array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 99, 101, 102); }$this->filter->AddField("flt_paysrc", I10114, $src, I10097, I10100, "ph.payment_type", $lILlllL, 1, 5); $this->filter->MoveField('flt_paysrc',_MOVE_START); if(!isset($this->cms->Vars['flt_paysrc']) || '' === $this->cms->Vars[I10115]) {$this->filter->DisableFieldSql(I10115); }}$lILl1II =Array(); $lILl1II =$this->filter->TITI1TT($lILl1II, Array($this->words["totals"]=>I10108), 45, false); $lILl1II =$this->filter->TITI1TT($lILl1II, Array($this->words["daily"]=>"1"), 45, false); $lILl1II =$this->filter->TITI1TT($lILl1II, Array($this->words["all"]=>I10097), 45, false); $this->filter->AddField(I10116, I10114, $this->cms->Vars[I10116], I10097, I10100, "ph.daily", $lILl1II); $this->filter->TITI1II(I10116," OR ph.payment_type<'100'"); $src =$this->cms->Vars[I10116]; if(!isset($src) || $src=='') {$this->filter->DisableFieldSql(I10116); }if ($this->TTTTIIl()){ $this->filter->AddField("flt_no_act", I10117, $this->cms->Vars["flt_no_act"], I10108, I10100, "(ph.id_invoice = 0)"); $this->filter->TITI1II("flt_no_act"," OR ph.payment_type<'100'"); $src =$this->cms->Vars[I10118]; if(!isset($src )|| $src=='' || $src=='0') {$this->filter->DisableFieldSql(I10118); }$lILILII =ModuleHostUsers::TIlTT1I(); $lILILIl =Array(); foreach($lILILII as $key=>$value){ $lILILIl =$this->filter->TITI1TT($lILILIl, Array($value["name"]=>$key), 45, false); }$lILILIl =$this->filter->TITI1TT($lILILIl, Array($this->words["all"]=>I10108), 45, false); $this->filter->AddField(I10119, I10114, $this->cms->Vars[I10119], I10097, I10100, "u.id_reseller", $lILILIl); if($this->cms->Vars[I10119] == I10108 || empty($this->cms->Vars[I10119])) {$this->filter->DisableFieldSql(I10119); }}if($this->TTTTIIl() || $this->TTTTII1()) {$this->filter->AddField("flt_Vsplitter2", "Vsplitter"); $this->filter->MoveField('flt_Vsplitter2',_MOVE_START); }}function _ApplyFilters($prefix =I10120, $bodyType =I10120, $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); return $res; }function &TTTlI1T(&$aCustom) {return parent::TTTlI1T($aCustom); }function TTTlI1I(&$vData) {$domain =$this->cms->Vars['flt_search_domain']; $vData['domain'] =$domain; $vData['date'] =date($this->cms->DFMT['php_dtime']); $vData[I10121] =1; if ($this->TTTTIIl()){ $db =&DB_si::admInstance(); $sql ="SELECT hu.domain_orig as domain, pd.id, DATE_FORMAT(pd.date,'".$this->cms->DFMT["db"]."') AS invoice_date, ". "pd.amount, pd.payment_type, pd.doc_num, pd.id_contractor, pd.ext_info ". "FROM cms_host_payments_docs pd ". "JOIN cms_host_users hu on pd.id_user=hu.id ". "WHERE pd.doc_type=1 AND pd.tmp='1' "; if ($this->TTTTII1()){ $sql .= "AND hu.id_reseller='".$this->TTTTIlI()."' "; }if (!empty($domain)){ $sql .="AND hu.domain_orig LIKE '%".$domain."%' "; }$sql .= "ORDER by pd.date DESC"; $db->query($sql); while($db->next_record()){ $Il11L1l =unserialize($db->Record["ext_info"]); $aData =$db->Record; $aData["amount_str"] =FormatMoney($this->cms, $db->Record[I10122], $this->lL1IlIL, 2, 2, true, false); $aData['client_name'] =$Il11L1l['client_name']; $vData['invoice_items'] .= $this->cms->Gui->get('srv_host_payments_history_subform:invoice_item',$aData); $vData[I10123] .= $this->cms->Gui->get('srv_host_payments_history_subform:invoice_data_item',$aData); }ModuleHostPaymentsProps::TII11l1($lILl1Il); if (is_array($lILl1Il)){ foreach($lILl1Il as $lILl1IL=>$vItem){ $vItem["selected"] =($vItem["active"]=="1")?I10124:I10097; $vData['properties_items'] .= $this->cms->Gui->get('srv_host_payments_history_subform:properties_item',$vItem); }}$vData['fields'] =$this->cms->Gui->get('srv_host_payments_history_subform:add_fields',$vData); }parent::TTTlI1I($vData); }function &TTTlTIT() {return DB_si::admInstance(); }function TTTlI11(&$vData, &$aCustom) {if ($this->TTTTII1()){ $lILILIL ="AND u.id_reseller='".$this->TTTTIlI()."' "; }$sql =" ph.id,ph.id_payment,ph.date,DATE_FORMAT(ph.date,'".$this->cms->DFMT["db"]."') AS date_str,u.username,u.domain_orig as domain, ". "ph.amount,ph.rest,ph.payment_type,ph.payment_num,ph.note,ph.hidden_note,p.id AS pid, pp.name as contractor_name, d.doc_num, DATE_FORMAT(d.date,'".$this->cms->DFMT["db"]."') AS doc_date "; $from ="FROM cms_host_users u LEFT JOIN cms_host_payments_history ph ON ph.id_user=u.id ". "LEFT JOIN cms_host_payments p ON p.id_user=u.id ". "LEFT JOIN cms_host_payments_docs d ON ph.id_invoice=d.id ". "LEFT JOIN cms_host_payments_props pp ON ph.id_contractor=pp.id ". $lILl1I1 =($this->TTTTIIl() || $this->TTTTII1())? I10120 :" AND u.domain_orig='".$this->TTTTIlT()."' "; $this->browser->InitSQL($sql,$from, "WHERE 1 $lILl1I1 AND ph.tmp=0 ".$lILILIL.$this->_ApplyFilters().$this->TTTlIl1(), I10097,"ph.date",I10125 ,array( 'date'=>'ph.date', 'amount' => 'ph.amount', I10121 => I10126, 'payment_type' => 'ph.payment_type', 'payment_num' => 'ph.payment_num' ));$this->browser->AddSQLJoinedTables($this->cms->Core,I10127, array('cms_host_payments_history'=>'ph','cms_host_payments_docs'=>'d',I10128=>'p')); $aCustom["fields"] += Array( 'username'=>array('action'=>I10129,'object'=>&$this,'method'=>'CBRow') );$aCustom["applied_id"] =I10130; $aCustom["legend"] =Array("leg_red", "leg_blue", "leg_edit"); $aCustom[I10131]["buttons"] =Array("add", "apply", "cancel"); $sql ="SELECT SUM(ph.amount) AS sum,SIGN(ph.amount) AS sign ". "FROM cms_host_users u LEFT JOIN cms_host_payments_history ph ON ph.id_user=u.id ". "LEFT JOIN cms_host_payments p ON p.id_user=u.id ". "WHERE 1 $lILl1I1 AND ph.tmp=0 ".$lILILIL.$this->_ApplyFilters().$this->TTTlIl1(). " GROUP BY sign ORDER BY sign"; $db =&$this->TTTlTIT(); $db->query($sql); $this->total =array(-1=>0,1=>0); while($db->next_record()) $this->total[$db->Record['sign']] =$db->Record[I10132]; parent::TTTlI11($vData, $aCustom); }function CBRow(&$aItem,&$aData) {global $ADMIN_PATH_WWW; $domain =$aItem['domain']; $lILl1lI =$aItem['domain']; if(empty($aItem["domain"])) {$aItem["domain"] =$this->words[I10133]; $links["domain"] =$this->words[I10133]; }else {$aDomainData =Array("domain_href" => $domain, "domain_strip" => $this->cms->stripLine($lILl1lI, 30), "domain" => $domain); $links[I10134] =TlITI1l($domain); $links['rev_domain'] =$lILl1lI; $aItem[I10134] =$this->cms->Gui->get("srv_host_payments_history_list:domain_url", $aDomainData); }$links["edit_id"] =$links["view_id"] =$links[I10135] =$aItem['id']; $links["username"] =TlITI1l($aItem["username"]); if (!empty($aItem["doc_num"])){ $aItem[I10136] =$this->cms->Gui->get("srv_host_payments_history_list:document_num", $aItem); }if($this->TTTTIIl() || $this->TTTTII1()) {$lILl1ll =$this->cms->Core->GetModule('srv_host_payments'); $aItem["payments_href"] =$lILl1ll->GetAdminLink(); $aItem['balance_url'] =$this->cms->Gui->get('srv_host_payments_history_list:balance_url', $aItem); $lILl1lL =$this->cms->Core->GetModule('srv_host_payments_docs'); $aItem["payments_docs_href"] =$lILl1lL->GetAdminLink(); $aItem["payments_docs_href"] .= "?flt_domain=".$domain; $aItem[I10137] =$this->cms->Gui->get("srv_host_payments_history_list:payments_docs_url", $aItem); $actions =$this->cms->Gui->get("srv_host_payments_history_list:icons_payments", $links); $lILl1l1 =$this->cms->Gui->get("srv_host_payments_history_list:icons_edit", $links); $lILl1LI =$this->cms->Gui->get("srv_host_payments_history_list:icons_payments_view", $links); }$tmp =array(I10138=>FormatMoney($this->cms, $aItem[I10122],$this->lL1IlIL,2,2,true,false)); if($aItem['amount']<0) {if ($aItem["id_payment"]==0){ $aItem['amount'] =$this->cms->Gui->get('srv_host_payments_history_list:charge_owed',$tmp); $aItem[I10139] =$actions; }else{ $aItem['amount'] =$this->cms->Gui->get('srv_host_payments_history_list:charge',$tmp); $aItem[I10139] =$lILl1LI; }}else {if ($aItem["rest"] <$aItem[I10122]){ $aItem[I10139] =$lILl1l1; }else{ $aItem[I10139] =$actions; }$aItem['amount'] =$tmp[I10138]; }if ($aItem[I10140] >0){ $tmp =array('rest'=>FormatMoney($this->cms, $aItem[I10140],$this->lL1IlIL,2,2,true,false)); $aItem['rest'] =$this->cms->Gui->get('srv_host_payments_history_list:rest',$tmp); }else{ $aItem['rest'] =I10120; }$aItem[I10141] =$this->cms->stripLine($aItem[I10141],80); $aItem['hidden_note'] =$this->cms->stripLine($aItem['hidden_note'],80); $src =$this->module->GetProperty('payment_types'); $aItem['payment_type'] =$this->words[I10142.$src[$aItem['payment_type']]]; if($aData["_num_rows"] == ($aItem["row_index"] +1)) {$lILILI1 =array( 'plus'=>FormatMoney($this->cms, $this->total[1],$this->lL1IlIL,2,2,true,false), I10143=>FormatMoney($this->cms, $this->total[-1],$this->lL1IlIL,2,2,true,false), 'total'=>FormatMoney($this->cms, $this->total[1]+$this->total[-1],$this->lL1IlIL,2,2,true,false) );$aItem["row_total"] =$this->cms->Gui->get($this->moduleName."_list:row_total", $lILILI1); }}function TTTlT1I($aActions) {if($this->TTTTIIl()) $res =$aActions; else $res =array('none',I10144); return $res; }function TTTll1l($cId, $cModule) {parent::TTTll1l($cId, $cModule); $sql ="SELECT pd.doc_num, UNIX_TIMESTAMP(pd.date) AS invoice_date, ph.id_bill, ". "pp.name as contractor_name, pp.id as contractor_id, ". "ph.id,UNIX_TIMESTAMP(ph.date) AS date,u.username,u.domain, ". "ph.amount,ph.rate, ph.payment_type,ph.payment_num,ph.note,ph.hidden_note ". "FROM cms_host_users u ". "LEFT JOIN cms_host_payments_history ph ON ph.id_user=u.id ". "LEFT JOIN cms_host_payments_docs pd ON ph.id_bill=pd.id ". "LEFT JOIN cms_host_payments_props pp ON ph.id_contractor=pp.id ". "WHERE ph.tmp=0 AND ph.id=".intval($cId); $this->db->query($sql); if($this->db->next_record()) {$this->itemData[I10145] ="view"; $this->itemData["id"] =$this->db->Record['id']; if(empty($this->db->Record[I10134])) {$this->itemData[I10134] =$this->words[I10133]; }else {$this->itemData[I10134] =TlT1III($this->db->Record[I10134]); }$this->itemData["date"] =date($this->cms->DFMT[I10146],$this->db->Record["date"]); $this->itemData["note"] =htmlspecialchars($this->db->Record[I10141]); $this->itemData["hidden_note"] =htmlspecialchars($this->db->Record['hidden_note']); $this->itemData[I10147] =$this->db->Record[I10122]; $this->itemData[I10121] =$this->db->Record["rate"]; $this->itemData["payment_num"] =htmlspecialchars($this->db->Record['payment_num']); $this->itemData["id_bill"] =$this->db->Record[I10148]; $this->itemData["invoice_num"] =htmlspecialchars($this->db->Record['doc_num']); $this->itemData["invoice_date"] =date($this->cms->DFMT[I10146],$this->db->Record["invoice_date"]); $this->itemData[I10149] =htmlspecialchars($this->db->Record[I10149]); $this->itemData["contractor_id"] =$this->db->Record["contractor_id"]; $src =$this->module->GetProperty('payment_types'); $this->itemData["subtype"] =$this->db->Record[I10150]; $src =$this->module->GetProperty('payment_types'); $this->itemData["subtype_name"] =$this->words[I10142.$src[$this->itemData["subtype"]]]; if($this->cms->Vars['action']==I10144) {$this->itemData[I10147] =FormatMoney($this->cms, $this->db->Record[I10122],$this->lL1IlIL,2,2,true,false); $this->formData[I10151] =$this->cms->Gui->get('srv_host_payments_history_subform:view_fields',$this->itemData); $this->itemData += $this->formData; }}}function TTTl1Tl($cId, $cModule) {if(!$this->TTTTIIl()) return; parent::TTTl1Tl($cId, $cModule); $this->TTTll1l($cId,$cModule); $this->itemData[I10145] ="apply"; if($this->itemData[I10147]<0) {$this->itemData['charge'] ='selected'; $this->itemData[I10147] =-1.0*doubleval($this->itemData[I10147]); }else $this->itemData[I10152] ='selected'; $this->itemData[I10121] =($this->itemData[I10121]>0)?sprintf("%.04f",$this->itemData[I10121]):I10120; $this->itemData[I10147] =sprintf("%.02f",$this->itemData[I10147]); $this->formData[I10151] =$this->cms->Gui->get('srv_host_payments_history_subform:edit_fields',$this->itemData); $this->itemData += $this->formData; }function TTTl1lI($cId, $cModule) {if(!$this->TTTTIIl()) {trigger_error("SECURITY: attempt to modify payment by non-admin, domain=".$this->TTTTIlT(),E_USER_WARNING); return; }$this->db->query("SELECT * FROM cms_host_payments_history WHERE id=$cId AND tmp=0"); $this->db->next_record(); $lILILLl =$this->db->Record; if (($lILILLl[I10122] -$this->cms->VarsPost[I10122]) <= $lILILLl[I10140]){ $this->cms->VarsPost[I10140] =$lILILLl[I10140] +$this->cms->VarsPost[I10122] -$lILILLl[I10122]; }else{ $this->cms->VarsPost[I10122] =$lILILLl[I10122]; $this->cms->AddStatusMsg('amount_rest_fail','red'); }if ($this->cms->VarsPost["payment_num"] != $lILILLl["payment_num"]){ $this->db->query("UPDATE cms_host_payments_history SET payment_num='".$this->cms->VarsPost["payment_num"]."' WHERE id_payment=$cId AND tmp=0"); }parent::TTTl1lI($cId, $cModule); $err =$this->GetLastError(); if($err['errno']) return; $upd =$this->lILlL1L; require_once $GLOBALS[I10091] .I10153; $lILILlI =ModuleHostPaymentsHistory::TII11II($lILILLl['id_user']); ModuleHostPayments::TII1lIl($lILILLl,$upd,time(),$lILILlI); }function TTTll11($cId, $cModule) {if(!$this->TTTTIIl()) {trigger_error("SECURITY: attempt to add payment by non-admin, domain=".$this->TTTTIlT(),E_USER_WARNING); return; }require_once $GLOBALS[I10091] .I10089; $hr =ModuleHostUsers::TIlTTlI($this->cms->VarsPost[I10154]); if(!$hr['id']){ $this->cms->AddStatusMsg('invalid_domain','red'); return; }$userId =$hr['id']; ModuleHostPaymentsProps::TII111I($lILl1Ll, 0, $userId );if (isset($lILl1Ll[I10155])){ $this->cms->AddStatusMsg('set_props','blue', I10120, I10120, Array('name'=>$lILl1Ll["name"])); $this->cms->VarsPost[I10156] =$lILl1Ll[I10155]; }else{ if (($this->cms->VarsPost["payment_subtype"]=="1")){ $this->cms->AddStatusMsg('no_props','red'); return; }}parent::TTTll11($cId, $cModule); $lILl1LL =$this->db->lastInsertId(); $lILl1L1 =$this->lILlL1L[I10122]; if($this->lILlL1L[I10157]>0){ $this->db->query("UPDATE cms_host_payments_docs SET tmp='0' WHERE id='".$this->lILlL1L[I10157]."'"); $this->db->query("UPDATE cms_host_payments_history ph, cms_host_payments_docs pd SET ph.id_client=pd.id_client WHERE pd.id='".$this->lILlL1L[I10157]."' AND pd.id=ph.id_bill"); }require_once $GLOBALS[I10091] .I10153; $this->lILlL1L[I10158] =$userId; $lILILlI =ModuleHostPaymentsHistory::TII11II($this->lILlL1L[I10158]); if ($this->lILlL1L["payment_type"] <100){ $account =ModuleHostPayments::TII1llI($userId); if($this->lILlL1L[I10147] +$account[I10147] >0 and $account['amount_min'] <0) {$this->db->query("UPDATE cms_host_payments SET amount_min=0 WHERE id_user='".$userId."'"); }}ModuleHostPayments::TII1lIl(false,$this->lILlL1L,time(),$lILILlI); if ($this->lILlL1L[I10159] <100){ $account =ModuleHostPayments::TII1llI($userId); $this->TITTll1($account, $this->lILlL1L, "payment"); }}function TTT1IlI($aSql =Array(), $cId =0) {$udate =DateTools::getCorrectUDate($this->cms->VarsPost["date"], $this->cms->DFMT["conf_dtime"],-1); if($udate<0) {$this->cms->AddStatusMsg('invalid_date',I10160); return $aSql; }$aSql =array( 'date' => DateTools::toMysqlDate($udate), I10147=>doubleval($this->cms->VarsPost[I10122]), I10121=>doubleval(empty($this->cms->VarsPost["rate"])?1:$this->cms->VarsPost["rate"]), I10148=>$this->cms->VarsPost[I10157], 'id_client'=>$this->cms->VarsPost[I10156], I10161=>$this->cms->VarsPost["id_contractor"], I10150 => $this->cms->VarsPost['payment_subtype'], 'payment_num' => $this->cms->VarsPost['payment_num'], I10162 => $this->cms->VarsPost[I10162], I10141=>$this->cms->VarsPost["note"], 'hidden_note'=>$this->cms->VarsPost["hidden_note"] );if($this->cms->VarsPost[I10150]=='charge') $aSql[I10147] *= -1; $this->lILlL1L =$aSql; if($cId==0) {$hr =ModuleHostUsers::TIlTTlI($this->cms->VarsPost[I10154]); $aSql[I10158] =$hr[I10163]; if ($aSql[I10150] <100){ $aSql[I10162] =$aSql[I10147]; $this->lILlL1L[I10162] =$this->lILlL1L[I10147]; }}$aSql =parent::TTT1IlI($aSql, $cId); return $aSql; }function _ActionDel($cId, $cModule) {if(!$this->TTTTIIl()) return; $this->db->query("SELECT * FROM cms_host_payments_history WHERE id=$cId AND tmp=0"); $this->db->next_record(); $lILILLl =$this->db->Record; parent::_ActionDel($cId,$cModule); $err =$this->GetLastError(); if(!empty($err['errno'])){ return; }$this->db->query("UPDATE cms_host_payments_docs SET tmp='1' WHERE id='".$lILILLl[I10157]."'"); require_once $GLOBALS[I10091].I10153; $lILILlI =ModuleHostPaymentsHistory::TII11II($lILILLl[I10158]); ModuleHostPayments::TII1lIl($lILILLl,false,time(),$lILILlI); }function TITTll1(&$account, &$lILlL1L, $type) {require_once $GLOBALS[I10091].'CMS_Member.php'; require_once($GLOBALS[I10164]."mainsms.class.php"); $api =new MainSMS ('Amiro.CMS' ,'74ce78f4b367c', true, false );$domain =$account[I10154]; $member =CMS_Member::getInfo($domain,$account['username']); $lILl11I =isset($member[I10165]) ?$member[I10165] :'en'; $gui =&$this->cms->Gui; $gui->addBlock("mail", $GLOBALS['LOCAL_FILES_REL_PATH']."_admin/templates/letters/_billing_daemon_" .$lILl11I .I10166); $src =$this->module->GetProperty('payment_types'); $III1LlI =array (I10154=>$domain, 'curdate'=>date($this->cms->DFMT[I10146]), I10138=>FormatMoney($this->cms,$account[I10147],$this->lL1IlIL,2,2,false,false), 'date'=>date($DFMT,$account['date_amount_zero']), I10147=>FormatMoney($this->cms,$lILlL1L[I10147],$this->lL1IlIL,2,2,false,false), I10167=>FormatMoney($this->cms,$lILlL1L[I10147],$this->lL1IlIL,2,2,false,false), I10121=>$lILlL1L[I10121], I10150=>$lILlL1L[I10150], 'payment_type_word'=>$this->words[I10142.$src[$lILlL1L[I10150]]], 'payment_num'=>$lILlL1L['payment_num'], I10141=>$lILlL1L[I10141], );$lILl11l =$account['ext_info'][I10168]; $tpl ='mail:'; if($api && !empty($lILl11l)){ $lILl11L =$gui->get($tpl .'sms_' .$type .'_body', $III1LlI); $price =$api->TlT1llI($lILl11l, $lILl11L );$lILl111 =$api->TlT1lll ($lILl11l );if( $lILl111 && ($price <0.16) ){$api->TlT1lIl($lILl11l ,$lILl11L, 'Amiro.CMS', $III1LlI[I10169].' 11:00'); $response =$api->getResponse ();$result =$api->TTTII1T ($response ['messages_id' ]);foreach ($result as $lILLIII => $status ){$III1LlI["sms_status"] ="phone: ".$lILl11l.I10170 .$status; }}}$III1LlL =$gui->get("mail:${type}_subject", $III1LlI); $III1LlI['subject'] =$III1LlL; $mbody =$gui->get("mail:header", $III1LlI); $mbody .= $gui->get("mail:${type}_body", $III1LlI); $mbody .= $gui->get("mail:footer", $III1LlI); $mp =&$this->cms->Core->GetModule('wz_host_users'); $ILLLlIl =$mp->GetOption(I10171); require_once($GLOBALS["CLASSES_PATH"]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$this->cms->Core->GetOption('company_email'); $oMail->SenderName =$this->cms->Core->GetOption("company_name"); $oMail->Subject =$III1LlL; $oMail->Body =$mbody; $oMail->BodyFormat =I10172; $oMail->Prepare(); if(empty($member['email'])) {$this->cms->AddStatusMsg('notify_no_email',I10160); }else {$oMail->RecipientAddress =$member['email']; if($oMail->Send()){ $this->cms->AddStatusMsg('notify_sent',I10173); }else{ $this->cms->AddStatusMsg('notify_send_failed',I10160); }}if(!ModuleHostUsers::TIlTT1T($this->cms,$ILLLlIl,$account[I10158], array('subject'=>"[BILLING: $domain] $III1LlL",'body'=>$mbody,I10165=>$this->docsLang))) $this->cms->AddStatusMsg('notify_adm_send_failed',I10160); }function TII11TT($lILI11l) {$lILLIIl =Array(); $sql ="SELECT id, amount, rate, payment_num, id_contractor, id_client, rest, daily FROM cms_host_payments_history WHERE id_user='".$lILI11l."' AND payment_type < 100 AND rest > 0 ORDER BY date ASC"; $db =&DB_si::admInstance(); $db->query($sql); while ($db->next_record()){ $lILLIIl[] =$db->Record; }if (sizeof($lILLIIl)==0){ return false; }$db2 =&$db->TTI1I1T(); $lILLIIL =0; $lILl1L1 =$lILLIIl[$lILLIIL][I10140]; $lILl1LL =$lILLIIl[$lILLIIL][I10155]; $lILLII1 ="SELECT id, amount, payment_type, id_user, id_invoice, date, start_date, end_date, note, daily ". "FROM cms_host_payments_history WHERE id_user='".$lILI11l. "' AND (payment_type=101 OR payment_type=102) AND id_payment=0 ORDER BY date ASC"; $db->query($lILLII1); while (($lILl1L1 >0 )&& $db->next_record()){ $amount =abs($db->Record[I10122]); if (round($lILl1L1, 2) >round($amount, 2)){ $lILl1L1 -= $amount; $sql ="UPDATE cms_host_payments_history SET rate='".$lILLIIl[$lILLIIL]["rate"]. "', payment_num='".$lILLIIl[$lILLIIL]["payment_num"]. "', id_contractor='".$lILLIIl[$lILLIIL][I10174]. "', id_client='".$lILLIIl[$lILLIIL][I10156]. "', id_payment='".$lILl1LL."' WHERE id='".$db->Record[I10155]."'"; $db2->query($sql); }else{ $sql ="UPDATE cms_host_payments_history SET rate='".$lILLIIl[$lILLIIL]["rate"]. "', payment_num='".$lILLIIl[$lILLIIL]["payment_num"]. "', id_contractor='".$lILLIIl[$lILLIIL][I10174]. I10175.$lILLIIl[$lILLIIL][I10156]. "', id_payment='".$lILl1LL."', amount='".doubleval(-1*($lILl1L1))."' WHERE id='".$db->Record[I10155]."'"; $db2->query($sql); $amount -= $lILl1L1; $lILl1L1 =0; unset($payment); $payment[I10176] =$db->Record[I10176]; $payment[I10122] =-1*($amount); $payment["note"] =$db->Record["note"]; $payment[I10159] =$db->Record[I10159]; $payment["date"] =$db->Record["date"]; $payment[I10177] =$db->Record[I10177]; $payment["end_date"] =$db->Record["end_date"]; $payment["id_invoice"] =$db->Record["id_invoice"]; $payment[I10178] =$db->Record[I10178]; $sql =$db2->GenInsertSQL("cms_host_payments_history",$payment); $db2->query($sql); $payment[I10155] =$db2->lastInsertId(); $db->query($lILLII1); }$sql ="UPDATE cms_host_payments_history SET rest='".$lILl1L1 ."' WHERE id='".$lILl1LL."'"; $db2->query($sql); if ($lILl1L1==0){ $lILLIIL++; $lILl1L1 =$lILLIIl[$lILLIIL][I10140]; $lILl1LL =$lILLIIl[$lILLIIL][I10155]; }}return true; }function TII11TI(&$cms, &$account, $date){ $lILLIlI =mktime(0,0,0,date(I10179, $date),2,date("y", $date)); $date =strtotime( "-1 day", mktime(0,0,0,date(I10179, $date),1,date("y", $date))); $lILLIll =date(I10179,$date); $words =$cms->Gui->ParseLangFile("templates/lang/_payments_docs.lng"); $sql ="SELECT DATE_FORMAT(MIN(ph1.start_date),'".$cms->DFMT["db"]."') as start_date, ". "DATE_FORMAT(MAX(ph1.end_date),'".$cms->DFMT["db"].I10180. "ph1.id_user, ph1.date, SUM(ph1.amount) as amount, ". "SUM(ph1.amount*ph1.rate) as amount_rate, ". "ph1.payment_type, ph2.id_client, ph2.id_contractor  ". "FROM cms_host_payments_history ph1 ". "JOIN cms_host_payments_history ph2 on ph1.id_payment=ph2.id ". "WHERE ph1.id_invoice=0 AND ph1.id_user='".$account[I10176]."' AND ph2.payment_type='1' AND ph1.date<FROM_UNIXTIME(".$lILLIlI.") ". "AND ph2.id_client!=0 AND ph2.id_contractor!=0 ". "GROUP BY ph2.id_contractor, ph2.id_client, ph1.payment_type"; $db =&DB_si::admInstance(); $db->query($sql); while($db->next_record()){ $lILLIIl[] =$db->Record; }$lILLIlL =0; $lILLIl1 =0; if (is_array($lILLIIl)){ foreach($lILLIIl as $lILLILI=>$lILLILl){ if ($lILLILl[I10174] != $lILLIlL){ unset($lILlLIl); ModuleHostPaymentsProps::TII111I($lILlLIl, $lILLILl[I10174]); if ($lILLILl[I10156] != $lILLIl1){ unset($lILl1Ll); ModuleHostPaymentsProps::TII111I($lILl1Ll, $lILLILl[I10156]); }}if (!is_array($lILlLIl) || !is_array($lILl1Ll)){ continue; }$IILll11 =$lILlLIl["actnum_prefix"]; $lILLILL =$lILlLIl["report_period"]; if(($lILlLIl["redefine_report_period"]=="1") && !empty($lILl1Ll[I10181])){ $lILLILL =$lILl1Ll[I10181]; }if ((($lILLILL=="year")&&($lILLIll!=12)) || (($lILLILL=="quarter") && !in_array($lILLIll, Array("03", "06", I10182, "12")))){ continue; }if (($lILLIlL != $lILLILl[I10174]) || ($lILLIl1 != $lILLILl[I10156])){ $db->query("SELECT doc_num FROM cms_host_payments_docs WHERE doc_num LIKE '".$IILll11."%' ORDER BY SUBSTRING(doc_num, LENGTH('".$IILll11."')+1)+0 DESC "); $db->next_record(); $lILLIL1 =$IILll11.(intval(str_replace($IILll11, I10097, $db->Record[I10183])) +1); foreach($lILlLIl as $lILLI1I => $lILLI1l){ $lILLI1L["contractor_".$lILLI1I] =$lILLI1l; }foreach($lILl1Ll as $lILLI1I => $lILLI1l){ $lILLI1L["client_".$lILLI1I] =$lILLI1l; }$lILlLIl["tax_percent"] =(mb_strpos($lILlLIl["tax_value"], I10184)>0)?true:false; $lILlLIl["tax_value"] =doubleval($lILlLIl["tax_value"]); $lILLIlL =$lILLILl[I10174]; $lILLIl1 =$lILLILl[I10156]; }$lILLI11 =$lILLILl[I10177]." - ".$lILLILl["end_date"]; $description =$words[I10185.$lILLILl[I10159]]." ".$account[I10134]." ".$words["for_period"]." ".$lILLI11; if ($lILlLIl[I10186]){ switch($lILlLIl["tax_scheme"]){ case "inc": $lILLILl["amount_tax"] =round($lILLILl[I10122] /(100+$lILlLIl["tax_value"]) *$lILlLIl[I10187], 2); break; case "sum": $lILLILl["amount_tax"] =round($lILLILl[I10122] /100 *$lILlLIl[I10187], 2); break; default: $lILLILl["amount_tax"] =0; break; }}else{ $lILLILl["amount_tax"] =$lILlLIl[I10187]; }$aSql =Array( I10176 => $account[I10176], I10174 => $lILlLIl[I10155], I10156 => $lILl1Ll[I10155], I10188 => '2', "date" => DateTools::toMysqlDate($date), I10159 => $lILLILl[I10159], I10122 => abs($lILLILl[I10122]), "amount_tax" => abs($lILLILl["amount_tax"]), I10183 => $lILLIL1, I10189 => $description, "tmp" => '1', "ext_info" => addslashes(serialize($lILLI1L)), "modified_date" => DateTools::toMysqlDate(time()) );$sql =$db->GenInsertSQL("cms_host_payments_docs", $aSql); $db->query($sql );if ($lILLILl[I10159]==101){ $id =$db->lastInsertId(); $sql ="UPDATE cms_host_payments_history ph1, cms_host_payments_history ph2 SET ph1.id_invoice='".$id."' ". "WHERE ph1.id_payment=ph2.id ". "AND ph1.id_invoice=0 ". I10190.$account[I10176]."' ". "AND ph2.id_client!='0' ". "AND ph2.id_contractor!='0' ". "AND ph2.payment_type='1' ". "AND ph1.date<FROM_UNIXTIME(".$lILLIlI.")"; $db->query($sql );}}return "OK"; }else{ return "NO PAYMENTS"; }}function TII11Tl(&$payment) {$db =&DB_si::admInstance(); $sql =$db->GenInsertSQL("cms_host_payments_history",$payment); $db->query($sql); if($payment[I10148]){ $sql ="UPDATE cms_host_payments_docs SET tmp=0 WHERE id='". $payment[I10148] ."'"; $db->query($sql); }if ($payment[I10159] <100){ $sql ="UPDATE cms_host_payments SET amount_min=0 WHERE id_user='".$payment[I10158]."' AND amount_min < 0"; $db->query($sql); }$lILILlI =ModuleHostPaymentsHistory::TII11II($payment[I10158]); return ModuleHostPayments::TII1lIl(false,$payment,DateTools::TT1lIl1($payment['date']), $lILILlI); }function TII11T1($lILLlII,$lILLlIl,$lILI11l,$params) {$lILLlIL =$params[I10191]; ModuleHostPaymentsHistory::TII11TT($lILI11l); $lILLlI1 =ModuleHostPaymentsHistory::TII11IT($lILLlII,$lILLlIl,$lILI11l,$lILLlIL); foreach($lILLlI1 as $lILLllI=>$lILLlll){ if($lILLlll[I10122]==0.0) continue; $payment =array( I10158=>$lILI11l, 'id_client'=>$lILLlll[I10156], I10161=>$lILLlll[I10174], 'date'=>DateTools::toMysqlDate($lILLlIl), 'start_date'=>DateTools::toMysqlDate(strtotime("-1 days", strtotime($lILLlll[I10177]))), I10192=>DateTools::toMysqlDate(strtotime("-1 days", strtotime($lILLlll["end_date"]))), I10147=>$lILLlll[I10122], 'id_payment'=>$lILLllI, 'id_invoice'=>$invoice[I10163], I10150 => $params[I10191], I10193 => $lILLlll["payment_num"], I10121 => $lILLlll["rate"], I10141=>$params[I10141]." ".date($params['DFMT'], strtotime(I10194, strtotime($lILLlll[I10177])))." - ".date($params['DFMT'], strtotime(I10194, strtotime($lILLlll["end_date"]))), 'tmp'=>1 );$db =&DB_si::admInstance(); $sql =$db->GenInsertSQL('cms_host_payments_history',$payment); $db->query($sql); $payment[I10163] =$db->lastInsertId(); $sql ="DELETE FROM cms_host_payments_history ". "WHERE id_user='$lILI11l' AND date>=FROM_UNIXTIME($lILLlII) AND DATE<=FROM_UNIXTIME($lILLlIl) AND tmp=0 AND payment_type=$lILLlIL AND id_payment=$lILLllI"; $db->query($sql); $sql ="UPDATE cms_host_payments_history SET tmp=0 WHERE id=".$payment[I10163]; $db->query($sql); }return I10097; }function TII11IT($lILLlII,$lILLlIl,$lILI11l,$lILLlIL) {$lILLlI1 =Array(); $sql ="SELECT MAX(id_client) as id_client, MAX(id_contractor) as id_contractor, id_payment, SUM(amount) AS total, MIN(date) as start_date, MAX(date) as end_date, rate, payment_num FROM cms_host_payments_history ". "WHERE date>=FROM_UNIXTIME($lILLlII) AND date<=FROM_UNIXTIME($lILLlIl) ". "AND id_user=$lILI11l AND tmp=0 AND payment_type=$lILLlIL GROUP BY id_payment"; $db =&DB_si::admInstance(); $db->query($sql); while($db->next_record()){ $lILLlI1[$db->Record["id_payment"]][I10156] =$db->Record[I10195]; $lILLlI1[$db->Record["id_payment"]][I10174] =$db->Record[I10161]; $lILLlI1[$db->Record["id_payment"]][I10122] =$db->Record['total']; $lILLlI1[$db->Record["id_payment"]][I10177] =$db->Record[I10196]; $lILLlI1[$db->Record["id_payment"]]["end_date"] =$db->Record[I10192]; $lILLlI1[$db->Record["id_payment"]]["rate"] =$db->Record[I10121]; $lILLlI1[$db->Record[I10197]]["payment_num"] =$db->Record[I10193]; }return $lILLlI1; }function TII11II($userId) {$sql ="SELECT MAX(date) AS date FROM cms_host_payments_history WHERE id_user=$userId AND amount>0"; $db =&DB_si::admInstance(); $db->query($sql); $db->next_record(); if(!isset($db->Record['date']) || $db->Record['date']==I10120) return array(I10147=>0.0,'date'=>'0000-00-00 00:00:00'); $date =$db->Record['date']; $sql ="SELECT * FROM cms_host_payments_history WHERE id_user=$userId AND date='$date'"; $db->query($sql); $db->next_record(); return array(I10147=>$db->Record[I10147],'date'=>$db->Record['date']); }function TII11Il($userId) {$sql ="SELECT DATE_FORMAT(MAX(date),'".$this->cms->DFMT[I10198]."') AS date FROM cms_host_payments_history WHERE id_user=$userId AND payment_type>100"; $db =&DB_si::admInstance(); $db->query($sql); $db->next_record(); if(!isset($db->Record['date']) || $db->Record['date']==I10120){ return '-'; }else{ return date($this->cms->DFMT["php"], strtotime(I10199, DateTools::getCorrectUDate($db->Record['date'], $this->cms->DFMT["conf"]))); }}function TII11I1(){ $db =&DB_si::admInstance(); $sql ="UPDATE cms_host_payments_history ph1, cms_host_payments_history ph2 SET ph1.id_contractor=ph2.id_contractor" ."WHERE ph1.id_payment=ph2.id AND ph1.payment_type>100"; $sql ="UPDATE cms_host_payments_history SET id_contractor=0 WHERE id_payment=0 AND payment_type>100"; }}