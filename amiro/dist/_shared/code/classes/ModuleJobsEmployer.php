<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       33945 xkqwwnkrulqpsgsypqpxsqqkwyxpxkmzupkqwktlrxxgzwrztkninigrxykwymyrlkxmpnir
 */ ?><?php foreach(array(11310=>"PrHuG|HGQrZtMHnD",11311=>"nZIQ",11312=>"fMQJSD|nZIQ",11313=>"rQGJB",11314=>'SZtQfrHI',11315=>"rQGJMQS",11316=>"ZJJ",11317=>"",11318=>"fJt|LHYDnZIQ",11319=>":'?",11320=>"?jmkq?",11321=>"fJt|fJnZIQ",11322=>"QIG`nZIQ",11323=>'',11324=>'WID|LHYD|rQDuIQ',11325=>"QIG_O",11326=>"DtZtuD",11327=>"ZWtMHn",11328=>"Hn",11329=>"vZJuQ",11330=>"ZWtMHn|rQGJB",11331=>"Hff",11332=>'IQtOHS',11333=>"SQJ|MS",11334=>"QIG`MS",11335=>"JQP|QSMt",11336=>"ZGGJB",11337=>"YHSB|fHrI",11338=>"YHSB|rQDuJt",11339=>"JMDt|SZtZ",11340=>"MS",11341=>"WHIGZnB",11342=>"GOHnQ",11343=>"WHIGQtMtHr",11344=>"LHY|WHIGQtMtHr",11345=>"|JMDt%DQx",11346=>"DZJZrB",11347=>"|JMDt%DWOQSuJQ",11348=>'nQC|rQEuQDt',11349=>"fHrI|fMQJSD",11350=>"funW|PuM`GOG",11351=>"MS|rQDuIQ",11352=>"fnZIQ",11353=>"CQYDMtQ",11354=>"uDQrnZIQ",11355=>"DtZtuD|ZSS",11356=>"'",11357=>"SQGZrtIQnt",11358=>"QIZMJ",11359=>"DtZtuDQD|OMDtHrB",11360=>"LHYD",11361=>"ZnDCQr",11362=>"WHIIQntD",11363=>"'!?",11364=>"iZMJQr`GOG",11365=>"DtZtuD|DQnt",11366=>"IQDDZPQ|tHGMW",11367=>"?coqRq?QIG`MS?=?'",11368=>"DQx",11369=>"DWOQSuJQ|",11370=>'~;OttG%\~\~~M',11371=>"uDQr",11372=>"WuDtHI|fMQJS|nZIQ") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleJobsEmployer extends CMS_ActModule {public $appliedId; public $IlIllI1; public $lI1L1Il; public $lIl1ILI; public $lIl1ILl; public $aRequiredFields; public $aCustomFields; public $lI1L1IL; function ModuleJobsEmployer(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms, $db, $cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()) {$this->lI1L1Il =false; $IIIIL11[I11310] =Array("del"); $IIIIL11["use_id_page"] =true; $IIIIL11["use_options_form"] =true; $IIIIL11["name_field_name"] =I11311; $IIIIL11["description_field_name"] ="department"; $IIIIL11["default_prefix"] ="emp"; $aOptions += $IIIIL11; $this->lIl1ILI =array_flip($this->module->TTlTTTI(I11312)); $this->lIl1ILl =array_flip($this->module->GetAOption("enabled_fields")); $this->aRequiredFields =array_flip($this->module->GetAOption("required_fields")); $this->aCustomFields =$this->module->GetOption("custom_fields"); $this->lI1L1IL =$this->module->GetProperty("custom_fields_prefix"); $this->cms->InitMessages($this->cms->Gui->ParseLangFile("templates/lang/_jobs_employer_msgs.lng")); parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); $this->words =array_merge($this->words, $this->cms->Gui->ParseLangFile($GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/lang/jobs_employer.lng")); }function _InitAdmin() {parent::_InitAdmin(); }function TTTlTI1() {parent::TTTlTI1(); }function TTTlITT($IIIL11l, $cId, $cModule ="") {switch($IIIL11l) {case "print": $this->TTll11I($cId); break; case I11313: $this->TIIl111($IIIL11l, $cId); $this->redirect =false; break; case "answer": $this->TIllIIT($IIIL11l, $cId); break; default: parent::TTTlITT($IIIL11l, $cId, $cModule); break; }}function GetHtml(&$aCustom) {return parent::GetHtml($aCustom); }function TTTlIT1(&$aCustom, $cType ="small", $IIlLI11 ="", $IIlLlII ="_small") {return parent::TTTlIT1($aCustom, $cType, $IIlLI11, $IIlLlII); }function TTlTll1() {parent::TTlTll1(); }function TTTlIII() {parent::TTTlIII(); $this->filter->UpdateFieldDBName(I11314, 'emp.date'); $this->filter->UpdateFieldDBName('dateto', 'emp.date'); foreach(array("request", I11315, "ignored", "marked", "not viewed", "all") as $status) {$aStatus =$this->filter->TITI1TT($aStatus, Array($this->words[$status] => ($status==I11316) ?"" :$status), 35, false); }$IIL1IIl =$this->cms->Vars["flt_status"]; $this->filter->AddField("flt_status", "select", $IIL1IIl, I11317, "=", "emp.status", $aStatus); $this->filter->MoveField("flt_status", _MOVE_START); if(empty($IIL1IIl)) {$this->filter->DisableFieldSQL("flt_status"); }$search =stripslashes(unhtmlentities($this->cms->Vars[I11318])); $this->filter->AddField(I11318, "text", $search, I11317, "=", "h.title"); $this->filter->TITI1II( I11318, " OR h.title LIKE '%".addslashes($search).I11319. " OR emp.job LIKE '%".addslashes($search).I11319); $this->filter->MoveField(I11318,_MOVE_START); $this->filter->AddField("flt_competitor", "text", stripslashes(unhtmlentities($this->cms->Vars["flt_competitor"])), I11317, I11320, "concat(h.fname, ' ' , h.lname)"); $this->filter->MoveField("flt_competitor",_MOVE_START); $this->filter->AddField("flt_flname", "text", stripslashes(unhtmlentities($this->cms->Vars[I11321])), I11317, I11320, "concat(emp.fname, ' ' , emp.lname)"); $this->filter->MoveField(I11321,_MOVE_START); $this->filter->AddField("flt_company", "text", stripslashes(unhtmlentities($this->cms->Vars["flt_company"])), I11317, I11320, I11322); $this->filter->MoveField("flt_company", _MOVE_START); }function _ApplyCatFilters($prefix ='', $bodyType ='', $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); return $res; }function _ApplyFilters($prefix ='', $bodyType =I11323, $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); return $res; }function &TTTlI1T(&$aCustom) {return parent::TTTlI1T($aCustom); }function TTTlI1I(&$vData) {parent::TTTlI1I($vData); if ($this->action == I11313) {$vData["action"] ="answer"; }}function TTTlI11(&$vData, &$aCustom) {$this->browser->InitSQL("emp.id, emp.id_resume, emp.status, emp.statuses_history, emp.name, emp.department, CONCAT(emp.fname, ' ', emp.lname) AS jobname, emp.user_id, emp.username, emp.addon, emp.phone, emp.email, emp.date, date_format(emp.date,'".$this->cms->DFMT["db"]."') as fdate, CONCAT(h.fname, ' ', h.lname) AS competitor, IF(LENGTH(h.title)>0, h.title, emp.job) AS position, h.website AS competitor_website ", array( 'tables' => Array('emp'=>'cms_jobs_employer', 'h'=>I11324), 'joins' => Array("emp|h"=>"emp.id_resume=h.id"), "joins_types" => Array(I11325=>"LEFT") ),"WHERE 1 ".$this->_ApplyFilters().$this->TTTlIl1(), I11317, I11317, "emp.date desc", Array("jobname"=>"CONCAT(emp.fname, ' ', emp.lname)")); $this->browser->AddSQLJoinedTables($this->cms->Core, 'emp', Array("cms_jobs_resume" => "h")); $aCustom["fields"] += Array( I11326=>Array("action"=>"get_word", "words"=>&$this->words), "action_print"=>Array(I11327=>"flagicon", "value"=>I11317, "id"=>"print_id", I11328=>$this->moduleName."_list:print","off"=>I11317), "action_edit"=>Array(I11327=>"flagicon", I11329=>I11317, "id"=>"edit_id", I11328=>$this->moduleName."_list:edit","off"=>I11317), I11330=>Array(I11327=>"flagicon", I11329=>I11317, "id"=>"reply_id", I11328=>$this->moduleName."_list:icon_reply",I11331=>I11317), "user_id"=>Array('action'=>'callback', 'object'=>&$this, I11332=>'_actionsUser'), "action_del"=>Array(I11327=>"flagicon", I11329=>I11317, "id"=>I11333, I11328=>"jobs_employer_list:del",I11331=>I11317), "id"=>Array("edit_id", I11333), );$aCustom["applied_id"] =I11334; $aCustom["legend"] =Array("leg_red", "leg_yellow", "leg_blue", I11335, "leg_print", "leg_del"); $aCustom["form_data"]["buttons"] =Array(I11336, "cancel"); parent::TTTlI11($vData, $aCustom); }function _actionsUser(&$aItem, &$aData) {if (!empty($aItem["username"])) {$aItem["user_id"] =$aItem["username"]; }}function &TTTllTl(&$aCustom) {return parent::TTTllTl($aCustom); }function TTTllTI(&$aCustom) {if (!$this->lI1L1Il) {$this->SetBodyType(I11337); }else {$this->SetBodyType("body_result"); }parent::TTTllTI($aCustom); }function TTTlllT(&$vData) {parent::TTTlllT($vData); }function TTTll1T(&$vData, &$aCustom) {$aDefault =Array(); foreach($this->IIllIL1 as $IIlL1L1 => $tmp) {$IIlL1Ll =$this->TTITTT1($aCustom, $IIlL1L1); switch($IIlL1L1) {case "body_result": $vData["id"] =$this->id; $IIlL1Ll["active_item_type"] =I11338; $IIlL1Ll["page_item_type"] ="body_empty"; break; case I11337: $lI1L1I1 =$this->cms->Vars['id']; $lI1L1lI =I11317; $lIl1I1l =I11317; $required =$this->cms->Gui->getAbs($this->moduleName."_list:required_mark", I11317); $aCustom[I11339]["jobs_link"] =$vData["jobs_link"] =$this->cms->Core->GetModFrontLink("jobs_resume"); if (is_object($this->cms->Member) && $this->cms->Member->isLoggedIn()) {$vData["user_id"] =$this->cms->Member->getUserInfo(I11340); $vData["id_user"] =$this->cms->Gui->get($this->moduleName."_list:id_user", $vData); $vData["email"] =$this->cms->Member->getUserInfo("email"); $vData[I11311] =$this->cms->Member->getUserInfo(I11341); $vData["fname"] =$this->cms->Member->getUserInfo("firstname"); $vData["lname"] =$this->cms->Member->getUserInfo("lastname"); $vData[I11342] =$this->cms->Member->getUserInfo("phone_work"); }if ($lI1L1I1) {$lI1L1ll =$this->module->GetOption("def_request_text"); $vData["addon"] =$lI1L1ll[$this->langData]; }foreach ($this->lIl1ILl as $fieldName => $value) {if (isset($this->lIl1ILI[$fieldName])) {if (isset($this->aRequiredFields[$fieldName])) {$vData["required"] =$required; $lIl1I1l .= $this->cms->Gui->getAbs($this->moduleName."_list:required_script_".$fieldName, I11317); }else {$vData["required"] =I11317; }$vData[$fieldName] =$this->cms->Gui->getAbs($this->moduleName."_list:".$fieldName, $vData); $formHtml .= $vData[$fieldName]; }else {if(strstr($fieldName, $this->lI1L1IL)) {$lIl1ILL =intval(mb_substr($fieldName, mb_strlen($this->lI1L1IL))); if ($lIl1ILL >0) {$lIl1I1L =$this->aCustomFields[$fieldName]; $lIl1I1L[I11311] =$this->lI1L1IL.$lIl1ILL; $lIl1I1L["title"] =$this->words[$this->lI1L1IL.$lIl1ILL]; if (isset($this->aRequiredFields[$fieldName])) {$lIl1I1L["required"] =$required; $lIl1I1l .= $this->cms->Gui->get($this->moduleName."_list:required_custom", $lIl1I1L); }$vData[$fieldName] =$this->cms->Gui->getAbs($this->moduleName."_list:field_custom_".$lIl1I1L["type"], $lIl1I1L); $formHtml .= $vData[$fieldName]; $lI1L1lI .= $vData[$fieldName]; }}}}$vData["required_script"] =$lIl1I1l; $vData["custom_fields"] =$lI1L1lI; $sql ="SELECT j.id, j.title, CONCAT(j.fname, ' ', j.lname) AS competitor FROM cms_jobs_resume j ". " WHERE (j.public = 1) AND j.id = '$lI1L1I1'"; $tmpItem =$this->db->getRecord($sql); $tmpItem["id_resume"] =$tmpItem[I11340]; $tmpItem["resume_department"] =$this->cms->htmlchars($tmpItem["title"]); $tmpItem["resume_name"] =$this->cms->htmlchars($tmpItem[I11343]); $vData["employer_competitor"] .= $this->cms->Gui->get($this->moduleName."_list:item_select", $tmpItem); if (is_object($this->ext['ext_twist_prevention'])) {$this->ext['ext_twist_prevention']->_GetFrontFormCB($vData, $vData); }if ($lI1L1I1) {$vData[I11344] =$this->cms->Gui->getAbs($this->moduleName."_list:job_competitor", $vData); }else {$vData["position"] =$this->cms->Gui->getAbs($this->moduleName."_list:position", $vData); $vData["sex"] =$this->cms->Gui->getAbs($this->moduleName.I11345, $vData); $vData["age_from"] =$this->cms->Gui->getAbs($this->moduleName."_list:age_from", $vData); $vData["age_till"] =$this->cms->Gui->getAbs($this->moduleName."_list:age_till", $vData); $vData[I11346] =$this->cms->Gui->getAbs($this->moduleName."_list:salary", $vData); $vData["experience"] =$this->cms->Gui->getAbs($this->moduleName."_list:experience", $vData); $vData["schedule"] =$this->cms->Gui->getAbs($this->moduleName.I11347, $vData); $vData["jobduty"] =$this->cms->Gui->getAbs($this->moduleName."_list:jobduty", $vData); $vData["requirements"] =$this->cms->Gui->getAbs($this->moduleName."_list:requirements", $vData); $sql ="SELECT j.id, j.name FROM cms_jobs_cat j WHERE (j.public = 1 AND (j.urgent = 1 OR j.public_direct_link = 0)) AND lang = '".$this->langData."' ORDER BY j.name ASC"; $this->db->query($sql); $vData["department"] =I11317; while($this->db->next_record()) {$IlILLII =$this->db->Record; $IlILLII["dep_value"] =$IlILLII[I11340]; $IlILLII["dep_name"] =$IlILLII[I11311]; if ($this->cms->VarsGet[I11327] == I11348 || !intval($this->cms->VarsGet[I11340])) {$vData["department"] .= $this->cms->Gui->get($this->moduleName."_list:item_select", $IlILLII); }}$vData["department"] =$this->cms->Gui->getAbs($this->moduleName."_list:department", $vData); }$vData[I11349] =$this->cms->Gui->get($this->moduleName."_list:form_fields", $vData); $vData["form"] =$this->cms->Gui->get($this->moduleName."_list:form", $vData); break; }parent::TTTll1T($vData, $IIlL1Ll); }}function TTT1ITI($cId, $cModule){ require_once($GLOBALS["FUNC_INCLUDES_PATH"].I11350); $this->lI1L1Il =true; $aCustomData =Array(); foreach ($this->lIl1ILl as $fieldName => $value) {if(strstr($fieldName, $this->lI1L1IL)) {$lIl1ILL =intval(mb_substr($fieldName, mb_strlen($this->lI1L1IL))); if ($lIl1ILL >0) {$customData[$fieldName] =removeSpecial($this->cms->VarsPost[$fieldName], "slashes"); }}}$I1LI1I1 =false; foreach ($this->aRequiredFields as $fieldName => $value) {if ($this->cms->VarsPost[$fieldName] == I11317) {$I1LI1I1 =true; break; }}$lI1L1I1 =intval($this->cms->VarsPost["id_resume"]); if ($lI1L1I1) {$this->db->query("SELECT j.id, j.id_cat FROM cms_jobs_resume j WHERE j.id = '$lI1L1I1'"); if ($this->db->next_record()) {$lI1L1lL =$this->db->Record; $id_user =intval($this->cms->VarsPost["id_user"]); if (empty($id_user)) {$id_user =0; }$lIlIILI[time()] =Array(I11326=>"not viewed"); if (!$I1LI1I1) {$asql =Array( I11351=> $lI1L1lL[I11340], "date"=> "=|now()", I11311=> $this->cms->VarsPost[I11311], "department"=> $this->cms->VarsPost["department"], I11352=> $this->cms->VarsPost[I11352], "lname"=> $this->cms->VarsPost["lname"], "email"=> $this->cms->VarsPost["email"], I11353=> $this->cms->VarsPost[I11353], I11342=> $this->cms->VarsPost[I11342], "addon"=> $this->cms->VarsPost["addon"], "user_id"=> $this->cms->Member->getUserInfo(I11340), "username"=> $this->cms->Member->getUserInfo(I11354), "statuses_history"=>serialize($lIlIILI), "lang"=> $this->langData, "custom_data"=>addslashes(serialize($customData)) );$sql =$this->db->GenInsertSQL("cms_jobs_employer", $asql); $this->db->query($sql); $this->appliedId =$this->db->lastInsertId(); $this->cms->AddStatusMsg(I11355); }}else {$this->cms->AddStatusMsg("status_error", "red"); }}else {$department =I11317; $sql ="SELECT cms_jobs_cat.name FROM cms_jobs_cat WHERE cms_jobs_cat.id = '".intval($this->cms->VarsPost["catid"]).I11356; $this->db->query($sql); if ($this->db->next_record()) {$department =$this->db->Record[I11311]; }$lIlIILI[time()] =Array(I11326=>"request"); $asql =Array( I11351 => '0', "date" => "=|now()", I11311 => $this->cms->VarsPost[I11311], I11357 => $department, "job" => $this->cms->VarsPost["position"], I11352 => $this->cms->VarsPost[I11352], "lname" => $this->cms->VarsPost["lname"], I11358 => $this->cms->VarsPost[I11358], I11353 => $this->cms->VarsPost[I11353], I11342 => $this->cms->VarsPost[I11342], "addon" => $this->cms->VarsPost["addon"], "user_id" => $this->cms->Member->getUserInfo(I11340), I11354 => $this->cms->Member->getUserInfo(I11354), I11326 => "request", I11359 => serialize($lIlIILI), "lang" => $this->langData, "custom_data" => addslashes(serialize($customData)) );$sql =$this->db->GenInsertSQL("cms_jobs_employer", $asql); $this->db->query($sql); $this->appliedId =$this->db->lastInsertId(); if ($this->cms->Core->IsInstalled("jobs")) {$tmpMod =&$this->cms->Core->GetModule(I11360); if ($tmpMod->IsPresentInPMandPublic()) {$db =new DB_si; $tmpMod->InitEngine($this->cms, $db); $tmpMod->Engine->Init(Array(), $this->options["jobs_msgs"]); $tmpMod->Engine->SetRedirect(false); $tmpMod->Engine->ProcessAction("add", 0); $lI1L1l1 =$tmpMod->Engine->appliedId; if ($this->appliedId && $lI1L1l1) {$sql ="UPDATE cms_jobs_employer SET id_jobs = '".$lI1L1l1."' WHERE id = '".$this->appliedId.I11356; $this->db->query($sql); }$this->forceRedirect =true; $this->cms->AddStatusMsg("status_add_after_moderation"); $this->cms->ActiveScript =$this->cms->Core->GetModFrontLink("jobs_resume"); }}}parent::TTT1ITI($cId, $cModule); }function TTTll1I(&$vRes, &$aCustom, $cType, $IIlLlII) {parent::TTTll1I($vRes, $aCustom, $cType, $IIlLlII); }function TTTll11($cId, $cModule) {parent::TTTll11($cId, $cModule); }function TIllIIT($IIIL11l, $cId) {$id =intval($this->cms->VarsPost[I11340]); $sql ="SELECT emp.id, emp.email, emp.statuses_history ". " FROM cms_jobs_employer emp WHERE emp.id='".$id.I11356; $this->db->query($sql); if ($this->db->next_record()) {$topic =$this->cms->VarsPost["topic"]; $answer =$this->cms->VarsPost[I11361]; $letters =unserialize($this->db->Record["letters"]); $letters[time()] =Array("topic"=>$topic, "letter"=>$answer); $oSess =admSession(); $aUserInfo =$oSess->getUserInfo(); $userName =$aUserInfo[I11354]; unset($oSess); $lIlIILI =unserialize($this->db->Record[I11359]); $lIlIILI[time()] =Array(I11326=>'replied', I11362=>I11323, "user"=>$userName); if (!empty($topic) && !empty($answer)) {$sql ="UPDATE cms_jobs_employer SET ". "status = 'replied', ". "letters = '".addslashes(serialize($letters)).I11363. "statuses_history='".addslashes(serialize($lIlIILI))."' ". "WHERE id='".$id.I11356; $this->db->query($sql); require_once($GLOBALS["CLASSES_PATH"].I11364); $oMail =new Mailer(); $oMail->RecipientAddress =$this->db->Record[I11358]; $oMail->SenderAddress =$this->cms->Core->GetOption("company_robot_email"); $oMail->SenderName =$this->cms->Core->GetOption("company_name"); $oMail->Subject =$topic; $oMail->Body =$answer; $oMail->BodyFormat ="plain"; $oMail->Prepare(); if (!$oMail->Send()) {trigger_error("Feedback: sending email failed...", E_USER_WARNING); }else {$this->cms->AddStatusMsg(I11365, "blue"); }}}$this->appliedId =0; }function TIIl111($IIIL11l, $cId) {$sql ="SELECT emp.*, DATE_FORMAT(emp.date,'".$this->cms->DFMT["db"]."') AS fdate, ". "UNIX_TIMESTAMP(emp.modified_date) AS ltime, CONCAT(h.fname, ' ', h.lname) AS competitor, h.title AS position,". "h.email AS competitor_email, h.website AS competitor_website, h.phone AS competitor_phone ". "FROM cms_jobs_employer emp LEFT JOIN cms_jobs_resume h ON emp.id_resume=h.id ". "WHERE emp.id='".$cId.I11356.$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()) {$this->itemData =$this->db->Record; }$lI1L1LI =$this->module->GetOption("message_topic"); $this->itemData[I11366] =$lI1L1LI[$this->langData]; $aSign =$this->module->GetOption("message_sign"); $this->itemData["message_sign"] =$aSign[$this->langData]; }function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); $sql ="SELECT emp.id, emp.id_resume, emp.id_jobs, emp.status, emp.statuses_history, emp.name, emp.department, CONCAT(emp.fname, ' ', emp.lname) AS jobname, emp.user_id, emp.username, emp.addon, emp.phone, emp.email, emp.website, emp.date, date_format(emp.date,'".$this->cms->DFMT["db"]."') as fdate, CONCAT(h.fname, ' ', h.lname) AS competitor, h.title AS position, h.email AS competitor_email, h.phone AS competitor_phone, h.resume AS competitor_resume, h.addon AS competitor_addon, h.website AS competitor_website,". " j.name AS vacancy, j.sex, j.age_from, j.age_till, j.experience, j.schedule, j.salary, j.duty, j.requirements1 ". " FROM cms_jobs_employer emp". " LEFT JOIN cms_jobs_resume h ON emp.id_resume = h.id". " LEFT JOIN cms_jobs j ON emp.id_jobs = j.id". I11367.$cId.I11356.$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()) {$this->itemData =$this->db->Record; $this->itemData["job_employer_form_".$this->db->Record[I11326]] ="selected"; $this->itemData[I11326] =$this->words[$this->db->Record[I11326]]; $this->itemData["sex"] =$this->words["sex_".$this->db->Record[I11368]]; $this->itemData["experience"] =$this->words["exp_".$this->db->Record["experience"]]; $this->itemData["schedule"] =$this->words[I11369.$this->db->Record["schedule"]]; if ($this->db->Record[I11353] && !preg_match('/^http:\/\//i', $this->db->Record[I11353])) {$this->itemData[I11353] ="http://".$this->db->Record[I11353]; }if ($this->db->Record["competitor_website"] && !preg_match(I11370, $this->db->Record["competitor_website"])) {$this->itemData["competitor_website"] ="http://".$this->db->Record["competitor_website"]; }$aStatusesHistory =unserialize($this->itemData[I11359]); $lIlIILI =I11317; if (!empty($aStatusesHistory)) {foreach ($aStatusesHistory as $date => $value) {$lI1L1Ll =array(); $lI1L1Ll["employer_modify_date"] =date($this->cms->DFMT["php_dtime"], $date); $lI1L1Ll["employer_status"] =$this->words[$value[I11326]]; $lI1L1Ll["employer_comments"] =stripslashes($value[I11362]); $lI1L1Ll["employer_user"] =$value[I11371]; $lIlIILI =$this->cms->Gui->get($this->moduleName."_subform:status_row", $lI1L1Ll) .$lIlIILI; }}$this->itemData["status_history_list"] =$lIlIILI; $this->itemData[I11359] =$this->cms->Gui->get($this->moduleName."_subform:statuses_history", $this->itemData); $aCustomData =unserialize($this->itemData["custom_data"]); $customData =I11317; if (!empty($aCustomData)) {foreach($aCustomData as $field => $value) {$lI1L1LL =array(); $lI1L1LL[I11372] =$this->words[$field]; $lI1L1LL["custom_field_data"] =$value; $customData .= $this->cms->Gui->getAbs($this->moduleName."_subform:custom_field", $lI1L1LL); }}$this->itemData["custom_fields"] =$customData; }}function TTTl1T1($cId, $cModule) {parent::TTTl1T1($cId, $cModule); }function _ActionDel($cId, $cModule) {parent::_ActionDel($cId, $cModule); }function TTTl1lI($cId, $cModule) {parent::TTTl1lI($cId, $cModule); }function TTll11I($cId) {$this->cms->Gui->addBlock($this->moduleName."_subform", $GLOBALS["LOCAL_FILES_REL_PATH"]."_admin/templates/jobs_employer_print_".$this->cms->lang.".tpl"); $this->TTTl1Tl($cId, $cModule); $html =$this->cms->Gui->get($this->moduleName."_subform", $this->itemData); echo $html; $GLOBALS["conn"]->Out(); die(); }function TTT1IlI($aSql =Array(), $cId =0) {$id =intval($this->cms->VarsPost[I11340]); $sql ="SELECT emp.id, emp.status, emp.statuses_history, emp.email ". " FROM cms_jobs_employer emp WHERE emp.id='".$id.I11356; $this->db->query($sql); $addon =Array(); if ($this->db->next_record()) {$status =$this->db->Record[I11326]; $comments =$this->cms->VarsPost[I11362]; if ($status != $this->cms->VarsPost[I11326]) {$status =$this->cms->VarsPost[I11326]; $oSess =admSession(); $aUserInfo =$oSess->getUserInfo(); $userName =$aUserInfo[I11354]; unset($oSess); $lIlIILI =unserialize($this->db->Record[I11359]); $lIlIILI[time()] =Array(I11326=>$status,I11362=>$comments,I11371=>$userName); $addon =array(I11326 => "$status", I11359 => addslashes(serialize($lIlIILI))); $sql ="UPDATE cms_jobs_employer SET status='$status', ". "statuses_history='".addslashes(serialize($lIlIILI))."' WHERE id='$id'"; }unset($this->cms->VarsPost[I11326]); unset($this->cms->Vars[I11326]); }$aSql += $addon; $aSql =parent::TTT1IlI($aSql, $cId); return $aSql; }function TTT1lTl($IILIIl1, &$IILIILI, &$vData, &$IILIILl) {parent::TTT1lTl($IILIIl1, $IILIILI, $vData, $IILIILl); }}?>