<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       31035 xkqwznktslnkrztnmyxyxnlnpgrnkmsywgpppnwttkymrkzxxqiyyuwrytwkzzkryzpnpnir
 */ ?><?php foreach(array(11825=>'ZJJHCQS|ZWtMHnD',11826=>'SQJ',11827=>'S',11828=>'fJt|IHSuJQ|nZIQ',11829=>'IHSuJQ|nZIQ',11830=>'|vZJMSZtQiHSuJQmnDtZJJZtMHn',11831=>'fJt|nZIQ',11832=>'S`nZIQ',11833=>"dqjqwT?.fMQJSD|DOZrQS.?FRhi?.WID|IHSuJQD|SZtZDQtD.?coqRq?JZnP?=?'",11834=>"MnMtMZJ|DOZrQS",11835=>'rQDtHrQS|IHSuJQ|nZIQ',11836=>'IHSuJQ|nZIQ|rQZSHnJB',11837=>'',11838=>'LD|IHSuJQ|uDZPQ|tBGQD',11839=>'IHSuJQ|nZIQ|JMDt',11840=>'DQJQWt|IHSuJQ',11841=>'vZJuQ',11842=>'IHSuJQ',11843=>'uDZPQ|tBGQ',11844=>'|DuYfHrI%LD|IHSuJQ|uDZPQ|tBGQ',11845=>'smdgjzb|ihsUjq|whj',11846=>'uDQS|',11847=>'MnMtFMJQSD',11848=>'fMQJSD|fMJtQr',11849=>'nZIQ',11850=>"dqjqwT?.MS.!?.nZIQ.!?.SQfZuJt|WZGtMHn.?FRhi?.WID|IHSuJQD|WuDtHI|fMQJSD.?coqRq?.IHSuJQ|nZIQ.?=?'",11851=>"\\",11852=>'WZGtMHn',11853=>'MS',11854=>'OZrSWHSQS|',11855=>'nQQS|WZGtMHn',11856=>'MnMt|fMQJSD',11857=>"!",11858=>"S`MS!?S`GHDtfMx!?S`IHSuJQ|nZIQ!?S`nZIQ!?S`fMQJSD|IZG!?S`MD|DBD",11859=>"FRhi?.WID|IHSuJQD|SZtZDQtD.?S",11860=>"coqRq?1?zNs?S`IHSuJQ|nZIQ?mN?}",11861=>'ZWtMHn',11862=>'DMAQ',11863=>'ZWtMHn|WHGB',11864=>'Hff',11865=>'|JMDt%QSMt',11866=>'JQP|BQJJHC',11867=>'fHrI|SZtZ',11868=>'DZvQ',11869=>'|JMDt%IHSuJQ|nZIQ|unKnHCn',11870=>'nuIfMQJSD',11871=>'MWHn|nHnQ',11872=>'^',11873=>'WZGtMHn|',11874=>'uDQS|DMIGJQ',11875=>'IHSuJQ|uDZPQ|DMIGJQ',11876=>'GZPQD',11877=>'fMQJSD|DOZrQS',11878=>"FRhi?WID|IHSuJQD|SZtZDQtD?S?",11879=>'?WOQWKQS?SMDZYJQS',11880=>'WID|IHSuJQD|SZtZDQtD',11881=>'uDQS|GZPQD',11882=>"dqjqwT?.fMQJSD|DOZrQS.!?.fMQJSD|IZG.!?.uDQS|DMIGJQ.?FRhi?.WID|IHSuJQD|SZtZDQtD.?coqRq?.MS.?=?",11883=>"coqRq?.IHSuJQ|nZIQ.?=?'",11884=>'GrQGZrQS|WZGtMHnD',11885=>"FRhi?.WID|IHSuJQD|SZtZDQtD.?",11886=>'fMQJSD|WZGtMHnD',11887=>"^:'?zNs?.IHSuJQ|nZIQ.?=?'",11888=>"'?zNs?.MS.?,=?",11889=>'fMQJSD|IZG',11890=>"zNs?.IHSuJQ|nZIQ.?=?'",11891=>"zNs?.MS.?,=?",11892=>'?%?',11893=>"'{",11894=>'DMIGJQ',11895=>"dqjqwT?.IHSuJQ|nZIQ.!?.fMQJSD|IZG.!?.fMQJSD|WZGtMHnD.!?.fMQJSD|DOZrQS.!?.fMQJSD|fMJtQr.!?.uDQS|DMIGJQ.",11896=>"coqRq?.MS.?=?") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleModulesDatasets extends CMS_ActModule{ protected $lI11LLL; protected $lI11LL1; protected $lI111LL; protected $lI111L1; protected $lI1111I; protected $lI1111l; function __construct(&$cms, &$db, &$cModule){ parent::CMS_ActModule($cms, $db, $cModule); }function _Init($IIll1l1 =array(), $IIll1LI ='', $IIll1Ll ='', $aOptions =array()){ $IIIIL11[I11825] =array('add', 'edit', 'apply', 'save', I11826, 'copy'); $IIIIL11['group_operations'] =array(I11826, 'copy'); $IIIIL11['default_prefix'] =I11827; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); $this->lI1111I =array(); foreach(array_keys($this->lI1111I) as $key){ if($this->lI1111I[$key] <100000){ $this->lI1111I[$key] =$this->lI1111I[$key] +100000; }}}function _InitAdmin(){ parent::_InitAdmin(); $this->lI11LLL =CMS_API_ModulesCustomFields::getInstance(); $this->lI11LLL->init($this->cms, $this->db); $this->lI11LLL->TTTlTTl(); }function &TTTlI1T(&$aCustom){ $this->lI11LL1 =array(); foreach(array(I11828) as $field){ $this->lI11LL1[$field] =isset($this->cms->Vars[$field]) ?$this->cms->Vars[$field] :null; }$this->lI11LLL->initModulesCaptions($this->words); return parent::TTTlI1T($aCustom); }function TTTlIII(){ parent::TTTlIII(); $this->filter->TITI1l1('datefrom'); $this->filter->TITI1l1('dateto'); $this->filter->IL11l1L =array('limit'); $aData =array(); foreach(array_keys($this->lI11LLL->getAllowedModules()) as $moduleName){ $aData[$moduleName] =$moduleName; }$this->TIII1lI(I11829, $aData, 50, '', I11830); $this->filter->TITIll1(I11828); $this->filter->AddField(I11831, 'text', isset($this->cms->Vars[I11831]) ?stripslashes(unhtmlentities($this->cms->Vars[I11831])) :'', '', ' LIKE ', I11832); }function TTTlI1I(&$vData){ parent::TTTlI1I($vData); if(isset($this->itemData['fields_map'])){ $vData['initial_shared'] =$this->itemData['fields_shared']; }else{ $sql =I11833.$this->langData."' LIMIT 1"; $shared =$this->db->getValue($sql); if($shared){ $vData[I11834] =$this->itemData["fields_map"] =$this->itemData["fields_shared"] =$shared; }}$editMode =isset($this->itemData[I11829]); $lI1111L =$editMode ?$this->itemData[I11829] :(isset($vData[I11835]) ?$vData[I11835] :''); $vData[I11836] =$editMode ?' disabled="true"' :I11837; $vData[I11838] =array(); if($editMode){ $vData[I11839] =I11837; }else{ $aRow =array( 'value' => I11837, 'selected' => I11837, 'caption' => $this->words[I11840], );$vData[I11839] =$this->cms->Gui->get($this->moduleName .'_subform:select_option', $aRow); }$lI111II =AmiExt_CustomFields_Service::getInstance()->getAllowedModules(); foreach($lI111II as $moduleName => $caption){ if(!in_array($moduleName, $this->lI11LLL->getInstalledModules()) && !$this->itemData){ continue; }$aRow =array( I11841 => $moduleName, 'selected' => $moduleName != $lI1111L ?I11837 :' selected', 'caption' => $caption );$vData[I11839] .= $this->cms->Gui->get($this->moduleName .'_subform:select_option', $aRow); $aRow =array( I11842 => $moduleName, I11843 => $this->lI11LLL->getModuleUsageMode($moduleName) );$vData[I11838][] =$this->cms->Gui->get($this->moduleName .I11844, $aRow); }$vData[I11838] =implode(', ', $vData[I11838]); $this->cms->Gui->addGlobalVars(array(I11845 => empty($this->cms->Vars[I11828]))); foreach(array('categories', 'pages') as $key){ $vData[$key .'_counter'] =0; if($editMode){ $list =trim($this->itemData[I11846 .$key], ';'); if($list){ $vData[$key .'_counter'] =sizeof(explode(';', $list)); }}}}function TTTlI11(&$vData, &$aCustom){ $aCustomFields =array(); $initFileds =array(); $sharedFileds =array(); $filterFileds =array(); $I11lI11 =array(); if(isset($this->itemData['fields_map'])){ foreach(array( I11847 => 'fields_map', 'sharedFileds' => 'fields_shared', 'filterFileds' => I11848 )as $var => $key){ $$var =array(); if(isset($this->itemData[$key])){ $$var =$this->itemData[$key]; $this->lI11LLL->string2Array($$var); }}$I11lI11 =isset($this->itemData['fields_captions']) ?unserialize($this->itemData["fields_captions"]) :array(); }if(!isset($vData["free_fields"])){ $vData["free_fields"] =I11837; }if(isset($this->itemData[I11829])){ $lI111IL =array(I11849, 'default_caption'); $sql =I11850 .$this->itemData[I11829] ."'"; $rs =$this->db->select($sql); while($aField =$rs->nextRecord()){ foreach($lI111IL as $fieldName){ $aField[$fieldName] =unserialize($aField[$fieldName]); $aField[$fieldName] =isset($aField[$fieldName][$this->langData]) ?$aField[$fieldName][$this->langData] :I11837; if(!mb_strlen($aField[$fieldName])){ $aField[$fieldName] ='unknown'; }}$aField[I11849] =addslashes(unhtmlentities($aField[I11849])); $aField['caption'] =str_replace(I11851, "\\\\", isset($I11lI11[$aField['id']]) ?$I11lI11[$aField['id']] :$aField['default_caption']); if(!mb_strlen($aField[I11852])){ $aField[I11852] ='unknown'; }$aField['is_shared'] =(int)in_array($aField['id'], $sharedFileds); $aField['is_filter'] =(int)in_array($aField[I11853], $filterFileds); $aField['is_unique'] =1; $aField['need_caption'] =1; $aField['is_used'] =0; $vData['free_fields'] .= $this->cms->Gui->get($this->moduleName .'_subform:free_field', $aField) .','; }$vData['free_fields'] =mb_substr($vData['free_fields'], 0, -1); }$vData['hc_fields'] =I11837; foreach($this->lI1111I as $postf => $IL1l1L1){ $fieldData =array( I11853 => $IL1l1L1, I11849 => $this->words[I11854 .$postf], I11852 => isset($I11lI11[$IL1l1L1]) ?$I11lI11[$IL1l1L1] :$this->words[I11854.$postf], 'is_shared' => 0, 'is_unique' => stristr($postf, 'splitter') === false && stristr($postf, 'block') === false ?1 :0, I11855 => stristr($postf, 'splitter') === false && stristr($postf, 'block') === false ?1 :0, 'is_used' => 0 );$vData['hc_fields'] .= $this->cms->Gui->get($this->moduleName .'_subform:free_field', $fieldData) .','; }$vData['hc_fields'] =mb_substr($vData['hc_fields'], 0, -1); if(!isset($vData["init_fields"])){ $vData[I11856] =I11837; }foreach(array_keys($initFileds) as $i){ $fieldId =$initFileds[$i]; if($fieldId >0){ if(($pos =mb_strpos($fieldId, '_')) !== false){ $fieldId =intval(mb_substr($fieldId, 0, $pos)); $initFileds[$i] =$fieldId; }$vData[I11856] .= $this->cms->Gui->getAbs($this->moduleName .'_subform:init_fields', array(I11853 => $fieldId)); }}$aAllowedModules =$this->lI11LLL->getAllowedModules(); $aAllowedModules =array_keys($aAllowedModules); foreach($aAllowedModules as $i => $modName){ $aAllowedModules[$i] ="'" .$modName ."'"; }$allowedModules =implode(I11857, $aAllowedModules); $this->browser->InitSQL( I11858, I11859, I11860 .$allowedModules .") ".$this->_ApplyFilters().$this->TTTlIl1(), "", "d.id" );$aCustom['fields'] =array( I11849 => array(I11861 => 'stripline', 'size' => 100), 'postfix' => array(I11861 => 'stripline', I11862 => 50), I11829 => array(I11861 => 'callback', 'object' => $this, 'method' => 'cbAdmListRow'), I11863 => array(I11861 => 'flagicon', I11841 => I11837, I11853 => 'copy_id', 'on' => $this->moduleName .'_list:copy', I11864 => I11837), 'action_edit' => array(I11861 => 'flagicon', I11841 => I11837, I11853 => 'edit_id', 'on' => $this->moduleName .I11865, I11864 => I11837) );$aCustom['applied_id'] ='d.id'; $aCustom['legend'] =array('leg_red', I11866, 'leg_blue', 'leg_edit', 'leg_del', 'leg_copy'); $aCustom[I11867]['buttons'] =array('add', 'apply', 'cancel', I11868); parent::TTTlI11($vData, $aCustom); }public function cbAdmListRow(&$aItem, &$aData){ $aAllowedModules =$this->lI11LLL->getAllowedModules(); $aItem[I11829] =isset($aAllowedModules[$aItem[I11829]]) ?$aAllowedModules[$aItem[I11829]] :$this->cms->Gui->get($this->moduleName .I11869, $aItem); $aItem['numfields'] =0; foreach(explode(';', trim($aItem['fields_map'], ';')) as $key => $val){ if($val >0){ $aItem[I11870]++; }}$links['del_id'] =$aItem[I11853]; $aItem['action_del'] =$this->cms->Gui->get($this->moduleName .'_list:' .($aItem['is_sys'] ?I11871 :I11826), $links); }function TTT1IlI($aSQL =array(), $cId =0){ $cId =(int)$cId; if(!$this->TIllI11($cId)){ return array(); }$aFields =$cId ?array(I11849, 'postfix') :array(I11829, I11849, 'postfix'); foreach($aFields as $key){ $aSQL[$key] =$this->cms->VarsPost[$key]; }$fieldsMap =I11837; $I11llII =I11837; $I11llIl =I11837; $I11lI11 =array(); $I11lllL =$this->cms->VarsPost['fields_map']; if($this->lI11LLL->string2Array($I11lllL)){ $this->lI11LLL->loadFieldsByIds($I11lllL); foreach($I11lllL as $field){ $lI11111 =explode('_', $field, 1); $lI11111 =(int)$lI11111[0]; if($lI11111 >= 100000){ if(in_array($lI11111, $this->lI1111I)){ $fieldsMap .= I11872 .$field; if(empty($this->cms->VarsPost['caption_' .$field])){ foreach($this->lI1111I as $postf => $IL1l1L1){ if($IL1l1L1 == $lI11111){ $I11lI11[$field] =$this->words[I11854 .$postf]; }}}else{ $I11lI11[$field] =$this->cms->VarsPost['caption_' .$field]; }}}else{ if(isset($this->lI11LLL->aCustomFields[$lI11111])){ $fieldsMap .= I11872 .$lI11111; if(!empty($this->cms->VarsPost['shared_' .$lI11111])){ $I11llII .= I11872 .$lI11111; }if(!empty($this->cms->VarsPost['filter_' .$lI11111])){ $I11llIl .= I11872 .$field; }$I11lI11[$lI11111] =$this->cms->VarsPost[I11873 .$lI11111]; if(empty($I11lI11[$lI11111])){ $I11lI11[$lI11111] =$this->lI11LLL->aCustomFields[$lI11111][I11852]; }}}}}$fieldsMap .= I11872; $I11llII .= I11872; $I11llIl .= I11872; foreach ($I11lI11 as $k => $v) {$I11lI11[$k] =stripslashes($v); }$aSQL += array( 'fields_map' => $fieldsMap, 'fields_shared' => $I11llII, I11848 => $I11llIl, 'fields_captions' => addslashes(serialize($I11lI11)), );$moduleName =$cId ?$this->lI111L1[I11829] :$aSQL[I11829]; switch($this->lI11LLL->getModuleUsageMode($moduleName)){ case 'simple': if($cId && $this->lI111L1[I11874]){ $llIIIII =1; }else{ $llIIIII =(int)!empty($this->cms->VarsPost[I11875]); }$aSQL += array( I11874 => $llIIIII, 'used_categories' => I11837, 'used_pages' => I11837 );break; case 'categories': $aSQL += array( I11874 => 0, 'used_pages' => I11837 );break; case I11876: $aSQL += array( I11874 => 0, 'used_categories' => I11837 );break; }if(!$cId){ $this->lI111L1[I11829] =$aSQL[I11829]; }$this->lI111L1['prepared_captions'] =$I11lI11; $aSQL =parent::TTT1IlI($aSQL, $cId); return $aSQL; }function TTTll11($cId, $cModule){ if($cId){ $this->TIlllIT($cId); }parent::TTTll11($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL->errno)){ $this->TIlllTl($this->appliedId, $this->cms->VarsPost['initial_shared']); }}function TTTl1lI($cId, $cModule){ $cId =(int)$cId; $this->TIlllIT($cId); parent::TTTl1lI($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL['errno'])){ $this->TIlllTl($cId, $this->lI111L1[I11877]); }}function TTTl1Tl($cId, $cModule){ parent::TTTl1Tl($cId, $cModule); $sql ="SELECT * ". I11878. "WHERE d.id='".$cId."'".$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()) {$this->itemData =$this->db->Record; $this->itemData['js_name'] =TlITI1l($this->itemData[I11849]); $this->itemData[I11874] =$this->itemData[I11874] ?I11879 :I11837; }}function _ActionDel($cId, $cModule){ $cId =(int)$cId; $this->TIlllIT($cId, ', `id`, `is_sys`'); if(empty($this->lI111L1['is_sys'])){ parent::_ActionDel($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL['errno']) && is_array($this->lI111L1)){ $this->TIlllT1(); }}else{ $this->SetLastError(3, 'Deleting failed'); $this->cms->AddStatusMsg('status_del_sys_fail', 'red'); }}function _ActionCopy($cId, $cModule){ parent::_ActionCopy($cId, $cModule); $II1LLLL =$this->GetLastError(); if(empty($II1LLLL['errno'])){ $sql =$this->db->genUpdateSQL(I11880, array( 'is_sys' => 0, I11874 => 0, 'used_categories' => I11837, I11881 => I11837 ),"WHERE `id` = " .(int)$this->appliedId); $this->db->execute($sql); }}function TIlllTl($cId, $I11llll){ $cId =(int)$cId; $shared =array(); $I11lllL =array(); $sql =I11882 .$cId; $record =$this->db->getRecord($sql); if($record){ $I11lllL =$record['fields_map']; $this->lI11LLL->string2Array($I11lllL); $shared =$record[I11877]; $this->lI11LLL->string2Array($shared); if($record[I11874]){ $sql =$this->db->genUpdateSQL( I11880, array(I11874 => 0), I11883 .$this->lI111L1[I11829] ."' AND `lang` = '" .$this->langData ."' AND `id` != " .$cId );$this->db->execute($sql); }}$this->lI11LLL->string2Array($I11llll); foreach($shared as $id){ if(empty($id) || $id <= 0){ continue; }$I1IIILl =isset($this->lI111L1[I11884][$id]) ?$this->lI111L1[I11884][$id] :(isset($this->lI11LLL->aCustomFields[$id]) ?$this->lI11LLL->aCustomFields[$id][I11852] :I11837); if(in_array($id, $I11llll)){ $sql ="SELECT `id`, `fields_captions` " .I11885 .I11883 .$this->lI111L1[I11829] ."' AND `lang` = '" .$this->langData ."' AND `id` != " .$cId; $rs =$this->db->select($sql); while($record =$rs->nextRecord()){ $aCaptions =unserialize($record['fields_captions']); if(is_array($aCaptions)){ $aCaptions[$id] =$I1IIILl; }else{ $aCaptions =array($id => $I1IIILl); }$sql =$this->db->GenUpdateSql(I11880, array( I11886 => addslashes(serialize($aCaptions)) ),"WHERE `id` = " .$record[I11853]); $this->db->execute($sql); }}else{ $sql ="SELECT * " .I11885 ."WHERE `fields_shared` NOT LIKE '%;" .$id .I11887 .$this->lI111L1[I11829] ."' AND `lang` = '" .$this->langData .I11888 .$cId; $rs =$this->db->select($sql); while($record =$rs->nextRecord()){ $aSQL =array(); if(mb_strpos($record['fields_map'], I11872 .$id .I11872) === false){ if(empty($aSQL['fields_map'])){ $aSQL['fields_map'] =I11837; }$aSQL['fields_map'] .= (empty($record[I11889]) ?I11872 :$record[I11889]) .$id .I11872; }$aCaptions =unserialize($record[I11886]); if(is_array($aCaptions)){ $aCaptions[$id] =$I1IIILl; }else{ $aCaptions =array($id => $I1IIILl); }$aSQL[I11886] =addslashes(serialize($aCaptions)); $aSQL[I11877] =(empty($record[I11877]) ?I11872 :$record[I11877]) .$id .I11872; $sql =$this->db->GenUpdateSql(I11880, $aSQL, "WHERE `id` = " .$record[I11853]); $this->db->execute($sql); }}}foreach($I11llll as $id){ if(empty($id) || $id <= 0){ continue; }if(!in_array($id, $shared)){ $sql =$this->db->GenUpdateSql( I11880, array(I11877 => "=|REPLACE(`fields_shared`, ';" .$id .";', ';')"), "WHERE " ."`fields_shared` LIKE '%;" .$id .";%' " .I11890 .$this->lI111L1[I11829] ."' " ."AND `lang` = '" .$this->langData ."' " .I11891 .$cId );$this->db->execute($sql); }}}protected function TIII1lI($fieldName, $aData, $lIIIIll, $default =null, $methodName =I11837){ $IILLLL1 ="flt_" .$fieldName; $aSelect =array(); if(!is_null($default)){ $aSelect =$this->filter->TITI1TT($aSelect, array($this->cms->Words["all"] => $default)); }foreach($aData as $word => $value){ $caption =$this->words[$word]; if ($methodName != I11837 && !$this->$methodName($caption, $value)) {continue; }$aSelect =$this->filter->TITI1TT( $aSelect, array ($caption => $value), $lIIIIll );}$this->filter->AddField( $IILLLL1, 'select', $this->lI11LL1[$IILLLL1], I11837, '=', $fieldName, $aSelect );$this->filter->MoveField($IILLLL1, _MOVE_PREV); if(!is_null($default) && $this->lI11LL1[$IILLLL1] == $default){ $this->filter->DisableFieldSQL($IILLLL1); }}protected function _validateModuleInstallation(&$caption, $value){ $res =in_array($value, $this->lI11LLL->getInstalledModules()); if($res){ $oModule =$this->cms->Core->GetModule($value); $IIlI11L =$oModule->GetParentName(); if($IIlI11L){ $caption =$this->words[$IIlI11L] .I11892 .$caption; }}return $res; }protected function TIlllT1(){ $moduleName =$this->lI111L1[I11829]; $IIlI111 =$this->lI11LLL->getModuleUsageMode($moduleName); $sysDatasetId =$this->lI11LLL->getSysDatasetId($moduleName); switch($IIlI111){ case 'categories': case I11876: $table =$IIlI111 == I11876 ?'cms_pages' :$this->cms->Core->GetModule($moduleName .'_cat')->GetTableName(); $ids =I11837; $sql ="SELECT `id` FROM " .$table ." WHERE `id_dataset` = " .$this->lI111L1[I11853]; $rs =$this->db->select($sql); while($record =$rs->nextRecord()){ $ids .= $record[I11853] .','; }if(mb_strlen($ids)){ $field =I11846 .$IIlI111 ;$sql =$this->db->genUpdateSQL(I11880, array( $field => "=|CONCAT(" .$field .", '" .str_replace(',', I11872, $ids) .I11893 ),"WHERE `id` = " .$sysDatasetId); $this->db->execute($sql); $sql =$this->db->genUpdateSQL($table, array('id_dataset' => $sysDatasetId), "WHERE `id` IN (" .mb_substr($ids, 0, -1) .")"); }else{ $sql =I11837; }break; case I11894: if($this->lI111L1[I11874]){ $sql =$this->db->genUpdateSQL( I11880, array(I11874 => 1), "WHERE `id` = " .$sysDatasetId );}break; }if(mb_strlen($sql)){ $this->db->execute($sql); }}protected function TIllI11($id){ $lI111ll =isset($this->cms->VarsPost[I11889]); if($lI111ll){ $aRequiredFields =$id ?array(I11849, 'postfix') :array(I11829, I11849, 'postfix'); foreach($aRequiredFields as $lI111lL){ if(!isset($this->cms->VarsPost[$lI111lL]) || !mb_strlen(trim($this->cms->VarsPost[$lI111lL]))){ $lI111ll =false; break; }$this->cms->VarsPost[$lI111lL] =trim($this->cms->VarsPost[$lI111lL]); }if(!$id){ $lI111ll =$lI111ll && in_array($this->cms->VarsPost[I11829], $this->lI11LLL->getInstalledModules()); }}return $lI111ll; }protected function TIlllIT($id, $select =I11837){ $sql =I11895 .$select ." " .I11885 .I11896 .$id; $this->lI111L1 =$this->db->getRecord($sql); }}