<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       19033 xkqwstgkgwqklykinkrtzmnnqqqqntqnixzszmlumiiustslxtuswiwllskwunmwliirpnir
 */ ?><?php foreach(array(11940=>"PrHuG|HGQrZtMHnD",11941=>'ZrWOMvQ|tBGQ',11942=>"SQJ",11943=>"IHvQ|GHDMtMHn",11944=>'~|ZrWOMvQ$~',11945=>"uDQ|GHDMtMHnD",11946=>'GuYJMW|SMrQWt|JMnK',11947=>'fJt|ZrWOMvQ',11948=>'ZrWOMvQ',11949=>"fJt|OQZSQr",11950=>"OQZSQr",11951=>"@=",11952=>"",11953=>"ZrWOMvQ|GQrMHS",11954=>"IZnuZJ",11955=>'QSMt',11956=>'ftMIQ',11957=>"SY",11958=>"nZIQ",11959=>"fJZPMWHn",11960=>"|JMDt%GuYJMW|Hn",11961=>"vZJuQ",11962=>"DtrMGJMnQ",11963=>"ZWtMHn|QSMt",11964=>"|JMDt%QSMt",11965=>"SQJ|MS",11966=>"MS",11967=>"nHtZrWOMvQ",11968=>"JQP|SQJ",11969=>"WZnWQJ",11970=>"YHSB|MtQIs",11971=>"JMDt|SZtZ",11972=>'%:D',11973=>"?",11974=>'YHSB|urPQnt|MtQID',11975=>"MtQI|",11976=>"ZnnHunWQ",11977=>"ZWtMHn",11978=>'',11979=>'Zt|DGQW|YJHWK',11980=>"coqRq?1?",11981=>"WZJJYZWK",11982=>"ZSv|WHuntQr|MS",11983=>"GuYJMW",11984=>"YHSB",11985=>"SZtQ",11986=>"ZnnHunWQ|IHSQ|fuJJ") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleNews extends CMS_ActModule {public $I1LIIlL; function ModuleNews(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms, $db, $cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()) {$IIIIL11[I11940] =Array("publish_on", "publish_off"); $this->I1LIIlL =$this->module->issetOption('archive_type') && 'manual' == $this->module->GetOption(I11941); if($this->I1LIIlL){ $this->cms->Gui->addGlobalVars(Array(mb_strtoupper($this->moduleName)."_MANUAL_ARCHIVE"=>"1")); $IIIIL11[I11940][] ="archive_on"; $IIIIL11[I11940][] ="archive_off"; }$IIIIL11[I11940][] =I11942; $IIIIL11[I11940][] ="gen_sublink"; $IIIIL11[I11940][] ="gen_keywords"; $IIIIL11[I11940][] ="index_details"; $IIIIL11[I11940][] ="no_index_details"; $IIIIL11[I11940][] =I11943; $IIIIL11["use_id_page"] =true; $IIIIL11["use_options_form"] =true; $IIIIL11["name_field_name"] ="header"; $IIIIL11["description_field_name"] ="body"; if($this->module->issetProperty('picture_cat')){ $IIIIL11['picture_cat'] =$this->module->GetProperty('picture_cat'); }else{ $modId =preg_replace(I11944, '', $this->moduleName); if($modId != $this->moduleName){ $IIIIL11['picture_cat'] =$this->cms->Core->GetModProperty($modId, 'picture_cat'); }}$IIIIL11["multi_sites"] =true; $IIIIL11[I11945] =true; if($this->side == 'admin'){ $IIIIL11['default_prefix'] ='i'; }$aOptions += $IIIIL11; $this->TTITTI1( AMI::getResourceModel($this->moduleName .'/table') ->hasField(I11946) );parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin() {parent::_InitAdmin(); }function TTTlTI1() {parent::TTTlTI1(); }function TTTlITT($IIIL11l, $cId, $cModule ="") {parent::TTTlITT($IIIL11l, $cId, $cModule); }function GetHtml(&$aCustom) {return parent::GetHtml($aCustom); }function TTTlIT1(&$aCustom, $cType ="small", $IIlLI11 ="", $IIlLlII ="_small") {return parent::TTTlIT1($aCustom, $cType, $IIlLI11, $IIlLlII); }function TTlTll1() {parent::TTlTll1(); }function TTTlIII() {parent::TTTlIII(); if(!isset($this->cms->Vars[I11947])){ $this->cms->Vars[I11947] ='1'; }$this->filter->AddField(I11947, 'checkbox', $this->cms->Vars[I11947], '0', '<=', I11948); $this->filter->MoveField(I11947, _MOVE_PREV); if ($this->module->GetOption("archive_type") != "manual") {$this->filter->TITI1II("flt_archive", (($this->cms->Vars["flt_archive"] == 0) ?" OR (archive<>1 AND date>='".DateTools::toMysqlDate(strtotime($this->module->GetOption("archive_period")))."') " :"") ,'force'); }$this->filter->AddField(I11949, "text", isset($this->cms->Vars[I11949]) ?stripslashes(unhtmlentities($this->cms->Vars[I11949])) :'', "", " like ", I11950); $this->filter->MoveField(I11949, _MOVE_PREV); }function TTTlIIl($IIlLlLI, $IIlLlLl, $defaultValue) {switch($IIlLlLI) {case "date_from": if($IIlLlLl != "") {$this->filter->AddField($IIlLlLI, "date", $IIlLlLl, "", I11951, "date"); }break; case "date_to": if($IIlLlLl != "") {$this->filter->AddField($IIlLlLI, "date", $IIlLlLl, I11952, "<=", "date"); }break; default: }}function _ApplyFilters($prefix ='', $bodyType ='', $IIlLLl1 =true) {$res =parent::_ApplyFilters($prefix, $bodyType, $IIlLLl1); $I1LII1l =DateTools::toMysqlDate(strtotime($this->module->GetOption(I11953))); if($this->side == "front") {switch($this->module->GetOption("show_type")) {case "active": $res .= ($this->module->GetOption("archive_type") == I11954) ?" AND archive<>1" :"AND (archive<>1 AND date>='$I1LII1l') "; break; case "archive": $res .= ($this->module->GetOption("archive_type") == I11954) ?" AND archive=1" :"AND (archive=1 OR date<'$I1LII1l') "; break; }}return $res; }function &TTTlI1T(&$aCustom) {return parent::TTTlI1T($aCustom); }function TTTlI1I(&$vData) {if ($this->action == I11955) {$udate =DateTools::getCorrectUDate($this->itemData['date'], $this->cms->DFMT['conf_dtime']); $vData['ftime'] =date($this->cms->DFMT['php_time'], $udate); }else {$vData[I11956] =date($this->cms->DFMT['php_time']); }parent::TTTlI1I($vData); $vData['form_width'] ='100%'; }function TTTlI11(&$vData, &$aCustom) {$this->browser->InitSQL("i.id, public, header, announce, date, date_format(date,'".$this->cms->DFMT[I11957]."') as fdate, date_format(date,'".$this->cms->DFMT["db_time"]."') as ftime,". (($this->I1LIIlL) ?"archive " :"(archive or (date < '".DateTools::toMysqlDate(strtotime($this->module->GetOption(I11953)))."'))as archive "), "FROM " .$this->module->GetTableName() ." i", "WHERE 1 ".$this->_ApplyFilters().$this->TTTlIl1(), I11952, I11958, "id desc" );$aCustom["fields"] += Array( "public"=>Array("action"=>I11959, "value"=>1, "id"=>"pub_id", "on"=>$this->moduleName.I11960,"off"=>$this->moduleName."_list:public_off"), "archive"=>Array("action"=>I11959, I11961=>1, "id"=>"arch_id", "on"=>($this->I1LIIlL) ?$this->moduleName."_list:archive_on": $this->moduleName."_list:icon_archive_on", "off"=>($this->I1LIIlL) ?$this->moduleName."_list:archive_off": $this->moduleName."_list:icon_archive_off", ),I11950=>Array("action"=>I11962, "size"=>25), "announce"=>Array("action"=>I11962, "size"=>250), I11963=>Array("action"=>I11959, I11961=>I11952, "id"=>"edit_id", "on"=>$this->moduleName.I11964,"off"=>I11952), "action_del"=>Array("action"=>I11959, I11961=>I11952, "id"=>I11965, "on"=>$this->moduleName."_list:del","off"=>I11952), );$aCustom["applied_id"] =I11966; $aCustom["legend"] =Array("published", "notpublished", "onarchive", I11967, "leg_red", "leg_yellow", "leg_blue", "leg_edit", I11968); $aCustom["form_data"]["buttons"] =Array("add", "apply", I11969, "save"); parent::TTTlI11($vData, $aCustom); }function &TTTllTl(&$aCustom) {return parent::TTTllTl($aCustom); }function TTTllTI(&$aCustom) {if($this->id >0) {$this->SetBodyType("body_itemD"); }elseif($this->id != -1) {$this->SetBodyType("body_items"); $this->SetBodyType('body_urgent_items'); }parent::TTTllTI($aCustom); }function TTTlllT(&$vData) {parent::TTTlllT($vData); }function TTTll1T(&$vData, &$aCustom) {$this->TTT11ll(); $aDefault =Array(); foreach($this->IIllIL1 as $IIlL1L1 => $tmp) {$IIlL1Ll =$this->TTITTT1($aCustom, $IIlL1L1); switch($IIlL1L1) {case I11970: $IIlL1Ll["simple_set_fields"] =Array("fdate", I11956, "announce", I11950, "body"); $IIlL1Ll[I11971]["simple_prefix"] ="itemD_"; $sql ="SELECT *, date_format(date,'".$this->cms->DFMT[I11957]."') as fdate, date_format(date,'".str_replace(I11972, '', $this->cms->DFMT["db_time"])."') as ftime ". "FROM " .$this->module->GetTableName() .I11973. "WHERE id='".$this->id."' ".$this->_ApplyFilters().$this->TTTlIl1()." LIMIT 1"; $this->db->query($sql); $vData[I11966] =$this->id; break; case "body_items": case I11974: case "body_browse": case "body_filtered": if ($IIlL1L1 == "body_items") {$IIlL1Ll[I11971]["simple_prefix"] =I11975; }else if ($IIlL1L1 == I11974) {$IIlL1Ll[I11971]["simple_prefix"] ="urgent_item_"; }$IIlL1Ll["simple_set_fields"] =Array("fdate", I11956, I11976, I11950, "managing_editor", "web_master"); $IIlL1Ll["fields"]["detials"] =Array(I11977=>"callback", "object"=>&$this, "method"=>"_GetDetailsLinkCB"); $this->TTTllll($vData, $IIlL1Ll); $this->browser->InitSQL("id, public, header, announce, body, sublink, modified_date, date, ". "date_format(date,'".$this->cms->DFMT[I11957]."') as fdate, date_format(date,'".str_replace(I11972, '', $this->cms->DFMT["db_time"])."') as ftime, adv_place, ". "modified_date as m_date, date as c_date, `disable_comments` ", "FROM " .$this->module->GetTableName() .I11973, "WHERE 1 ".$this->_ApplyFilters('', $IIlL1L1 == I11974 ?$IIlL1L1 :I11978).$this->TTTlIl1(), I11952, I11958 );if($IIlL1L1 == "body_filtered") {$this->browser->SetForceRules("ORDER BY date DESC"); }break; }parent::TTTll1T($vData, $IIlL1Ll); }}function TTTll1I(&$vRes, &$aCustom, $cType, $IIlLlII) {$aDefault =Array(); $aDefault["simple_set_fields"] =Array("fdate", I11956, I11976, I11950); $aCustom += $aDefault; $llIIILL =in_array(I11979, $this->module->GetAOption('show_urgent_elements')); $this->browser->InitSQL("id, public, header, announce, body, sublink, urgent" .$aCustom["sql_addon"]["select"] .", date_format(date,'".$this->cms->DFMT[I11957]."') as fdate, date_format(date,'".$this->cms->DFMT["db_time"]."') as ftime, id as adv_counter_id, `disable_comments` ", "FROM " .$this->module->GetTableName() .I11973, I11980.$this->_ApplyFilters(I11978, 'body_small', !$llIIILL), I11952, I11958 );if ($llIIILL) {$this->browser->TI1TII1(array ('urgent DESC')); }$aCustom["fields"]["detials"] =Array(I11977=>I11981, "object"=>&$this, "method"=>"_GetSmallDetailsCB"); if($this->TTT11ll()) $aCustom["fields"][I11982] =Array(I11977=>I11981, "object"=>&$this, "method"=>"_GetSmallAdvCounter"); parent::TTTll1I($vRes, $aCustom, $cType, $IIlLlII); }function TTTll11($cId, $cModule) {parent::TTTll11($cId, $cModule); }function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); $sql ="SELECT *, DATE_FORMAT(date,'".$this->cms->DFMT[I11957]."') AS fdate, UNIX_TIMESTAMP(modified_date) AS ltime ". "FROM " .$this->module->GetTableName() ." i ". "WHERE id='".$cId."'".$this->_ApplyFilters(); $this->db->query($sql); if($this->db->next_record()) {$this->itemData =$this->db->Record; $this->itemData[I11983] =($this->itemData[I11983] == 1) ?"checked": I11952; if($this->I1LIIlL) {$this->itemData["archive"] =($this->itemData["archive"] == 1) ?"checked" :I11952; }$this->itemData[I11976] =$this->cms->htmlchars($this->itemData[I11976]); $this->itemData[I11984] =$this->cms->htmlchars($this->itemData[I11984]); }}function TTTl1T1($cId, $cModule) {parent::TTTl1T1($cId, $cModule); }function _ActionDel($cId, $cModule) {parent::_ActionDel($cId, $cModule); }function TTTl1lI($cId, $cModule) {parent::TTTl1lI($cId, $cModule); }function _ActionPublish($cId, $cModule) {parent::_ActionPublish($cId, $cModule); }function _ActionArchive($cId, $cModule) {parent::_ActionArchive($cId, $cModule); }function TTT1IlI($aSql =Array(), $cId =0) {$announce =$this->cms->VarsPost[I11976]; $header =$this->cms->VarsPost[I11950]; if(($announce != I11952) && ($header != I11952)) {$udate =DateTools::getCorrectUDate($this->cms->VarsPost['date'] .' ' .$this->cms->VarsPost['time'], $this->cms->DFMT['conf_dtime']); $aSql =Array( I11985=>DateTools::toMysqlDate($udate), I11976=>$announce, I11984=>$this->cms->VarsPost[I11984], I11950=>$header, I11983=>intval($this->cms->VarsPost[I11983]), "archive"=>empty($this->cms->VarsPost[I11948]) ?0 :intval($this->cms->VarsPost[I11948]) );}$aSql =parent::TTT1IlI($aSql, $cId); return $aSql; }function _GetDetailsLinkCB(&$aItem, &$aData) {if(!empty($aItem[I11984])) {$aItem["details_link"] =1; }}function _GetSmallDetailsCB(&$aItem, &$aData) {$aItem["front_link"] =$aData["front_link"]; if($this->module->GetOption(I11986)) {$aItem[I11976] =$this->cms->Gui->MYnl2br($aItem[I11976]); }else {$aItem[I11976] =$this->cms->stripLine($aItem[I11976], $this->module->GetOption("announce_small_length")); }if(!$this->module->GetOption(I11986) || $this->module->GetOption(I11986) && !empty($aItem[I11984])){ $aItem["details_link"] =1; }$aItem[I11950] =$this->cms->stripLine($aItem[I11950], $this->module->GetOption("header_small_length")); }}