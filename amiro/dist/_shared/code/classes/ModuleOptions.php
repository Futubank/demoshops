<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    core 
 * @version    $Id$ 
 * @size       125382 xkqwslliutmlgntrtmpqqqitrqlntmwuxtqnsgktnwzswinuqzuwnslqgpwzszpgmqzwpnir
 */ ?><?php foreach(array(11987=>"PrHuG|HGQrZtMHnD",11988=>"fJt|MtQI|MS",11989=>"fJt|IHSuJQ|nZIQ",11990=>"hgTmhNd?ghgUg%?IHSuJQ?'",11991=>"'?nHt?MnDtZJJQS`",11992=>"fJt|WHntZMnQr|nZIQ",11993=>"?",11994=>"WID|GZPQD",11995=>"",11996=>"dqjqwT?",11997=>"|tBGQ",11998=>"?FRhi?WID|JZBHutD?",11999=>"JZB|f",12000=>"MnDtZJJQS",12001=>'DMnPJQiHSuJQ',12002=>"fJt|IHSuJQ",12003=>"LDHn",12004=>'DKMGhtOQriHSuJQD',12005=>"ruJQD|",12006=>'HwHrQRuJQD',12007=>'zim|zjjhc|jhwzj|ihsUjqd',12008=>'HzimwHrQRuJQD',12009=>'SZtQfrHI',12010=>'WHHKMQ|SZtZ',12011=>"PrG|ZGGJB",12012=>"SZtQfrHI",12013=>'?%?',12014=>"MS|IHSuJQ",12015=>"OMSSQn",12016=>"DQJQWtQS|IHSuJQ",12017=>"HCnQrD",12018=>'DBDtQI',12019=>'WHrQ|IHSuJQ',12020=>"WHrQ|IHSuJQ",12021=>"IHSuJQD|tIG",12022=>"IHSuJQD|tMtJQD|tIG",12023=>'IHSuJQD|tIG',12024=>'IHSuJQD|tMtJQD|tIG',12025=>"IsZtZ?=?nQC?zrrZB}",12026=>"LD",12027=>"LD|tMtJQD",12028=>"LD|HCnQrD",12029=>"IhCnQrDsZtZ*'",12030=>"fJt|HCnQr",12031=>"fJt|nH|fMJtQr",12032=>"Drv|HGtMHnD`GOG ZWtMHn=rDrtIQ]DHrt=nZIQ]DSMI=SQDW]HffDQt=0]JMIMt=10]fJt|IHSQ=DMIGJQ]fJt|IHSuJQ=",12033=>"IQtZD",12034=>"funW|ZrrZB`GOG",12035=>"DGQW|IHSuJQ|YHSB",12036=>"?coqRq?IHSuJQ|nZIQ?=?'",12037=>"'?zNs?DY|SZtZ?jmkq?':D%16%\"DGQW|IHSuJQ|YHSB\":'?hRsqR?yb?JZB|MS?zdw",12038=>'IHSuJQD|MtQID',12039=>"nZIQ",12040=>"IHSuJQD|MtQID",12041=>"Drv|HGtMHnD|JMDt%IHSuJQD|MtQI",12042=>"IHSuJQD|GZnQJ",12043=>"Drv|HGtMHnD|JMDt%IHSuJQD|GZnQJ",12044=>'',12045=>'DGQWYJHWKD|MtQID',12046=>"WZGtMHn",12047=>"YJHWK|nZIQ",12048=>"DGQWYJHWKD|GZnQJ",12049=>"PrHuGD",12050=>'MS',12051=>'vMQC|IHSQ',12052=>'SQDWrMGtMHn',12053=>'vMQC|IHSQ|MWHn',12054=>'SMDZYJQS',12055=>'DtBJQ|WJZDD',12056=>'vZJuQ',12057=>"DtrMGJMnQ",12058=>"vZJuQ",12059=>"Hff",12060=>"IQtOHS",12061=>"IHSuJQD",12062=>"JMDt|SZtZ",12063=>"WurrQnt|IHSuJQ",12064=>"hgTmhNd%?IHSuJQ?'",12065=>"SQDWrMGtMHn",12066=>"hgTmhNd%?ruJQD?fHr?IHSuJQ?'",12067=>"unKnHCn",12068=>'ruJQ',12069=>"fMQJSD",12070=>"fJZPMWHn",12071=>"HGtMHn|rHC",12072=>"ZWtMHn|SQfZuJt",12073=>"|JMDt%SQfZuJt",12074=>"MS!?IHSuJQ|nZIQ!?nZIQ!?vZJuQ?",12075=>"coqRq?1?",12076=>"JQP|BQJJHC",12077=>'HCnQr',12078=>"\n",12079=>'PrHuG',12080=>"tBGQ",12081=>"QIGtB|vZJuQ",12082=>'nZIQ',12083=>'WZGtMHn',12084=>"SQf|DQJQWtQS",12085=>"|PrHuG",12086=>"|",12087=>"DQJQWtQS",12088=>"YqnZYJQS",12089=>"ruJQ",12090=>"nHnQ",12091=>"QnuI|SZtZ",12092=>"1",12093=>'SQfZuJt|vZJuQ',12094=>"MtQID",12095=>"vZJuQ|QSMt",12096=>"SZtZ|vZJuQ",12097=>"WHntrHJ|JQnPtO",12098=>"MtQID|tBGQ",12099=>"WZGtMHn|vMQC",12100=>"ZJJHC|QIGtB",12101=>"MtQI",12102=>"SQfZuJt|vZJuQ",12103=>'DuY|QnuI|SZtZ',12104=>"QnuI|DtrMnP",12105=>"MnJMnQ",12106=>"%?",12107=>'MtQID|tBGQ',12108=>"vZJuQ|vMQC",12109=>"MD|DGJMttQr",12110=>'DQJQWtQS|IHSuJQ',12111=>'vZJuQ|QSMt',12112=>"FUNw|mNwjUsqd|gzTo",12113=>"DY|SZtZ",12114=>"IHSuJQ|HGtMHnD|SQJQtQS",12115=>"DGQW|nZIQ",12116=>"?dqT?DY|SZtZ='",12117=>"coqRq?MS='",12118=>"WHIIHn|IHSuJQ",12119=>"HGtMHnD|WJHnQS",12120=>'GZrQnt|IHSuJQ|nZIQ|',12121=>"HGtMHn|vZJuQ|",12122=>"nuI",12123=>'CZrnMnP',12124=>'rQZJ|vZJuQ',12125=>'ZJJHC|QIGtB',12126=>"ZGGJB",12127=>"MtQI|nZIQ",12128=>'mnOQrMtZnWQ%?',12129=>'?~?',12130=>"'?",12131=>"WHIGZnB|QIZMJ",12132=>"rQS",12133=>'uDQr',12134=>"+1{{{?",12135=>"MS",12136=>'~',12137=>'%',12138=>'~\D-~Du',12139=>'?',12140=>'!',12141=>"'!'",12142=>"'",12143=>'ZrrZB',12144=>'HGtMHnDgZrQntD',12145=>'MnOQrMtZYJQhGtMHnDgZrQntiHSuJQD',12146=>'MnOQrMtZYJQhGtMHnDgZrQntiHSuJQDwZGtMHnD',12147=>'DQJQWtQSgZrQntiHSuJQD',12148=>"&",12149=>'SQYuP|MG',12150=>'unKnHCn',12151=>'HnD|tHtZJ',12152=>'WM',12153=>'\'',12154=>"{{{") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleOptions extends CMS_ActModule {public $IILIlIL; public $I1llLL1 =array(); public $Illl1II; public $oCoreRules; public $II1lllI; public $IlLIIl1; public $IlLIIlL; public $llIIIL1; public $llIII1I; private $IIL11I1; private $llIII1l; function ModuleOptions(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms, $db, $cModule); $this->II1lllI =array(); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll ="", $aOptions =Array()) {$IIIIL11[I11987] =Array("apply"); $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function TIlllIl(&$llIII1L) {$aOwners =array_keys($llIII1L); foreach ($aOwners as $owner) {if (!$this->cms->Core->IsOwnerInstalled($owner)) {unset($llIII1L[$owner]); }}}function _InitAdmin() {parent::_InitAdmin(); $this->oCoreRules =new CMS_CoreRules($this->cms); $oCoreRules =&$this->oCoreRules; $this->GodMode =!empty($this->cms->Vars["flt_god_mode"]); $this->SimpleMode =isset($this->cms->VarsGet["flt_container_name"]); $this->llIII1I =''; if ($this->SimpleMode) {$this->ItemId =$this->cms->VarsGet[I11988]; $this->SpecBlock =$this->cms->VarsGet["flt_spec_block"]; $this->SpecBlockNum =$this->cms->VarsGet["flt_spec_num"]; $this->SpecBlockName =$this->SpecBlock .(($this->SpecBlockNum) ?"_" .$this->SpecBlockNum :""); $this->llIII1I =$this->cms->Vars[I11989]; if (!$this->cms->Core->IsInstalled($this->llIII1I)) {trigger_error(I11990 .$this->llIII1I .I11991, E_USER_ERROR); }$this->ContainerName =$this->cms->VarsGet[I11992]; $llIII11 =&$this->cms->Core->GetModule($this->ContainerName); if (!is_object($llIII11)) {trigger_error("OPTIONS POPUP: container '" .$this->ContainerName ."' doesn't exist.", E_USER_ERROR); }$this->ContainerTableName =$llIII11->GetTableName(); $this->ContainerOptions =array(); $sql ="SELECT sb_data " ."FROM " .$this->ContainerTableName .I11993 ."WHERE id='" .$this->ItemId ."'"; $this->db->query($sql); if ($this->db->next_record()) {$this->ContainerOptions =unserialize($this->db->Record["sb_data"]); if (isset($this->ContainerOptions[$this->SpecBlockName]) && is_array($this->ContainerOptions[$this->SpecBlockName])) {foreach ($this->ContainerOptions[$this->SpecBlockName] as $modName => $aModOptions) {if ($this->cms->Core->IsInstalled($modName)) {$this->cms->Core->TTlTlIl($modName, "multi_block_options"); $this->cms->I1IlII1[$modName] =1; $this->cms->Core->TTlIl11($modName, $aModOptions); }}}}if ($this->ContainerTableName == I11994) {$this->LayoutBlock =$this->cms->VarsGet["flt_layout_block"]; $this->LayoutBlockProtected =($this->cms->VarsGet["flt_layout_block_protected"] == "1") ?true :false; $this->LayoutBlockNum =intval(str_replace("lay_f", I11995, $this->LayoutBlock)); $sql ="SELECT lay_id FROM " .$this->ContainerTableName .I11993 ."WHERE id='" .$this->ItemId ."'"; $this->db->query($sql); $this->db->next_record(); $llIIlII =$this->db->Record["lay_id"]; $sql =I11996 .$this->LayoutBlock ."_type FROM cms_layouts " ."WHERE id='" .$llIIlII ."' AND lang='" .$this->langData ."'"; $this->db->query($sql); $this->db->next_record(); $this->LayoutBlockName =$this->db->Record[$this->LayoutBlock .I11997]; }}else {$this->ContainerTableName =I11994; }if ($this->ContainerTableName == I11994) {$llIIlIl =I11995; $template_blocks_number =$this->cms->PManager->GetProperty("template_blocks_number"); for ($i =1; $i <= $template_blocks_number; $i++) {if ($llIIlIl != I11995) $llIIlIl .=", "; $llIIlIl .= "lay_f" .$i .I11997; }$sql ="SELECT id, " .$llIIlIl .I11998 ."WHERE lang='" .$this->langData ."'"; $this->db->query($sql); $this->aBlocks =array(); while ($this->db->next_record()) {for ($i =1; $i <= $template_blocks_number; $i++) {$llIIlIL =$i; while (mb_strlen($llIIlIL) <3) {$llIIlIL ="0" .$llIIlIL; }$llIIlIL .= $this->db->Record["id"]; if (empty($this->aBlocks[$llIIlIL]) && !empty($this->db->Record[I11999 .$i .I11997])) {$this->aBlocks[$llIIlIL] =$this->db->Record[I11999 .$i .I11997]; }}}}$IIII1II =$this->cms->Core->GetOwnersList(); $this->TIlllIl($IIII1II); if (empty($this->cms->Vars["flt_owner"])) {$this->Illl1II =key($IIII1II); }else {$this->Illl1II =$this->cms->Vars["flt_owner"]; if ($this->Illl1II != "core") {if (!(array_key_exists($this->Illl1II, $IIII1II) && $IIII1II[$this->Illl1II][I12000])) {$this->Illl1II =key($IIII1II); }}}if (!empty($this->cms->VarsGet['json'])) {AMI_Registry::set('AMI/Core/skipRuleCallbacks', TRUE); }if (empty($this->cms->VarsGet["json"])) {$oCoreRules->IlllL1I =array( 'owner' => $this->Illl1II, I12001 => $this->llIII1I ?$this->llIII1I :(isset($this->cms->Vars[I12002]) ?$this->cms->Vars[I12002] :null) );}require $GLOBALS["CONST_PATH"] ."rules_common.php"; if (!$this->llIII1I && isset($this->cms->Vars[I12002]) && !isset($this->cms->Vars[I12003])) {$oCoreRules->IlllL1I[I12004] =1; }foreach ($IIII1II as $ownerName => $ownerData) {if (file_exists($GLOBALS["CONST_PATH"] ."rules_" .$ownerName .".php")) {require $GLOBALS["CONST_PATH"] .I12005 .$ownerName .".php"; }}$this->cms->Core->setupHyperMod( AMI_Registry::get('path/hyper_shared') .'declaration/', array_keys($IIII1II), 'rules', array(I12006 => &$oCoreRules) );$path =AMI_Registry::get('path/hyper_local') .'declaration/rules.php'; if( (empty($GLOBALS['sys']['disable_user_scripts']) || defined(I12007) )&& file_exists($path) ){AMI_Registry::setByRef(I12008, $oCoreRules); $oDeclarator =AMI_ModDeclarator::getInstance(); require $path; AMI_Registry::delete(I12008); $oCoreRules->setCurrentOwner(FALSE); unset($oDeclarator); }unset($path); $this->IIl1lLI =new DB_SI; $this->IlLIIl1 =$this->module->GetOption('allowed_inheritance'); $this->IlLIIlL =$this->module->GetOption('inheritance'); $inheritance =$this->IlLIIl1; foreach ($inheritance as $module => $data) {if ($this->cms->Core->IsInstalled($module)) {foreach ($data as $index => $rows) {foreach (array_keys($rows) as $llIIlI1) {if (!$this->cms->Core->IsInstalled($llIIlI1)) {unset($this->IlLIIl1[$llIIlI1], $this->IlLIIlL[$llIIlI1], $this->IlLIIl1[$module][$index][$llIIlI1]); }}}}else {unset($this->IlLIIl1[$module], $this->IlLIIlL[$module]); }}$inheritance =$this->IlLIIlL; foreach ($inheritance as $module => $data) {if ($this->cms->Core->IsInstalled($module)) {foreach ($data as $option => $parent) {list ($parent, )=explode(':', $parent); if (!$this->cms->Core->IsInstalled($parent)) {unset($this->IlLIIl1[$parent], $this->IlLIIlL[$parent], $this->IlLIIlL[$module][$index]); }}}else {unset($this->IlLIIl1[$module], $this->IlLIIlL[$module]); }}if ($this->filter->issetField('datefrom')) {$this->filter->TITI1l1(I12009); }if ($this->filter->issetField('dateto')) {$this->filter->TITI1l1('dateto'); }if ($this->GodMode) {$this->IIL11I1 =CMS_CoreRules::VIEW_MODE_ALL; }else {$this->IIL11I1 =CMS_CoreRules::VIEW_MODE_DEFAULT; if (isset($this->cms->VarsCookie['cookie_data'])) {$cookieData =explode(',', $this->cms->VarsCookie[I12010]); foreach ($cookieData as $cookie) {$cookie =explode(';', $cookie); if (isset($cookie[4]) && $cookie[1] == 'opt_view_mode' && $cookie[0] == $GLOBALS['ROOT_PATH_WWW']) {$this->IIL11I1 =(int) $cookie[4]; break; }}}}}function TTTlITT($IIIL11l, $cId, $cModule ='') {switch ($IIIL11l) {case I12011: $this->TIllll1($this->aGroupIds); break; default: parent::TTTlITT($IIIL11l, $cId, $cModule); break; }}function TTTlIII() {parent::TTTlIII(); $this->filter->AddField("flt_mode", "hidden", empty($this->cms->Vars["flt_mode"]) ?null :$this->cms->Vars["flt_mode"]); if ($this->filter->issetField(I12012)) $this->filter->TITI1l1(I12012); if ($this->filter->issetField("dateto")) $this->filter->TITI1l1("dateto"); require_once $GLOBALS['FUNC_INCLUDES_PATH'] .'func_array.php'; if ($this->SimpleMode) {$tmpMod =$this->cms->Core->GetModule($this->llIII1I); $llIIllI =$this->llIII1I; $llIIlll =$this->TIll1TT($this->cms->GetModHeader($tmpMod), $this->llIII1I); if ($tmpMod->HaveParent()) {while ($tmpMod->HaveParent()) {$tmpMod =$tmpMod->TTlIIIT(); }$llIIllI =$tmpMod->GetName(); $llIIlll =$this->TIll1TT($this->cms->GetModHeader($tmpMod), $llIIllI); }if ($tmpMod->IsInstalled()) {if ($tmpMod->TTlIIIl()) {$I1LIL1I =$tmpMod->GetSubModules(); $aMods =array(); $aMods =$this->filter->TITI1TT($aMods, Array($llIIlll => $llIIllI), 500); $llIIllL =array(); foreach ($I1LIL1I as $modName => $modData) {if ($this->oCoreRules->issetModule($modName) && $modData->IsInstalled()) {$llIIllL[] =array($modName, $llIIlll .I12013 .$this->TIll1TT($this->cms->GetModHeader($modData), $modName)); }}sortMultiArray($llIIllL, 1); foreach ($llIIllL as $row) {$aMods =$this->filter->TITI1TT($aMods, array($row[1] => $row[0]), 500); }$this->filter->AddField(I11989, "select", $this->llIII1I, I11995, "=", I12014, $aMods); $this->filter->MoveField(I11989, _MOVE_START); }else {if ($this->filter->issetField("submit")) {$this->filter->TITI1l1("submit"); }$this->filter->AddField(I11989, I12015, $this->llIII1I); }}$this->filter->AddField(I11988, I12015, $this->ItemId); $this->filter->AddField("flt_layout_block", I12015, $this->LayoutBlock); $this->filter->AddField("flt_layout_block_protected", I12015, $this->LayoutBlockProtected); $this->filter->AddField("flt_spec_block", I12015, $this->SpecBlock); $this->filter->AddField("flt_spec_num", I12015, $this->SpecBlockNum); $this->filter->AddField(I11992, I12015, $this->ContainerName); $this->II1lllI[I12016] =$this->llIII1I; }else {if ($this->GodMode) {$IIII1II =$this->cms->Core->GetOwnersList(); $this->TIlllIl($IIII1II); }else {$IIII1II =Array(); $llIIll1 =$this->oCoreRules->GetOwnersList(); foreach ($llIIll1 as $ownerName) {if ($this->cms->Core->IsOwnerInstalled($ownerName)) {$IIII1II[$ownerName] =$this->cms->Core->OwnerGetData($ownerName); }}}$llIIlLI =array(); $aMods =array(); $llIIlLl =array(); $this->II1lllI[I12017] =array(); $this->II1lllI["owners_tmp"] =array(); $i =0; foreach ($IIII1II as $ownerName => $ownerData) {$ownerData =$this->cms->Core->OwnerGetData($ownerName); $llIIlLI =$this->filter->TITI1TT($llIIlLI, Array($this->cms->GetModHeader($ownerData["admin_menu_caption"]) => $ownerName), 500); $this->II1lllI["options"][] =$ownerName; $this->II1lllI["owners_tmp"][$ownerName] =$i++; if ($this->GodMode) {$aModules =$ownerName != I12018 ?array() :array(I12019 => $this->cms->Core); foreach ($this->cms->Core->GetAllModules() as $llIIlLL) {if ($llIIlLL->GetOwnerName() == $ownerName) {$aModules[$llIIlLL->Name] =$llIIlLL; }}}else {$aModules =$this->oCoreRules->TTIIT1T($ownerName); }if ($this->Illl1II == $ownerName) {if (empty($this->cms->Vars[I12002])) {$selectedModule =key($aModules); }else {$selectedModule =$this->cms->Vars[I12002]; if (!in_array($selectedModule, array_keys($aModules))) {$selectedModule =key($aModules); }}$this->II1lllI[I12016] =$selectedModule; }foreach ($aModules as $modName => $oModule) {if ($modName != I11995) {if ($modName != I12020) {$IlLI11I =&$this->cms->Core->GetModule($modName); $llIIlL1 =$this->TIll1TT($this->cms->GetModHeader($IlLI11I), $modName); $parentName =$IlLI11I->GetParentName(); while (!empty($parentName)) {$IlLI11I =&$this->cms->Core->GetModule($parentName); $llIIlL1 =$this->TIll1TT($this->cms->GetModHeader($IlLI11I), $parentName) .I12013 .$llIIlL1; $parentName =$IlLI11I->GetParentName(); }}else {$llIIlL1 =$this->words[I12020]; }$this->llIIIL1[$modName] =$this->cms->GetModHeader($ownerData['admin_menu_caption']) .I12013 .$llIIlL1; if ($this->Illl1II == $ownerName) {$llIIlLl[$llIIlL1] =$modName; $aMods =$this->filter->TITI1TT($aMods, Array($llIIlL1 => $modName), 500); }}$this->II1lllI[I12021][$this->II1lllI["owners_tmp"][$ownerName]][] =$modName; $this->II1lllI[I12022][$this->II1lllI["owners_tmp"][$ownerName]][] =$llIIlL1; }}foreach ($this->II1lllI[I12023] as $index => $modules) {$llIIllL =array(); foreach ($modules as $llIIl1I => $module) {$llIIllL[] =array($module, $this->TIll1TT($this->II1lllI[I12024][$index][$llIIl1I], $module)); }sortMultiArray($llIIllL, 1); $this->II1lllI[I12023][$index] =$this->II1lllI[I12024][$index] =array(); foreach ($llIIllL as $row) {$this->II1lllI[I12023][$index][] =$row[0]; $this->II1lllI[I12024][$index][] =$row[1]; }}$this->II1lllI["js"] =I12025 .sizeof($this->II1lllI[I12021]) .");"; $this->II1lllI["js_titles"] ="mTitlesData = new Array(" .sizeof($this->II1lllI[I12021]) .");"; foreach ($this->II1lllI[I12021] as $index => $data) {$this->II1lllI[I12026] .= 'mData[' .$index .']=new Array("' .implode('","', $data) .'");'; $this->II1lllI[I12027] .= 'mTitlesData[' .$index .']=new Array("' .implode('","', $this->II1lllI[I12022][$index]) .'");'; }$this->II1lllI[I12028] ="mOwnersData = new Array(" .sizeof($this->II1lllI["owners_tmp"]) .");\n"; foreach ($this->II1lllI["owners_tmp"] as $owner => $value) {$this->II1lllI[I12028] .= I12029 .$owner ."']=" .$value .";\n"; }$this->filter->AddField(I12002, "select", $selectedModule, I11995, "=", I12014, $aMods); $this->filter->MoveField(I12002, _MOVE_START); $this->filter->AddField(I12030, "select", $this->Illl1II, I11995, "=", I12014, $llIIlLI); $this->filter->MoveField(I12030, _MOVE_START); }if ($this->GodMode) {$this->filter->AddField("flt_god_mode", I12015, 1); }else {if (AMI_Registry::get('ami/srv_options/no_filter', FALSE)) {$this->filter->AddField(I12031, I12015, 1); }}}function &TTTlI1T(&$aCustom) {$data =parent::TTTlI1T($aCustom); if ($this->SimpleMode) {global $conn; if ($this->SpecBlock) {$tmpMod =$this->cms->Core->GetModule($this->llIII1I); if ($tmpMod) {$IIIlIlL =$tmpMod->GetOwnerName(); }$data["common_settings_url"] =$GLOBALS["ADMIN_PATH_WWW"] .I12032 .$this->llIII1I ."&flt_owner=" .$IIIlIlL; }$data["scripts"] =$this->cms->Gui->getScripts(); $data[I12033] =$this->cms->Gui->getMetas(); $data["filter"] =$this->filter->getFilterHtml(true, true); $data["status"] =$this->cms->GetStatusMessages(); print $this->cms->Gui->get("srv_options_list:popup_html", $data); $conn->Out(); die; }else {return $data; }}function TTTlI11(&$vData, &$aCustom) {require_once($GLOBALS["FUNC_INCLUDES_PATH"] .I12034); $llIIl1l =array( RLT_BOOL, RLT_UINT, RLT_SINT, RLT_CHAR, RLT_FLOAT, RLT_TEXT, RLT_EMAIL, RLT_ENUM, RLT_ENUM_MULTI_STRING, RLT_ENUM_MULTI_ARRAY, RLT_SYS_DTIME, RLT_DTIME, RLT_DATE, RLT_TIME, RLT_DATE_PERIOD, RLT_DATE_PERIOD_POSITIVE, RLT_DATE_PERIOD_NEGATIVE, RLT_ENUM_WITH_UINT, RLT_ENUM_WITH_SINT, RLT_ENUM_WITH_FLOAT, RLT_ENUM_WITH_CHAR, RLT_ENUM_WITH_EMAIL, RLT_ENUM_WITH_DATE_PERIOD_POSITIVE, RLT_ENUM_WITH_DATE_PERIOD_NEGATIVE, RLT_LABEL, RLT_ITEM_WITH_ENUM, RLT_SYS_INSTALLED, RLT_ARRAY_OF, RLT_SPLITTER );if ($this->SimpleMode) {$specblock =$this->SpecBlock; $module =$this->llIII1I; }else {$llIIl1L =$this->II1lllI[I12016]; $module =$llIIl1L; $IlLI11I =&$this->cms->Core->getModule($llIIl1L); if (is_object($IlLI11I) && $llIIl1L != I12020 && $IlLI11I->IssetProperty("spec_blocks")) {$specblock =$IlLI11I->GetProperty("spec_blocks"); }else {$specblock =I11995; }}if ($specblock == I12035 || !$this->SimpleMode) {$sql ="SELECT id, name FROM " .$this->ContainerTableName .I12036 .$module .I12037; $this->IIl1lLI->query($sql); $aModule =array(I12038 => ''); while ($this->IIl1lLI->next_record()) {$llIIl11[I12039] =I12035; $llIIl11["page_name"] =$this->IIl1lLI->Record[I12039]; $llIIl11["id"] =$this->IIl1lLI->Record["id"]; $aModule[I12040] .= $this->cms->Gui->get(I12041, $llIIl11); }if (!empty($aModule[I12040])) {$aCustom["list_data"][I12042] =$this->cms->Gui->get(I12043, $aModule); }}if (($specblock != I12044) && ($specblock != I12035)) {$llIILII =$this->cms->Gui->ParseLangFile("templates/lang/ce_specblocks.lng"); $sql ="SELECT id, name, sb_data, lay_id, block_mask FROM " .$this->ContainerTableName ." WHERE sb_data like '%" .$specblock ."%' ORDER BY lay_id ASC"; $this->IIl1lLI->query($sql); $llIILIl =array(); $llIILIL[I12045] =I12044; while ($this->IIl1lLI->next_record()) {$IIIlLlL =unserialize($this->IIl1lLI->Record["sb_data"]); foreach ($IIIlLlL as $key => $value) {if (mb_substr($key, 0, mb_strlen($specblock)) == $specblock) {$sSpecNum =mb_substr($key, mb_strlen($specblock) +1, 3); $sBlockNum =mb_substr($key, mb_strlen($specblock) +4, 3); $iBlockNum =intval($sBlockNum); $bBlockProtected =($this->IIl1lLI->Record["block_mask"] &(1 << ($iBlockNum -1))); $llIIl11[I12039] =$key; $llIIl11["id"] =$this->IIl1lLI->Record["id"]; $llIIl11[I12046] =$llIILII[$specblock] .I11993 .mb_substr($key, mb_strlen($specblock) +1); $llIIl11["page_name"] =$this->IIl1lLI->Record[I12039]; if ($sBlockNum == "000") {$llIILIL["specblocks_items"] .= $this->cms->Gui->get("srv_options_list:specblocks_item", $llIIl11); }else {if (!in_array($sSpecNum .$sBlockNum .$bBlockProtected, $llIILIl)) {$llIILIl[] =$sSpecNum .$sBlockNum .$bBlockProtected; $llIIl11[I12047] =$this->aBlocks[$sBlockNum .$this->IIl1lLI->Record["lay_id"]]; if (!$bBlockProtected) {$llIILIL["specblocks_in_blocks_items"] .= $this->cms->Gui->get("srv_options_list:specblocks_in_blocks_item", $llIIl11); }else {$llIILIL["specblocks_in_protected_blocks_items"] .= $this->cms->Gui->get("srv_options_list:specblocks_in_protected_blocks_item", $llIIl11); }}}}}}if (!empty($llIILIL["specblocks_items"]) || !empty($llIILIL["specblocks_in_blocks_items"]) || !empty($llIILIL["specblocks_in_protected_blocks_items"])) {$aCustom["list_data"][I12048] =$this->cms->Gui->get("srv_options_list:specblocks_panel", $llIILIL); }}$aOptions =array(); $i =1; if ($this->SimpleMode) {$I1llLLL =&$this->oCoreRules->getModule($this->llIII1I); if (is_object($I1llLLL)) {$I1llLLL->TTlTTIT(); $this->I1llLL1 =$this->oCoreRules->TTIITl1($this->llIII1I); if (!is_array($this->I1llLL1)) {$this->I1llLL1 =array(); }}else {$this->I1llLL1 =array(); }foreach ($this->I1llLL1 as $vName => $aOption) {$llIILI1 =false; if (is_array($aOption["groups"]) && (in_array($this->SpecBlock, $aOption["groups"]) || (($this->SpecBlock != I12035) && in_array("spec_small", $aOption[I12049])))) {$llIILI1 =true; }if (in_array($aOption["type"], $llIIl1l) && ($llIILI1 || ($aOption["type"] == RLT_SPLITTER))) {$description =!($this->I1llLL1[$vName][I12046] == "unknown") ?$this->I1llLL1[$vName][I12046] :$vName; if ($aOption["type"] == RLT_SPLITTER) {$aTemp =array(); $aTemp[] =array( I12050 => $i +1, 'name' => $vName, 'description' => I12044, 'value' => I12044, 'stub' => 1, I12051 => $aOption[I12051], 'view_mode_style' => $aOption[I12051] >= $this->IIL11I1 ?I12044 :' style="display: none;"', 'view_mode_icon' => $this->TIll1Tl($aOption[I12051]) );$aTemp[] =array( I12050 => $i +2, 'name' => $vName, I12052 => $description, 'value' => $aOption['value'], I12051 => $aOption[I12051], 'view_mode_style' => $aOption[I12051] >= $this->IIL11I1 ?I12044 :'display: none;', I12053 => $this->TIll1Tl($aOption[I12051]) );}else {if (isset($aTemp) && is_array($aTemp)) {$aOptions[] =$aTemp[0]; $aOptions[] =$aTemp[1]; $i++; $i++; unset($aTemp); }$bEnabled =(isset($aOption['rule']['style_class']) && $aOption['rule']['style_class'] == I12054) ?0 :1; $aOptions[] =array( I12050 => $i++, 'name' => $vName, 'bEnabled' => $bEnabled, 'style_class' => $aOption['rule'][I12055], 'custom_style_class' => $aOption['rule']['custom_style_class'], I12052 => $description, 'value' => $aOption[I12056], I12051 => $aOption[I12051], 'view_mode_style' => $aOption[I12051] >= $this->IIL11I1 ?I12044 :'display: none;', I12053 => $this->TIll1Tl($aOption[I12051]) );}}}$aCustom["fields"] += Array( I12039 => Array("action" => I12057, "size" => 35), "action_edit" => Array("action" => "flagicon", I12058 => I11995, "id" => "edit_id", "on" => $this->moduleName ."_list:edit", I12059 => I11995), "option_row" => Array("action" => "callback", "object" => &$this, I12060 => "_OptionRowCB") );}else {$aCustom["list_data"][I12026] =$this->II1lllI[I12026]; $aCustom["list_data"][I12027] =$this->II1lllI[I12027]; $aCustom["list_data"][I12028] =$this->II1lllI[I12028]; $Owner =I12061; $aCustom[I12062][I12063] =$llIIl1L; if ($this->GodMode) {if ($llIIl1L == I12019) {$IlLI11I =&$this->cms->Core; }else {$IlLI11I =&$this->cms->Core->getModule($llIIl1L); }if (!is_object($IlLI11I)) {trigger_error(I12064 .$llIIl1L ."' doesn't exist.", E_USER_ERROR); die(); }$dump =$IlLI11I->Options->TTlTII1($IlLI11I->Name); if( AMI_ModDeclarator::getInstance()->isRegistered($IlLI11I->Name) && AMI_ModDeclarator::getInstance()->getAttr($IlLI11I->Name, 'has_options_lazy', FALSE) ){$IlLlILl =$IlLI11I->Options->TTlTI11($IlLI11I->Name); $dump += $IlLlILl; }foreach ($dump as $vName => $IILlLlL) {$description =$vName; $aOptions[] =Array("id" => $i++, I12039 => $vName, "description" => $description, I12058 => $IILlLlL); }sortMultiArray($aOptions, I12065); }else {if (!empty($this->cms->VarsGet['json'])) {$this->TIlllI1($llIIl1l); }$I1llLLL =&$this->oCoreRules->getModule($llIIl1L); if (!is_object($I1llLLL)) {trigger_error(I12064 .$llIIl1L ."' doesn't exist.", E_USER_ERROR); die(); }$I1llLLL->TTlTTIT(CMS_ModuleRules::PRESERVE_CAPTIONS); $this->I1llLL1 =$this->oCoreRules->TTIITl1($llIIl1L); if (!is_array($this->I1llLL1)) {trigger_error(I12066 .$llIIl1L ."' don't exist.", E_USER_ERROR); die(); }$this->TIllllT($llIIl1L, $llIIl1l); foreach ($this->I1llLL1 as $vName => $aOption) {if (in_array($aOption["type"], $llIIl1l)) {$description =!($this->I1llLL1[$vName][I12046] == I12067) ?$this->I1llLL1[$vName][I12046] :$vName; if ($this->I1llLL1[$vName]["type"] == RLT_SPLITTER) {$aOptions[] =array( I12050 => $i++, 'name' => $vName, I12052 => I12044, I12056 => I12044, 'stub' => 1, I12051 => $aOption[I12051], 'view_mode_style' => $aOption[I12051] >= $this->IIL11I1 ?I12044 :' style="display: none;"', I12053 => $this->TIll1Tl($aOption[I12051]) );}$bEnabled =(isset($aOption['rule'][I12055]) && $aOption['rule'][I12055] == I12054) ?0 :1; $aOptions[] =array( I12050 => $i++, 'name' => $vName, 'bEnabled' => $bEnabled, I12055 => $aOption[I12068][I12055], 'custom_style_class' => $aOption[I12068]['custom_style_class'], I12052 => $description, I12056 => $aOption[I12056], I12051 => $aOption[I12051], 'view_mode_style' => $aOption[I12051] >= $this->IIL11I1 ?I12044 :'display: none;', I12053 => $this->TIll1Tl($aOption[I12051]) );}}}$aCustom[I12069] += Array( I12039 => Array("action" => I12057, "size" => 50), "action_edit" => Array("action" => I12070, I12058 => I11995, "id" => "edit_id", "on" => $this->moduleName ."_list:edit", I12059 => I11995), I12071 => Array("action" => "callback", "object" => &$this, I12060 => "_OptionRowCB") );if (!$this->GodMode) {$aCustom[I12069] += Array( I12072 => Array("action" => I12070, I12058 => I11995, "id" => "edit_id", "on" => $this->moduleName .I12073, I12059 => I11995) );}}if (!$this->GodMode) {$this->llIII1l =array(); $this->cms->Gui->addGlobalVars(array( 'use_view_mode' => false, 'view_mode_' .$this->IIL11I1 => $this->cms->Gui->getAbs('srv_options_list:view_mode_style') ));}$db =clone($this->db); $this->db =new CMS_IteratorArray($this->module); $this->db->SetArray($aOptions); $this->browser->PageSize =$i; $this->browser->InitSQL(I12074 ."FROM cms_options ", I12075, I11995, I11995, "id desc" );$aCustom["applied_id"] ="id"; $aCustom["legend"] =Array(I12076, "leg_edit", "leg_default", "leg_undo"); $aCustom['list_data']['inheritance_scripts'] =$this->TIlll1I(); parent::TTTlI11($vData, $aCustom); $this->db =$db; }function TIlllI1($llIILlI) {global $oFileCache, $adm; ob_end_clean(); $aModules =array_keys($this->oCoreRules->getModulesList()); $aData =array(); $module =FALSE; if (!empty($this->cms->VarsGet["modId"]) && $this->cms->VarsGet["modId"]) {$module =$this->cms->VarsGet["modId"]; }foreach ($aModules as $modId) {if (($module !== FALSE) && ($module != $modId) && ($module != 'start')) {continue; }$I1llLLL =&$this->oCoreRules->getModule($modId); if (is_object($I1llLLL)) {$I1llLL1 =$this->oCoreRules->TTIITl1($modId); if (!is_array($I1llLL1) || !sizeof($I1llLL1)) {continue; }$llIILll =I12044; $llIILlL =I12044; $modCaption =$this->llIIIL1[$modId]; if ($modId == I12019) {$modCaption =$this->words[I12020]; }$owner =I12044; foreach ($this->cms->Core->IlLIIIL as $ownerId => $aModData) {$aModules =array_keys($aModData); if (in_array($modId, $aModules)) {$owner =$ownerId; break; }}if ($modId == I12019) {$owner =I12018; }$aData[$modId] =array( I12077 => $owner, 'caption' => $modCaption, 'items' => array() );foreach ($I1llLL1 as $vName => $aOption) {if (in_array($aOption["type"], $llIILlI)) {$description =!($I1llLL1[$vName][I12046] == I12067) ?$I1llLL1[$vName][I12046] :$vName; if ($I1llLL1[$vName]["type"] == RLT_SPLITTER) {$llIILll =$vName; $llIILlL =explode(I12078, strip_tags($description)); $llIILlL =AMI_Lib_String::jParse($llIILlL[0]); }else {$optionName =$modId .'|' .$llIILll .'|' .$vName; $description =str_replace("<br>", I12078, $description); $description =str_replace("<br />", I12078, $description); $description =preg_replace('/<script\b[^>]*>(.*?)<\/script>/is', I11995, $description); $llIILl1 =explode(I12078, strip_tags($description), 2); $description =(isset($llIILl1[1])) ?AMI_Lib_String::jParse($llIILl1[1]) :I12044; $description =str_replace("\\n", I11993, $description); $llIILl1 =AMI_Lib_String::jParse($llIILl1[0]); $llIILl1 =$llIILlL ?$llIILlL .': ' .$llIILl1 :$llIILl1; $aData[$modId]['items'][$optionName] =array( 'caption' => $llIILl1, I12079 => $llIILlL, I12052 => $description );}}}}}$data =json_encode($aData); $oFileCache->store($data, FALSE); header('Cache-Control: max-age=2592000'); echo $data; $GLOBALS['conn']->TTI111l(); die; }function TIllllT($modId, $llIILlI) {if (!count($this->I1llLL1)) {return; }$llIILll =I12044; $llIILlL =I12044; $this->cms->Gui->addHtmlScript('var aOptionsData = {};'); foreach ($this->I1llLL1 as $vName => $aOption) {if (in_array($aOption["type"], $llIILlI)) {$description =!($this->I1llLL1[$vName][I12046] == I12067) ?$this->I1llLL1[$vName][I12046] :$vName; if ($this->I1llLL1[$vName][I12080] == RLT_SPLITTER) {$llIILll =$vName; $llIILlL =explode(I12078, strip_tags($description)); $llIILlL =AMI_Lib_String::jParse($llIILlL[0]); }else {$optionName =$modId .'|' .$llIILll .'|' .$vName; $description =str_replace("<br>", I12078, $description); $description =str_replace("<br />", I12078, $description); $description =preg_replace('/<script\b[^>]*>(.*?)<\/script>/is', I11995, $description); $llIILl1 =explode(I12078, strip_tags($description), 2); $description =(isset($llIILl1[1])) ?AMI_Lib_String::jParse($llIILl1[1]) :I12044; $description =str_replace("\\n", I11993, $description); $llIILl1 =AMI_Lib_String::jParse($llIILl1[0]); $llIILl1 =$llIILlL ?$llIILlL .': ' .$llIILl1 :$llIILl1; $this->cms->Gui->addHtmlScript("aOptionsData['{$optionName}']={caption:'{$llIILl1}', group:'{$llIILlL}', description: '{$description}'};"); }}}}function TIllllI($llIILLI, $llIILLl, $llIILLL, $defaultValue, &$llIILL1, &$aItemData, $varName ="items") {$isSelected =null; $aItemData[$varName] =I12044; foreach ($llIILL1 as $vItem) {if (($llIILLL == "none") && (strcmp($llIILLL, $vItem[I12039]) == 0)) {$aItemData[I12081] =$llIILLL; $aItemData["allow_empty"] =1; continue; }$llIIL1I =false; if ($this->SimpleMode) {if (is_array($aItemData[I12058])) {if (in_array($vItem[I12039], $aItemData[I12058])) {$llIIL1I =true; }}else {if ($llIILLl == RLT_ENUM_MULTI_STRING) {$aTmp =explode("|", $aItemData[I12058]); $llIIL1I =in_array($vItem[I12039], $aTmp); }else {if ($vItem[I12039] == $aItemData[I12058]) {$llIIL1I =true; }}}}else {if (!empty($vItem['selected'])) {$llIIL1I =true; }}$vItem["parent_option_name"] =$aItemData[I12082]; if ($llIIL1I) {$vItem["selected"] ="selected"; if (!empty($aItemData[I12046])) {$aItemData[I12046] .= $this->cms->Gui->getAbs("srv_options_list:enum_value_view_splitter"); }$isSelected =true; if (!isset($vItem["group"])) {if (!isset($aItemData[I12083])) {$aItemData[I12083] =I12044; }$aItemData[I12046] .= $this->cms->Gui->getDefPostf("srv_options_list:enum_value_view_item", "_" .$llIILLl, $vItem); }}if (is_array($defaultValue)) {$vItem["def_selected"] =(in_array($vItem[I12039], $defaultValue)) ?"selected" :I11995; }else {$vItem[I12084] =($vItem[I12039] == $defaultValue) ?"selected" :I11995; }if (isset($vItem["group"])) {$aItemData[$varName] .= $this->cms->Gui->getDefPostf("srv_options_list:enum_value_edit_" .$vItem["group"] .I12085, array("_" .$llIILLI ."_" .$llIILLl, "_" .$llIILLl), $vItem); }else {$aItemData[$varName] .= $this->cms->Gui->getDefPostf("srv_options_list:enum_value_edit_item", array(I12086 .$llIILLI .I12086 .$llIILLl, I12086 .$llIILLl), $vItem); }}return $isSelected; }function TIlllll($llIIL1l, $defaultValue) {$res["items"] =I11995; foreach ($llIIL1l as $vItem) {if ($vItem["selected"] == "1") {$vItem["selected"] =I12087; $res["enum_string"] =$vItem[I12046]; $isSelected =true; }$vItem['def_selected'] =$defaultValue === I12044 || mb_strpos($vItem[I12082], $defaultValue) === false ?I12044 :'selected'; $res["items"] .= $this->cms->Gui->get("srv_options_list:enum_value_edit_item", $vItem); }return $res; }function _OptionRowCB(&$aItem, &$aData) {$aItemData =array( I12082 => $aItem[I12082], 'items' => I12044 );if ($this->GodMode) {$llIILLl =0; }else {$llIILLl =$this->I1llLL1[$aItem[I12039]][I12080]; }if ($this->SimpleMode && isset($this->ContainerOptions[$this->SpecBlockName][$this->llIII1I][$aItemData[I12039]])) {$aItemData[I12058] =$this->ContainerOptions[$this->SpecBlockName][$this->llIII1I][$aItemData[I12039]]; }else {$aItemData[I12058] =isset($this->I1llLL1[$aItem[I12039]]) ?$this->I1llLL1[$aItem[I12039]][I12058] :null; }$aItem["sysname"] =$aItemData[I12039]; $aItemData["bEnabled"] =isset($aItem["bEnabled"]) ?$aItem[I12088] :1; $aItemData["style_class"] =$aItem["style_class"]; $aItemData["custom_style_class"] =$aItem["custom_style_class"]; switch ($llIILLl) {case RLT_ENUM_MULTI_ARRAY: $aItemData[I12081] =RLC_EMPTY; case RLT_ENUM_MULTI_STRING: $llIIL1L =sizeof($this->I1llLL1[$aItem[I12039]][I12089]["enum_data"]); $aItemData["control_length"] =intval(sqrt($llIIL1L +1) *2); $aItemData["allow_empty"] =!empty($this->I1llLL1[$aItem[I12039]][I12089]["allow_empty"]); $llIILLL =I12090; case RLT_ENUM: case RLT_SYS_INSTALLED: case RLT_BOOL: $aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:enum_value_view", I12086 .$llIILLl, $aItemData); $aItemData["items"] =I11995; $isSelected =false; if ($this->I1llLL1[$aItem[I12039]]["callback"]) {$isFound =false; foreach ($this->I1llLL1[$aItem[I12039]][I12089][I12091] as $vItem) {if ($this->SimpleMode) {if (is_array($aItemData[I12058])) {if (in_array($vItem[I12039], $aItemData[I12058])) {$isFound =true; break; }}else {if ($vItem[I12039] == $aItemData[I12058]) {$isFound =true; break; }}}else {if (isset($vItem[I12087]) && $vItem[I12087] == "1") {$isFound =true; break; }}}if (!$isFound) {$IllLILl =$this->I1llLL1[$aItem[I12039]]; $lIL11Ll =$this->oCoreRules->TTlTTlT($this->I1llLL1[$aItem[I12039]]["callback"], $this->I1llLL1[$aItem[I12039]]["default_value"], $IllLILl, "correctvalue"); if ($lIL11Ll[0]) {$aItemData[I12058] =$lIL11Ll[1]; if (!$this->SimpleMode) {foreach ($this->I1llLL1[$aItem[I12039]][I12089][I12091] as $key => $vItem) {if (is_array($aItemData[I12058])) {if (in_array($vItem[I12039], $aItemData[I12058])) {$this->I1llLL1[$aItem[I12039]][I12089][I12091][$key][I12087] =1; }}else {if (strcmp($vItem[I12039], $aItemData[I12058]) == 0) {$this->I1llLL1[$aItem[I12039]][I12089][I12091][$key][I12087] =I12092; }}}}}}}$isSelected =$this->TIllllI($llIILLl, $llIILLl, isset($llIILLL) ?$llIILLL :null, $this->I1llLL1[$aItem[I12039]]["default_value"], $this->I1llLL1[$aItem[I12039]][I12089][I12091], $aItemData); if (!$isSelected) {$aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:empty_value_view", I12086 .$llIILLl, $aItemData); }else {$aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:enum_value_view", I12086 .$llIILLl, $aItemData); }$aItem["value_edit"] =$this->cms->Gui->getDefPostf("srv_options_list:enum_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_DATE_PERIOD: case RLT_DATE_PERIOD_POSITIVE: case RLT_DATE_PERIOD_NEGATIVE: $aItemData['data_value'] =$this->I1llLL1[$aItem[I12082]][I12068]['data_value']; $llIIL11 =$this->I1llLL1[$aItem[I12082]][I12093]; if (mb_strpos($llIIL11, ' ') !== false) {list($aItemData[I12093], $llIIL11) =explode(' ', $llIIL11); }else {$aItemData[I12093] =I12044; }$llII1II =$this->TIlllll($this->I1llLL1[$aItem[I12082]][I12068]['enum_data'], $llIIL11); $aItemData["items"] .= $llII1II[I12094]; $aItemData[I12046] =$aItemData["data_value"] .I11993 .$llII1II["enum_string"]; $aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:period_enum_value_view", I12086 .$llIILLl, $aItemData); $aItem[I12095] =$this->cms->Gui->getDefPostf("srv_options_list:period_enum_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_ARRAY_OF: if ($this->SimpleMode && isset($this->ContainerOptions[$this->SpecBlockName][$this->llIII1I][$aItemData[I12039]])) {$aItemData["data_value"] =$this->ContainerOptions[$this->SpecBlockName][$this->llIII1I][$aItemData[I12039]]; }else {$aItemData["data_value"] =isset($this->I1llLL1[$aItem[I12039]][I12089]["data_value"]) ?$this->I1llLL1[$aItem[I12039]][I12089][I12096] :null; }$aItemData["caption_view"] =I11995; $aItemData["caption_edit"] =I11995; $IllI1LL =array(); if (in_array($this->I1llLL1[$aItem[I12039]][I12089]["items_type"], Array(RLT_ENUM_MULTI_STRING, RLT_ENUM_MULTI_ARRAY, RLT_ENUM))) {$llIIL1L =sizeof($this->I1llLL1[$aItem[I12039]][I12089]["items_values"]); $aItemData[I12097] =intval(sqrt($llIIL1L +1) *2); }foreach ($this->I1llLL1[$aItem[I12039]][I12089][I12091] as $vItem) {$itemType =I12086 .$vItem[I12080]; $llII1Il =$vItem +$IllI1LL; $llII1Il["option_name"] =$aItem[I12039]; $llII1Il["default_value"] =isset($this->I1llLL1[$aItem[I12039]]["default_value"][$vItem[I12039]]) ?$this->I1llLL1[$aItem[I12039]]["default_value"][$vItem[I12039]] :I12044; if (in_array($this->I1llLL1[$aItem[I12039]][I12089][I12098], Array(RLT_ENUM_MULTI_STRING, RLT_ENUM_MULTI_ARRAY, RLT_ENUM))) {$llII1Il[I12046] =I11995; $isSelected =$this->TIllllI($llIILLl, $this->I1llLL1[$aItem[I12039]][I12089][I12098], I12090, $this->I1llLL1[$aItem[I12039]]["default_value"], $this->I1llLL1[$aItem[I12039]][I12089]["enum_data_" .$vItem[I12039]], $llII1Il, I12094); $llII1Il["item_caption"] =$vItem[I12046]; $llII1Il["caption_view"] =$this->cms->Gui->getDefPostf("srv_options_list:array_of_value_caption_view", $itemType, $llII1Il); $llII1Il["caption_edit"] =$this->cms->Gui->getDefPostf("srv_options_list:array_of_value_caption_edit", $itemType, $llII1Il); if ($isSelected) {$llII1IL ="enum_value_view"; }else {$llII1IL ="empty_value_view"; }$llII1Il[I12046] =$llII1Il[I12099]; $llII1Il[I12039] =I11995; $llII1Il["blockname"] =$aItem[I12039]; $tmp =$this->cms->Gui->getDefPostf("srv_options_list:" .$llII1IL, Array(I12086 .$llIILLl .$itemType, $itemType), $llII1Il); $aItemData[I12099] .= $tmp; $llII1Il[I12039] =$aItem[I12039]; $llII1Il[I12046] =$llII1Il["caption_edit"]; $llII1Il["allow_empty"] =!empty($this->I1llLL1[$aItem[I12039]][I12089][I12100]); $llII1Il[I12081] =RLC_EMPTY; $tmp =$this->cms->Gui->getDefPostf("srv_options_list:" .$llII1IL, $itemType, $llII1Il); $aItemData["caption_edit"] .= $tmp; if ($this->GodMode) {$itemType ="_0"; }$llII1Il["additional_name"] =$vItem[I12039]; $llII1Il[I12101] =$this->cms->Gui->getDefPostf("srv_options_list:enum_value_edit", I12086 .$llIILLl .$itemType, $llII1Il); }else {$llII1IL ="array_of_value_view_item"; $vItem[I12058] =htmlspecialchars($vItem[I12058]); $tmp =$this->cms->Gui->getDefPostf("srv_options_list:" .$llII1IL, $itemType, $vItem); $aItemData[I12099] .= $tmp; $aItemData["caption_edit"] .= $tmp; }if ($this->I1llLL1[$aItem[I12039]][I12089][I12098] != RLT_ENUM_MULTI_ARRAY) {$llII1Il[I12058] =htmlspecialchars($llII1Il[I12058]); }$aItemData[I12094] .= $this->cms->Gui->getDefPostf("srv_options_list:array_of_value_edit_item", $itemType, $llII1Il); }$aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:array_of_value_view", I12086 .$llIILLl, $aItemData); $aItem[I12095] =$this->cms->Gui->getDefPostf("srv_options_list:array_of_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_ITEM_WITH_ENUM: $aItemData["default_value"] =$this->I1llLL1[$aItem[I12039]][I12102]; if ($this->SimpleMode && isset($this->ContainerOptions[$this->SpecBlockName][$this->llIII1I][$aItemData[I12039]])) {$aItemData[I12096] =$this->ContainerOptions[$this->SpecBlockName][$this->llIII1I][$aItemData[I12039]]; }else {$aItemData[I12096] =$this->I1llLL1[$aItem[I12039]][I12089][I12096]; }$aItemData[I12046] =$this->I1llLL1[$aItem[I12039]][I12058]; $aItemData["size"] =$this->I1llLL1[$aItem[I12039]][I12097]; foreach ($this->I1llLL1[$aItem[I12039]][I12089][I12091] as $vItem) {$vItem[I12084] =($vItem[I12039] == $this->I1llLL1[$aItem[I12039]][I12102]) ?I12087 :I11995; $aItemData[I12094] .= $this->cms->Gui->get("srv_options_list:item_with_enum_value_edit_item", $vItem); }$aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:item_with_enum_value_view", I12086 .$llIILLl, $aItemData); $aItem[I12095] =$this->cms->Gui->getDefPostf("srv_options_list:item_with_enum_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_ENUM_WITH_UINT: case RLT_ENUM_WITH_SINT: case RLT_ENUM_WITH_FLOAT: case RLT_ENUM_WITH_CHAR: case RLT_ENUM_WITH_EMAIL: case RLT_ENUM_WITH_DATE_PERIOD_POSITIVE: case RLT_ENUM_WITH_DATE_PERIOD_NEGATIVE: $aItemData[I12102] =$this->I1llLL1[$aItem[I12039]][I12102]; if (in_array($llIILLl, array(RLT_ENUM_WITH_DATE_PERIOD_POSITIVE, RLT_ENUM_WITH_DATE_PERIOD_NEGATIVE))) {$aItemData['sub_data_value'] =$this->I1llLL1[$aItem[I12082]][I12068]['data_value']; $llIIL11 =$this->I1llLL1[$aItem[I12082]][I12093]; if (mb_strpos($llIIL11, ' ') !== false) {list($aItemData[I12093], $llIIL11) =explode(' ', $llIIL11); }else {$aItemData[I12093] =I12044; }$llII1II =$this->TIlllll($this->I1llLL1[$aItem[I12082]][I12068][I12103], $llIIL11); $aItemData["sub_items"] =$llII1II[I12094]; $aItemData[I12046] =$aItemData["sub_data_value"]; if (isset($llII1II['enum_string']) && $llII1II['enum_string'] != I12044) {$aItemData[I12046] .= I11993 .$llII1II[I12104]; }}else {$aItemData[I12096] =$aItemData[I12046] =$aItemData[I12058]; }$aItemData["size"] =isset($this->I1llLL1[$aItem[I12039]][I12097]) ?$this->I1llLL1[$aItem[I12039]][I12097] :null; if (in_array($this->I1llLL1[$aItem[I12039]][I12058], $this->I1llLL1[$aItem[I12039]][I12089]["enum_only"])) {$aItemData["display_enter"] =I12090; }else {$aItemData["display_enter"] =I12105; }foreach ($this->I1llLL1[$aItem[I12039]][I12089][I12091] as $vItem) {if (in_array($vItem[I12039], $this->I1llLL1[$aItem[I12039]][I12089]["enum_only"])) {if ($vItem[I12039] == $aItemData[I12046]) {$vItem[I12087] =I12087; $aItemData[I12046] =$vItem[I12046]; $isSelected =true; }$vItem["enum_only"] =I12092; }else {$vItem["enum_only"] =I11995; if ($aItemData["display_enter"] == I12105) {$vItem[I12087] =I12087; $aItemData[I12046] =$vItem[I12046] .I12106 .$aItemData[I12046]; }}$vItem[I12084] =($vItem[I12039] == $this->I1llLL1[$aItem[I12039]][I12102]) ?I12087 :I11995; $aItemData[I12094] .= $this->cms->Gui->get("srv_options_list:enum_with_value_edit_item", $vItem); }$aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:enum_with_value_view", I12086 .$llIILLl, $aItemData); $aItem[I12095] =$this->cms->Gui->getDefPostf("srv_options_list:enum_with_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_SYS_DTIME: case RLT_DTIME: case RLT_DATE: case RLT_TIME: case RLT_UINT: case RLT_SINT: case RLT_FLOAT: case RLT_EMAIL: case RLT_CHAR: $aItemData[I12102] =!isset($this->I1llLL1[$aItem[I12082]][I12107]) || $this->I1llLL1[$aItem[I12082]][I12107] != RLC_CALLBACK ?$this->I1llLL1[$aItem[I12039]][I12102] :I12044; If ($llIILLl == RLT_CHAR && is_string($aItemData[I12058])) $aItemData[I12058] =htmlspecialchars($aItemData[I12058]); $aItemData["value_view"] =$aItemData[I12058]; $aItemData[I12095] =$aItemData[I12058]; $aItemData[I12097] =$this->I1llLL1[$aItem[I12039]][I12089][I12097]; $aItem["value_view"] =$this->cms->Gui->getDefPostf("srv_options_list:char_value_view", I12086 .$llIILLl, $aItemData); $aItem[I12095] =$this->cms->Gui->getDefPostf("srv_options_list:char_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_TEXT: $aItemData[I12102] =$this->I1llLL1[$aItem[I12039]][I12102]; $aItemData[I12108] =$aItemData[I12058]; $aItemData[I12095] =$aItemData[I12058]; $aItemData["rows"] =min(10, max(3, mb_substr_count($aItemData[I12058], I12078))); $aItemData[I12097] =$this->I1llLL1[$aItem[I12039]][I12089][I12097]; $aItem[I12108] =$this->cms->Gui->getDefPostf("srv_options_list:text_value_view", I12086 .$llIILLl, $aItemData); $aItem[I12095] =$this->cms->Gui->getDefPostf("srv_options_list:text_value_edit", I12086 .$llIILLl, $aItemData); break; case RLT_LABEL: $aItem["is_label"] =1; break; case RLT_SPLITTER: $aItem[I12109] =1; break; default: if (is_array($aItem[I12058])) {$c =0; $s =TTTTT1I($aItem[I12058], I11995, $c); $s =ltrim($s, I12078); $llII1I1 =$s; $llII1I1 =mb_ereg_replace(I12078, "<br>", $llII1I1); $llII1I1 =mb_ereg_replace(I11993, "&nbsp;", $llII1I1); $rows =intval(sqrt($c +1) *2); $aItemData["rows"] =$rows; $aItemData["height"] =($rows *13); $aItemData[I12108] =$llII1I1; $aItemData[I12095] =$s; $aItem[I12108] =$this->cms->Gui->get("srv_options_list:array_value_view", $aItemData); $aItem[I12095] =$this->cms->Gui->get("srv_options_list:array_value_edit", $aItemData); }else {$s =TTTTT1I($aItem[I12058], I11995, $c); $llII1I1 =$s; $s =trim($s, "\""); $aItemData[I12108] =$llII1I1; $aItemData[I12095] =$s; $aItem[I12108] =$this->cms->Gui->get("srv_options_list:string_value_view", $aItemData); $aItem[I12095] =$this->cms->Gui->get("srv_options_list:string_value_edit", $aItemData); }}if (isset($this->IlLIIl1[$this->II1lllI[I12110]][$aItemData[I12082]])) {$aItem[I12111] .= $this->cms->Gui->get('srv_options_list:option_inheritance', $aItemData); $aItem['value_view'] =preg_replace('/(<div.*?>)/siu', '\\1' .$this->cms->Gui->getAbs('srv_options_list:option_inherited', $aItemData +array( 'icon_inherited_style' => isset($this->IlLIIlL[$this->II1lllI[I12110]][$aItemData[I12082]]) ?'inline' :'none' )),$aItem['value_view']); }}function TTTl1Tl($cId, $cModule) {parent::TTTl1Tl($cId, $cModule); }function TIllll1(&$aGroupIds) {$numItems =0; $llII1lI =0; $aModNames =array(); if (sizeof($this->cms->VarsPost) >0) {require_once($GLOBALS[I12112] ."func_ini_format.php"); $llII1ll =array(); foreach ($this->cms->VarsPost as $vName => $value) {$llII1lL =mb_substr($vName, 0, mb_strlen("del_set_")); if ($llII1lL == "del_set_") {$llII1ll[mb_substr($vName, mb_strlen("del_set_"))] =$value; }}$llIILII =$this->cms->Gui->ParseLangFile("templates/lang/ce_specblocks.lng"); foreach ($llII1ll as $key => $value) {$sql ="SELECT id, name, sb_data, block_mask, lay_id FROM " .$this->ContainerTableName ." WHERE id='" .$key ."'"; $this->db->query($sql); if ($this->db->next_record()) {$IILIIIl["page_name"] =$this->db->Record[I12039]; $aModuleOptions =unserialize($this->db->Record[I12113]); if (!is_array($value)) {$value =Array($value); }foreach ($value as $llII1l1 => $llII1LI) {unset($aModuleOptions[$llII1LI]); if ($llII1LI == I12035) {$IILIIIl[I12039] =I11995; $this->cms->AddStatusMsg(I12114, "blue", I11995, I11995, $IILIIIl); }else {$llII1Ll =$llII1LI; $llII1LL =mb_ereg_replace("(_[0-9]+)", I11995, $llII1Ll); $sSpecNum =mb_substr($llII1LI, mb_strlen($llII1LL) +1, 3); $sBlockNum =mb_substr($llII1LI, mb_strlen($llII1LL) +4, 3); $iBlockNum =intval($sBlockNum); $bBlockProtected =($this->db->Record["block_mask"] &(1 << ($iBlockNum -1))); $llII1L1 =$this->aBlocks[$sBlockNum .$this->db->Record["lay_id"]]; $IILIIIl[I12115] =$llIILII[$llII1LL] .I11993 .mb_substr($llII1LI, mb_strlen($llII1LL) +1); $IILIIIl["page_name"] =$this->db->Record[I12039]; $IILIIIl[I12047] =$llII1L1; if ($sBlockNum == "000") {$this->cms->AddStatusMsg("page_options_deleted", "blue", I11995, I11995, $IILIIIl); }else {if (!$bBlockProtected) {$this->TIlll1T($llII1Ll, $llII1L1); $this->cms->AddStatusMsg("block_options_deleted", "blue", I11995, I11995, $IILIIIl); }else {$this->cms->AddStatusMsg("protected_block_options_deleted", "blue", I11995, I11995, $IILIIIl); }}}}if (sizeof($aModuleOptions) >0) {$llII11I =serialize($aModuleOptions); }else {$llII11I =I11995; }$sql ="UPDATE " .$this->ContainerTableName .I12116 .$llII11I ."' WHERE id='" .$key ."'"; $this->db->query($sql); }}if ($this->SimpleMode && (sizeof($llII1ll) >0)) {$sql ="SELECT sb_data " ."FROM " .$this->ContainerTableName .I11993 .I12117 .$this->ItemId ."'"; $this->db->query($sql); if ($this->db->next_record()) {$this->ContainerOptions =unserialize($this->db->Record[I12113]); }$this->cms->Core->Cache->ClearCacheNow(); }if ($this->SimpleMode) {$aModNames[] =$this->llIII1I; }else {$modName =$this->cms->VarsPost[I12063]; $tmpMod =$this->cms->Core->GetModule($modName); $llII11l =$tmpMod->GetOwnerName(); $llII11L =$this->cms->Core->GetProperty("eshop_clone_owners"); $llII111 =array(); if (in_array($llII11l, $llII11L)) {if ($tmpMod->issetAndTrueProperty(I12118)) {$llIlIII =mb_substr($modName, mb_strlen($llII11l)); foreach ($llII11L as $ownerName) {if ($this->cms->Core->IsInstalled($ownerName .$llIlIII)) {$aModNames[] =$ownerName .$llIlIII; $llII111[] =$ownerName; }}}else {$aModNames[] =$modName; }}else {$aModNames[] =$modName; }if (sizeof($llII111) >0) {$llIlIIl =array(); foreach ($llII111 as $ownerName) {$ownerData =$this->cms->Core->OwnerGetData($ownerName); $llIlIIl[] =$this->cms->GetModHeader($ownerData["admin_menu_caption"]); }$owners =implode(", ", $llIlIIl); $this->cms->AddStatusMsg(I12119, "blue", I11995, I11995, Array(I12017 => $owners .I11995)); }unset($tmpMod); }$llIlIIL =sizeof($aModNames); $llIlII1 =false; $llIlIlI =array(); $post =$this->cms->VarsPost; foreach ($post as $optionName => $optionValue) {if (mb_strpos($optionName, I12120) === 0 && mb_strlen($optionValue)) {$llIlIll =mb_substr($optionName, mb_strlen(I12120)); $llIlIlI[$llIlIll] =array($optionValue, $post[$oName ='parent_option_name_' .$llIlIll]); unset($this->cms->VarsPost[$optionName], $this->cms->VarsPost[$oName]); }}foreach ($aModNames as $llIlIlL => $modName) {$llIlIl1 =array(); foreach ($llIlIlI as $optionName => $parent) {list ($IIlI11L, $IlLILL1) =$parent; if (isset($this->IlLIIl1[$modName][$optionName][$IIlI11L]) && in_array($IlLILL1, $this->IlLIIl1[$modName][$optionName][$IIlI11L]) ){$this->cms->VarsPost['option_value_' .$optionName] =$IIlI11L != I12019 ?$this->cms->Core->GetModOption($IIlI11L, $IlLILL1) :$this->cms->Core->GetOption($IlLILL1); $llIlIl1[$optionName] =1; $this->IlLIIlL[$modName][$optionName] =$IIlI11L .':' .$IlLILL1; $llIlII1 =true; }}$llIlILI =array(); $this->I1llLL1 =$this->oCoreRules->TTIITl1($modName, !$this->GodMode); foreach ($this->cms->VarsPost as $vName => $value) {$llII1lL =mb_substr($vName, 0, mb_strlen(I12121)); if ($llII1lL == I12121) {$IlLI11L =mb_substr($vName, mb_strlen(I12121)); if (isset($this->IlLIIlL[$modName][$IlLI11L]) && !isset($llIlIl1[$IlLI11L])) {unset($this->IlLIIlL[$modName][$IlLI11L]); $llIlII1 =true; }$llIILLl =$this->I1llLL1[$IlLI11L][I12080]; $llIlILl =true; if (!is_array($value)) {if (mb_substr($vName, -4) == "_ini") {$llIlILl =is_array(TlT1TTI($value)); }else {$value =stripslashes(unhtmlentities($value)); if (mb_strtolower(ltrim(mb_substr($value, 0, 6))) == "array(") {$llIlILl =@eval("\$value=" .$value ."; return true;"); }}}else {switch ($llIILLl) {case RLT_DATE_PERIOD_POSITIVE: case RLT_ENUM_WITH_DATE_PERIOD_POSITIVE: $value[I12122] =abs($value[I12122]); break; case RLT_DATE_PERIOD_NEGATIVE: case RLT_ENUM_WITH_DATE_PERIOD_NEGATIVE: $value[I12122] =-abs($value[I12122]); break; case RLT_ENUM_MULTI_ARRAY: if ($this->I1llLL1[$IlLI11L][I12089][I12100] && isset($value[0]) && $value[0] == RLC_EMPTY) {$value =array(); }break; case RLT_ARRAY_OF: if ($this->I1llLL1[$IlLI11L][I12089][I12098] == RLT_CHAR) {foreach ($value as $key => $llIlILL) {$value[$key] =removeSpecial(stripslashes($llIlILL), "html"); ;}}elseif ($this->I1llLL1[$IlLI11L][I12089][I12098] == RLT_ENUM_MULTI_ARRAY) {foreach ($value as $key => $llIlILL) {if ($this->I1llLL1[$IlLI11L][I12089][I12100] && isset($llIlILL[0]) && $llIlILL[0] == RLC_EMPTY) {$value[$key] =array(); }}}break; }}if ($llIlILl !== false && !is_null($llIlILl)) {if ($this->SimpleMode) {$llIlIL1 =&$this->oCoreRules->GetModule($this->llIII1I); if ($llIlIL1->TTlTITI($IlLI11L, $value)) {$llIlI1I[$IlLI11L] =$value; $numItems++; $llIlILI[$IlLI11L] =$value; if ($this->I1llLL1[$IlLI11L]["callback"]) {$IllLILl =array(I12039 => $IlLI11L, I12058 => $value); list (,,$aData) =$this->oCoreRules->TTlTTlT($this->I1llLL1[$IlLI11L]["callback"], $this->I1llLL1[$IlLI11L][I12102], $IllLILl, "apply"); if ($aData[I12123]) {$llII1lI++; $this->cms->AddStatusMsg('options_grp_adjust_fail_custom_warn', 'red', I12044, I12044, array('item_name' => $IlLI11L .I12044, 'custom_warn' => $aData[I12123])); }else if (isset($aData[I12124])) {$value =$aData[I12124]; $llIlI1I[$IlLI11L] =$value; }}}else {$llII1lI++; $this->cms->AddStatusMsg("options_grp_adjust_fail", "red", I11995, I11995, Array("item_name" => $IlLI11L .I11995)); }}else {$IlLI11I =&$this->cms->Core->GetModule($modName); if ($this->GodMode) {$this->TIll1T1($modName, $IlLI11L, $value, 'God mode', null, true); if ($modName == I12020) {$this->cms->Core->Options->TTlTI1T($this->cms->Core->Name, $IlLI11L, $value); }else {$IlLI11I->Options->TTlTI1T($IlLI11I->Name, $IlLI11L, $value); }$numItems++; $llIlILI[$IlLI11L] =$value; }else {$llIlIL1 =&$this->oCoreRules->GetModule($modName); if ($llIlIL1->TTlTITI($IlLI11L, $value)) {$aData =array(I12123 => false, I12125 => false); if ($this->I1llLL1[$IlLI11L]["callback"]) {$IllLILl =array(I12039 => $IlLI11L, I12058 => $value, 'cbAllowedValues' => $this->I1llLL1[$IlLI11L]['cbAllowedValues']); list (,,$aData) =$this->oCoreRules->TTlTTlT($this->I1llLL1[$IlLI11L]["callback"], $this->I1llLL1[$IlLI11L][I12102], $IllLILl, I12126); }if ($aData[I12123]) {$llII1lI++; $this->cms->AddStatusMsg('options_grp_adjust_fail_custom_warn', 'red', I12044, I12044, array('item_name' => $IlLI11L .I12044, 'custom_warn' => $aData[I12123])); }else {if (isset($aData[I12124])) {$value =$aData[I12124]; }$this->TIll1T1($modName, $IlLI11L, $value, null, null, true); if ($modName == I12020) {$this->cms->Core->Options->TTlTI1T($this->cms->Core->Name, $IlLI11L, $value); }else {$IlLI11I->Options->TTlTI1T($IlLI11I->Name, $IlLI11L, $value); }$numItems++; $llIlILI[$IlLI11L] =$value; }}else {$llII1lI++; $this->cms->AddStatusMsg("options_grp_adjust_fail", "red", I11995, I11995, Array("item_name" => $IlLI11L .I11995)); }}}}else {$llII1lI++; $this->cms->AddStatusMsg("options_grp_eval_fail", "red", I11995, I11995, Array(I12127 => $IlLI11L .I11995)); }}}$IlLI1lI =array(); foreach ($this->IlLIIlL as $moduleName => $inheritance) {foreach ($inheritance as $optionName => $data) {list ($IIlI11L, $IlLILL1) =explode(':', $data); do {if ($IIlI11L == $modName) {$IlLI1lI[$IlLILL1][$moduleName][] =$optionName; }$IlLI1l1 =false; if (isset($this->IlLIIlL[$IIlI11L][$IlLILL1])) {list ($IIlI11L, $IlLILL1) =explode(':', $this->IlLIIlL[$IIlI11L][$IlLILL1]); $IlLI1l1 =true; }}while ($IlLI1l1); }}if ($I111l1L =sizeof($IlLI1lI)) {foreach ($IlLI1lI as $IlLILL1 => $llIlI1l) {if (isset($llIlILI[$IlLILL1])) {foreach ($llIlI1l as $moduleName => $options) {if ($moduleName != I12019) {$IlLI11I =&$this->cms->Core->GetModule($moduleName); foreach ($options as $option) {$this->TIll1T1($moduleName, $IlLI11L, 'Inheritance: ' .$modName .'::' .$IlLILL1); $IlLI11I->Options->TTlTI1T($option, $llIlILI[$IlLILL1]); }}else {foreach ($options as $option) {$this->TIll1T1($moduleName, $IlLI11L, I12128 .$modName .'::' .$IlLILL1); $this->cms->Core->Options->TTlTI1T($this->cms->Core->Name, $option, $llIlILI[$IlLILL1]); }}}}}$llIlI1L ='all'; $this->TIll1IT(); }else {$llIlI1L =$this->moduleName; }if ($llIlII1) {$this->module->SetOption('inheritance', $this->IlLIIlL); }if ($llIlII1 || $I111l1L) {if ($llIlI1L == 'common_settings') {$this->TIlll11(); }$this->cms->Core->SaveOptions($llIlI1L); }if ($this->SimpleMode) {if (is_array($llIlI1I) && (sizeof($llIlI1I) >0)) {$llIlI11 =empty($this->ContainerOptions[$this->SpecBlockName][$this->llIII1I]) ?$llIlI1I :array_merge($this->ContainerOptions[$this->SpecBlockName][$this->llIII1I], $llIlI1I); $aNewValues =$llIlI11; $llIllII =$this->ContainerOptions[$this->SpecBlockName][$this->llIII1I]; if (is_array($llIllII)) {$aNewValues =array_diff_assoc($llIlI11, $llIllII); }foreach ($aNewValues as $k => $v) {$this->TIll1T1( $this->ItemId .I12129 .$this->SpecBlockName, $k, $v, I12044, isset($llIllII[$k]) ?$llIllII[$k] :null, true );}$this->ContainerOptions[$this->SpecBlockName][$this->llIII1I] =$llIlI11; unset($k, $v, $llIlI11); if ($this->ContainerTableName == 'cms_pages') {$this->ContainerOptions['modified_time'] =time(); }$sql ="UPDATE " .$this->ContainerTableName .I11993 ."SET sb_data='" .addslashes(serialize($this->ContainerOptions)) .I12130 .I12117 .$this->ItemId ."'"; if ($this->db->query($sql)) {if (($this->ContainerTableName == I11994) && ($this->SpecBlockName != I12035) && (!$this->LayoutBlockProtected)) {$this->TIlll1T($this->SpecBlockName, $this->LayoutBlockName, $this->ContainerOptions[$this->SpecBlockName][$this->llIII1I]); }$this->cms->Core->Cache->ClearCacheNow(); $this->cms->AddStatusMsg("options_grp_changed", "blue", I11995, I11995, Array("num_items" => $numItems .I11995)); if ($llII1lI >0) {$this->cms->AddStatusMsg("options_grp_fail_total", "red", I11995, I11995, Array("num_items" => $llII1lI .I11995)); }}else {$this->cms->AddStatusMsg("options_grp_save_fail", "red"); }}}else {if ($modName == I12020) {$this->cms->Core->TTllTlT(I12020); $this->cms->Core->GetOption(I12131); if ($this->cms->Core->SaveCoreOptions()) {$this->cms->Core->Cache->ClearCacheNow(); $this->cms->AddStatusMsg("options_grp_changed", "blue", I11995, I11995, Array("num_items" => $numItems .I11995)); }else {$this->cms->AddStatusMsg("options_grp_save_fail", I12132); }}else {if ($modName == 'common_settings') {$this->TIlll11(); }if ($this->cms->Core->SaveOptions($modName)) {if ($this->oCoreRules->TTIITII()) {$this->cms->Core->SaveCoreOptions(); }if ($llIlIlL == ($llIlIIL -1)) {$this->cms->Core->Cache->ClearCacheNow(); $this->cms->AddStatusMsg("options_grp_changed", "blue", I11995, I11995, Array("num_items" => $numItems .I11995)); if ($llII1lI >0) {$this->cms->AddStatusMsg("options_grp_fail_total", I12132, I11995, I11995, Array("num_items" => $llII1lI .I11995)); }}}else {$this->cms->AddStatusMsg("options_grp_save_fail", I12132); }}}}}$aGroupIds =array(); $this->appliedId =I11995; $oSess =admSession(); $aUser =$oSess->GetUserInfo(); if('business' == AMI::getEdition()){ unset($aUser['ami_efa']); }CMS_Member::TTI11Tl($aUser); $oSess->SetVar(I12133, $aUser, TRUE); }function TIlll1T($llIllIl, $llII1L1, $aOptions =Array()) {$aFields =array(); foreach ($this->aBlocks as $llIllIL => $llIllI1) {if ($llIllI1 == $llII1L1) {$aFields[intval(mb_substr($llIllIL, 3, 3))][] =intval(mb_substr($llIllIL, 0, 3)); }}$sql ="SELECT id, sb_data, block_mask FROM cms_pages WHERE lang='" .$this->langData ."' AND ( 0 "; foreach ($aFields as $llIlllI => $llIllll) {$sql .= "OR (lay_id='" .$llIlllI .I12130; foreach ($llIllll as $llIlllL => $llIlll1) {$sql .= "AND NOT (block_mask & ( 1 << (" .$llIlll1 .I12134; }$sql .= ") "; }$sql .= ") "; $this->db->query($sql); while ($this->db->next_record()) {$llIllLI =unserialize($this->db->Record[I12113]); if (sizeof($aOptions) >0) {$llIllLI[$llIllIl][$this->llIII1I] =$aOptions; }else {unset($llIllLI[$llIllIl]); }$sql ="UPDATE " .$this->ContainerTableName .I11993 ."SET sb_data='" .addslashes(serialize($llIllLI)) .I12130 .I12117 .$this->db->Record[I12135] ."'"; $this->IIl1lLI->query($sql); }}function TIlll1I() {$llIllLl =$this->II1lllI[I12110]; $captions =array(); if (!empty($llIllLl)){ $name =($llIllLl != I12019 ?$llIllLl :'core') .'_rules_captions.lng'; $path =('inst_' == mb_substr($llIllLl, 0, 5) ?AMI_iTemplate::LOCAL_LNG_MOD_OPT_PATH .I12136 :$this->oCoreRules->IlllLL1 ).$name; $captions[$llIllLl] =$this->cms->Gui->ParseLangFile($path); }if ($llIllLl != I12019) {$captions[I12019] =$this->cms->Gui->ParseLangFile($this->oCoreRules->IlllLL1 .'core_rules_captions.lng'); }if ($this->SimpleMode) {if (!isset($this->llIIIL1)) {$this->llIIIL1 =array(); }$llIIll1 =$this->oCoreRules->GetOwnersList(); $IIII1II =array(); foreach ($llIIll1 as $ownerName) {if ($this->cms->Core->IsOwnerInstalled($ownerName)) {$IIII1II[$ownerName] =$this->cms->Core->OwnerGetData($ownerName); }}foreach ($IIII1II as $ownerName => $ownerData) {$ownerData =$this->cms->Core->OwnerGetData($ownerName); $aModules =$this->oCoreRules->TTIIT1T($ownerName); foreach ($aModules as $modName => $oModule) {if ($modName != I12044) {if ($modName != I12019) {$IlLI11I =$this->cms->Core->GetModule($modName); $llIIlL1 =$this->cms->GetModHeader($IlLI11I->GetOption('admin_menu_caption')); $parentName =$IlLI11I->GetParentName(); while (!empty($parentName)) {$IlLI11I =$this->cms->Core->GetModule($parentName); $llIIlL1 =$this->cms->GetModHeader($IlLI11I->GetOption('admin_menu_caption')) .I12013 .$llIIlL1; $parentName =$IlLI11I->GetParentName(); }}else {$llIIlL1 =$this->words[I12019]; }$this->llIIIL1[$modName] =$this->cms->GetModHeader($ownerData['admin_menu_caption']) .I12013 .$llIIlL1; }}}}$llIllLL =array(); $optionsParentsCaptions =array(); $optionsParentsChildren =array(); foreach ($this->IlLIIlL as $moduleName => $inheritance) {foreach ($inheritance as $optionName => $data) {list ($IIlI11L, $IlLILL1) =explode(I12137, $data); do {if ($IIlI11L == $llIllLl) {if (!isset($captions[$moduleName])) {$name =($moduleName != I12019 ?$moduleName :'core') .'_rules_captions.lng'; $path =('inst_' == mb_substr($moduleName, 0, 5) ?AMI_iTemplate::LOCAL_LNG_MOD_OPT_PATH .I12136 :$this->oCoreRules->IlllLL1 ).$name; $captions[$moduleName] =$this->cms->Gui->ParseLangFile($path); }if (!isset($optionsParentsCaptions[$IlLILL1])) {$optionsParentsCaptions[$IlLILL1] =preg_replace(array('/<br\s*\/?\s*>.*$/su', I12138), array(I12044, ' '), str_replace("'", "\\'", isset($captions[$llIllLl][$IlLILL1]) ?$captions[$llIllLl][$IlLILL1] :(isset($captions[I12019][$IlLILL1]) ?$captions[I12019][$IlLILL1] :(isset($this->oCoreRules->Captions[$IlLILL1]) ?$this->oCoreRules->Captions[$IlLILL1] :$IlLILL1 ))));}$llIllLL[$IlLILL1][] =preg_replace(array('/<br\s*\/?\s*>.*$/su', I12138), array(I12044, I12139), str_replace("'", "\\'", (isset($this->llIIIL1[$moduleName]) ?$this->llIIIL1[$moduleName] :$moduleName) .I12013 .(isset($captions[$moduleName][$optionName]) && !empty($captions[$moduleName][$optionName]) ?$captions[$moduleName][$optionName] :(isset($captions[I12019][$optionName]) ?$captions[I12019][$optionName] :(isset($this->oCoreRules->Captions[$optionName]) ?$this->oCoreRules->Captions[$optionName] :$optionName )))));}$IlLI1l1 =false; if (isset($this->IlLIIlL[$IIlI11L][$IlLILL1])) {list ($IIlI11L, $IlLILL1) =explode(I12137, $this->IlLIIlL[$IIlI11L][$IlLILL1]); $IlLI1l1 =true; }}while ($IlLI1l1); }}foreach ($llIllLL as $IlLILL1 => $children) {$aScope =array('array' => implode("','", $children)); $optionsParentsChildren[] =$this->cms->Gui->get("srv_options_list:js_new_array_s", $aScope); }if (!isset($this->IlLIIl1[$llIllLl])) {if(sizeof($llIllLL)){ $a =array( 'optionsParents' => "'" .implode("','", array_keys($llIllLL)) ."'", 'optionsParentsCaptions' => "'" .implode("','", $optionsParentsCaptions) ."'", 'optionsParentsChildren' => implode(I12140, $optionsParentsChildren) );}else{ $a =I12044; }return sizeof($llIllLL) ?$this->cms->Gui->get("srv_options_list:inheritance_scripts_short", $a) :I12044; }$inheritableOptions =array(); $inheritableOptionsParentModules =array(); $llIllL1 =array(); $inheritableOptionsParentModulesCaptions =array(); $llIll1I =array(); $parentOptions =array(); $parentOptionsCaptions =array(); $parentOptionsValues =array(); foreach ($this->IlLIIl1[$llIllLl] as $optionName => $llIll1l) {$inheritableOptions[] =$optionName; $llIllL1[] =$keys =array_keys($llIll1l); $llIll1L =array(); foreach ($keys as $key) {$llIll1L[] =str_replace("'", "\\'", isset($this->llIIIL1[$key]) && !empty($this->llIIIL1[$key]) ?$this->llIIIL1[$key] :$key); }$llIll1I[] =$llIll1L; $llIll11 =array(); $llIlLII =array(); $llIlLIl =array(); foreach ($llIll1l as $IIlI11L => $llIlLIL) {$a =array('array' => implode(I12141, $llIlLIL)); $llIll11[] =$this->cms->Gui->get("srv_options_list:js_new_array_s", $a); if ($IIlI11L == I12019) {$IIlI11L ='core'; }if (!isset($captions[$IIlI11L])) {$captions[$IIlI11L] =$this->cms->Gui->ParseLangFile($this->oCoreRules->IlllLL1 .$IIlI11L .'_rules_captions.lng'); }$llIlLI1 =array(); $llIlLlI =array(); foreach ($llIlLIL as $IlLILL1) {$llIlLI1[] =preg_replace(array('/<br\s*\/?\s*>.*$/siu', I12138), array(I12044, I12139), str_replace(I12142, "\\'", isset($captions[$IIlI11L][$IlLILL1]) ?$captions[$IIlI11L][$IlLILL1] :(isset($this->oCoreRules->Captions[$IlLILL1]) ?$this->oCoreRules->Captions[$IlLILL1] :$IlLILL1)) );$optionValue =$IIlI11L != 'core' ?$this->cms->Core->GetModOption($IIlI11L, $IlLILL1) :$this->cms->Core->GetOption($IlLILL1); $optionValue =is_bool($optionValue) ?intval($optionValue) :preg_replace('/\s+/u', I12139, str_replace(I12142, "\\'", $optionValue)); $llIlLlI[] =$optionValue; }$a =array(I12143 => implode(I12141, $llIlLI1)); $llIlLII[] =$this->cms->Gui->get("srv_options_list:js_new_array_s", $a); $llIlLIl[] =$this->TIlll1l($llIlLlI); }$a =array(I12143 => implode(",", $llIll11)); $parentOptions[] =$this->cms->Gui->get("srv_options_list:js_new_array", $a); $a =array(I12143 => implode(",", $llIlLII)); $parentOptionsCaptions[] =$this->cms->Gui->get("srv_options_list:js_new_array", $a); $a =array(I12143 => implode(",", $llIlLIl)); $parentOptionsValues[] =$this->cms->Gui->get("srv_options_list:js_new_array", $a); }foreach ($llIllL1 as $index => $modules) {$a =array(I12143 => implode(I12141, $modules)); $inheritableOptionsParentModules[] =$this->cms->Gui->get("srv_options_list:js_new_array_s", $a); $a =array( I12143 => implode(I12141, $llIll1I[$index]) );$inheritableOptionsParentModulesCaptions[] =$this->cms->Gui->get("srv_options_list:js_new_array_s", $a); }$inheritance =isset($this->IlLIIlL[$llIllLl]) ?$this->IlLIIlL[$llIllLl] :array(); $selectedParentModules =array(); $selectedParentOptions =array(); foreach ($this->IlLIIl1[$llIllLl] as $llIlIll => $llIlLll) {if (isset($inheritance[$llIlIll])) {list ($selectedParentModules[], $selectedParentOptions[]) =explode(I12137, $inheritance[$llIlIll]); }else {$selectedParentModules[] =$selectedParentOptions[] =I12044; }}$a =array( I12144 => I12142 .implode(I12141, array_keys($llIllLL)) .I12142, 'optionsParentsCaptions' => I12142 .implode(I12141, $optionsParentsCaptions) .I12142, 'optionsParentsChildren' => implode(I12140, $optionsParentsChildren), 'inheritableOptions' => I12142 .implode(I12141, $inheritableOptions) .I12142, I12145 => implode(I12140, $inheritableOptionsParentModules), I12146 => implode(I12140, $inheritableOptionsParentModulesCaptions), 'parentOptions' => implode(I12140, $parentOptions), 'parentOptionsCaptions' => implode(I12140, $parentOptionsCaptions), 'parentOptionsValues' => implode(I12140, $parentOptionsValues), I12147 => I12142 .implode(I12141, $selectedParentModules) .I12142, 'selectedParentOptions' => I12142 .implode(I12141, $selectedParentOptions) .I12142 );return $this->cms->Gui->get("srv_options_list:inheritance_scripts", $a); }private function TIlll1l($llIlLlI) {$keys =array_keys($llIlLlI); foreach ($keys as $key) {if (is_array($llIlLlI[$key])) {$llIlLlI[$key] ="[" .$this->TIlll1l($llIlLlI[$key]) .I12148; }}foreach ($keys as $key) {if (mb_substr($llIlLlI[$key], 0, 1) != '[') {$llIlLlI[$key] =I12142 .$llIlLlI[$key] .I12142; }}$aScope =array(I12143 => implode(",", $llIlLlI)); return $this->cms->Gui->get("srv_options_list:js_new_array", $aScope); }function TIlll11() {$II1IIll =array(); for ($i =1; $i <= 5; $i++) {$ip =$this->cms->Core->GetModOption('common_settings', I12149 .$i); $value =$this->cms->Core->GetModOption('common_settings', I12149 .$i .'_value'); if (!empty($ip) && !empty($value)) {$II1IIll[$ip] =implode(I12140, $value); }}$this->cms->Core->SetModOption('common_settings', 'debug_ips', $II1IIll); }function TIll1TT($caption, $moduleName) {return $caption != I12150 && !empty($caption) ?$caption :'[' .$moduleName .']'; }public function TIll1TI($II1IlII, $key) {if (empty($this->llIII1l[$II1IlII[I12051]])) {$this->llIII1l[$II1IlII[I12051]] =true; }}private function TIll1Tl($IIL11I1) {$res =I12044; if ($IIL11I1 == CMS_CoreRules::VIEW_MODE_ALL) {$res =$this->cms->Gui->getAbs('srv_options_list:view_mode_icon'); }return $res; }private function TIll1T1($module, $option, $value, $comment =I12044, $llIlLlL =NULL, $llIlLl1 =false) {$llIlLLI ='data_opti' .I12151; if (!$this->cms->Core->issetOption($llIlLLI)) {$tmp =array(); $this->cms->Core->SetOption( $llIlLLI, $this->cms->Core->Options->ReadOption($tmp, 'core', $llIlLLI) ?$tmp[I12056] :0 );}$db =new DB_SI; if (checkProbability(0.01)) {$db->query('select count(id) as ci from cms_options_data'); $db->next_record(); $llIlLLl =1000; if ($db->Record['ci'] >$llIlLLl) {$db->query('delete from cms_options_data order by data_d LIMIT ' .($db->Record[I12152] -$llIlLLl)); $db->query('OPTIMIZE TABLE `cms_options_data`'); $db->query("insert into cms_options_data (`data_d`,`data_e`) values ('" .time() ."', 'cleaned up' )"); $this->cms->Core->SetOption( $llIlLLI, $this->cms->Core->GetOption($llIlLLI) -($db->Record[I12152] -$llIlLLl) +1 );}}if (isset($llIlLlL)) {$old =var_export($llIlLlL, true); }else {$old =isset($this->cms->Core->Options->aParams[$module][$option]) ?var_export($this->cms->Core->Options->aParams[$module][$option], true) :I12044; }$llIlLLL =$this->cms->Core->GetOption($llIlLLI) +1; $this->cms->Core->SetOption($llIlLLI, $llIlLLL); $comment .= "\n opt:" .$llIlLLL; $sql ="insert into cms_options_da" ."ta
           (`data_d`, `data_m`, `data_o`, `data_n`, `data_a`, `data_i`, `data_p`, `data_c`, `data_e`, `data_l`)
           values ('" .time() .I12141 .addslashes(str_rot13($module)) .I12141 .addslashes(str_rot13($option)) .I12141 .addslashes(str_rot13(trim(var_export($value, true), I12142))) .I12141 .addslashes(str_rot13(trim($old, I12142))) .I12141 .addslashes($this->cms->Core->GetUserId()) ."',HEX('" .str_rot13(getenv('REMOTE_ADDR')) ."'),'" .md5(I12153 .trim($old, I12153) .'\'\'' .trim(var_export($value, true), I12153) .I12153 .getenv('REMOTE_ADDR') .time() .'1') .I12141 .str_rot13($comment) ."',
         HEX((select username from cms_members where id = " .addslashes($this->cms->Core->GetUserId()) .I12154; $db->query($sql); if ($llIlLl1) {$this->TIll1IT(); }}private function TIll1IT() {$this->cms->Core->Options->writeOption( 'core', 'data_opti' .I12151, $this->cms->Core->issetOption('data_opti' .I12151) ?$this->cms->Core->GetOption('data_opti' .I12151) :0 );}}