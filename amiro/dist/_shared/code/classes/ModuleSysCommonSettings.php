<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    modules 
 * @version    $Id$ 
 * @size       7216 xkqwlgzgtnwwpsgsnynqylzzlnruztymtulzyuwqrigxkplgisgzgkziuzlxywxissglpnir
 */ ?><?php foreach(array(12783=>'MS|GZPQ|IHSuJQ|nZIQ',12784=>'hGtMHnDiHSuJQNZIQ',12785=>"MS",12786=>'nZIQ',12787=>"nZIQ",12788=>"PQtvZJuQ",12789=>'vZJuQ',12790=>"'",12791=>'DQJQWtQS',12792=>'ZJJHC|QIGtB',12793=>'PQtZJJvZJuQD') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class ModuleSysCommonSettings extends CMS_ActModule{ public function __construct(&$cms, &$db, &$cModule){ $this->_aInstalledModules =$cms->Core->GetInstalledModuleNames(); parent::CMS_ActModule($cms, $db, $cModule); }public function rulePageIdsCB($cData, $IIL1lL1, &$res, &$aData, $IIL1l1I ="getallvalues"){ $this->options[I12783] =$IIL1lL1[I12784]; switch($IIL1l1I){ case "getallvalues": $res =Array(); $this->TTTlTIl(); array_unshift($this->IIllll1, Array(I12785=> -1, "name"=>$this->words["all_pages"]), Array(I12785=>0, "name"=>$this->words["common_items"])); if(in_array($cData[I12786], array('mod_id_pages', 'mod_cat_id_pages'))){ array_unshift($this->IIllll1, array('id' => -2, I12786 => $this->words['own_page'])); }foreach($this->IIllll1 as $key => $aPage) {$res[] =Array( I12787 => $aPage[I12785], "caption" => $aPage[I12787], "selected" => ((in_array($aPage[I12785], $cData["value"])) ?1: 0) );}$this->IIllll1 =array_splice($this->IIllll1, 2); $this->IIllll1 =Array(); break; case "correctvalue": break; case I12788: $res =$cData["value"]; break; }return true; }public function ruleExtensionsCB($cData, $IIL1lL1, &$res, &$aData, $IIL1l1I ='getallvalues', $lllIll1 ='extensions'){ $aAllowedValues =(array)$cData['cbAllowedValues']; $aIntsalledAllowedValues =array_values(array_intersect($this->_aInstalledModules, $aAllowedValues)); $passedValue =(array)$cData[I12789]; switch($IIL1l1I){ case 'getallvalues': static $words =null; if(is_null($words)){ $words =$this->cms->Gui->parseLangFile('templates/lang/options/default_rules_values.lng'); }$res =array(); foreach($aIntsalledAllowedValues as $value){ if(!isset($words[$value])){ trigger_error('Undefined caption for ' .$IIL1lL1[I12784] ." '" .$value .I12790, E_USER_WARNING); }$res[] =array( I12786 => $value, 'caption' => isset($words[$value]) ?$words[$value] :'<b>' .$value .'</b>', 'selected' => in_array($value, $passedValue) ?I12791 :'' );}if(sizeof($res)){ require_once $GLOBALS['FUNC_INCLUDES_PATH'] .'func_array.php'; sortMultiArray($res, 'caption'); }$aData[I12792] =true; break; case 'correctvalue': $res =array(); foreach($passedValue as $value){ if(in_array($value, $aAllowedValues)){ $res[] =$value; }}break; case 'getvalue': $res =$passedValue; break; case 'apply': $previousValue =$this->cms->Core->TTlI1TI($IIL1lL1[I12784], $lllIll1); if($previousValue != $passedValue){ $aIntsalledAllowedValues =array_values(array_intersect($this->_aInstalledModules, $aAllowedValues)); foreach($previousValue as $value){ if(!in_array($value, $passedValue) && !in_array($value, $aIntsalledAllowedValues)){ $passedValue[] =$value; }}$aData['real_value'] =$passedValue; }break; }return true; }public function ruleMobileLayoutIdCB($cData, $IIL1lL1, &$res, &$aData, $IIL1l1I =I12793){ switch($IIL1l1I){ case I12793: $res =0; break; case 'correctvalue': $res =abs((int)$cData[I12789]); break; case 'getvalue': $res =$cData[I12789]; break; case 'apply': $this->cms->Core->Cache->SetOption('mobile_layout_id', $cData[I12789]); $this->cms->Core->Cache->saveOptions(); $res =true; break; }return true; }}