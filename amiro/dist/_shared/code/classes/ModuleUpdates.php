<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       21240 xkqwmqpswnxpzgptkiksqpnwyqywzgxpmrsuwrmlliiurwmlqqrylxzgryrgkrgykrgipnir
 */ ?><?php foreach(array(13175=>'wjzddqd|gzTo',13176=>"",13177=>"SQJ",13178=>"FUNw|mNwjUsqd|gzTo",13179=>"SZtQfrHI",13180=>"dqjqwT?.JMWQnWQ.?FRhi?WID|OHDt|uDQrD?coqRq?.DBD|uDQr.=1",13181=>'frQQ|vQrDMHn',13182=>'uGSZtQD|QxGMrQS',13183=>'1',13184=>"hRsqR?yb?MnDtZJJ|SZtQ?sqdw?jmimT?1",13185=>"u`MS!u`nZIQ!u`uGSZtQ|SZtZ!szTq}u`rQJQZDQ|SZtQ{?ZD?rQJQZDQ|SZtQ!u`MnDtZJJ|SZtQ!",13186=>"coqRq?}Z`DBD|tBGQ=",13187=>'Y`DMAQ',13188=>'MS',13189=>'|WYRHC',13190=>"MS",13191=>"ZGGJMQS|MS",13192=>"ZSS",13193=>'SQYuP|MD|QnZYJQS',13194=>'SY',13195=>"FRhi?.WID|GZPQD.?",13196=>'rQS',13197=>'fMJQnZIQ',13198=>'fuJJ|SQDWrMGtMHn',13199=>'MnDtZJJ|SZtQ',13200=>'+',13201=>'nZIQ',13202=>'HK',13203=>'SQJ|MS',13204=>'fMJQ|',13205=>'rQJQZDQ|SZtQ',13206=>"vZJMS|tMJJ",13207=>'fHrWQsj',13208=>'Ugs|q|jmdT',13209=>'&?',13210=>'vZJuQ',13211=>'WOQWKnQCuG',13212=>'DGQWMZJ',13213=>'uGSDQrv|urJ',13214=>"|DuYfHrI",13215=>'DtZtuD',13216=>'',13217=>"wZnnHt?MnDtZJJ?uGSZtQ%?",13218=>"wZnnHt?DtZrt?tH?MnDtZJJ?uGSZtQ%?",13219=>'tBGQ',13220=>'YJuQ',13221=>'SQDWrMGtMHn',13222=>'GrHSuWtD',13223=>'WHSQ|uGSZtQS',13224=>'WHSQ',13225=>'SY|rQE',13226=>'ZWt|SY',13227=>'IBDEJ|rQE',13228=>'`',13229=>'IBDEJ|WurrQnt',13230=>'GOG',13231=>'rHCD',13232=>"[[wRmT%?wZnnHt?unMnDtZJJ?uGSZtQ%?",13233=>"wZnnHt?DtZrt?tH?unMnDtZJJ?uGSZtQ%?") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'CMSUpdate.php'; require_once $GLOBALS[I13175] .'SiteArchive.php'; require_once $GLOBALS[I13175] .'SiteLock.php'; require_once $GLOBALS[I13175] .'ProgressIndicator.php'; class ModuleUpdates extends CMS_ActModule {public $llllI11; public $lllllII; public $lllllIl; public $lllllIL; public $lllllI1; function ModuleUpdates(&$cms, &$db, &$cModule) {parent::CMS_ActModule($cms,$db,$cModule); }function _Init($IIll1l1 =Array(), $IIll1LI ="", $IIll1Ll =I13176, $aOptions =Array()) {$IIIIL11["allowed_actions"] =Array("restore","update","update_nobackup" ,I13177, 'view', 'checknew', 'checknewup'); $IIIIL11["lang_data"] =false; $aOptions += $IIIIL11; parent::_Init($IIll1l1, $IIll1LI, $IIll1Ll, $aOptions); }function _InitAdmin() {require_once($GLOBALS[I13178]."func_gui.php"); parent::_InitAdmin(); $this->llllI11 =CMSUpdate::TTTI1II(); $llllllI =$GLOBALS['IIlIlIL']; $this->lllllII =$llllllI.'var/updates/'; $this->tmpDir =$llllllI.'var/tmp/'; $this->lllllI1 =TI1lIII()==1; }function TTlTll1() {parent::TTlTll1(); }function TTTlIII() {parent::TTTlIII(); $this->filter->UpdateFieldDBName(I13179, "release_date"); $this->filter->UpdateFieldDBName("dateto", "release_date"); }function TTTlI1I(&$vData) {$lllllll =$this->db->getValue(I13180); if (mb_substr($lllllll,0,4) == 'FREE') $vData[I13181] ='1'; $valid_till =$this->TIl1lIT(); if ($valid_till != false and $valid_till != 'ERROR') {$llllllL =strtotime($valid_till); $vData['updates_valid_till'] =AMI_Lib_Date::formatDateTime(date('Y-m-d', $llllllL)); if ($llllllL <time() -60*60*24*30) {$vData[I13182] ='1'; $this->cms->AddStatusMsg('update_expired','red'); }elseif ($llllllL <time() +60*60*24*30) {$vData['updates_low'] =I13183; $this->cms->AddStatusMsg('update_low','red'); }}$llllll1 =new CMSUpdateSet($this->db); $res =$llllll1->TTTIl1I(); if($res===false) {$vData['local_uplist_disabled'] ='disabled'; }else {$vData['local_uplist_disabled'] =''; }parent::TTTlI1I($vData); }function TTTlI11(&$vData, &$aCustom) {$this->lllllIL =0; $r =$this->db->getRecord("SELECT u.id ". "FROM cms_updates u LEFT JOIN cms_site_archives a ON u.id_backup=a.id ". "WHERE a.sys_type=".ARCH_SYSTYPE_SYS. " AND a.filename NOT LIKE '%/%' ". "AND u.inst_status='ok' ". I13184); $this->lllllIL =intval($r['id']); $this->browser->InitSQL(I13185. "u.file_status,u.inst_status,a.file_size AS bk_size,u.checksum ", "FROM cms_updates u LEFT JOIN cms_site_archives a ON u.id_backup=a.id ", I13186.ARCH_SYSTYPE_SYS." OR ISNULL(a.id)) ".$this->_ApplyFilters().$this->TTTlIl1(), I13176, "release_date", "id desc", array('bk_size'=>I13187) );$this->cms->Pager->AddSQLJoinedTables($this->cms->Core, 'u', Array('b'=>'cms_backups')); $aCustom["fields"] += Array( I13188=>array('action'=>'callback','object'=>&$this,'method'=>I13189), "action_view"=>Array("action"=>"flagicon", "value"=>I13176, I13190=>"view_id", "on"=>$this->moduleName."_list:view","off"=>I13176), );$aCustom[I13191] =I13190; $aCustom["legend"] =Array("leg_view"); $aCustom["form_data"]["buttons"] =Array(I13192); if(!$this->llllI11) {$this->cms->AddStatusMsg('update_impossible','red'); }elseif(!$this->lllllI1) {$this->cms->AddStatusMsg('no_file_write_perm','red'); }if($this->TIl1lT1()) {$this->cms->AddStatusMsg(I13193,'red'); }parent::TTTlI11($vData, $aCustom); }function TTTI11T(&$udata) {if(!$this->llllI11 || !$this->lllllI1) return false; if(!is_array($udata)) return false; if(!CMSUpdate::fileSize($this->lllllII,$udata['filename'])) return false; if($this->TIl1lT1()) return false; $IIlI1IL =&$udata['products']; foreach($IIlI1IL as $IIlI1I1=>$vers) {if(!CMSUpdate::TTTI1l1($IIlI1I1,'code',$IIlI1IL,$this->db) || !CMSUpdate::TTTI1l1($IIlI1I1,I13194,$IIlI1IL,$this->db) || !CMSUpdate::TTTI1l1($IIlI1I1,'php',$IIlI1IL,$this->db) || !CMSUpdate::TTTI1l1($IIlI1I1,'mysql',$IIlI1IL,$this->db)) return false; }if(!empty($udata['std_locale_restriction'])){ $aStat =array(); $sql ="SELECT `lang`, COUNT(`id`) pages " .I13195 ."WHERE `lang` != 'en' " ."GROUP BY `lang` " ."HAVING `pages` > 1"; $rs =$this->db->select($sql); if($rs->numRows() >1){ $this->cms->AddStatusMsg('status_std_locale_restriction', I13196); return false; }}return true; }function TIl1lT1() {return(!empty($GLOBALS['sys']['err']['read_templates_from_disk'])); }function _cbRow(&$aItem,&$aData) {$udata =unserialize($aItem['update_data']); $lllllLI =CMSUpdate::fileSize($this->lllllII,$udata[I13197]); $lllllLl =intval($aItem['bk_size']); $aItem['description'] =$this->cms->stripLine($udata['description'],350); $aItem['full_description'] =$udata[I13198]; $aItem['link'] =$udata['link']; $lllllLL =$aItem['file_status']; $IIlIL1l =$aItem['inst_status']; if($aItem[I13199]== '0000-00-00 00:00:00') $aItem[I13199] ='-'; if($aItem['release_date']== '2034-01-01') $aItem['release_date'] =I13200; if(($IIlIL1l=='none' || $IIlIL1l=='err') && $lllllLL=='ok' && $this->TTTI11T($udata)){ if ($aItem['checksum'] === md5($aItem[I13201].$GLOBALS['ROOT_PATH_WWW'].$aItem['update_data'])) {if (empty($udata['force_backup'])) $lllllL1 ="_list:update"; else $lllllL1 ="_list:update_force_backup"; $aItem['action_update'] =$this->cms->Gui->getAbs($this->moduleName.$lllllL1,array('update_id'=>$aItem[I13188])); }else {$aItem[I13201] .= '!'; }}$lllll1I =$lllllLl || $lllllLI; if($udata[I13197] !== 'dummy' && ($IIlIL1l==I13202 && $lllll1I || $IIlIL1l=='none' || $IIlIL1l=='err')) {$aItem['action_del'] =$this->cms->Gui->getAbs($this->moduleName."_list:del",array(I13203=>$aItem[I13188])); }if($this->lllllI1 && $aItem[I13188]==$this->lllllIL) {$aItem['action_restore'] =$this->cms->Gui->getAbs($this->moduleName."_list:restore",array('restore_id'=>$aItem[I13188])); }$aItem['file_status'] =$this->words[I13204.$lllllLL]; $aItem['inst_status'] =$this->words['inst_'.$IIlIL1l]; if($aItem[I13199] != I13200){ $aItem[I13199] =AMI_Lib_Date::formatDateTime($aItem[I13199], AMI_Lib_Date::FMT_DATE); $aItem['inst_status'] .= ("<br>" .$aItem[I13199]); }if($aItem[I13205] != I13200){ $aItem[I13205] =AMI_Lib_Date::formatDateTime($aItem[I13205]); }$lllllLl =$lllllLl ?getBytesAsText($lllllLl,$this->words,1,2) :I13200; $lllllLI =$lllllLI ?getBytesAsText($lllllLI,$this->words,1,1) :I13200; $aItem['size'] ="$lllllLI/$lllllLl"; if(($lllllLI != I13200) && ($lllllLl != I13200)){ $aItem['size'] ="$lllllLI/<br>$lllllLl"; }}function TIl1lIT($silent=false) {if (!$this->module->GetOption("valid_check")) return false; $lllll1l =$this->cms->Core->ReadOption($lllll1L, "srv_updates", I13206); if (!$lllll1l or $lllll1L['big_value'] >2) {$opt =array(); $opt['force_dl_list'] =isset($this->cms->VarsPost['uplistOpt']) && $this->cms->VarsPost['uplistOpt'] == I13207; $opt['updserv_url'] =$this->module->GetOption('updates_server_url'); if(empty($opt['updserv_url'])) $opt['updserv_url'] ='http://updates.amirocms.com/'; $opt['updserv_url_backup'] ='http://updates.amiro.ru/'; $us =new CMSUpdateSet($this->db); $valid_till =$us->TTTI1TT($opt); if($valid_till===false) {if(!$silent) {if($us->TTTITI1('UPD_E_DLOADER')) $this->cms->AddStatusMsg('no_downloader',I13196); elseif($us->TTTITI1(I13208)) $this->cms->AddStatusMsg('updates_list_corrupt',I13196); elseif($us->info('status')) print('['.$us->info('status').I13209.$us->info('message')); else $this->cms->AddStatusMsg('err_get_updates',I13196); }}else {if (mb_substr($valid_till, 0, 7) === 'EXPIRED') {$valid_till =mb_substr($valid_till, 7); }$this->cms->Core->WriteOption("srv_updates", I13206, $valid_till, I13183); }}else {$valid_till =$lllll1L[I13210]; $this->cms->Core->WriteOption("srv_updates", I13206, $valid_till, intval($lllll1L['big_value'])+1); }return $valid_till; }function TTTlITT($IIIL11l, $cId, $cModule =''){ switch($IIIL11l) {case 'checknew': $this->TIl1lII(); break; case I13211: $this->TIl1lII(true); break; case 'update': $this->TIIlITI($cId,$cModule); break; case 'update_nobackup': trigger_error("Update without backup",E_USER_WARNING); $this->TIIlITI($cId,$cModule,true); break; case 'restore': $this->TIITllI($cId,$cModule); break; case I13212: $this->TIIlT1I($cId,$cModule); break; default: parent::TTTlITT($IIIL11l,$cId,$cModule); }}function TIl1lII($IIlILIL=false) {$opt =array(); $opt['fullup'] =$IIlILIL; $opt['force_dl_list'] =isset($this->cms->VarsPost['uplistOpt']) && $this->cms->VarsPost['uplistOpt'] == I13207; $opt[I13213] =$this->module->GetOption('updates_server_url'); if(empty($opt[I13213])) $opt[I13213] ='http://updates.amirocms.com/'; $opt['updserv_url_backup'] ='http://updates.amiro.ru/'; $us =new CMSUpdateSet($this->db); $pi =new ProgressIndicator($this->cms->Gui,$this->moduleName.I13214); $pi->show(); $lllll11 =$us->TTTIl11($opt,$pi,$this->words); $pi->setHeader(''); $pi->TI1TlTI(PIND_ALL,false); if($lllll11===false) {if($us->TTTITI1('UPD_E_DLOADER')) $pi->TI1TlIl($this->words['no_downloader']); elseif($us->TTTITI1(I13208)) $pi->TI1TlIl($this->words['updates_list_corrupt']); elseif($us->info(I13215)) $pi->TI1TlIl('['.$us->info(I13215).I13209.$us->info('message')); else $pi->TI1TlIl($this->words['err_get_updates']); }else {if($us->TTTITT1()) $pi->TI1TlIl($this->words['err_dload_files']); else $pi->TI1TI1T(I13216); if($lllll11) $pi->setHeader($this->words['num_new_updates'].': '.$lllll11); else $pi->setHeader($this->words['no_new_updates']); }$pi->TI1TlII(); exit; }function TIIlITI($cId, $cModule, $IIlI1lI=false) {$pi =new ProgressIndicator($this->cms->Gui,$this->moduleName.I13214); $pi->show(); $cId =intval($cId); $upd =new CMSUpdate($this->db,$cId); if(!$this->llllI11) {trigger_error("Cannot update but _ActionUpdate() called, update ID=$cId",E_USER_WARNING); exit; }if(!$upd->install($this->cms->Gui,$pi,$this->words,$IIlI1lI)) {$errmsg =$upd->errorsAsString()."\n\n==== Update log ====\n\n".$upd->TTTI111(). "\n\n==== End update log ====\n\n"; switch($upd->TTTI11I()) {case 'err': trigger_error("Site update failed, rolled back: ".$errmsg,E_USER_WARNING); break; case 'rb_err': trigger_error("**CRIT: Site update failed, rollback failed: ".$errmsg,E_USER_WARNING); break; default: if($upd->TTTITl1()) {trigger_error(I13217.$errmsg,E_USER_WARNING); }else {trigger_error(I13218.$errmsg,E_USER_WARNING); }break; }}$pi->TI1TlII(); exit; }function TIIlT1I($cId, $cModule) {$type =addslashes($this->cms->VarsGet[I13219]); $IIlILLI =addslashes($this->cms->VarsGet['upname']); switch($type) {case 'del': CMSUpdate::deleteByName($this->db,$IIlILLI); break; case I13215: $IIlIL1l =addslashes($this->cms->VarsGet[I13215]); CMSUpdate::TTTI1ll($this->db,$IIlILLI,$IIlIL1l); break; default: break; }}function _ActionDel($cId, $cModule) {$up =&CMSUpdate::TTTI1lT($this->db,intval($cId)); if($up==null) {trigger_error("Could not purge CMSUpdate($cId): object not found",E_USER_WARNING); return; }if(!$up->purge()) {$this->cms->AddStatusMsg('err_purge_update',I13196); trigger_error("Cannot purge update id=$cId: ".$up->errorsAsString(),E_USER_WARNING); return; }$this->cms->AddStatusMsg('files_deleted',I13220); }function TTTll1l($cId, $cModule) {parent::TTTll1l($cId, $cModule); $this->db->query("SELECT * FROM cms_updates WHERE id=".intval($cId)); $this->db->next_record(); $this->itemData['ACTION'] ='view'; $udata =unserialize($this->db->Record['update_data']); $this->itemData[I13221] =$udata[I13221]; $this->itemData[I13198] =$udata[I13198]; $this->itemData['link'] =$udata['link']; $this->itemData[I13205] =AMI_Lib_Date::formatDateTime($this->db->Record[I13205], AMI_Lib_Date::FMT_DATE); $this->itemData[I13199] =AMI_Lib_Date::formatDateTime($this->db->Record[I13199], AMI_Lib_Date::FMT_DATE); if($this->db->Record[I13199]== '0000-00-00 00:00:00') $this->itemData[I13199] =I13200; if($this->db->Record[I13205]== '2034-01-01') $this->itemData[I13205] =I13200; $llllLII =$udata[I13222]; foreach($llllLII as $IIlI1I1=>$vers) {$rows =I13216; $row =array(); $row['prod_name'] =$IIlI1I1; $row['code_req'] =$vers['from']['code']; $row[I13223] =$vers['to']['code']; $row['code_current'] =$this->cms->Core->getVersion($IIlI1I1,'code'); if(!CMSUpdate::TTTI1l1($IIlI1I1,I13224,$llllLII,$this->db)) $row['code_current'] =$this->cms->Gui->getAbs('srv_updates_subform:ver_invalid', array('version'=>$row['code_current'])); $row[I13225] =$vers['from'][I13194]; $row['db_updated'] =$vers['to'][I13194]; $row['db_current'] =$this->cms->Core->getVersion($IIlI1I1,I13226); if(!CMSUpdate::TTTI1l1($IIlI1I1,I13194,$llllLII,$this->db)) $row['db_current'] =$this->cms->Gui->getAbs('srv_updates_subform:ver_invalid', array('version'=>$row['db_current'])); $row[I13227] =$vers['from']['mysql']; $tmp =$this->db->TT1lITI(); $row['mysql_current'] =mb_substr($tmp,0,1).'.'.intval(mb_substr($tmp,1,2)).I13228.intval(mb_substr($tmp,3,2)); if(!CMSUpdate::TTTI1l1($IIlI1I1,'mysql',$llllLII,$this->db)) $row['mysql_current'] =$this->cms->Gui->getAbs('srv_updates_subform:ver_invalid', array('version'=>$row[I13229])); $row['php_req'] =$vers['from']['php']; $row['php_current'] =phpversion(); if(!CMSUpdate::TTTI1l1($IIlI1I1,I13230,$llllLII,$this->db)) $row['php_current'] =$this->cms->Gui->getAbs('srv_updates_subform:ver_invalid', array('version'=>$row['php_current'])); $pi[I13231] .= $this->cms->Gui->get('srv_updates_subform:ver_info_row',$row); }$this->itemData['ver_info'] =$this->cms->Gui->get('srv_updates_subform:ver_info',$pi); }function TIITllI($cId,$cModule) {ignore_user_abort(true); $pi =new ProgressIndicator($this->cms->Gui,$this->moduleName.I13214); $pi->show(); $cId =intval($cId); $upd =new CMSUpdate($this->db,$cId); if(!$upd->uninstall($this->cms->Gui,$pi,$this->words)) {if($upd->TTTITl1()) {trigger_error(I13232.$upd->errorsAsString(),E_USER_WARNING); }else {trigger_error(I13233.$upd->errorsAsString(),E_USER_WARNING); }}$pi->TI1TlII(); exit; }}