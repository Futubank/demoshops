<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       17831 xkqwgwktzyplzlssrkmwlzwwmniklktgspgqilmrqnsnqtyqqxxknwzinnpsqktlwsinpnir
 */ ?><?php foreach(array(13339=>'SYSuIG|CrMtQ',13340=>'Tbgq=iBmdzi?',13341=>'DGQWTZYJQD',13342=>'CrMtQ',13343=>'YBtQD',13344=>'nuI|QvQntD',13345=>"?",13346=>"\\n",13347=>"{^\n",13348=>'rY',13349=>'tZYJQDsHnQ',13350=>'rQDtHrQ',13351=>'+',13352=>'[~',13353=>'?fHr?rQZSMnP',13354=>'SYSuIG|rQDtHrQ') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'BaseObject.php'; class PHPMysqlDump extends BaseObject {public $file; public $opt; public $dbh; public $tables; public $bufSize; public $lllLlI1; public $I1ILlII; public $fd; public $lllLllI; public $lllLlll; public $lllLllL; public $lllLll1; public $lllLlLI; public $lllLlLl; function PHPMysqlDump(&$db,$file,$opt=false) {$this->BaseObject(); $this->TTTIT1I(I13339); $this->TTTIT1I('dbdump_restore'); $this->opt =array( 'num_events' => 10, 'specTables' => false, 'nodata' => false );$this->dbh =&$db; $this->file =$file; $this->lllLlI1 =I13340; $charset =$this->dbh->getCharset(); if($this->dbh->TT1lITI()>=40100 && $charset!==false) {$charset =explode(':',$charset); $this->lllLlI1 .= $charset===false ?'' :"DEFAULT CHARSET=$charset[0]"; }if($opt!==false) $this->TITl1lI($opt); $this->bufSize =1024*1024; $this->timeLimit =30; $this->tables =false; $this->I1ILlII =0; $this->fd =0; $this->lllLllI =false; $this->lllLlll =0; $this->lllLllL =$this->bufSize; $this->lllLlLl =array ();}function TITl1lI($opt) {foreach($opt as $k=>$v) {$this->opt[$k] =$opt[$k]; }}function numTables($reget=false) {if(is_array($this->tables)) return sizeof($this->tables); return false; }function TIl1l11() {if(is_array($this->tables)) return true; $lllLlLL =$this->dbh->tableList(); $this->tables =array(); foreach($lllLlLL as $IIlIlll) {if(!isset($this->opt['tables']) || in_array($IIlIlll,$this->opt['tables'])) {if(is_array($this->opt[I13341])) {$lllLlL1 =mb_strlen($IIlIlll); if($IIlIlll[$lllLlL1-1]=='_') {$tmp =mb_substr($IIlIlll,0,$lllLlL1-1); if(in_array($tmp,$this->opt[I13341])) continue; }}array_push($this->tables,$IIlIlll); }}return true; }function _write($str) {if(!fwrite($this->fd,$str)) {fclose($this->fd); @unlink($this->file); return $this->TTTITTI("Cannot write to $this->file",'E_DUMP_WRITE'); }$this->I1ILlII += mb_strlen($str); if($this->lllLllI) {$lllLl1I =intval($this->I1ILlII/$this->lllLllL); if($lllLl1I>$this->lllLlll) {$this->_fireEvent('write','progress'); $this->lllLlll =$lllLl1I; }}return true; }function _fireEvent($op,$event) {switch($op) {case I13342: $data =array('bytes'=>$this->I1ILlII, 'tablesDone'=>$this->lllLll1,'tablesTotal'=>$this->nTables); break; case 'restore': $data =array(I13343=>$this->I1ILlII,'tablesDone'=>$this->lllLll1); break; default: trigger_error("Dump: Unknown op '$op'",E_USER_ERROR); }$this->TTTIITI('dbdump_'.$op,$event,$data); }function write() {if(!$this->TIl1l11()) return false; if(!($this->fd =fopen($this->file,'wb'))) return $this->TTTITTI("Cannot open $this->file for writing",'E_DUMP_WRITE'); $this->I1ILlII =0; $this->lllLlll =0; $this->lllLllI =$this->TTTIITl(I13339); $this->nTables =sizeof($this->tables); $this->lllLll1 =0; $lllLl1l =$lllLl1L =$this->nTables/$this->opt[I13344]; if(!$this->_write("SET NAMES UTF8;\n")) return false; foreach($this->tables as $tmp=>$IIlIlll) {$r =$this->dbh->getRecord("SHOW CREATE TABLE `$IIlIlll`",DBC_RAW_QUERY,MYSQL_NUM); $create =$r[1]; $lllLl11 =$IIlIlll; if(is_array($this->opt[I13341]) && in_array($IIlIlll,$this->opt[I13341])) {$create =preg_replace("/(CREATE\\s+TABLE\\s+[`]?$IIlIlll)/i",'${1}_',$create); $lllLl11 .= '_'; }$create ="DROP TABLE IF EXISTS `$lllLl11`;\n".str_replace("\n",I13345,$create).";\n"; if(!$this->_write($create)) return false; $this->III1Ill =true; if(!is_array($this->opt['nodata']) || !in_array($IIlIlll,$this->opt['nodata'])) {$rs =&$this->dbh->select("SELECT * FROM `$IIlIlll`",DBC_UNBUF_QUERY|DBC_RAW_QUERY); $n =0; while($r =&$rs->nextRecord()) {if(!((++$n)%100)) @set_time_limit($this->timeLimit); foreach($r as $i=>$v) {if($r[$i]!==null) {$r[$i] =addslashes($r[$i]); $r[$i] =str_replace("\n",I13346,$r[$i]); $r[$i] ='"'.$r[$i].'"'; }else {$r[$i] ='NULL'; }}$sql ="INSERT `$lllLl11` VALUES(".implode(',',$r).I13347; if(!$this->_write($sql)) return false; }}$this->lllLll1++; if($this->lllLllI && $this->lllLll1>=$lllLl1l) {$lllLl1l += $lllLl1L; $this->_fireEvent(I13342,'progress'); }}fclose($this->fd); if($this->lllLllI) {$data =array('tablesDone'=>$this->lllLll1); $this->TTTIITI(I13339,'done',$data); }return true; }function TIl11TT($fd) {$str =''; do {$I1IlLLl =fgets($fd,$this->bufSize); if($I1IlLLl===false) {if(feof($fd)) break; return $this->TTTITTI("Cannot read from DB dump file: read error"); }$str .= $I1IlLLl; }while(strlen($I1IlLLl)==$this->bufSize-1); $this->I1ILlII += mb_strlen($str); if($this->lllLllI) {$lllLl1I =intval($this->I1ILlII/$this->lllLllL); if($lllLl1I>$this->lllLlll) {$this->_fireEvent('restore','progress'); $this->lllLlll =$lllLl1I; }}if(preg_match('/^\s*CREATE\s+TABLE\s+(`?)cms_/',$str)) {$str =preg_replace('/^(.*)\).*?;\s*$/',"\$1) $this->lllLlI1 ;",$str); }return $str; }function restore() {$opt =&$this->opt; $file =$this->file; if(!($fd =fopen($file,I13348))) return $this->TTTITTI("Cannot open $file for reading"); $this->lllLllI =$this->TTTIITl('dbdump_restore'); $num =0; $res =true; $this->lllLll1 =0; $this->I1ILlII =0; $this->lllLlll =0; while(!feof($fd)) {if(($line =$this->TIl11TT($fd))===false) {$res =false; break; }$num++; if(!($num%100)) @set_time_limit($this->timeLimit); if(!($len=mb_strlen($line))) continue; if(preg_match('/^\s*CREATE\s+TABLE/i',$line)) {$create =true; $res =$this->dbh->TT1lIIT($line,DBC_RAW_QUERY|DBC_NO_HALT); }else {$create =false; $res =$this->dbh->rawExecute($line) ?true :false; }if($res===false) break; $this->III1Ill =true; if($this->lllLllI && $create) {$this->lllLll1++; $this->_fireEvent('restore','progress'); }}fclose($fd); if($res && $this->lllLllI) {$data =array(I13349=>$this->lllLll1); $this->TTTIITI('dbdump_restore','done',$data); }return $res; }function TIl11TI($sql, &$rest) {$aSQL =array ();$lines =explode("\n", $sql); $lllLLII =sizeof($lines); $lineNumber =0; $lllLLIl =true; $rest =$lllLLIL =''; while ($lineNumber++ <$lllLLII) {$this->lllLlLI++; @set_time_limit($this->timeLimit); if (!($this->lllLlLI %250)) {$this->_fireEvent(I13350, 'split'); }$line =$lines[$lineNumber-1] ."\n"; if (!$lllLLIL && ($line[0] == '#' || ($line[0] == '-' && $line[1] == I13351))) {continue; }for ($pos =0 ;$pos <mb_strlen($line) ;$pos++) {@set_time_limit($this->timeLimit); $lllLLI1 =$line[$pos]; $lllLLlI =mb_substr($line, $pos, 2); if ($lllLLlI == "\\'" && ($pos >0 ?$line[$pos -1] != "\\" :true)) {if ($lllLLIl) {$rest .= $lllLLlI; }$pos++; }else if ($lllLLIL) {if ($lllLLIl) {$rest .= $lllLLI1; }if ($lllLLI1 == $lllLLIL) {$lllLLIL =''; }}else {if ($lllLLlI == '/*') {$lllLLIl =false; $pos++; }else if ($lllLLlI == I13352 && !$lllLLIl) {$lllLLIl =true; $pos++; }else if ($lllLLI1 == "'") {$lllLLIL =$lllLLI1; if ($lllLLIl) {$rest .= $lllLLI1; }}else if ($lllLLI1 == ';') {if (mb_strlen($rest =ltrim($rest))) {$aSQL[] =$rest; }$rest =''; }else {if ($lllLLIl) {$rest .= $lllLLI1; }}}}}return $aSQL; }function TIl11Tl($fd, &$rest) {do {$str =''; do {@set_time_limit($this->timeLimit); $I1IlLLl =fread($fd, $this->bufSize); if (!mb_strlen($I1IlLLl)) {if (feof($fd)) {break; }return $this->TTTITTI("Cannot read from DB dump file: read error"); }$str .= $I1IlLLl; }while (mb_strlen($str) <$this->bufSize); $this->I1ILlII += mb_strlen($str); if ($this->lllLllI) {$lllLl1I =intval($this->I1ILlII /$this->lllLllL); if ($lllLl1I >$this->lllLlll) {$this->_fireEvent(I13350, 'progress'); $this->lllLlll =$lllLl1I; }}$aSQL =$this->TIl11TI($rest .$str, $rest); }while ((sizeof($aSQL) <1) && !feof($fd)); foreach ($aSQL as $index => $str) {if (preg_match('/^\s*CREATE\s+TABLE\s+(`?)/si', $str)) {$aSQL[$index] =preg_replace('/^(.*)\).*?;\s*$/s',"\$1) $this->lllLlI1 ;", $str); }}return $aSQL; }function TIl11T1($lllLLll =array ()){if (!($fd =fopen($this->file, I13348))) {return $this->TTTITTI('Cannot open ' .$this->file .I13353); }$this->lllLllI =$this->TTTIITl('dbdump_restore'); $lllLLlL =true; $res =true; $this->lllLll1 =0; $this->I1ILlII =0; $this->lllLlll =0; $rest =''; $this->lllLlLI =0; $this->lllLlLl =array ();$lllLLl1 =!empty($this->opt['collect_created_tables']); if (sizeof($lllLLll)) {$lllLLLI ='/^\s*(?:' .'INSERT|UPDATE|DELETE|REPLACE|TRUNCATE|' .'CREATE|DROP|' .'LOAD DATA|SELECT\s+.*\s+INTO\s+.*\s+FROM|COPY|' .'ALTER|GRANT|REVOKE|' .'LOCK|UNLOCK' .')\s+(?:INTO\s+)?(?:TABLE\s+(?:IF\s+EXISTS\s+)?)?`?(' .implode('|', $lllLLll) .')`?/si'; }while (!feof($fd)) {if (($aLines =$this->TIl11Tl($fd, $rest)) === false) {$res =false; break; }foreach ($aLines as $line) {if (mb_strlen($line) <1 || (isset($lllLLLI) && !preg_match($lllLLLI, $line))) {continue; }if ($create =(bool)preg_match('/^\s*CREATE\s+TABLE\s+([^\s\(]+)/si', $line, $matches)) {$res =$this->dbh->TT1lIII($line, DBC_RAW_QUERY |DBC_NO_HALT); if ($res && $lllLLl1) {$this->lllLlLl[] =$matches[1]; }}else {$res =(bool)$this->dbh->rawExecute($line); }if ($res === false && $lllLLlL) {if ($this->lllLllI) {$data =array ('query' => $line); $this->TTTIITI(I13354, 'error', $data); }}$lllLLlL &= $res; if ($res === false) {continue; }$this->III1Ill =true; if ($this->lllLllI && $create) {$this->lllLll1++; $this->_fireEvent(I13350, 'progress'); }}}fclose($fd); if ($this->lllLllI) {$data =array(I13349 => $this->lllLll1); $this->TTTIITI(I13354, 'done', $data); }return $lllLLlL; }function TIl11IT() {if (is_array($this->lllLlLl)) {foreach ($this->lllLlLl as $table) {$sql ="DROP TABLE IF EXISTS " .$table; $this->dbh->rawExecute($sql); }}}}?>