<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       55077 xkqwltwkngiyynipsngwpgzxypwqglgkuxmpzkilngtxmyxnkynlqnxmlgkwisnrnirmpnir
 */ ?><?php foreach(array(13384=>'oTTg~1`0?403?FHrYMSSQn',13385=>'FHrYMSSQn!?MnvZJMS?URj,?',13386=>'?Zt?',13387=>"tQIGJZtQD~GZPQD`tGJ",13388=>"tQIGJZtQD~IQnu`tGJ",13389=>"IQnu",13390=>"IZMn",13391=>"MIP|IZMn",13392=>"DuY",13393=>"DuY2",13394=>"MIP|DuY",13395=>"YHttHI",13396=>"tHG",13397=>"|GZPQ",13398=>"tQIGJZtQD~JZBHutD~",13399=>"",13400=>'',13401=>"dqjqwT?JZnP?",13402=>"FRhi?WID|GZPQD?",13403=>"JZnP",13404=>"dqjqwT?MS?",13405=>"?",13406=>"hRsqR?yb?MS?jmimT?1",13407=>"MS",13408=>"!?",13409=>"coqRq?MS='",13410=>"'?",13411=>"jmimT?1",13412=>"'!'",13413=>"coqRq?IHSuJQ|nZIQ?mN}'",13414=>"'{?",13415=>"hRsqR?yb?MS?",13416=>"coqRq?IHSuJQ|nZIQ='",13417=>"coqRq?MG|ZrQZ?#?0?",13418=>"dqjqwT?MG|ZrQZ?",13419=>"MG|ZrQZ",13420=>"GZtO",13421=>"nZIQ",13422=>"nZv|YZr",13423=>"!?YHSB?",13424=>"dqjqwT?GZrQnt|MS!?nZIQ!?MG|ZrQZ!?MD|GrMntZYJQ!?UNmX|TmiqdTzig}JZDt|WOZnPQS{?ZD?uJZDt|WOZnPQS!?",13425=>"OtIJ|tMtJQ!?OtIJ|KQBCHrSD!?OtIJ|SQDWrMGtMHn!?GZPQ|nHMnSQx!?OtIJ|tMtJQ|MnOQrMt!?DOHC|DMYJMnPD?",13426=>"'",13427=>"tMtJQ",13428=>"OtIJ|tMtJQ",13429=>"KQBCHrSD",13430=>"OtIJ|KQBCHrSD",13431=>"SQDWrMGtMHn",13432=>"OtIJ|SQDWrMGtMHn",13433=>"tMtJQ|MnOQrMt",13434=>"OtIJ|tMtJQ|MnOQrMt",13435=>"DOHC|DMYJMnPD",13436=>"||GZPQ|nZIQ",13437=>"uJZDt|WOZnPQS",13438=>'GZPQ|nHMnSQx',13439=>'mmJjmJj',13440=>'dqjqwT?GZPQ|nHMnSQx?FRhi?WID|GZPQD?coqRq?MS=',13441=>"GZrQnt|MS",13442=>"DMYJ|YZr",13443=>"GZPQ|nZIQ",13444=>"%nZIQ",13445=>"MD|GrMntZYJQ",13446=>"GrMnt|fJZP",13447=>"GrMnt|vQrDMHn",13448=>"%GrMnt|vQrDMHn",13449=>"GrMnt|JMnK",13450=>"YHSB",13451=>"%YHSB",13452=>"%nZv|DGJMttQr",13453=>"GZPQ|JMnK",13454=>"DWrMGt|JMnK",13455=>"DGJMttQr",13456=>"GZPQ|MS",13457=>"MtQI",13458=>"%nZv|MtQI",13459=>"%nZv|YZr",13460=>'GZPQ|404',13461=>'GrMnt|vQrDMHn',13462=>"%DMYJ|DGJMttQr",13463=>'IHSuJQ|nZIQ',13464=>"|ZWtMvQ",13465=>"%DMYJ|YZr",13466=>"%GZtO|DGJMttQr",13467=>"%GZtO",13468=>"DuYIQnu",13469=>"OZvQ|DuYIQnu",13470=>"IZMniQnujQvQJD",13471=>"tHGmS",13472=>"DuYiQnusZtZ",13473=>"1",13474=>"MIP|IQnu|nHrIZJ",13475=>"MIP|",13476=>"MIP|IQnu|HvQr",13477=>"MIP|IQnu|ZWtMvQ",13478=>"'!",13479=>"DuYdGJMttQr",13480=>"uDQ|nHMnSQx",13481=>"rQJnHfHJJHC",13482=>'rQJ="nHfHJJHC"',13483=>"nHMnSQx|DtZrt",13484=>'#nHMnSQx@',13485=>"nHMnSQx|QnS",13486=>'#~nHMnSQx@',13487=>"JMnK",13488=>"JQvQJ",13489=>"WurrQntJBzWtMvQmtQI",13490=>"ZWtMvQ|WOMJS",13491=>"|MtQI",13492=>"%",13493=>"|YJHWK",13494=>"GZrQnt|IQnu|MS",13495=>"WHntQnt",13496=>"DuYIQnuD",13497=>"DQGZrQtQduYiQnu",13498=>'DuYIQnu',13499=>"ZJJ",13500=>"ZJJHCQS|IQnu|JQvQJ",13501=>"|DGJMttQr",13502=>"!",13503=>"IQnu|IZMn|MtQI",13504=>"LDSZtZ",13505=>"%IQnu|LDGrQJHZS",13506=>"IZMn|IQnu",13507=>"DuYIQnuQD",13508=>"IQnu|YHttHI|MtQI",13509=>"YHttHI|IQnu",13510=>"IQnu|tHG|MtQI",13511=>"tHG|IQnu",13512=>"GZPQD",13513=>"vMrtuZJ|JMnKD",13514=>"~",13515=>"uDQS|vMrtuZJ|IHSuJQD",13516=>"GuYJMW",13517=>"IHSuJQ|nZIQ",13518=>"frHnt|JMnK",13519=>"jZBHut?yJHWKD?WHunt?MD?nHt?MnMtMZJMAQS?Hr?MnvZJMS```",13520=>"dqjqwT?[?",13521=>"JZB|MS",13522=>'OtIJ|OQZS|tZMJ',13523=>"!?JZB|f",13524=>"|tBGQ",13525=>"|YHSB",13526=>"dqjqwT?JZB|IZMn|YHSB!?WDD|fMJQ!?OtIJ|OQZS|tZMJ",13527=>"?frHI?WID|JZBHutD?COQrQ?MS='",13528=>"JZB|f",13529=>"JZB|IZMn|YHSB",13530=>"WDD|fMJQ",13531=>"jZBHut?MD?nHt?fHunS?}JZB|MS=*",13532=>"dqjqwT?[?frHI?WID|JZBHutD?COQrQ?MD|SQfZuJt='1'?ZnS?JZnP='",13533=>"dqjqwT?YHSB?",13534=>"<<DGQW|IHSuJQ|YHSB<<",13535=>"GZPQ|YHSB",13536=>"JZBHut|MS",13537=>"JZBHut|YHSB",13538=>"JZBHut|WDD",13539=>"JZBHut|YJHWKD",13540=>'JZBHut|YJHWK|nuID',13541=>"FUNw|mNwjUsqd|gzTo",13542=>"funW|JZBHut`GOG",13543=>"WHIIHn%GZPQ|YHSB",13544=>"WHIIHn%IHSuJQ|YHSB",13545=>"DGQW|IHSuJQ|YHSB",13546=>"JZB|YHSB|YHSB",13547=>"MnMt",13548=>'MnMt',13549=>"QnS",13550=>"JZB|YHSB",13551=>"nZIQ!?JZB|YHSB|tBGQ",13552=>"dqjqwT?",13553=>"'?ZnS?JZnP='",13554=>"JZB|YHSB|tBGQ",13555=>"*|nZIQ|&",13556=>"*|WHntQnt|&",13557=>"JZB|",13558=>"JZB",13559=>"JZB|IZMn",13560=>'OQZS',13561=>"dqjqwT?.rQSMrQWtMHn|WHSQ.!?.SQDt|JMnK.?FRhi?.WID|GZPQD.?coqRq?.MS.?=?",13562=>'rQSMrQWtMHn|WHSQ',13563=>'dtZtuD%?200?hk',13564=>'dqRVqR|gRhThwhj',13565=>'?200?hk',13566=>'iHvQS?gQrIZnQntJB',13567=>'FHunS',13568=>'?',13569=>'SQDt|JMnK',13570=>'~',13571=>'jHWZtMHn%?',13572=>'?503?dQrvMWQ?TQIGHrZrMJB?UnZvZMJZYJQ',13573=>'dtZtuD%?503?dQrvMWQ?TQIGHrZrMJB?UnZvZMJZYJQ',13574=>'tQIGJZtQD~JZnP~GZPQ|404`JnP',13575=>'rQSMrQWtMHn|503',13576=>'?404?NHt?FHunS',13577=>'dtZtuD%?404?NHt?FHunS',13578=>'rQSMrQWtMHn|404',13579=>'mnvZJMS?rQSMrQWtMHn?oTTg?DtZtuD?') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header(I13384);die(I13385.__FILE__.I13386.__LINE__);} class Page{ public $_tmpSubMenuCommonData; public $IlLLIII; function Page(&$IlLLIIl, $IlLLIIL =I13387, $IlLLII1 =I13388){ $this->_tmpSubMenuCommonData =array(); $this->template =$IlLLIIL; $this->menuTemplate =$IlLLII1; $this->MenuBlock =I13389; $this->MenuSubBlock =Array(I13390=>I13390, I13391=>I13391, I13392=>I13392, I13393 => I13393, I13394=>I13394, I13395=>I13395, I13396=>I13396); $this->block =I13397; $this->LayoutTemplatesPath =I13398; $this->DefaultId =1; $this->ReturnDefault =true; $this->PathRootId =0; $this->DrawPath =false; $this->DrawNavBar =false; $this->DrawSiblingsBar =false; $this->DrawName =false; $this->DrawPageName =false; $this->DrawPrintLink =false; $this->CachedPageBody =I13399; $this->CachedPageId =false; $this->CachedPageLayoutId =false; $this->CachedPageLayoutBody =I13399; $this->CachedPageLayoutCssName =I13399; $this->CachedPageBlocks =array(); $this->CachedLayoutHTMLHeadTail =I13400; $this->CachedPageHTMLHeadTail =I13400; $this->isLinkConflictsMode =false; $this->IlLLIII =array(); $this->_aUsedLayoutBlocks =array(); $this->db =new DB_si; $this->Cms =&$IlLLIIl; $this->Gui =&$IlLLIIl->Gui; $this->Gui->addBlock($this->block, $this->template); $this->Gui->addBlock($this->MenuBlock, $this->menuTemplate); $this->tree =&Tree::getInstance($this->Cms); $this->tree->lang =$this->Gui->lang; $this->tree->lang_data =$this->Gui->lang; $this->tree->ll1Il1L =true; $this->tree->ll1Il11 =true; }function TTlllT1($IlLLIlI =1, $IlLLIll =0, $IlLLIlL =0, $IlLLIl1 =0, $IlLLIIL =I13399){ if(!empty($IlLLIIL)){ $this->template =$IlLLIIL; $this->Gui->addBlock($this->block, $this->template); }$this->ReturnDefault =$IlLLIlI; $this->DrawPath =$IlLLIll; $this->DrawNavBar =$IlLLIlL; $this->DrawName =$IlLLIl1; }function TTlllIT($IlLLIIL, $cBlockName=I13397, $IlLLILI=I13399, $IlLLILl=I13389){ $IlLLILL =I13399; $vT =I13399; $IlLLIL1 =I13399; $IlLLI1I =I13399; if(!empty($IlLLIIL)) $vT =$IlLLIIL; if(!empty($cBlockName)) $IlLLILL =$cBlockName; if(!empty($IlLLILI)) $IlLLI1I =$IlLLILI; if(!empty($IlLLILl)) $IlLLIL1 =$IlLLILl; if(!empty($IlLLILL)&&!empty($vT)){ $this->template =$vT; $this->block =$IlLLILL; $this->Gui->addBlock($this->block, $this->template); }if(!empty($IlLLIL1)&&!empty($IlLLI1I)){ $this->menuTemplate =$IlLLI1I; $this->MenuBlock =$IlLLIL1; $this->Gui->addBlock($this->MenuBlock, $this->menuTemplate); }}function TTlllII($Ill11lL){ $res =I13399; $this->tree->UseLang =false; $NONE =false; $found =$this->tree->TI1l1lI($Ill11lL, $NONE); if(!$found && $this->ReturnDefault) $Ill11lL =$this->DefaultId; $sql =I13401. I13402. "WHERE id='$Ill11lL'"; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record[I13403]; }return $res; }function TTlllIl($IlLLI1l){ $res =false; $sql =I13404. I13402. "WHERE lay_id='$IlLLI1l'".$this->tree->TI1l1lT().I13405. I13406; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record[I13407]; }return $res; }function TTlllI1($Ill11lL, $IlLLI1L){ $res =false; $IlLLI11 =I13408.implode(I13408, $IlLLI1L); $sql =I13404.$IlLLI11.I13405. I13402. I13409.$Ill11lL.I13410.$this->tree->TI1l1lT().I13405. I13411; $res =$this->db->getRecord($sql); return $res; }function TTllllT($IIILLII, $IlLLlII =I13399){ return $this->TTllll1($IIILLII, $IlLLlII ,I13411); }function TTllllI($aModNames, $IlLLlII =I13399){ $IIILLII =implode(I13412, $aModNames); return $this->TTllll1($IIILLII, $IlLLlII); }function TTlllll($IIILLII, $IlLLlII =I13399){ return $this->TTllll1($IIILLII, $IlLLlII, I13399); }function TTllll1($IIILLII, $IlLLlII ,$limit){ $res =false; $IlLLlIl =I13399; if(is_array($IlLLlII)){ $IlLLlIl =I13408.implode(I13408, $IlLLlII); }$sql =I13404.$IlLLlIl.I13405. I13402. I13413.$IIILLII.I13414.$this->tree->TI1l1lT().I13405. I13415.$limit; $this->db->query($sql); if($limit != I13399) {if($this->db->next_record()) {if($IlLLlII == I13399) {$res =$this->db->Record[I13407]; }else {$res =$this->db->Record; }}}else {while($this->db->next_record()) {if($IlLLlII == I13399) {$res[] =$this->db->Record[I13407]; }else {$res[] =$this->db->Record; }}}return $res; }function getPageInfoByModuleName($IIILLII, $Ill11LI =I13399){ $res =false; $IlLLlIl =I13399; if(is_array($Ill11LI)){ $IlLLlIl =I13408.implode(I13408, $Ill11LI); }$sql =I13404.$IlLLlIl.I13405. I13402. I13416.$IIILLII.I13410.$this->tree->TI1l1lT().I13405. I13406; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record; }return $res; }function AdjustPageId($Ill11lL, $IlLLlIL =true){ $res =$Ill11lL; $IlLLlI1 =0; $found =$this->tree->TI1l1lI($Ill11lL, $IlLLlI1); if($IlLLlI1 >0){ $res =$Ill11lL =$IlLLlI1; $found =$this->tree->TI1l1lI($Ill11lL, $IlLLlI1); }elseif($IlLLlI1 <0){ $res =$IlLLlI1; $found =true; }if(!$found && $this->ReturnDefault){ if($IlLLlIL){ $res =$this->AdjustPageId($this->DefaultId, false); }else{ $res =false; }}return $res; }function GetDefaultPageByIPArea(&$IlLLllI){ $res =true; $NONE =false; $found =$this->tree->TI1l1lI($IlLLllI, $NONE); if(!$found){ $sql =I13404. I13402. I13417.$this->tree->TI1l1lT().I13405. I13411; $this->db->query($sql); if($this->db->next_record()) {$page =$IlLLllI; $IlLLllI =$this->db->Record[I13407]; $sql =I13418. I13402. I13409.$page.I13410. I13411; $this->db->query($sql); if($this->db->next_record()) {$this->Cms->TTITl11(-1 *$this->db->Record[I13419]); }else {trigger_error("Default page $page not exists"); }}else {$res =false; }}return $res; }function CheckDefaultPageBySiteId(&$IlLLllI){ $NONE =false; return $this->tree->TI1l1lI($IlLLllI, $NONE); }function getDefaultPageIds(){ return $this->tree->getDefaultPageIds(); }function TTI111T($Ill11lL, &$IlLLlll, $originalPageId =0){ global $ActiveScriptFullLink; $res =I13399; $data =array(); $NONE =false; $found =$this->tree->TI1l1lI($Ill11lL, $NONE); if(!$found && $this->ReturnDefault) $Ill11lL =$this->DefaultId; if($found || $this->ReturnDefault){ if($this->DrawPath) $data[I13420] =$this->getPath($Ill11lL, I13421, $this->RootPathId); if($this->DrawNavBar) $data[I13422] =$this->TTlll1T($Ill11lL); $IlLLllL =($this->CachedPageId)?I13399:I13423; $sql =I13424. I13425. $IlLLllL. I13402. I13409.$Ill11lL.I13426; $this->db->query($sql); if($this->db->next_record()) {$IlLLlll[I13427] =$this->db->Record[I13428]; $IlLLlll[I13429] =$this->db->Record[I13430]; $IlLLlll[I13431] =$this->db->Record[I13432]; $IlLLlll[I13433] =$this->db->Record[I13434]; $IlLLlll[I13435] =$this->db->Record[I13435]; $IlLLlll[I13436] =$this->db->Record[I13421]; $IlLLlll[I13437] =$this->db->Record[I13437]; if($this->db->Record[I13438] || !$GLOBALS[I13439]){ $this->Gui->setRobotsMeta(false); }else if($originalPageId >0 && $originalPageId != $Ill11lL){ $sql =I13440 .$originalPageId; $oResult =$this->db->select($sql); if(($aRecord =$oResult->nextRecord()) && $aRecord[I13438]){ $this->Gui->setRobotsMeta(false); }}if($this->Cms->TTIT1TT()==0) $this->Cms->TTITl11($this->db->Record[I13419]); $pid =$this->db->Record[I13441]; if($this->DrawSiblingsBar && $IlLLlll[I13435]) $data[I13442] =$this->TTlll1I($pid, $Ill11lL); if($this->DrawPageName) $data[I13443] =$this->db->Record[I13421]; if($this->DrawName) $data[I13421] =$this->Gui->getAbs($this->block.I13444, Array(I13421 => $this->db->Record[I13421]) );if($this->DrawPrintLink && $this->db->Record[I13445]){ $IlLLll1 =$ActiveScriptFullLink; TlT1IT1($IlLLll1, array($this->Cms->Core->GetOption(I13446)=>1) );$data[I13447] =$this->Gui->getAbs($this->block.I13448, Array(I13449 => $IlLLll1) );}$IlLLllL =($this->CachedPageId)?$this->CachedPageBody:$this->db->Record[I13450]; $data[I13450] =$this->Gui->getAbs($this->block.I13451, Array(I13450 => $this->Gui->MYnl2br($IlLLllL)) );}$res =$this->Gui->get($this->block, $data); $this->CachedPageBody =$res; $this->CachedPageId =$Ill11lL; }return $res; }function TTlll1T($Ill11lL){ $res =I13399; $splitter =$this->Gui->getAbs($this->block.I13452, I13399); $children =$this->tree->TI11TII($Ill11lL, 1); foreach( $children as $vid => $IlLLlLI ){$IlLLlLl =Array(); $IlLLlLl[I13453] =$this->tree->TI11TIT($IlLLlLI[I13454]); $IlLLlLl[I13455] =$splitter; if(empty($res)) $IlLLlLl[I13455] =I13399; $IlLLlLl[I13456] =$vid; $IlLLlLl[I13457] =$IlLLlLI[I13421]; $res .= $this->Gui->get($this->block.I13458, $IlLLlLl); }if(!empty($res)) {$res =$this->Gui->getAbs($this->block.I13459, Array(I13422 => $res) );}return $res; }function TTlll1I($IlLLlLL, $Ill11lL){ static $IlLLlL1 =array (I13460 => 1, I13461 => 1); $res =I13399; $splitter =$this->Gui->getAbs($this->block.I13462, I13399); $children =$this->tree->TI11TII($IlLLlLL, 1, false); foreach( $children as $vid => $IlLLlLI ){if (!empty($IlLLlLI[I13463]) && isset($IlLLlL1[$IlLLlLI[I13463]])) {continue; }$IlLLlLl =Array(); $IlLLlLl[I13453] =$this->tree->TI11TIT($IlLLlLI[I13454]); $IlLLlLl[I13455] =$splitter; if(empty($res)) $IlLLlLl[I13455] =I13399; $IlLLlLl[I13456] =$vid; $IlLLlLl[I13457] =$IlLLlLI[I13421]; $IlLLl1I =I13399; if($vid == $Ill11lL) $IlLLl1I =I13464; $res .= $this->Gui->get($this->block.":sibl_item$IlLLl1I", $IlLLlLl); }$res =$this->Gui->getAbs($this->block.I13465, Array(I13442 => $res) );return $res; }function getPath($Ill11lL, $IIlLlLI =I13421, $IlLLl1l =I13399, $IILLILl =false){ $res =I13399; $splitter =$this->Gui->getAbs($this->block.I13466, I13399); $IlLLl1L =is_array($IlLLl1l); $path =$this->tree->TI11TI1($Ill11lL, 1, $this->PathRootId); if($IlLLl1L){ $IlLLl11 =array(); $IlLLLII =key($IlLLl1l); $IlLLLIl =current($IlLLl1l); foreach( $path as $vid=>$IlLLlLI ){$IlLLl11[$vid] =$IlLLlLI; if($IlLLlLI[$IlLLLII] == $IlLLLIl){ break; }}$path =$IlLLl11; }$path =array_reverse($path, true); foreach( $path as $vid => $IlLLlLI ){if( $IILLILl && empty($IlLLlLI[$IIlLlLI]) ){continue; }$p =Array(); $p[I13453] =$this->tree->TI11TIT($IlLLlLI[I13454]); $p[I13455] =$splitter; if(empty($res)) $p[I13455] =I13399; $p[I13456] =$vid; $p[I13457] =$IlLLlLI[$IIlLlLI]; $IlLLl1I =I13399; if($vid == $Ill11lL) $IlLLl1I =I13464; $res .= $this->Gui->get($this->block.":path_item$IlLLl1I", $p); }$res =$this->Gui->getAbs($this->block.I13467, Array(I13420 => $res) );return $res; }function TTlll1l(&$IlLLLIL, $IlLLLI1, $IlLLLlI, $parentId, $IlLLLll){ $IlLLLIL[I13468] =I13399; $IlLLLIL[I13469] =I13399; if($IlLLLI1 >$this->_tmpSubMenuCommonData[I13470]){ return I13399; }$IlLLLlL =$IlLLLI1-1; $IlLLLl1 =array(); if($IlLLLll[I13441] != $this->_tmpSubMenuCommonData[I13471]){ if(isset($this->_tmpSubMenuCommonData[I13472][$IlLLLI1][$parentId]) && is_array($this->_tmpSubMenuCommonData[I13472][$IlLLLI1][$parentId])) {$IlLLLl1 =$this->_tmpSubMenuCommonData[I13472][$IlLLLI1][$parentId]; }}else return I13399; $IlLLLLI =I13399; foreach($IlLLLl1 as $IlLLLLl =>$IlLLLLL){ $IlLLLIL[I13469] =I13473; $IlLLLL1 =array(); $IlLLLLI .= $this->TTlll1l($IlLLLL1, $IlLLLI1+1, $parentId, $IlLLLLl, $IlLLLLL); $IlLLL1I =I13399; if(mb_strlen($IlLLLLL[I13474]) >4){ $IlLLL1I =I13475; $IlLLLL1[I13474] =$IlLLLLL[I13474]; $IlLLLL1[I13476] =$IlLLLLL[I13476]; $IlLLLL1[I13477] =$IlLLLLL[I13477]; if(mb_strlen($IlLLLL1[I13476]) >4) $IlLLL1l .= I13426.$IlLLLL1[I13476].I13478; }$IlLLLL1[I13455] =$this->_tmpSubMenuCommonData[I13479.$IlLLLI1]; $IlLLLL1[I13441] =$parentId; $IlLLLL1[I13407] =$IlLLLLl; $IlLLLL1[I13421] =$IlLLLLL[I13421]; if($IlLLLLL[I13480]){ $IlLLLL1[I13481] =I13482; $IlLLLL1[I13483] =I13484; $IlLLLL1[I13485] =I13486; }$IlLLLL1[I13487] =$this->tree->TI11TIT($IlLLLLL[I13454]); $IlLLLL1[I13488] =$IlLLLI1-1; if(empty($IlLLLIL[I13468])) $IlLLLL1[I13455] =I13399; $IlLLl1I =I13399; if($IlLLLLl == $this->_tmpSubMenuCommonData[I13489] || isset($IlLLLL1[I13490])){ $IlLLl1I =I13464; $IlLLLIL[I13490] =true; }$IlLLL1L =array($IlLLLlL.I13491.$IlLLl1I, I13491.$IlLLl1I); $IlLLLIL[I13468] .= $this->Gui->getDefPostf($this->MenuBlock.I13492.$this->MenuSubBlock[$IlLLL1I.I13392], $IlLLL1L, $IlLLLL1); }$res =I13399; if(!empty($IlLLLIL[I13468])){ $IlLLL1L =array($IlLLLlL.I13493, I13493); $IlLLLIL[I13468] =$this->Gui->getAbsDefPostf( $this->MenuBlock.I13492.$this->MenuSubBlock[I13392], $IlLLL1L, Array(I13494=>$IlLLLlI, I13441=>$parentId, I13495=>$IlLLLIL[I13468], I13496 => $IlLLLLI, I13488 => $IlLLLI1-1) );$res =$IlLLLIL[I13468]; if ($this->_tmpSubMenuCommonData[I13497]) {unset($IlLLLIL[I13498]); }}return $res; }function TTlll11($IlLLL11){ if(isset($this->IlLLIII[$IlLLL11])){ return $this->IlLLIII[$IlLLL11]; }else{ $IlLL1II =array(); $IlLL1II =$this->tree->TTlll11($IlLLL11); $this->IlLLIII[$IlLLL11] =$IlLL1II; return $IlLL1II; }}function TTll1TT($IlLL1Il=0, $IlLL1IL=0, $IlLL1I1=I13390, $IlLL1lI =false) {$res =Array(); $this->tree->ll1IlLL =true; $this->tree->UseHidden =false; $this->tree->ll1Il1I =false; $this->tree->UseModLinks =true; $this->tree->ll1Il1L =true; $this->tree->ll1Il11 =false; $this->tree->UseScriptLinks =true; $this->tree->ll1ILII =true; $this->_tmpSubMenuCommonData[I13471] =0; $parentId =0; $IlLL1ll =$this->TTlll11($IlLL1IL); if(($IlLL1lL =array_search($IlLL1Il, $IlLL1ll)) !== false){ $parentId =($IlLL1lL >0 ?$IlLL1ll[$IlLL1lL-1] :0); $this->_tmpSubMenuCommonData[I13471] =$parentId; }$IlLL1ll =array_flip($IlLL1ll); unset($IlLL1ll[$parentId], $IlLL1ll[$IlLL1Il]); if($IlLL1I1==I13390 || $IlLL1I1==I13499){ $this->tree->ll1ILll =I13390; $IlLL1l1 =false; $this->_tmpSubMenuCommonData[I13470] =$this->Cms->PManager->GetOption(I13500); $this->_tmpSubMenuCommonData[I13497] =$IlLL1lI; $IlLL1LI =I13399; $IlLL1Ll =I13399; $IlLLL1l =I13399; $splitter =$this->Gui->getAbs($this->MenuBlock.I13492.$this->MenuSubBlock[I13390].I13501, I13399); for($i =1; $i <= $this->_tmpSubMenuCommonData[I13470]; $i++){ $this->_tmpSubMenuCommonData[I13479.$i] =$this->Gui->getAbsDefPostf($this->MenuBlock.I13492.$this->MenuSubBlock[I13392], array(($i-1).I13501, I13501)); }$aMenu =$this->tree->TI11TII($parentId.I13502.$IlLL1Il, 1, true, true); $this->_tmpSubMenuCommonData[I13472] =array(); $IlLL1LL =array_keys($aMenu); for($i =2; $i <= $this->_tmpSubMenuCommonData[I13470]; $i++){ $itemIds =implode(I13502, $IlLL1LL); $IlLL1LL =array(); $IlLL1L1 =(empty($itemIds))? array(): $this->tree->TI11TII($itemIds, 1); foreach($IlLL1L1 as $id => $aItem){ $this->_tmpSubMenuCommonData[I13472][$i][$aItem[I13441]][$id] =$aItem; $IlLL1LL[] =$id; }}foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $this->_tmpSubMenuCommonData[I13489] =$IlLL1IL; $IlLL1Ll .= $this->TTlll1l($v, 2, 0, $vid, $IlLLlLI); if(isset($v[I13490])){ $IlLL11I =$vid; }$IlLLL1I =I13399; if(mb_strlen($IlLLlLI[I13474])>4){ $IlLLL1I =I13475; $v[I13474] =$IlLLlLI[I13474]; $v[I13476] =$IlLLlLI[I13476]; $v[I13477] =$IlLLlLI[I13477]; if(mb_strlen($v[I13476])>4) $IlLLL1l .= I13426.$v[I13476].I13478; }$v[I13455] =$splitter; $v[I13407] =$vid; $v[I13421] =$IlLLlLI[I13421]; $v[I13487] =$this->tree->TI11TIT($IlLLlLI[I13454]); if($IlLLlLI[I13480]){ $v[I13481] =I13482; $v[I13483] =I13484; $v[I13485] =I13486; }if(empty($IlLL1LI)) $v[I13455] =I13399; $IlLLl1I =I13399; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I13464; if(EventApplyVars($this->Gui, I13503, $v)){ $IlLL1LI .= $this->Gui->get($this->MenuBlock.I13492.$this->MenuSubBlock[$IlLLL1I.I13390]."_item$IlLLl1I", $v); }}if(!empty($IlLLL1l)){ $jsdata =array(I13504=>mb_substr($IlLLL1l, 0, -1)); $this->Gui->addHtmlScript($this->Gui->get($this->MenuBlock.I13505, $jsdata)); }$res[I13506] =$this->Gui->getAbs($this->MenuBlock.I13492.$this->MenuSubBlock[I13390].I13493, Array(I13495=>$IlLL1LI)); $res[I13507] =$IlLL1Ll; }if($IlLL1I1==I13395 || $IlLL1I1==I13499){ $this->tree->ll1ILll =I13395; $IlLL11l =I13399; $splitter =$this->Gui->getAbs($this->MenuBlock.I13492.$this->MenuSubBlock[I13395].I13501, I13399); $aMenu =$this->tree->TI11TIl(1); foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $v[I13455] =$splitter; $v[I13407] =$vid; $v[I13421] =$IlLLlLI[I13421]; $v[I13487] =$this->tree->TI11TIT($IlLLlLI[I13454]); if($IlLLlLI[I13480]){ $v[I13481] =I13482; $v[I13483] =I13484; $v[I13485] =I13486; }if(empty($IlLL11l)) $v[I13455] =I13399; $IlLLl1I =I13399; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I13464; if(EventApplyVars($this->Gui, I13508, $v)){ $IlLL11l .= $this->Gui->get($this->MenuBlock.I13492.$this->MenuSubBlock[I13395]."_item$IlLLl1I", $v); }}$res[I13509] =$this->Gui->getAbs($this->MenuBlock.I13492.$this->MenuSubBlock[I13395].I13493, Array(I13495=>$IlLL11l)); }if($IlLL1I1==I13396 || $IlLL1I1==I13499){ $this->tree->ll1ILll =I13396; $IlLL11L =I13399; $splitter =$this->Gui->getAbs($this->MenuBlock.I13492.$this->MenuSubBlock[I13396].I13501, I13399); $aMenu =$this->tree->TI11TIl(1); foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $v[I13455] =$splitter; $v[I13407] =$vid; $v[I13421] =$IlLLlLI[I13421]; $v[I13487] =$this->tree->TI11TIT($IlLLlLI[I13454]); if($IlLLlLI[I13480]){ $v[I13481] =I13482; $v[I13483] =I13484; $v[I13485] =I13486; }if(empty($IlLL11L)) $v[I13455] =I13399; $IlLLl1I =I13399; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I13464; if(EventApplyVars($this->Gui, I13510, $v)){ $IlLL11L .= $this->Gui->get($this->MenuBlock.I13492.$this->MenuSubBlock[I13396]."_item$IlLLl1I", $v); }}$res[I13511] =$this->Gui->getAbs($this->MenuBlock.I13492.$this->MenuSubBlock[I13396].I13493, Array(I13495=>$IlLL11L)); }return $res; }function TTll1TI($IlLL111, $pageId, $modName, $IlL1III, &$IlL1IIl, $IIILLIL =I13400){ global $lang; $found =true; $IlL1IIl =Array(); $aVirtualLinks =$this->Cms->Core->GetModProperty(I13512, I13513); if(isset($aVirtualLinks[$modName])) {$IlL1IIL =I13399; $masterModuleName =$modName; $IlL1II1 =$pageId; if(mb_substr($IlL1III, -1) != I13514){ $IlL1III .=I13514; }$checkScriptLink =ltrim(mb_substr($IlLL111, mb_strlen($IlL1III)), I13514); $vScriptLink =$IlLL111; if(mb_substr($checkScriptLink, -1) != I13514){ $checkScriptLink .=I13514; }$aUsedVirtualModules =$this->Cms->Core->GetModOption(I13512, I13515); $aVirtualModules =array_intersect(array_keys($aVirtualLinks[$masterModuleName]), $aUsedVirtualModules); foreach($aVirtualModules as $IlL1IlI) {if($this->Cms->Core->IsFrontAllowed($IlL1IlI)) {$link =$aVirtualLinks[$masterModuleName][$IlL1IlI]; if(mb_substr($link, -1) != I13514){ $link .=I13514; }if($checkScriptLink == $link) {$IlL1IIL =$IlL1IlI; break; }}}if($IlL1IIL != I13399 && $IlL1IIL != $IIILLIL) {$IlL1Ill =$this->tree->UseHidden; $IlL1IlL =$this->tree->ll1Il1L; $this->tree->UseHidden =false; $this->tree->ll1Il1L =false; $IlL1Il1 =$this->TTllllT($IlL1IIL, Array(I13454, I13516)); $this->tree->UseHidden =$IlL1Ill; $this->tree->ll1Il1L =$IlL1IlL; if($IlL1Il1 !== false) {if(!$this->isLinkConflictsMode && $IlLL111 != $IlL1Il1[I13454]) {$found =false; }if($IlL1Il1[I13516] >0) {$IlL1II1 =$IlL1Il1[I13407]; if(!$this->isLinkConflictsMode) {$vScriptLink =$IlL1Il1[I13454]; }}}if($found) {$IlL1IIl =Array( I13407 => $IlL1II1, I13517 => $IlL1IIL, I13454 => $vScriptLink, );}}}return $found; }function DetectPageByLink($IlLL111, $IlL1ILI =false, $IlL1ILl =false, $IIILLIL =I13399){ global $lang; $res =Array(); if(!empty($IlLL111)){ $res =$this->tree->TI1l1l1($IlLL111, $IlL1ILI, $IlL1ILl); if(!$this->isLinkConflictsMode && isset($res[$lang])) {$IIILLlL =Array(); if($this->TTll1TI($IlLL111, $res[$lang][I13407], $res[$lang][I13517], $res[$lang][I13454], $IIILLlL, $IIILLIL)){ $res[$lang] =$IIILLlL +$res[$lang]; }else {$res =Array(); }}}return $res; }function DetectPageById($cId){ $res =Array(); if(isset($cId) && $cId>0){ $res =$this->tree->TI1l11T($cId); }else{ trigger_error("Wrong page Id [$cId]...",E_USER_WARNING); }return $res; }function TTll1Tl($Ill11lL){ $res =I13399; $sql ="select script_link from cms_pages where id='$Ill11lL'"; $this->db->query($sql); if($this->db->next_record()){ $res =$this->tree->TI11TIT($this->db->Record[I13454]); }return $res; }function TTll1T1($IlLL111){ $res =I13399; $res =$this->tree->TI11TIT($IlLL111); return $res; }function TTll1IT($Ill11lL){ $res =false; $IlL1ILL =$this->tree->ll1ILl1; $IlL1IL1 =$this->tree->ll1Il11; $IlL1I1I =$this->tree->ll1ILII; $this->tree->ll1ILII =false; $this->tree->ll1Il11 =false; $this->tree->ll1ILl1 =true; $aPrev =$this->tree->TI11T1I($Ill11lL); if($aPrev!==false){ $res =$aPrev; $res[I13518] =$this->tree->TI11TIT($aPrev[I13454]); }$this->tree->ll1ILl1 =$IlL1ILL; $this->tree->ll1Il11 =$IlL1IL1; $this->tree->ll1ILII =$IlL1I1I; return $res; }function TTll1II($Ill11lL){ $res =false; $IlL1ILL =$this->tree->ll1ILl1; $IlL1IL1 =$this->tree->ll1Il11; $IlL1I1I =$this->tree->ll1ILII; $this->tree->ll1ILII =false; $this->tree->ll1Il11 =false; $this->tree->ll1ILl1 =true; $aNext =$this->tree->TI11T1T($Ill11lL); if($aNext!==false){ $res =$aNext; $res[I13518] =$this->tree->TI11TIT($aNext[I13454]); }$this->tree->ll1ILl1 =$IlL1ILL; $this->tree->ll1Il11 =$IlL1IL1; $this->tree->ll1ILII =$IlL1I1I; return $res; }function TTll1Il($Ill11lL, $IlL1I1l =0){ $res =false; $data =array(); $IlL1I1L =false; if(!isset($this->LayBlocksCount) || $this->LayBlocksCount<1){ trigger_error(I13519, E_USER_ERROR); }$NONE =false; $found =$this->tree->TI1l1lI(($IlL1I1l)?$IlL1I1l:$Ill11lL, $NONE); if(!$found && $this->ReturnDefault){ $Ill11lL =$this->DefaultId; }$sql =I13520. I13402. I13409.$Ill11lL.I13426; $IlL1I11 =&$this->db->select($sql); if($IlL1I11->nextRecord() && ($IlL1I11->Record[I13521]>0)) {$IlL1lII =0; if(isset($this->Cms->Vars[I13521]) && $this->Cms->Vars[I13521] >0) {$IlL1I1L =true; $this->CachedPageLayoutId =$this->Cms->Vars[I13521]; $IlL1lII =$IlL1I11->Record[I13521]; }else {$this->CachedPageLayoutId =$IlL1I11->Record[I13521]; }$this->CachedPageHTMLHeadTail =$IlL1I11->Record[I13522]; $this->CachedPageId =$Ill11lL; $this->CachedPageBody =$IlL1I11->Record[I13450]; $IlL1lIl =I13399; for($i=1; $i <= $this->LayBlocksCount; $i++) {$IlL1lIl .= I13523.$i.I13524; if($IlL1I1L){ $IlL1lIl .= I13523.$i.I13525; }}$sql =I13526.$IlL1lIl.I13527; $IlL1lIL =&$this->db->select($sql.$this->CachedPageLayoutId.I13426); $found =false; if($IlL1lIL->nextRecord()){ $found =true; }elseif($IlL1lII) {$IlL1lIL =&$this->db->select($sql.$IlL1lII.I13426); if($IlL1lIL->nextRecord()){ $found =true; }}if($found) {for($i=1; $i <= $this->LayBlocksCount; $i++) {if($IlL1lIL->Record[I13528.$i.I13524] != I13399) {$this->_aUsedLayoutBlocks[] =$i; }}$this->CachedPageLayoutBody =$IlL1lIL->Record[I13529]; $this->CachedPageLayoutCssName =$IlL1lIL->Record[I13530]; $this->CachedLayoutHTMLHeadTail =$IlL1lIL->Record[I13522]; foreach($this->_aUsedLayoutBlocks as $IlL1lI1){ $this->CachedPageBlocks[$IlL1lI1] =$IlL1I1L ?$IlL1lIL->Record[I13528.$IlL1lI1.I13525] :$IlL1I11->Record[I13528.$IlL1lI1.I13525]; }$res =true; }else{ trigger_error(I13531.$this->CachedPageLayoutId."] for page id=[$Ill11lL]...", E_USER_WARNING); }}else{ trigger_error("Init layouts: page not found or layout is undefined. Search for default Layout (request for page id=[$Ill11lL])...", E_USER_WARNING); $sql =I13532.$this->tree->lang.I13426; $IlL1lIL =&$this->db->select($sql); if($IlL1lIL->next_record()){ $vRec =$IlL1lIL->Record; $this->CachedPageLayoutId =$vRec[I13407]; for($i=1; $i<=$this->LayBlocksCount; $i++){ if($IlL1lIL->Record[I13528.$i.I13524] != I13399) {$this->CachedPageBlocks[$i] =$IlL1lIL->Record[I13528.$i.I13525]; $this->_aUsedLayoutBlocks[] =$i; }}$this->CachedPageLayoutBody =$IlL1lIL->Record[I13529]; $this->CachedPageLayoutCssName =$IlL1lIL->Record[I13530]; $this->CachedLayoutHTMLHeadTail =$IlL1lIL->Record[I13522]; $res =true; }else{ trigger_error("Default Layout is not found (request for page id=[$Ill11lL])...", E_USER_WARNING); }}if($IlL1I1l){ $sql =I13533. I13402. I13409.$IlL1I1l.I13426; $this->db->query($sql); if($this->db->next_record()){ $this->CachedPageId =$IlL1I1l; $this->CachedPageBody =str_replace(I13534, $this->db->Record[I13450], $this->CachedPageBody); }}return $res; }function TTll1I1(){ $data =array(); if(!isset($this->LayBlocksCount) || $this->LayBlocksCount<1){ trigger_error(I13519, E_USER_ERROR); }$data[I13535] =$this->CachedPageBody; $data[I13456] =$this->CachedPageId; $data[I13536] =$this->CachedPageLayoutId; $data[I13537]= $this->CachedPageLayoutBody; $data[I13538] =$this->CachedPageLayoutCssName; $data[I13539] =$this->CachedPageBlocks; $data[I13522] =$this->CachedLayoutHTMLHeadTail .$this->CachedPageHTMLHeadTail; $data[I13540] =$this->_aUsedLayoutBlocks; return $data; }function TTll1lT(&$IlL1llI) {$this->_aUsedLayoutBlocks =&$IlL1llI; }function TTll1lI(&$frn, &$ModuleHtml, &$IlL1lll, &$HtmlBody){ require_once($GLOBALS[I13541].I13542); $IlL1llL =array(); if(!empty($ModuleHtml[I13450])){ $frn->Gui->AddText(I13450, $frn->Gui->getAbs(I13543, I13495, $ModuleHtml[I13450])); $IlL1ll1 =$frn->Gui->getAbs(I13544, I13495, $HtmlBody); if($frn->Gui->isVarDefined(I13450, I13545)==1){ $IlL1llL[I13546] =$frn->Gui->getAbs(I13450, I13545, $IlL1ll1); }else{ $IlL1llL[I13546] =$frn->Gui->getAbs(I13450).$IlL1ll1; }}else{ $IlL1llL[I13546] =$frn->Gui->ParseText($frn->Gui->getAbs(I13543, I13495, $HtmlBody)); }foreach($this->_aUsedLayoutBlocks as $IlL1lLI) {$IlL1lLl =I13528.$IlL1lLI.I13525; $IlL1llL[$IlL1lLl] =$frn->Gui->ParseText($IlL1lll[I13539][$IlL1lLI]); }$frn->Gui->addStyle($IlL1lll[I13538]); $frn->Gui->setHeaderCode($IlL1lll[I13522]); $IlL1llL[I13547] =$frn->Gui->header(); $frn->Core->TTlllTT($IlL1llL[I13548]); $IlL1llL[I13549] =$frn->Gui->footer(); if($frn->Gui->ForceExport){ $IlL1lLL =array(I13550=>I13550, I13390=>I13390); $IlL1lL1 =I13551; for($i=1; $i<=$this->LayBlocksCount; $i++){ $IlL1lL1 .= I13523.$i.I13524; $IlL1lLL[I13528.$i] =I13528.$i; }$sql =I13552.$IlL1lL1.I13527.$IlL1lll[I13536].I13553.$this->tree->lang.I13426; $this->db->query($sql); if($this->db->next_record()){ $vRec =&$this->db->Record; if(!empty($vRec[I13554])){ $IlL1lLL[I13550] =$vRec[I13554]; }if(!empty($vRec[I13421])){ $IlL1lLL[I13390] =$vRec[I13421]; }for($i=1; $i<=$this->LayBlocksCount; $i++){ $IlL1lLl =I13528.$i.I13524; if(!empty($vRec[$IlL1lLl])){ $IlL1lLL[I13528.$i] =$vRec[$IlL1lLl]; }}}$IILLl1I =array(I13555, I13556); foreach($IlL1llL as $vName=>$vData){ if(mb_strpos($vName, I13557)!==false){ $IlL1l1I =str_replace(I13525, I13399, $vName); if($IlL1l1I==I13558) $IlL1l1I =I13550; $IlL1l1l =$IlL1lLL[$IlL1l1I]; $IILLl1l =array($IlL1l1I, $vData); $IlL1llL[$vName] =str_replace($IILLl1I, $IILLl1l, TlT1TII($IlL1l1I, $IlL1l1l, I13556)); }}$IILLl1I =array(I13555); $IILLl1l =array(I13559); $IlL1l1L =TlT1TT1(I13530, $IlL1lll[I13538]); if(!empty($IlL1lll[I13522])) {$IlL1llL[I13547] =str_replace( $IlL1lll[I13522], TlT1TT1(I13560, I13400) .$IlL1lll[I13522] .TlT1TIT(I13560), $IlL1llL[I13547] );}$IlL1llL[I13547] =$IlL1l1L.$IlL1llL[I13547].str_replace($IILLl1I, $IILLl1l, TlT1TT1(I13559, $IlL1lLL[I13390])); $IlL1llL[I13549] =str_replace($IILLl1I, $IILLl1l, TlT1TIT(I13559)).$IlL1llL[I13549]; }$Content =$frn->Gui->ParseText($IlL1lll[I13537], $IlL1llL); return $Content; }public function processRedirection($pageId, $IlL1l11){ $sql =I13561 .(int)$pageId; $record =$this->db->getRecord($sql); if($record && $record[I13562]){ $code =(int)$record[I13562]; if($code != 404){ $this->Cms->Core->Cache->pageIsComplitedForSave =true; $IlL1l11->DelHeader(I13563); $IlL1l11->DelHeader($GLOBALS[I13564].I13565); }switch($code){ case 301: case 302: $status =$code == 301 ?I13566 :I13567; $IlL1l11->AddHeader($GLOBALS[I13564] .I13568 .$code .I13568 .$status, true); $pos =mb_strpos($record[I13569], I13570); if($pos !== 0 && !isFullLink($record[I13569])){ $record[I13569] =I13570 .$record[I13569]; }$IlL1l11->AddHeader(I13571 .$record[I13569], true); break; case 503: $IlL1l11->AddHeader($GLOBALS[I13564] .I13572, true); $IlL1l11->AddHeader(I13573, true); global $frn; $lang =$frn->Gui->parseLangFile(I13574); echo $lang[I13575]; break; case 404: list($IlL1LII, $activeModule) =cmsHandle404(false); if($IlL1LII || $activeModule == I13460){ return; }$this->Cms->Core->Cache->pageIsComplitedForSave =true; $IlL1l11->DelHeader(I13563); $IlL1l11->DelHeader($GLOBALS[I13564].I13565); $IlL1l11->AddHeader($GLOBALS[I13564] .I13576, true); $IlL1l11->AddHeader(I13577, true); global $frn; $lang =$frn->Gui->parseLangFile(I13574); echo $lang[I13578]; break; default: trigger_error(I13579 .$code, E_USER_ERROR); }$IlL1l11->SetSkip200Status(true); echo I13568; $IlL1l11->Out(); $this->Cms->Core->Cache->markPageIsSkipped(); die; }}}