<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       8940 xkqwiilnsyntrxxxyiwmtmstsgsprxlqkxslirigmprpmzuwpgywzkkllpgypriglgygpnir
 */ ?><?php foreach(array(13684=>'Rgw|q|yzsgzwkqT',13685=>'Rgw|Fzjdq',13686=>'',13687=>'rQEuQDt',13688=>'rGW|vQrDMHn',13689=>'QrrWHSQ',13690=>'rQDGHnDQ',13691=>'||WJMQntsHnQ',13692=>'HYLQWt') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'BaseObject.php'; define(I13684, 1); define('RPC_E_PACKET_TYPE', 2); define('RPC_E_NOMETHOD', 3); define('RPC_E_SERV_INTERNAL', 4); define('RPC_TRUE', 1); define(I13685, 0); class RPCObject extends BaseObject {public $conn; public $lll11Ll; public $lll11LL; public $lll11L1; function RPCObject(&$conn) {$this->BaseObject(); $this->lll11Ll ='1.0'; $this->conn =&$conn; $this->lll11LL =array(); }function TI1Tll1($I1lIIL1) {return base64_encode(serialize($I1lIIL1))."\r\n"; }function TI1Tl1T($I1lIIL1) {$I1lIIL1 =preg_replace('/\r?\n$/','',$I1lIIL1); if("$I1lIIL1"==I13686) return $this->TTTITTI("Peer has closed connection"); $I1lIIL1 =unserialize(base64_decode($I1lIIL1)); return $I1lIIL1===false ?null :$I1lIIL1; }function TI1Tl1I($I1lIIL1,$op,$reply=true) {if(!is_array($I1lIIL1) || !isset($I1lIIL1['type'])) {$msg ="Broken $op packet"; if($op=='request' && $reply) $this->TI1T1TI(0,I13686,0,RPC_E_BADPACKET,$msg); return $this->TTTITTI($msg); }if($I1lIIL1['type']!=$op) {$msg ="Got packet of type '$I1lIIL1[type]' instead of '$op'"; if($op==I13687 && $reply) $this->TI1T1TI(0,I13686,0,RPC_E_PACKET_TYPE,$msg); return $this->TTTITTI($msg); }return true; }function TI1Tl1l($op) {if(($I1lIIL1=$this->conn->TI1IIIl())===false) {$this->TTTITTI("Cannot get $op packet"); return $this->TTTITll($this->conn); }return $this->TI1Tl1T($I1lIIL1); }function TI1Tl11($I1lIIL1,$op) {if($this->conn->send($this->TI1Tll1($I1lIIL1))===false) {$this->TTTITTI("Cannot send $op packet"); return $this->TTTITll($this->conn); }return true; }function TI1T1TT($method,$args) {$I1lIIL1 =array( 'rpc_version' => $this->lll11Ll, 'type' => I13687, 'method_name' => $method, 'args' => $args );return $this->TI1Tl11($I1lIIL1,I13687); }function TI1T1TI($result,$errmsg=I13686,$errcode=0,$rpc_errmsg=I13686,$rpc_errcode=0) {$I1lIIL1 =array( I13688 => $this->lll11Ll, 'type' => 'response', 'rpc_errcode' => $rpc_errcode, 'rpc_errmsg' => $rpc_errmsg, I13689 => $errcode, 'errmsg' => $errmsg, 'result' => $result );return $this->TI1Tl11($I1lIIL1,'response'); }function TI1T1Tl($lll111I=true) {$I1lIIL1 =$this->TI1Tl1l(I13687); if($I1lIIL1===false) return false; if(!$this->TI1Tl1I($I1lIIL1,I13687,$lll111I)) return false; return $I1lIIL1; }function TI1T1T1() {if(($I1lIIL1=$this->TI1Tl1l('response'))===false) return false; if(!$this->TI1Tl1I($I1lIIL1,I13690,false)) return false; $code =$I1lIIL1['rpc_errcode']; if($code!==0) return $this->TTTITTI("RPC server returned error [$code]: $I1lIIL1[rpc_errmsg]"); $code =$I1lIIL1[I13689]; if($code!==0) return $this->TTTITTI("Service error [$code]: $I1lIIL1[errmsg]"); return $I1lIIL1; }function TI1Tlll() {$args =func_get_args(); return $this->TI1T1IT('__clientDone',$args); }function &TI1T1IT($name,$args) {$false =false; if(!$this->TI1T1TT($name,$args)) return $false; if(($resp=$this->TI1T1T1())===false) return $false; return $resp['result']; }function TI1T1II($conn) {$this->conn =$conn; $this->TI1T1I1('__auth',$this); $this->TI1T1I1(I13691,$this); $this->TI1T1Il(); }function TI1T1Il() {}function TI1T1I1($lll111l,&$obj,$lll111L=false) {if($lll111L===false) $lll111L =$lll111l; if($obj===null) $obj =&$this; if(!method_exists($obj,$lll111L)) {return $this->TTTITTI("exportMethod(): method '$lll111L' does not exist in class ".get_class($obj)); }$this->lll11LL[$lll111l] =array('object'=>&$obj,'method'=>$lll111L); return true; }function __auth($data) {return RPC_TRUE; }function __clientDone() {$this->lll11L1 =true; return RPC_TRUE; }function TI1T1lT() {$this->lll11L1 =false; while(($req=$this->TI1T1Tl())!==false) {$method =$req['method_name']; if(!isset($this->lll11LL[$method])) {$this->TI1T1TI(RPC_FALSE,I13686,0,"Unknown RPC method '$method'",RPC_E_NOMETHOD); continue; }$args =$req['args']; ksort($args); $exp =&$this->lll11LL[$method]; $obj =&$exp[I13692]; $lll1111 =$exp['method']; if(!method_exists($obj,$lll1111)) {$this->TI1T1TI(RPC_FALSE,I13686,0,"Internal server error",RPC_E_SERV_INTERNAL); return $this->TTTITTI("RPC server: method '$lll111L' does not exist in class ".get_class($obj)); }if(($ret=call_user_func_array(array(&$obj,$lll1111),$args))===false) {$this->TI1T1TI(RPC_FALSE,I13686,0,"Internal server error",RPC_E_SERV_INTERNAL); return $this->TTTITTI("call_user_func_array() returned false"); }$this->TI1T1TI($ret); if($this->lll11L1) return true; }return false; }}?>