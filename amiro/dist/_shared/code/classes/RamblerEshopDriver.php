<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       4181 xkqwxrrnxsgnpynyluuxzwmwwpkqixzltmrtwxtrtrytumglqlgukukussuisruqywyppnir
 */ ?><?php foreach(array(13693=>"tMtJQ",13694=>"fMJQIZDK",13695=>"MIGHrt|IHSuJQD",13696=>"MnWJuSQS|MIGHrt|IHSuJQD",13697=>"%",13698=>"dqjqwT?nZIQ?",13699=>"'",13700=>"10020",13701=>'QxGHrt') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class RamblerEshopDriver extends YandexEshopDriver {function RamblerEshopDriver(&$gui, &$module) {parent::YandexEshopDriver($gui, $module); $this->name ="RamblerEshopDriver"; }function GetInfo() {$aInfo =array( "name"=>$this->name, I13693=>$this->words[I13693], "supported_actions"=>array("export"), "pathtypes"=>array("files"), I13694=>array("*.xml"), I13695 => array(), I13696 => array("eshop_item"), "use_front_filter" => array("eshop_item"), );return $aInfo; }function GetForm($type, &$formData) {parent::GetForm($type, $formData); $html =$this->gui->get($this->name.I13697.$type."_form", $formData); return $html; }function TIT1lTI(&$formData) {$formData["export_category_field_error"] =0; $II1LIlI =true; if ($this->module->module->IssetOption($this->name."_export_category_field")) {$formData["export_category_field"] =$this->module->module->GetOption($this->name."_export_category_field"); if ($formData["export_category_field"] == -1) $formData["export_category_field_error"] =1; else {$formData["export_category_field_name"] =""; $sql =I13698. "FROM ".$this->module->oEshop->dbTablePrefix."_custom_types ". "WHERE fnum='".$formData["export_category_field"].I13699; $this->module->db->query($sql); if ($this->module->db->next_record()) {$itemData =$this->module->db->Record; $data =unserialize($itemData["name"]); if(is_array($data)){ if(!empty($data[$this->module->langData])){ $itemData["name"] =$this->module->cms->htmlchars($data[$this->module->langData]); }}$formData["export_category_field_name"] =$itemData["name"]; }}}else $formData["export_category_field_error"] =1; }function TIT1lTl($type) {$II1LIlI =true; switch ($type) {case "import": break; case "export": if ($this->module->module->IssetOption($this->name."_export_category_field")) {$this->llLlLl1["category_field"] =$this->module->module->GetOption($this->name."_export_category_field"); if ($this->llLlLl1["category_field"] == -1) $II1LIlI =false; else $this->llLlLl1["category_field"] ="custom_field_".$this->llLlLl1["category_field"]; }else {$II1LIlI =false; }if (!$II1LIlI) $this->TTIIlT1(I13700, "wrong_export_rambler"); break; }return $II1LIlI; }function TIT1lT1($modId){ $setName ='item_row'; $aEvent =array( 'driverName' => $this->name, 'exchangeType' => I13701, 'modId' => $modId, 'type' => 'product', 'setName' => &$setName );AMI_Event::fire('on_dataexchange_get_tpl_set_name', $aEvent, AMI_Event::MOD_ANY); return $this->name .':' .$setName; }}