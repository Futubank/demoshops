<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       34999 xkqwyitxlnymlslqyiuwwqnnlgmuyskwksqmllikqitpktixsgnmpgkukptpsxgrglqnpnir
 */ ?><?php foreach(array(13702=>"tMtJQ",13703=>"fMJQIZDK",13704=>"MIGHrt|IHSuJQD",13705=>"MnWJuSQS|MIGHrt|IHSuJQD",13706=>"%",13707=>"IHSuJQ",13708=>"MIGHrt",13709=>"r",13710=>"fMQJSD",13711=>"wzTqphRb",13712=>"vZJuQ",13713=>"WZtmSFMQJS",13714=>'wzTzjhp',13715=>"mizpq",13716=>'',13717=>'vZrD',13718=>'fMQJSD',13719=>"10010",13720=>'DKMG|fMrDt|JMnQ',13721=>"SZtZ|nHt|fHunS",13722=>"SZtZ|DHurWQ",13723=>'GrQfMx',13724=>"10012",13725=>'GrHWQDD|MtQID',13726=>"WZJJYZWK|QrrHr",13727=>"ms|qXTqRNzj",13728=>"ZWtMHn",13729=>'GrHWQDD|rQfQrQnWQD',13730=>"JMnQ",13731=>'nuI',13732=>"GrHWQDD|rQfQrQnWQD",13733=>"MS",13734=>"WZtQPHrB|WBWJMnP",13735=>"rQP",13736=>"MD|IZrK|SQJQtQS",13737=>'ZWtMHn',13738=>'mizpq',13739=>'fHrWQ|HvQrCrMtQ',13740=>"tBGQ",13741=>"ZSS|GrMWQ|tBGQ",13742=>"\n",13743=>"MS|QxtQrnZJ",13744=>"PQt|MS|QxtQrnZJ",13745=>"WuDtMnfH",13746=>"DtZtuDQD|OMDtHrB",13747=>"",13748=>"DOMGGMnP",13749=>"MtQI|MnfH",13750=>"WZt|nZIQ",13751=>"QDOHG|uDQr",13752=>'cMnSHCD+1251',13753=>"GOG|StMIQ") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'RapidExchangeDriver.php'; class RapidCSVEshopDriver extends RapidExchangeDriver {public $Il11lL1; public $Il11l1I; public $delim; public $Il11l1l; public $Il11l1L; public $Il11l11; public $Il11LII; public $_fields; public $Il11LIl; public $llLIIII; public $llLIIIl; private $Il11LlL; private $Il11Ll1 =array(); function RapidCSVEshopDriver(&$gui, &$module) {parent::RapidExchangeDriver($gui, $module); $this->name ="RapidCSVEshopDriver"; $this->Il11lL1 =Array(); $this->Il11l1I =Array(); $this->delim =""; $this->Il11l1l =0; $this->Il11l1L =0; $this->Il11l11 =1/5; $this->Il11LII =0; $this->Il11LIl =60000; }function GetInfo() {$aInfo =Array( "name"=>"RapidCSVEshopDriver", "title"=>$this->words[I13702], "supported_actions"=>Array("import"), "pathtypes"=>Array("files"), I13703=>Array("*.csv"), I13704 => Array("eshop_item", "eshop_order", "eshop_user"), I13705 => Array(), );return $aInfo; }function GetForm($type, &$formData) {parent::GetForm($type, $formData); $html =$this->gui->get($this->name.I13706.$type."_form", $formData); return $html; }function Start($actionType, &$aParams) {$II1LIlI =parent::Start($actionType, $aParams); $module =$aParams["vars"][I13707]; require_once $GLOBALS['CLASSES_PATH'] .'CMS_DataExchange_Driver_CSV.php'; $this->Il11LlL =new CMS_DataExchange_Driver_CSV($this, $aParams); switch ($actionType) {case I13708: switch ($module) {case "eshop_item": default: $Il11LLI =false; $Il11LLl =false; $Il11LLL =false; if($II1LIlI) {$this->_config['fields'] =$this->module->TTII111('fields_map', true); $dataSource =$aParams["data_source"]; if (file_exists($dataSource)) {$this->TTIIlIl(0, 100); $this->II1LIIL =filesize($dataSource); if ($fp =@fopen($dataSource, I13709)) {$II1LIlI =$this->Il11LlL->TTIlTIl($fp, true); $II1LIlI =$II1LIlI && $this->TTIIlIT(Array("action"=>"common")); if($II1LIlI) {if($aParams['vars']['skip_first_line']) {fgetcsv($fp, $this->Il11LIl, $this->delim); }$this->TI1T1lI($aParams); if(is_array($this->_config[I13710]["CATEGORY"]) && sizeof($this->_config[I13710]["CATEGORY"]) >0) {$this->I1IL1Ll["catIdField"] =-1; $this->I1IL1Ll["catParentIdField"] =-1; foreach($this->_config[I13710][I13711] as $fieldName=>$fieldData) {if($fieldName == "ID_PARENT_EXTERNAL" && $fieldData["type"] == "column") {$this->I1IL1Ll["catParentIdField"] =$fieldData[I13712]; }if($fieldName == "ID_EXTERNAL" && $fieldData["type"] == "column") {$this->I1IL1Ll["catIdField"] =$fieldData[I13712]; }}$Il11LLl =$Il11LLI =($this->I1IL1Ll[I13713] >-1); }$this->module->I11LIlL =$Il11LLl && !empty($this->_config['fields']['CATEGORY']['ID_EXTERNAL']) && !empty($this->_config['fields'][I13714]['ID_EXTERNAL']) && !empty($this->_config['fields'][I13714]['ITEM_LINKS']); if(isset($this->_config[I13710]["IMAGE"]) && is_array($this->_config[I13710][I13715]) && sizeof($this->_config[I13710][I13715]) >0) {$Il11LLL =true; $this->module->TTII1l1($this->Il11Ll1, 'item_fields_map'); $this->Il11Ll1 =array_intersect_key( $this->Il11Ll1, array('IMAGE_MAIN' => '', 'IMAGE_POPUP' => I13716, 'IMAGE_SMALL' => I13716) );}if(isset($this->_config[I13710]["REFERENCE"]) && is_array($this->_config[I13710]["REFERENCE"]) && sizeof($this->_config[I13710]["REFERENCE"]) >0){ $this->TI1T1ll(); $II1LIlI =$this->TT1TT1l($fp, $Il11LLI, $Il11LLL); if($II1LIlI) {$this->Il11l1L =$this->Il11l11*$this->Il11l1l; $II1LIlI =$this->TT1TT11($fp, $Il11LLI, $Il11LLL, false); }}else {$this->Il11l1L =$this->Il11l11*$this->Il11l1l; if($Il11LLI || $Il11LLL) {$II1LIlI =$this->TT1TT11($fp, $Il11LLI, $Il11LLL, true); }}if($II1LIlI && $Il11LLl) {$this->Il11l1L =2*$this->Il11l11*$this->Il11l1l; fseek($fp, 0); $this->Il11LlL->TTIlTIl($fp); if($aParams[I13717]['skip_first_line']) {fgetcsv($fp, $this->Il11LIl, $this->delim); }$II1LIlI =$this->TT1TTlI($fp); }$this->module->oEshop->dbTablePrefix =$this->llLIIlI; if($II1LIlI) {if ($Il11LLl) {$this->TI1T11T(); }$this->Il11l1L =3*$this->Il11l11*$this->Il11l1l; $this->Il11l11 =2*$this->Il11l11; fseek($fp, 0); $this->Il11LlL->TTIlTIl($fp); if($aParams[I13717]['skip_first_line']) {fgetcsv($fp, $this->Il11LIl, $this->delim); }$II1LIlI =$this->TT1TTll($fp); if($II1LIlI) {$this->TTIIlIl($this->Il11l1l, $this->Il11l1l); }}$this->TI1T11I(isset($this->_config['fields']['REFERENCE']) && is_array($this->_config[I13718]['REFERENCE']) && sizeof($this->_config[I13718]['REFERENCE']) >0); }}else {$this->TTIIlT1("10011", "data_open_error"); $II1LIlI =false; }}else {$this->TTIIlT1(I13719, "data_not_found"); $II1LIlI =false; }}break; case "eshop_user": $II1LIlI =$this->TTIIlIT(Array("action"=>"common")); if ($II1LIlI) {if($aParams[I13717][I13720]) {fgetcsv($fp, $this->Il11LIl, $this->delim); }$this->_config[I13710] =$this->module->TTII111("import_user_fields_map", true); $dataSource =$aParams["data_source"]; if (file_exists($dataSource)) {$this->TTIIlIl(0, 100); $this->II1LIIL =filesize($dataSource); if (($fp =@fopen($dataSource, I13709))) {$II1LIlI =$this->TT1TT1T($fp); }else {$this->TTIIlT1("10011", "data_open_error"); $II1LIlI =false; }}else {$this->TTIIlT1(I13719, I13721); $II1LIlI =false; }}break; case "eshop_order": $II1LIlI =$this->TTIIlIT(Array("action"=>"common")); if ($II1LIlI) {if($aParams[I13717][I13720]) {fgetcsv($fp, $this->Il11LIl, $this->delim); }$this->_config[I13710] =$this->module->TTII111("import_order_fields_map", true); $dataSource =$aParams[I13722]; if (file_exists($dataSource)) {$this->TTIIlIl(0, 100); $this->II1LIIL =filesize($dataSource); if (($fp =@fopen($dataSource, I13709))) {$II1LIlI =$this->TT1TTl1($fp); }else {$this->TTIIlT1("10011", "data_open_error"); $II1LIlI =false; }}else {$this->TTIIlT1(I13719, I13721); $II1LIlI =false; }}break; }break; }return $II1LIlI; }function TT1TTlI($fp) {if($this->TTIIlIT(array ('action' => 'process_categories', I13723 => 'import_'))) {$II1LIlI =true; $Il11L11 =0; while($aData =fgetcsv($fp, $this->Il11LIl, $this->delim)) {TlT1lT1($aData); $Il11L11++; if ($this->TTIIllT($aData)) {$aCatData =Array(); $II1L1lI =trim($this->TT1TIT1($this->_config[I13710][I13711]["ID_EXTERNAL"], $aData)); if(isset($this->Il11lL1["reg_id"][$II1L1lI])) {unset($this->Il11lL1["reg_id"][$II1L1lI]); foreach($this->_config[I13710][I13711] as $fieldName=>$fieldData) {$aCatData[$fieldName] =$this->TT1TIT1($fieldData, $aData); }$aCatData += $this->TT1TITI($aData); $this->_rapidImportCategoriesCB($aCatData, $II1L1lI); }}$this->TTIIlIl($this->Il11l1L +$this->Il11l11 *$Il11L11, $this->Il11l1l); }$this->TI1T1l1(); }else {$this->TTIIlT1(I13724, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array("action"=>"process_categories")); return $II1LIlI; }function TT1TTll($fp) {if($this->TTIIlIT(array ('action' => I13725, I13723 => 'import_'))) {$II1LIlI =true; $Il11L11 =0; while($aData =fgetcsv($fp, $this->Il11LIl, $this->delim)) {TlT1lT1($aData); $Il11L11++; if ($this->TTIIllT($aData)) {$aItemData =Array(); $II1L1lI =$this->TT1TIT1($this->_config[I13710]["CATALOG"]["ID_EXTERNAL"], $aData); if ($II1L1lI != I13716) {foreach($this->_config[I13710]["CATALOG"] as $fieldName=>$fieldData) {$aItemData[$fieldName] =$this->TT1TIT1($fieldData, $aData); }$aItemData += $this->TT1TITI($aData); $this->_rapidImportItemsCB($aItemData); }}$this->TTIIlIl($this->Il11l1L +$this->Il11l11 *$Il11L11, $this->Il11l1l); }$this->TI1T1l1(); }else {$this->TTIIlT1(I13724, I13726); $II1LIlI =false; }$this->TTIIlII(array ('action' => I13725, 'skip_common' => true)); return $II1LIlI; }function TT1TTl1($fp) {if($this->TTIIlIT(Array("action"=>"process_orders"))) {$II1LIlI =true; $Il11L11 =0; $Il111II =Array(); while($aData =fgetcsv($fp, $this->Il11LIl, $this->delim)) {TlT1lT1($aData); $Il11L11++; if ($this->TTIIllT($aData)) {$aOrderData =Array(); $II1L1lI =$this->TT1TIT1($this->_config[I13710][I13727], $aData); if($II1L1lI != "" && !isset($Il111II[$II1L1lI])) {foreach($this->_config[I13710] as $fieldName=>$fieldData) {$aOrderData[$fieldName] =$this->TT1TIT1($fieldData, $aData); }$this->II1I1IL->{$this->II1I1I1["process_orders"]}($aOrderData); $Il111II[$II1L1lI] =true; }}$this->TTIIlIl($this->Il11l1L +$this->Il11l11 *$Il11L11, $this->Il11l1l); }}else {$this->TTIIlT1(I13724, I13726); $II1LIlI =false; }$this->TTIIlIl(100, 100); $this->TTIIlII(Array("action"=>"process_orders")); return $II1LIlI; }function TT1TT1T($fp) {if ($this->TTIIlIT(Array(I13728=>"process_users"))) {$II1LIlI =true; $Il11L11 =0; while($aData =fgetcsv($fp, $this->Il11LIl, $this->delim)) {TlT1lT1($aData); $Il11L11++; if ($this->TTIIllT($aData)) {$aUserData =Array(); $II1L1lI =$this->TT1TIT1($this->_config[I13710][I13727], $aData); foreach($this->_config[I13710] as $fieldName=>$fieldData) {$aUserData[$fieldName] =$this->TT1TIT1($fieldData, $aData); }$this->II1I1IL->{$this->II1I1I1["process_users"]}($aUserData); }$this->TTIIlIl($this->Il11l1L +$this->Il11l11 *$Il11L11, $this->Il11l1l); }}else {$this->TTIIlT1(I13724, I13726); $II1LIlI =false; }$this->TTIIlIl(100, 100); $this->TTIIlII(Array(I13728=>"process_users")); return $II1LIlI; }function TT1TT1I(&$aData) {$II1LIlI =true; if(sizeof($aData) <2){ $II1LIlI =false; }return $II1LIlI; }function TT1TT1l($fp, $Il11LLI, $Il11LLL) {if ($this->TTIIlIT(array ('action' => I13729, I13723 => 'import_'))) {$II1LIlI =true; $this->Il11l1l =0; while($aData =fgetcsv($fp, $this->Il11LIl, $this->delim)) {TlT1lT1($aData); $Il111Il =mb_strlen(implode(";", $aData)); $this->Il11l1l++; if ($this->TTIIllT($aData)) {$II1LIlI =$this->TT1TT1I($aData); if(!$II1LIlI) {$this->TTIIlT1("10014", "num_columns_error", Array(I13730 => $this->Il11l1l)); break; }foreach($this->_config[I13710]["REFERENCE"] as $type=>$fields) {$Il111IL =array('data_type' => 'REFERENCE_' .$type); $llLIIIL =explode(',', $fields[I13731]); foreach ($llLIIIL as $ILLI11I){ $II1L1lI =isset($aData[$ILLI11I]) ?$aData[$ILLI11I] :I13716; $Il111IL[$fields["name"]] =$II1L1lI; $Il111IL[I13727] =trim($II1L1lI); $this->II1I1IL->{$this->II1I1I1["process_references"]}($Il111IL); }$this->TTIIlIl($this->Il11l1L +$this->Il11l11 *$Il111Il, $this->II1LIIL); }if(!$this->__PrepareImagesCats($aData, $Il11LLI, $Il11LLL)) {$this->TTIIlT1("10013", "category_cycling", Array(I13730 => $this->Il11l1l)); $II1LIlI =false; break; }}}}else {$this->TTIIlT1(I13724, I13726); $II1LIlI =false; }$this->TTIIlII(Array(I13728=>I13732)); return $II1LIlI; }function __PrepareImagesCats(&$aData, $Il11LLI, $Il11LLL) {$II1LIlI =true; if($Il11LLI) {if($aData[$this->I1IL1Ll[I13713]] != $aData[$this->I1IL1Ll["catParentIdField"]]) {$this->Il11lL1["pid"][$aData[$this->I1IL1Ll["catParentIdField"]]][] =Array("id"=>$aData[$this->I1IL1Ll[I13713]]); $this->Il11lL1[I13733][$aData[$this->I1IL1Ll[I13713]]] =$aData[$this->I1IL1Ll["catParentIdField"]]; }else {$II1LIlI =false; }}if($Il11LLL) {$this->TT1TITT($aData); }return $II1LIlI; }function TT1TT11($fp, $Il11LLI, $Il11LLL, $Il111I1) {$II1LIlI =true; if($Il111I1) {$this->Il11l1l =0; while($aData =fgetcsv($fp, $this->Il11LIl, $this->delim)) {TlT1lT1($aData); $this->Il11l1l++; if ($this->TTIIllT($aData)) {$II1LIlI =$this->TT1TT1I($aData); if(!$II1LIlI) {$this->TTIIlT1("10014", "num_columns_error", Array(I13730 => $this->Il11l1l)); break; }if(!$this->__PrepareImagesCats($aData, $Il11LLI, $Il11LLL)) {$this->TTIIlT1("10013", I13734, Array(I13730 => $this->Il11l1l)); $II1LIlI =false; break; }}}}if($II1LIlI) {if($Il11LLI) {$this->TT1TIIT(); }if(is_array($this->Il11lL1["reg"])) {if($this->TTIIlIT(array ('action' => 'prepare_categories', I13723 => 'import_'))) {$i =0; foreach ($this->Il11lL1[I13735] as $row) {$this->II1I1IL->{$this->II1I1I1["prepare_categories"]}(Array("id_external"=>$row[I13733], "id_parent_external"=>$row["pid"], I13736=>empty($row["is_deleted"]) ?0 :1, I13723 => 'import_')); $this->TTIIlIl($this->Il11l1L +$this->Il11l11 *(++$i), $this->Il11l1l); }}else {$this->TTIIlT1(I13724, I13726); $II1LIlI =false; }$this->TTIIlII(Array(I13728=>"prepare_categories", I13723 => 'import_')); }if(is_array($this->Il11l1I) && sizeof($this->Il11l1I) >0) {if($this->TTIIlIT(array (I13737 => 'prepare_images', I13723 => 'import_'))) {foreach($this->Il11l1I as $aImage) {$this->II1I1IL->{$this->II1I1I1["prepare_images"]}($aImage); }}else {$this->TTIIlT1(I13724, I13726); $II1LIlI =false; }$this->TTIIlII(Array(I13728=>"prepare_images")); }}return $II1LIlI; }function TT1TITT(&$aRecord){ foreach($this->_config[I13718][I13738] as $fieldName => $fieldData) {$img =$this->TT1TIT1($fieldData, $aRecord); if($img != I13716){ $this->Il11l1I[] =isset($this->Il11Ll1[$fieldName]) && $this->Il11Ll1[$fieldName]['operation'] == 'image' ?array('tmp_file_name' => $img, 'store_name' => $img, I13739 => true) :array('file_name' => $img); }}}function TT1TITI(&$aRecord){ $aImages =Array(); if(isset($this->_config[I13718][I13738])){ foreach((array)$this->_config[I13718][I13738] as $fieldName => $fieldData){ $aImages[$fieldName] =I13716; $fname =$this->TT1TIT1($fieldData, $aRecord); if(!empty($fname)){ $aImages[$fieldName] =isset($this->Il11Ll1[$fieldName]) && $this->Il11Ll1[$fieldName]['operation'] == 'image' ?$fname :str_replace($GLOBALS['ROOT_PATH'], I13716, $GLOBALS['CUSTOM_PICTURES_PATH']) .$this->module->I11lLl1 .'/' .$fname; }}}return $aImages; }function TT1TITl(&$aRowData) {$prices =Array(); if(is_array($this->_config[I13710]["PRICE_TYPE"])) {foreach($this->_config[I13710]["PRICE_TYPE"] as $numPrice=>$Il111lI) {foreach($Il111lI as $fieldName=>$fieldData) {$prices[$numPrice][$fieldName] =$this->TT1TIT1($fieldData, $aRowData); }}}return $prices; }function TT1TIT1($fieldData, &$aRowData) {$value =""; switch($fieldData[I13740]) {case "column": $value =$aRowData[$fieldData[I13712]]; break; case "column_price": $value =preg_replace("/[^0-9\\.,]/", "", $aRowData[$fieldData[I13712]]); break; case I13712: $value =$fieldData[I13712]; break; case I13741: $value =$this->TT1TITl($aRowData); break; }return $value; }function TT1TIII(&$aArray) {foreach ($aArray as $key => $value) {if (!is_array($value)) {$value =unhtmlentities($value); $aSearch =Array('"', "\r\n", "\r"); $aReplace =Array('""', I13742, I13742); $value =str_replace($aSearch, $aReplace, $value); $aArray[$key] ="\"$value\""; }}}function TTIIIl1($II1ILL1, $II1IL1I, $II1IL1l, $II1IL1L) {$Il111LI =false; $content =""; switch ($II1ILL1) {case "eshop_order": $aOrderData =$II1IL1I; if(!isset($aOrderData["id_external"]) || empty($aOrderData["id_external"])) {$aOrderData[I13743] =$aOrderData[I13733]; $Il111LI =true; }$II1LI1I =$aOrderData[I13743]; $Il111Ll =$aOrderData['items']; $aOrderData += (array)$aOrderData["custinfo"]; $aOrderData += (array)$aOrderData["sysinfo"]; $aOrderData["user_id_external"] =$this->II1I1IL->{$this->II1I1I1[I13744]}("user", $aOrderData["id_member"], "id_member"); unset($aOrderData["ext_data"]); unset($aOrderData[I13745]); unset($aOrderData["sysinfo"]); unset($aOrderData["extdata"]); unset($aOrderData["items"]); unset($aOrderData["currency"]); $aOrderData[I13746] =$this->TT1TIIl($aOrderData[I13746]); $aOrderData["order_total"] =$aOrderData["total_tax"] +$aOrderData["total_price"] +$aOrderData["total_shipping"]; $content =I13747; if(is_array($Il111Ll)) {foreach($Il111Ll as $name => $aItem) {if($aItem["item_id_external"] == I13747 && $aItem[I13733] != I13747) {$aItem["item_id_external"] =$this->II1I1IL->{$this->II1I1I1[I13744]}("item", $aItem[I13733]); }$Il111LL =$aOrderData +$aItem; unset($Il111LL["ext_data"]); $Il111LL[I13748] =$aItem["ext_data"]["item_info"][I13748]; $Il111LL["tax"] =$aItem["ext_data"][I13749]["tax_item_value"]; $Il111LL["name"] =$aItem["ext_data"][I13749]["name"]; $Il111LL[I13750] =$aItem["ext_data"][I13749][I13750]; $Il111LL["sku"] =$aItem["ext_data"][I13749]["sku"]; $this->TT1TIII($Il111LL); foreach ($this->_fields as $field) {$content .= $Il111LL[$field].$this->delim; }$content =mb_substr($content, 0, -1); $content .= I13742; }}else {}break; case I13751: $aUserData =$II1IL1I; if(!isset($aUserData[I13743]) || empty($aUserData[I13743])) {$aUserData[I13743] =$aUserData[I13733]; $Il111LI =true; }$II1LI1I =$aUserData[I13743]; $aUserData["balance_history"] =$this->TT1TIIl($aUserData["balance_history"]); unset($aUserData["currency"]); $this->TT1TIII($aUserData); $content =I13747; foreach ($this->_fields as $field) {$content .= $aUserData[$field].$this->delim; }$content =mb_substr($content, 0, -1); $content .= I13742; break; }$res =Array(); $res["content"] =mb_convert_encoding($content, I13752, 'UTF-8'); $res["is_new_id_external"] =$Il111LI; $res[I13743] =$II1LI1I; return $res; }function TT1TIIl($Il1111L, $Il11111 ="|=", $ILIIIII ="|") {$str =I13747; if(is_array($Il1111L)) {foreach ($Il1111L as $timestamp => $data) {array_unshift($data, date($this->module->cms->DFMT[I13753], $timestamp)); $str .= implode($ILIIIII, $data).$Il11111; }$str =mb_substr($str, 0, mb_strlen($str) -mb_strlen($Il11111)); }return $str; }}