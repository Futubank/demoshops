<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       78186 xkqwgsmkxktztzgtkkwgullnpnxptpwqrsyzmtwwimyqrwipmmsxkinpqqirxitzqtzupnir
 */ ?><?php foreach(array(13823=>"",13824=>"]EuHt^",13825=>"]<34^",13826=>"whNFmp",13827=>"01",13828=>"dTzRT+Tzp",13829=>"06",13830=>"hylqwT",13831=>"02",13832=>"hylqwT+mNFh",13833=>"Nziq+hylqwT",13834=>"Tbgqd",13835=>"gRmwqd+izg",13836=>"10",13837=>"10010102",13838=>"Tbgq",13839=>"Fmjq|qXTqNdmhN",13840=>"1001010109",13841=>"VzjUq+1w",13842=>"1001010201",13843=>"03",13844=>"zim+RqFqRqNwq+NUi",13845=>"zim+VzjUq+1w",13846=>"FRhi",13847=>"tZP",13848=>"hylqwT+Tbgq+zTTR",13849=>"DtZrt|tZP",13850=>'mizpq|izmN',13851=>'mizpq|ghgUg',13852=>'mizpq|dizjj',13853=>'fMQJS|ZWtMHn',13854=>'fMQJS|SY',13855=>"WHGB",13856=>'WHGB',13857=>'fMQJSD',13858=>'rQGJZWQ',13859=>'0',13860=>'ZIM|vZJuQ|1W',13861=>'ZIM|vZJuQ|SY',13862=>"nZIQ",13863=>"tBGQ",13864=>'MtQI|fMQJSD|IZG',13865=>"hylqwTd",13866=>"10010101",13867=>"1001010108",13868=>"ms+qXTqRNzj",13869=>"r",13870=>"|DtZrtqJQIQntwfP",13871=>"0",13872=>'D',13873=>"fMJQ|frQQ",13874=>"MIZPQD",13875=>"GrMWQD",13876=>"WurrQnWB",13877=>"D10010101050101",13878=>"D10010101080102",13879=>"GQrWQnt",13880=>"D100101020102",13881=>"D100101020109",13882=>"fMQJS|ZWtMHn",13883=>"D100101020106",13884=>"fMJQ|QxtQnDMHn",13885=>"WHIGrQDDMHn",13886=>"QnWHSMnP",13887=>"tH",13888=>"D10060201",13889=>"HYLQWt|tBGQ|Zttr",13890=>"HYLQWt|QDOHG",13891=>"HYLQWt|1W",13892=>"HYLQWtD",13893=>"|",13894=>"fMQJS|1W",13895=>'fMQJS|QDOHG',13896=>'rQfQrQnWQ',13897=>'IZGGMnP',13898=>"fMQJS|QDOHG",13899=>"D100101010801",13900=>"tZx",13901=>"D1001010201",13902=>"1003",13903=>"D1001010109",13904=>"IZG",13905=>"frHI",13906=>"WHIIHn",13907=>"10012",13908=>"1",13909=>"wURRqNwb",13910=>"6",13911=>"md|FhjsqR",13912=>"4",13913=>"tBGQ|tZP",13914=>"13",13915=>"md|sqjqTqs",13916=>"smdwhUNT",13917=>"17",13918=>"3",13919=>"7",13920=>"15",13921=>"ZWtMHn",13922=>"HYLQWt",13923=>"rQP",13924=>"WZJJYZWKD",13925=>"GMS",13926=>"WZJJYZWK|QrrHr",13927=>'MIGHrt|',13928=>"GZrDQr|QrrHr",13929=>":02S",13930=>'GrQfMx',13931=>"RqFqRqNwq|",13932=>"GZrDQr",13933=>'ZWtMHn',13934=>"wzTzjhp",13935=>"SQJQtQ|WZtQPHrMQD",13936=>"11",13937=>"UgszTq?",13938=>"10013",13939=>"|DtZrtqJQIQntgZDD4",13940=>"mTqi|UgszTq",13941=>"10010",13942=>"qnWHSQTHUtfgOGwy",13943=>"IQDDZPQ|nuIYQr",13944=>"QJQIQnt",13945=>"14",13946=>"131",13947=>"MIZPQ|SZtZ",13948=>"MD|fHJSQr",13949=>"fMJQ|nZIQ",13950=>"124",13951=>"SQJ|HYL|tBGQ",13952=>"172",13953=>"177",13954=>"truQ",13955=>"szTq",13956=>"MD|SQJQtQS",13957=>"MIP|tBGQ",13958=>"tBGQD",13959=>"frQQ",13960=>"tIG|fMJQ|nZIQ",13961=>"YZDQ|tZP",13962=>"?",13963=>"fZJDQ",13964=>"SZtZ|tBGQ",13965=>"1101",13966=>"TzX",13967=>"ms|qXTqRNzj",13968=>"MS|tZP",13969=>"GZtOtBGQD",13970=>"MIGHrt|IHSuJQD",13971=>"MnWJuSQS|MIGHrt|IHSuJQD",13972=>"QDOHG|HrSQr",13973=>"|fHrI",13974=>"MS|QxtQrnZJ",13975=>"Qxt|SZtZ",13976=>"EtB",13977=>"MtQID|JMDt",13978=>"WuDtMnfH",13979=>"%QxGHrt|HrSQr",13980=>"MD|nQC|MS|QxtQrnZJ") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'RapidExchangeDriver.php'; class RapidXML1cV8ExchangeDriver extends RapidExchangeDriver {public $llLILll; public $llLILlL; public $llLILl1; public $llLILLI; public $_config; public $I1IL1Ll; public $llLILLl; public $llLILLL; public $Il11lL1; public $Il11l1I; public $llLILL1; public $llLIL1I; public $llLIL1l; public $llLIL1L; public $llLIL11; public $llLI1II; public $llLI1Il; public $lIllL1L; public $llLI1IL; public $llLI1I1; public $llLI1lI; public $llLI1ll; public $llLI1lL; public $llLI1l1; public $llLI1LI; public $llLI1Ll; public $II1LIIL; public $llLI1LL; public $Il11l1L; public $llLI1L1; public $llLI11I; public $aXmlReplaceChars; public $llLI11l; public $_fields; public $llLI11L; function RapidXML1cV8ExchangeDriver(&$gui, &$module) {parent::RapidExchangeDriver($gui, $module); $this->name ="RapidXML1cV8ExchangeDriver"; $this->llLILlL =524288; $this->llLILl1 =""; $this->llLILLI =false; $this->_config["fields"] =Array(); $this->_config["objects"] =Array(); $this->_config["compression"] =Array(); $this->I1IL1Ll =Array(); $this->llLILLl =Array(); $this->Il11lL1 =Array(); $this->Il11l1I =Array(); $this->llLILL1 =Array(); $this->llLIL1I ="_PrepareTagNameStubCB"; $this->llLIL1l ="EncodeStubCB"; $this->llLIL1L ="EncodeStubCB"; $this->llLI1II =""; $this->llLI1Il ="0"; $this->lIllL1L =Array(); $this->llLI1IL =I13823; $this->llLI1I1 =Array(); $this->llLI1lI =Array(); $this->llLI1ll =Array(); $this->llLI1lL =Array(); $this->llLI1l1 =Array(); $this->llLI1LI =0; $this->llLI1Ll =I13823; $this->II1LIIL =0; $this->llLI1LL =0.25; $this->Il11l1L =0; $this->llLI1L1 =0; $this->llLI11I =I13823; $this->llLI11l =false; $this->aXmlReplaceChars =Array( "from"=>Array("&amp;", "&lt;", "&gt;", I13824), "to"=>Array("&#38;", "&#60;", "&#62;", I13825), );$this->llLI11L =array(); }function Init($type) {$res =false; if(parent::Init($type)) {$this->llLILll =$GLOBALS["LOCAL_FILES_PATH"].$this->module->module->GetOption("config_file"); if($type == "import") {$this->llLILLL =Array( I13823=>Array("tag"=>Array(I13826=>"10")), "10"=>Array("tag"=>Array("OBJECTS"=>I13827, "COMPRESSION"=>"02", "FTP"=>"03", I13828=>"04", "ENCODING"=>"05", "OBJECT-DELETION"=>I13829, "DATE-FORMAT-STRING"=>"07")), "1001"=>Array("tag"=>Array(I13830=>I13827)), "1002"=>Array("tag"=>Array("IS-COMRESSION"=>I13827, "NAME-ARCHIVE"=>I13831, "PASSWD"=>"03")), "100101"=>Array("tag"=>Array(I13832=>I13827, "ATTRIBS"=>I13831)), "10010101"=>Array("tag"=>Array("NAME-OBJECT-1C"=>I13827, I13833=>I13831, "DEFAULT_TYPE"=>"03", "TYPE_TAG"=>"04", I13834=>"05", "DATA_TYPE"=>I13829, "PRICE-ID-TAG"=>"07", I13835=>"08", "TAXES-MAP"=>"09", "OBJECT-DELETION-TYPE-1C"=>I13836, "BASE-CURRENCY-TAG"=>"11", "BASE-CURRENCY-VALUE"=>"12")), I13837=>Array("tag"=>Array("ATTRIB"=>I13827)), "1001010105"=>Array("tag"=>Array(I13838=>I13827)), "100101010501"=>Array("tag"=>Array("VALUE-1C"=>I13827, "NAME"=>I13831, I13839=>"03")), "1001010108"=>Array("tag"=>Array("MAP"=>I13827)), I13840=>Array("tag"=>Array("MAP"=>I13827)), "100101010801"=>Array("tag"=>Array(I13841=>I13827, "PRICE-NUMBER"=>I13831)), "100101010901"=>Array("tag"=>Array(I13841=>I13827, "PERCENT"=>I13831)), I13842=>Array("tag"=>Array("NAME-1C"=>I13827, "NAME"=>I13831, "AMI-DB-FIELD" => I13843, "AMI-ACTION" => "04", "AMI-MAPPING" => "05", I13844 => I13829, "AMI-REFERENCE-DATA-TYPE" => "07", "AMI-SPECIAL-NUM" => "08", "AMI-CUSTOM-FIELD-NUM" => "09", "AMI-CAT" => I13836)), "100101020105" => array("tag" => array(I13845 => I13827, "AMI-VALUE-DB" => I13831)), "1005"=>Array("tag"=>Array("TYPE-1C"=>I13827, I13846=>I13831, "TO"=>I13843, "PARSER"=>"04")), "1006"=>Array(I13847=>Array("TAG"=>I13827, "OBJECT-ID"=>I13831)), "100602"=>Array(I13847=>Array("TAG"=>I13827, I13848=>I13831)), );$this->llLIL1L ='EncodeToWinMbCB'; $res =$this->TI1T111("import"); if($res) {$this->_config["fields"]["body"][$this->_config[I13849]] =$this->_config[I13849]; }$llLI111 =$this->module->cms->Core->GetModOption($this->module->moduleName, 'item_fields_map'); $llLlIII =$this->module->cms->Core->GetModOption($this->module->moduleName, 'cat_fields_map'); if(isset($llLI111['IMAGE_MAIN']['operation'])){ $llLI111[I13850]['operation'] ='image'; }if(isset($llLI111['IMAGE_POPUP']['operation'])){ $llLI111[I13851]['operation'] ='image'; }if(isset($llLI111['IMAGE_SMALL']['operation'])){ $llLI111[I13852]['operation'] ='image'; }$llLlIIl =array(); $llLlIIL =array(); foreach($this->llLI11L as $fieldName => $llLlII1){ if($llLlII1['field_action'] == 'copy' || $llLlII1[I13853] == 'replace'){ if(isset($llLlII1['field_cat']) && $llLlII1['field_cat']){ $llLlIIL[] =$llLlII1['field_db']; }else{ $llLlIIl[] =$llLlII1[I13854]; }}}if(sizeof($llLlIIl)){ $llLlIlI =$this->TTIIlll('eshop_item/table', $llLlIIl); }if(sizeof($llLlIIL)){ $llLlIll =$this->TTIIlll('eshop_cat/table', $llLlIIL); }foreach($this->llLI11L as $fieldName => $llLlII1){ if(isset($llLlII1['field_cat']) && $llLlII1['field_cat']){ $llLlIlL =true; }else{ $llLlIlL =false; }switch($llLlII1[I13853]){ case I13855: if($llLlIlL){ $llLlIII[$fieldName] =array( 'operation' => 'copy', 'fields' => isset($llLlIll[$llLlII1[I13854]]) ?$llLlIll[$llLlII1[I13854]] :$llLlII1[I13854] );}else{ $llLI111[$fieldName] =array( 'operation' => I13856, 'fields' => isset($llLlIlI[$llLlII1[I13854]]) ?$llLlIlI[$llLlII1[I13854]] :$llLlII1[I13854] );}break; case "on_special": if(!$llLlIlL){ $llLI111[$fieldName] =array( 'operation' => 'on_special', I13857 => 'on_special', 'number' => intval($llLlII1[I13854]), 'pre_operation' => array( 'operation' => I13858, 'values' => array( 'true' => '1', 'false' => I13859 )));}break; case "replace": if($llLlIlL){ $llLlIII[$fieldName] =array( 'operation' => I13858, I13857 => isset($llLlIll[$llLlII1[I13854]]) ?$llLlIll[$llLlII1[I13854]] :$llLlII1[I13854] );}else{ $llLI111[$fieldName] =array( 'operation' => I13858, I13857 => isset($llLlIlI[$llLlII1[I13854]]) ?$llLlIlI[$llLlII1[I13854]] :$llLlII1[I13854] );}foreach($llLlII1['mapping'] as $llLlIl1){ if(isset($llLlIl1[I13860]) && isset($llLlIl1['ami_value_db'])){ if($llLlIlL){ $llLlIII[$fieldName]['values'][$llLlIl1[I13860]] =$llLlIl1['ami_value_db']; }else{ $llLI111[$fieldName]['values'][$llLlIl1[I13860]] =$llLlIl1[I13861]; }}}break; case "reference": $llLlILI =$this->module->cms->Core->GetModOption($this->module->moduleName, 'references_fields_map'); $llLlILI[$fieldName] =array( "operation" => I13855, "fields" => I13862 );$this->module->cms->Core->SetModOption($this->module->moduleName, 'references_fields_map', $llLlILI); $llLlILl =$this->module->cms->Core->GetModOption($this->module->moduleName, 'references_tables_map'); $llLlILl["REFERENCE_".$llLlII1['ref_data']] =array( I13863 => "regular", "id" => $llLlII1['ref_num'] );$this->module->cms->Core->SetModOption($this->module->moduleName, 'references_tables_map', $llLlILl); $llLlILL =$this->module->cms->Core->GetModOption('ext_eshop_custom_fields', 'custom_types'); $llLlILL[intval($llLlII1[I13854]) -1] =array( 0 => "char", 1 => $llLlII1['ref_num'], 2 => "select" );$this->module->cms->Core->SetModOption('ext_eshop_custom_fields', 'custom_types', $llLlILL); $llLI111[$fieldName] =array( 'operation' => 'reference', 'name' => $llLlII1[I13854] );break; }}$this->module->cms->Core->SetModOption($this->module->moduleName, I13864, $llLI111); $this->module->cms->Core->SetModOption($this->module->moduleName, 'cat_fields_map', $llLlIII); $this->module->cms->Core->SetModOption('eshop_item', 'item_links_allowed', I13859); unset($llLI111); unset($llLlIII); }elseif($type == "export") {$this->llLILLL =Array( I13823=>Array(I13847=>Array(I13826=>I13836)), I13836=>Array(I13847=>Array(I13865=>I13827, "DATE-FORMAT-STRING"=>"07")), "1001"=>Array(I13847=>Array(I13830=>I13827)), "100101"=>Array(I13847=>Array(I13832=>I13827)), I13866=>Array(I13847=>Array("NAME-OBJECT-1C"=>I13827, I13833=>I13831, I13835=>"08", "TAXES-MAP"=>"09")), I13867=>Array(I13847=>Array("MAP"=>I13827)), I13840=>Array(I13847=>Array("MAP"=>I13827)), "100101010801"=>Array(I13847=>Array("PRICE-NUMBER"=>I13831, I13868=>I13843)), "100101010901"=>Array(I13847=>Array(I13841=>I13827, "PERCENT"=>I13831)), );$res =$this->TI1T111("export"); }}return $res; }function TI1T11l() {$this->llLI1LI =0; $this->llLI1Ll =I13823; $this->llLILl1 =I13823; $this->I1IL1Ll =Array(); $this->llLILLI =false; $this->llLIL11 ="body"; }function TI1T111($type) {$res =false; if(file_exists($this->llLILll)) {if(($fp =@fopen($this->llLILll, I13869))) {$this->llLI1Il ="00"; if($type == "import") {$llLlIL1 ="_endElementCfgImport"; }else {$llLlIL1 ="_endElementCfgExport"; }if($this->TI1ITI1($fp, I13870, $llLlIL1, "_characterDataCfg")) {$res =true; }else {$this->TTIIlT1("10003", "config_parse_error", $this->I1IL1Ll["parser_error"]); }$this->llLI1Il =I13871; fclose($fp); }else {$this->TTIIlT1("10002", "config_open_error"); }}else {$this->TTIIlT1("10001", "config_not_found"); }return $res; }function _startElementCfg($parser, $name, $attrs) {$name =$this->{$this->llLIL1I}($name); $this->TI1ITTl($parser, $name, $attrs); switch(I13872.$this->llLILl1) {case "s10010101050102": if(isset($attrs[I13863]) && $attrs[I13863] == "free") {$this->I1IL1Ll["file_free"] ="1"; }else {$this->I1IL1Ll[I13873] =I13871; }break; }}function _characterDataCfg($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {$data =$this->{$this->llLIL1L}($data); switch(I13872.$this->llLILl1) {case "s1004": $this->_config[I13849] =$data; break; case "s1001010101": $this->I1IL1Ll["object_1c"] =$data; break; case "s1001010103": $this->_config[I13874]["default_type"] =$data; break; case "s1001010104": $this->_config[I13874]["type_tag"] =$data; break; case "s1001010107": $this->_config[I13875]["id_tag"] =$data; break; case "s1001010110": $this->I1IL1Ll["object_deletion_type"] =$data; break; case "s1001010111": $this->_config[I13876]["base_tag"] =$data; break; case "s1001010112": $this->_config[I13876]["base_value"] =$data; break; case "s100101020101": case I13877: $this->I1IL1Ll["field_1c"] =$data; break; case "s10010101080101": case "s10010101090101": $this->I1IL1Ll["value_1c"] =$data; break; case I13878: $this->I1IL1Ll["price_number"] =$data; break; case "s10010101080103": $this->I1IL1Ll["price_id_external"] =$data; break; case "s10010101090102": $this->I1IL1Ll[I13879] =$data; break; case "s1001010102": $this->I1IL1Ll["object_eshop"] =$data; break; case "s1001010106": $this->I1IL1Ll["data_type"] =$data; break; case I13880: case "s10010101050102": $this->I1IL1Ll["field_eshop"] =$data; break; case "s100101020103": case "s100101020108": case I13881: $this->I1IL1Ll["field_db"] =$data; break; case "s100101020110": $this->I1IL1Ll["field_cat"] =$data; break; case "s100101020104": $this->I1IL1Ll[I13882] =$data; break; case "s10010102010501": $this->I1IL1Ll["ami_value_1c"] =$data; break; case "s10010102010502": $this->I1IL1Ll["ami_value_db"] =$data; break; case I13883: $this->I1IL1Ll["ref_num"] =$data; break; case "s100101020107": $this->I1IL1Ll["ref_data"] =$data; break; case "s10010101050103": $this->I1IL1Ll[I13884] =$data; break; case "s100201": $this->_config["compression"]["enable"] =$data; break; case "s100202": $this->_config[I13885]["file_name"] =$data; break; case "s100203": $this->_config[I13885]["password"] =$data; break; case "s100501": $this->_config[I13886]["1C"] =$data; break; case "s100502": $this->_config[I13886]["from"] =$data; break; case "s100503": $this->_config[I13886][I13887] =$data; break; case "s100504": $this->_config[I13886]["parser"] =$data; break; case "s100601": $this->_config["delete_object"][I13847] =$data; break; case I13888: $this->_config["delete_object"]["object_id"] =$data; break; case "s10060202": $this->_config["delete_object"][I13889] =$data; break; case "s1007": $this->_config["format_date"] =$data; break; }}$this->llLI1LI =2; }function _endElementCfgImport($parser, $name) {$this->llLI1LI =3; $name =$this->{$this->llLIL1I}($name); if(!$this->llLILLI) {if($this->llLILl1 != "1003") {$this->llLILl1 =mb_substr($this->llLILl1, 0, mb_strlen($this->llLILl1) -2); }switch(I13872.$this->llLILl1) {case "s100101": if($name == I13832) {if($this->I1IL1Ll[I13890] == "REFERENCE") {$llLlI1I =$this->I1IL1Ll[I13890]."_".$this->I1IL1Ll["data_type"]; $this->lIllL1L[] =$llLlI1I; $this->_config["objects"][$this->I1IL1Ll[I13891]] =$llLlI1I; $this->_config["fields"]["objects"][$this->I1IL1Ll[I13891]] =$llLlI1I; if(isset($this->I1IL1Ll["object_deletion_type"])) {$this->_config["del_objects"][$this->I1IL1Ll["object_deletion_type"]] =Array(I13863=>"REFERENCE", "data_type"=>$this->I1IL1Ll["data_type"]); unset($this->I1IL1Ll["object_deletion_type"]); }}else {$this->_config[I13892][$this->I1IL1Ll[I13891]] =$this->I1IL1Ll[I13890]; $this->_config["fields"][I13892][$this->I1IL1Ll[I13891]] =$this->I1IL1Ll[I13890]; if(isset($this->I1IL1Ll["object_deletion_type"])) {$this->_config["del_objects"][$this->I1IL1Ll["object_deletion_type"]] =Array(I13863=>$this->I1IL1Ll[I13890]); unset($this->I1IL1Ll["object_deletion_type"]); }}}break; case "s10010102": if($name == "ATTRIB"){ if($this->I1IL1Ll[I13890] == "REFERENCE") {$this->_config["fields"][$this->I1IL1Ll[I13890].I13893.$this->I1IL1Ll["data_type"]][$this->I1IL1Ll["field_1c"]] =$this->I1IL1Ll["field_eshop"]; }else {$this->_config["fields"][$this->I1IL1Ll[I13890]][$this->I1IL1Ll[I13894]] =$this->I1IL1Ll["field_eshop"]; }if(isset($this->I1IL1Ll['object_eshop']) && ($this->I1IL1Ll['object_eshop'] == 'CATALOG') && isset($this->I1IL1Ll[I13895]) && isset($this->I1IL1Ll[I13853]) && isset($this->I1IL1Ll[I13854])){ $this->llLI11L[$this->I1IL1Ll[I13895]] =array( I13854 => strtolower($this->I1IL1Ll[I13854]), I13853 => strtolower($this->I1IL1Ll[I13853]) );if(isset($this->I1IL1Ll['field_cat']) && $this->I1IL1Ll['field_cat']){ $this->llLI11L[$this->I1IL1Ll[I13895]]['field_cat'] =true; }else{ $this->llLI11L[$this->I1IL1Ll[I13895]]['field_cat'] =false; }if($this->llLI11L[$this->I1IL1Ll[I13895]][I13853] == I13896){ $this->llLI11L[$this->I1IL1Ll[I13895]]['ref_num'] =$this->I1IL1Ll["ref_num"]; $this->llLI11L[$this->I1IL1Ll[I13895]]['ref_data'] =$this->I1IL1Ll["ref_data"]; }if(isset($this->I1IL1Ll[I13897])){ $this->llLI11L[$this->I1IL1Ll[I13895]][I13897] =$this->I1IL1Ll[I13897]; unset($this->I1IL1Ll[I13897]); }unset($this->I1IL1Ll[I13854]); unset($this->I1IL1Ll['field_cat']); }}break; case "s1001010105": if($this->I1IL1Ll["field_eshop"] == "FILE") {$this->llLI11l =true; }$tmp =Array(I13863=>$this->I1IL1Ll[I13898], "extension"=>$this->I1IL1Ll[I13884]); if($this->I1IL1Ll[I13898] == "FILE") {$tmp["free"] =$this->I1IL1Ll[I13873]; }$this->_config[I13874]["types"][$this->I1IL1Ll[I13894]] =$tmp; break; case I13899: $this->_config[I13875]["map"][trim($this->I1IL1Ll["value_1c"])] =$this->I1IL1Ll["price_number"]; break; case "s1001010109": $this->_config[I13900]["map"][$this->I1IL1Ll["value_1c"]] =doubleval(eval(" return ".$this->I1IL1Ll[I13879].";")); break; case I13901: if($name == "AMI-MAPPING"){ $this->I1IL1Ll["mapping"][] =array( I13860 => $this->I1IL1Ll["ami_value_1c"], I13861 => $this->I1IL1Ll["ami_value_db"] );}break; }}}function _endElementCfgExport($parser, $name) {$name =$this->{$this->llLIL1I}($name); if(!$this->llLILLI) {if($this->llLILl1 != I13902) {$this->llLILl1 =mb_substr($this->llLILl1, 0, mb_strlen($this->llLILl1) -2); }switch(I13872.$this->llLILl1) {case "s1001010108": $this->_config[I13875]["map"][$this->I1IL1Ll["price_number"]] =$this->I1IL1Ll["price_id_external"]; break; case I13903: $taxValue =number_format(doubleval(eval(" return ".$this->I1IL1Ll[I13879].";")), 4).I13823; $this->_config[I13900]["map"][$taxValue] =$this->I1IL1Ll["value_1c"]; break; }}}function TI1ITTT() {foreach($this->llLI1ll as $extId=>$data) {$priceNum =$this->_config[I13875][I13904][$data[$this->_config[I13875]["id_tag"]]]; $this->llLI1lL["PRICE_TYPE"][$priceNum] =$data; }}function Start($actionType, &$aParams) {$II1LIlI =parent::Start($actionType, $aParams); if ($II1LIlI) {if ($actionType == "import") {$dataSource =$aParams["data_source"]; if (file_exists($dataSource)) {$this->II1LIIL =filesize($dataSource); if (($fp =@fopen($dataSource, I13869))) {if ($this->_config[I13886][I13905] != $this->_config[I13886][I13887] || mb_strtolower($this->_config[I13886][I13905]) != 'utf-8') {$this->llLIL1l ="_EncodeMbCB"; }$this->llLIL1I ="_PrepareTagNamePassCB"; $II1LIlI =$this->TTIIlIT(Array("action"=>I13906)); if ($II1LIlI) {$this->TI1T1lI($aParams, array ('files' => true, 'props' => true)); if ($this->llLI11l) {$II1LIlI =$this->TTIIlIT(Array("action"=>"prepare_files")); if (!$II1LIlI) {$this->TTIIlT1(I13907, "callback_error"); }}}if ($II1LIlI) {$this->llLILLL =Array( I13823=>Array(I13847=>Array($this->_config[I13849]=>"1", I13823=>I13823)), "1"=>Array(I13847=>Array("CATALOG"=>I13908, "IMAGE"=>"2", $this->_config["delete_object"][I13847]=>"3", I13909=>"4", "CURRENCY_RATE"=>"5", "PRICE_TYPE"=>I13910, "PRICE"=>"7")), "11"=>Array(I13847=>Array("ID_EXTERNAL"=>I13908, I13911=>"2", "IS_DELETED"=>"3", "ID_PARENT_EXTERNAL"=>I13912)), "12"=>Array(I13847=>Array("ID_OBJECT_EXTERNAL"=>I13908, "FILE"=>"2", $this->_config[I13874][I13913]=>"3", "FILE_NAME"=>I13912, "DESCRIPTION"=>"5")), I13914=>Array(I13847=>Array($this->_config["delete_object"]["object_id"]=>I13908)), "16"=>Array(I13847=>Array("ID_EXTERNAL"=>I13908, I13915=>"2", "DESCRIPTION"=>"3", "CURRENCY_ID_EXTERNAL"=>I13912, I13916=>"5", "WITH_TAX"=>I13910, "CODE"=>"7")), I13917=>Array(I13847=>Array("DATE"=>I13908, "ACTIVE"=>"2", "TYPE_PRICE_ID_EXTERNAL"=>I13918, "ITEM_ID_EXTERNAL"=>I13912, "CURRENCY_ID_EXTERNAL"=>"5", "PRICE"=>I13910, I13916=>I13919)) );$i =1; $llLlI1l =Array(); foreach($this->_config["fields"][I13909] as $tag) {$llLlI1l[$tag] =I13823.$i++; }$this->llLILLL["14"][I13847] =$llLlI1l; unset($llLlI1l); $llLlI1L =Array(); foreach($this->_config["fields"]["CURRENCY_RATE"] as $tag) {$llLlI1L[$tag] =I13823.$i++; }$this->llLILLL[I13920][I13847] =$llLlI1L; unset($llLlI1L); $this->TI1T11l(); if($this->TI1ITI1($fp, "_startElementPass1", "_endElementPass1", "_characterDataPass1", $this->_config[I13886]["parser"])) {$this->TT1TIIT(); if(is_array($this->llLI1lI) && sizeof($this->llLI1lI) >0) {if($this->TTIIlIT(Array(I13921=>"process_currencies"))) {if(is_array($this->llLI1I1[I13909]) && sizeof($this->llLI1I1[I13909]) >0) {$aData =Array(); $this->II1I1IL->{$this->II1I1I1["delete_currency"]}($aData, $this->llLI1I1[I13909]); }foreach($this->llLI1lI as $extId => $data) {$data += Array("ID_EXTERNAL"=>$extId); $aParams["callbacks"][I13922]->{$aParams["callbacks"]["process_currencies"]}($data); }}else {$this->TTIIlT1(I13907, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array(I13921=>"process_currencies")); }if(is_array($this->Il11lL1[I13923]) || $llLlI11) {if($this->TTIIlIT(array ('action' => 'prepare_categories', 'prefix' => 'import_'))) {$i =0; foreach ($this->Il11lL1[I13923] as $row) {$aParams[I13924][I13922]->{$aParams[I13924]["prepare_categories"]}(Array("id_external"=>$row["id"], "id_parent_external"=>$row[I13925], "is_mark_deleted"=>$row["is_deleted"], 'prefix' => 'import_')); }}else {$this->TTIIlT1(I13907, I13926); $II1LIlI =false; }$this->TTIIlII(Array(I13921=>"prepare_categories")); }if(is_array($this->Il11l1I)) {if ($this->TTIIlIT(array ('action' => 'prepare_images', 'prefix' => I13927))) {foreach($this->Il11l1I as $aFiles) {foreach($aFiles as $llLllII) {$aParams[I13924][I13922]->{$aParams[I13924]["prepare_images"]}($llLllII); }}}else {$this->TTIIlT1(I13907, I13926); $II1LIlI =false; }$this->TTIIlII(Array(I13921=>"prepare_images")); }}else {$II1LIlI =false; $this->TTIIlT1("10013", "data_parse_error", $this->I1IL1Ll[I13928]); }}$this->llLI1Il ="00"; if($II1LIlI && sizeof($this->lIllL1L) >0) {$this->TI1T1ll(); $this->llLILLL =Array( I13823=>Array(I13847=>Array($this->_config[I13849]=>"11", I13823=>I13823)) );$i =1; $llLllIl =Array(); foreach($this->lIllL1L as $llLllIL) {$llLllIl[$llLllIL] =sprintf("%02d", $i++); $j =1; $llLllI1 =Array(); foreach($this->_config["fields"][$llLllIL] as $tag) {$llLllI1[$tag] =sprintf(I13929, $j++); }$this->llLILLL["11".$llLllIl[$llLllIL].I13823] =Array(I13847 => $llLllI1); }$this->llLILLL["11"] =Array(I13847 => $llLllIl); if($this->TTIIlIT(array ('action' => 'process_references', I13930 => I13927))) {if(is_array($this->llLI1I1["REFERENCE"]) && sizeof($this->llLI1I1["REFERENCE"]) >0) {foreach($this->llLI1I1["REFERENCE"] as $I11LlLI=>$llLlllI) {$aData["data_type"] =I13931.$I11LlLI; $this->II1I1IL->{$this->II1I1I1["delete_references"]}($aData, $llLlllI); }}$this->TI1T11l(); $this->Il11l1L =0.25 *$this->II1LIIL; if(!$this->TI1ITI1($fp, "_startElementPass2", "_endElementPass2", "_characterDataPass2", $this->_config[I13886][I13932])) {$II1LIlI =false; $this->TTIIlT1("10013", "data_parse_error", $this->I1IL1Ll[I13928]); }}else {$this->TTIIlT1(I13907, I13926); $II1LIlI =false; }$this->TTIIlII(Array(I13921=>"process_references")); }$this->llLI1I1["_CATALOG_CATS"] =Array(); if($II1LIlI && $this->TTIIlIT(array (I13933 => 'process_categories', I13930 => I13927))) {if(is_array($this->llLI1I1["CATALOG"]) && sizeof($this->llLI1I1["CATALOG"]) >0) {$this->llLI1I1["_CATALOG_CATS"] =Array(); foreach($this->llLI1I1[I13934] as $index=>$extId) {if($this->II1I1IL->{$this->II1I1I1["object_is_category"]}($extId)) {$this->llLI1I1["_CATALOG_CATS"][] =$extId; unset($this->llLI1I1[I13934][$index]); }}}if(is_array($this->llLI1I1["_CATALOG_CATS"]) && sizeof($this->llLI1I1["_CATALOG_CATS"]) >0) {$aData =Array(); $this->II1I1IL->{$this->II1I1I1[I13935]}($aData, $this->llLI1I1["_CATALOG_CATS"]); }if(is_array($this->_config["fields"][I13934])) {$i =1; $llLllll =Array(); foreach($this->_config["fields"][I13934] as $tag) {$llLllll[$tag] =sprintf(I13929, $i++); }}$this->llLILLL =Array( I13823=>Array(I13847=>Array($this->_config[I13849]=>"11", I13823=>I13823)), I13936=>Array(I13847=>Array(I13934=>I13827)), "1101"=>Array(I13847=>$llLllll), );$this->TI1ITTT(); $this->TI1T11l(); $this->llLI1IL =I13934; $this->Il11l1L =0.5 *$this->II1LIIL; if ($this->TI1ITI1($fp, "_startElementPass4", "_endElementPass3", "_characterDataPass3", $this->_config[I13886][I13932])) {if (sizeof($this->module->I11lLll)) {$sql =I13937 .$this->llLIII1['cats'] ." SET `position` = `id` WHERE `id` IN (" .implode(',', array_keys($this->module->I11lLll)) .")"; $this->module->db->execute($sql); }$this->TI1T1l1(); }else {$II1LIlI =false; $this->TTIIlT1(I13938, "data_parse_error", $this->I1IL1Ll[I13928]); }}else {$this->TTIIlT1(I13907, I13926); $II1LIlI =false; }$this->TTIIlII(Array(I13921=>"process_categories")); if($II1LIlI && $this->TTIIlIT(array (I13933 => 'process_items', I13930 => I13927))) {if(is_array($this->llLI1I1[I13934]) && sizeof($this->llLI1I1[I13934]) >0) {$aData =Array(); $this->II1I1IL->{$this->II1I1I1["delete_items"]}($aData, $this->llLI1I1[I13934]); }$this->TI1T11l(); $this->llLI1IL =I13934; $this->Il11l1L =0.75 *$this->II1LIIL; $this->llLI1L1 =0; $numPrices =sizeof($this->llLI1l1); if($numPrices >0) {$this->llLI1L1 =0.125/$numPrices; $this->llLI1LL /= 2; }if ($this->TI1ITI1($fp, I13939, "_endElementPass4", "_characterDataPass4", $this->_config[I13886][I13932])) {$this->TI1T1l1(); }else {$II1LIlI =false; $this->TTIIlT1(I13938, "data_parse_error", $this->I1IL1Ll[I13928]); }}else {$this->TTIIlT1(I13907, I13926); $II1LIlI =false; }if($II1LIlI && sizeof($this->llLI1l1) >0) {$this->II1I1IL->I11l1Ll =true; foreach($this->llLI1l1 as $llLlllL=>$Il111lI) {$this->I1IL1Ll =Array("ID_EXTERNAL"=>$llLlllL); $this->TI1ITIl($llLlllL, I13940); $this->_rapidImportItemsCB($this->I1IL1Ll); $this->llLI1LL += $this->llLI1L1; $this->TTIIlIl($this->Il11l1L +$this->llLI1LL *$this->II1LIIL, $this->II1LIIL); }$this->II1I1IL->I11l1Ll =false; }$this->TTIIlII(array (I13933 => 'process_items', 'skip_common' => true)); $this->TI1T11T(); $this->TI1T11I(sizeof($this->lIllL1L) >0, true); $this->TTIIlIl($this->II1LIIL, $this->II1LIIL); fclose($fp); }else {$this->TTIIlT1("10011", "data_open_error"); $II1LIlI =false; }}else {$this->TTIIlT1(I13941, "data_not_found"); $II1LIlI =false; }}elseif($actionType == "export") {if(function_exists("mb_convert_encoding")) {$this->llLIL1l ="EncodeToUtfMbCB"; }else {$this->llLIL1l =I13942; }$this->llLI11I =$this->gui->getAbsDefPostf($this->name.":export_header", $this->II1I1lL, $aParams["vars"] +Array("message_number"=>$this->II1I1ll)); $aParams["driver"][I13943] =$this->II1I1ll; }}return $II1LIlI; }function End($actionType) {$res =parent::End($actionType); if($actionType == "import") {}elseif($actionType == "export") {$res =$this->llLI11I.$this->gui->getAbsDefPostf($this->name.":export_footer", $this->II1I1lL, I13823); }return $this->{$this->llLIL1l}($res); }function TI1ITTI($parser, $errCode, $text, $llLlll1) {$aInfo =Array("line"=>xml_get_current_line_number($parser), I13944=>$llLlll1); if($errCode >1 && $errCode <1001) {$this->llLILLI =true; }}function TI1ITTl(&$parser, $name, $attrs) {set_time_limit(25); $this->TTIIlIl($this->Il11l1L +$this->llLI1LL *xml_get_current_byte_index($parser), $this->II1LIIL); $this->llLI1LI =1; $this->llLI1II =$name; if(isset($this->llLILLL[$this->llLILl1])) {if(isset($this->llLILLL[$this->llLILl1][I13847][$name])) {$this->llLILl1 .= $this->llLILLL[$this->llLILl1][I13847][$name]; }else {$this->llLILl1 .= $this->llLI1Il; $this->TI1ITTI($parser, 1001, "unknown_element", $name); }}else {$this->llLILl1 .= $this->llLI1Il; }}function _startElementPass1($parser, $name, $attrs) {if((!(($this->llLILl1 == I13908 && $name == $this->_config["delete_object"][I13847]) || $this->llLILl1 == I13914)) ){$name =$this->{$this->llLIL1I}($name); }$this->TI1ITTl($parser, $name, $attrs); switch($this->llLILl1) {case I13908: $this->llLIL11 =I13892; break; case I13936: $this->llLIL11 =I13934; break; case "12": $this->llLIL11 ="IMAGE"; break; case I13945: $this->llLIL11 =I13909; break; case I13920: $this->llLIL11 ="CURRENCY_RATE"; break; case "16": $this->llLIL11 ="PRICE_TYPE"; break; case I13917: $this->llLIL11 ="PRICE"; break; case I13946: $this->I1IL1Ll["del_obj_type"] =$attrs[$this->_config["delete_object"][I13889]]; break; }}function TI1ITT1($parser, &$data) {if($this->llLI1LI == 2) {$this->llLI1Ll .= $data; $data =$this->llLI1Ll; }else {$this->llLI1Ll =$data; }}function _characterDataPass1($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {$data =$this->{$this->llLIL1l}($data); if($this->llLIL11 == "IMAGE" && $this->llLILl1 != "12") {$this->I1IL1Ll[I13947][$this->llLI1II] =$data; }switch($this->llLILl1) {case "111": case "121": $this->I1IL1Ll["id"] =$data; break; case "112": $this->I1IL1Ll[I13948] =$data; break; case "113": $this->I1IL1Ll["is_deleted"] =$data; break; case "114": $this->I1IL1Ll[I13925] =$data; break; case "122": $this->I1IL1Ll[I13949] =$data; $this->I1IL1Ll["file_name_tag"] =$this->llLI1II; break; case "123": if(isset($this->_config[I13874]["types"][$data][I13863])) {$this->I1IL1Ll["img_type"] =$data; }break; case I13950: $this->I1IL1Ll["original_file_name"] =$data; break; case I13946: $this->I1IL1Ll["del_obj_type"] =$this->{$this->llLIL1l}($this->I1IL1Ll["del_obj_type"]); if(isset($this->_config["del_objects"][$this->I1IL1Ll[I13951]])) {$llLllLI =$this->_config["del_objects"][$this->I1IL1Ll[I13951]]; if($llLllLI[I13863] == "REFERENCE") {$this->llLI1I1[$llLllLI[I13863]][$llLllLI["data_type"]][] =$data; }else {$this->llLI1I1[$llLllLI[I13863]][] =$data; }}break; case "171": case I13952: case "173": case "174": case "175": case "176": case I13953: if(isset($this->llLILLl[$this->llLI1II]) && $this->llLI1LI != 2) {$this->TI1ITIT(); }$this->llLILLl[$this->llLI1II] =$data; break; default: if(($this->llLIL11 == I13909 && $this->llLILl1 != I13945) || ($this->llLIL11 == "CURRENCY_RATE" && $this->llLILl1 != I13920) || ($this->llLIL11 == "PRICE_TYPE" && $this->llLILl1 != "16")){ $this->I1IL1Ll[$this->llLI1II] =$data; }}}$this->llLI1LI =2; }function TI1ITIT() {if($this->llLILLl["ACTIVE"] == I13954) {$this->llLILLl["DATE"] =str_replace("T", " ", $this->llLILLl["DATE"]); $this->llLILLl[I13955] =DateTools::getCorrectUDate($this->llLILLl[I13955], $this->_config["format_date"], I13871); if($this->llLILLl[I13955] <$this->II1I1Il) {$llLllLl =$this->llLILLl["ITEM_ID_EXTERNAL"]; $llLllLL =$this->llLILLl["TYPE_PRICE_ID_EXTERNAL"]; unset($this->llLILLl["ITEM_ID_EXTERNAL"]); unset($this->llLILLl["TYPE_PRICE_ID_EXTERNAL"]); unset($this->llLILLl["ACTIVE"]); if(isset($this->llLI1l1[$llLllLl][$llLllLL])) {if($this->llLI1l1[$llLllLl][$llLllLL][I13955] <$this->llLILLl[I13955]) {$this->llLI1l1[$llLllLl][$llLllLL] =$this->llLILLl; }}else {$this->llLI1l1[$llLllLl][$llLllLL] =$this->llLILLl; }}}$this->llLILLl =Array(); }function _endElementPass1($parser, $name) {$this->llLI1LI =3; if(!$this->llLILLI) {switch($this->llLILl1) {case I13936: if($this->I1IL1Ll[I13948] == I13954) {$this->Il11lL1[I13925][$this->I1IL1Ll[I13925]][] =Array("id"=>$this->I1IL1Ll["id"], "is_deleted"=>$this->I1IL1Ll[I13956]); $this->Il11lL1["id"][$this->I1IL1Ll["id"]] =$this->I1IL1Ll[I13925]; }$this->llLIL11 =I13892; $this->I1IL1Ll =Array(); break; case "12": if(isset($this->I1IL1Ll["img_type"])) {$imageType =$this->I1IL1Ll[I13957]; }else {$imageType =$this->_config[I13874]["default_type"]; }if(isset($this->I1IL1Ll["original_file_name"]) && !empty($this->I1IL1Ll["original_file_name"])) {$fileExtension =get_file_ext($this->I1IL1Ll["original_file_name"]); }else {$fileExtension =$this->_config[I13874][I13958][$imageType]["extension"]; }if($this->_config[I13874][I13958][$imageType][I13863] == "FILE") {if($this->llLI11l) {$this->I1IL1Ll[I13947]["TMP_FILE_NAME"] =$this->I1IL1Ll[I13949]; $this->I1IL1Ll[I13947]["IS_FREE"] =$this->_config[I13874][I13958][$imageType][I13959]; $fileName =$this->I1IL1Ll[I13949].".".$fileExtension; $this->llLILL1[$this->I1IL1Ll[I13947]["ID_OBJECT_EXTERNAL"]][] =$this->I1IL1Ll[I13947]["ID_EXTERNAL"]; $this->II1I1IL->{$this->II1I1I1["prepare_files"]}($this->I1IL1Ll[I13947]); }}else {$this->I1IL1Ll[I13960] =$this->I1IL1Ll[I13949]; if(get_file_ext($this->I1IL1Ll[I13949]) != $fileExtension) {$this->I1IL1Ll[I13949] .= ".".$fileExtension; }$this->Il11l1I[$this->I1IL1Ll["id"]][$this->_config[I13874][I13958][$imageType][I13863]] =Array(I13949=>$this->I1IL1Ll[I13949], I13960=>$this->I1IL1Ll[I13960]); }$this->llLIL11 =I13892; $this->I1IL1Ll =Array(); break; case I13945: $extId =$this->I1IL1Ll["ID_EXTERNAL"]; unset($this->I1IL1Ll["ID_EXTERNAL"]); if(!is_array($this->llLI1lI[$extId])) {$this->llLI1lI[$extId] =Array(); }if($this->I1IL1Ll[$this->_config[I13876][I13961]] == $this->_config[I13876]["base_value"]) {$this->I1IL1Ll["IS_BASE"] =I13908; }else {$this->I1IL1Ll["IS_BASE"] =I13871; }$this->llLI1lI[$extId] += $this->I1IL1Ll; $this->llLIL11 =I13892; $this->I1IL1Ll =Array(); break; case I13920: $this->I1IL1Ll[I13955] =str_replace("T", I13962, $this->I1IL1Ll[I13955]); $this->I1IL1Ll[I13955] =DateTools::getCorrectUDate($this->I1IL1Ll[I13955], $this->_config["format_date"], I13871); $extId =$this->I1IL1Ll["ID_EXTERNAL"]; if(!is_array($this->llLI1lI[$extId])) {$this->llLI1lI[$extId] =Array(); }if($this->I1IL1Ll[I13955] <$this->II1I1Il) {if((isset($this->llLI1lI[$extId][I13955]) && $this->llLI1lI[$extId][I13955] <$this->I1IL1Ll[I13955]) || !isset($this->llLI1lI[$extId][I13955])) {unset($this->I1IL1Ll["ID_EXTERNAL"]); $this->llLI1lI[$extId] += $this->I1IL1Ll; }}$this->I1IL1Ll =Array(); $this->llLIL11 =I13892; break; case "16": if($this->I1IL1Ll[I13915] == I13963) {$extId =$this->I1IL1Ll["ID_EXTERNAL"]; unset($this->I1IL1Ll["ID_EXTERNAL"]); unset($this->I1IL1Ll[I13915]); $this->I1IL1Ll[$this->_config[I13875]["id_tag"]] =trim($this->I1IL1Ll[$this->_config[I13875]["id_tag"]]); $this->llLI1ll[$extId] =$this->I1IL1Ll; }$this->llLIL11 =I13892; $this->I1IL1Ll =Array(); break; case I13917: $this->TI1ITIT(); $this->llLIL11 =I13892; break; }if($this->llLILl1 != I13823) {$this->llLILl1 =intval(intval($this->llLILl1)/10); }}}function _startElementPass2($parser, $name, $attrs) {$name =$this->{$this->llLIL1I}($name); $this->TI1ITTl($parser, $name, $attrs); switch($this->llLILl1) {case I13936: $this->llLIL11 =I13892; break; default: $ps =intval($this->llLILl1); if($ps >1100 && $ps <1200 && $name !=I13823) {$this->llLIL11 =$name; }break; }}function _characterDataPass2($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {if($this->llLIL11 != I13892 && intval($this->llLILl1) >110000) {$data =$this->{$this->llLIL1l}($data); $this->I1IL1Ll[$this->llLI1II] =$data; }}$this->llLI1LI =2; }function _endElementPass2($parser, $name) {$this->llLI1LI =3; if(!$this->llLILLI) {$ps =intval($this->llLILl1); if($ps >1100 && $ps <1200) {$name =$this->{$this->llLIL1I}($name); $this->I1IL1Ll[I13964] =$this->llLIL11; $this->II1I1IL->{$this->II1I1I1["process_references"]}($this->I1IL1Ll); $this->llLIL11 =I13892; $this->I1IL1Ll =Array(); }if($this->llLILl1 != I13823) {$this->llLILl1 =intval(intval($this->llLILl1)/100); }}}function _characterDataPass3($parser, $data) {$this->TI1ITT1($parser, $data); if($this->llLIL11 == $this->llLI1IL && $this->llLILl1 != "1101") {$data =$this->{$this->llLIL1l}($data); $this->I1IL1Ll[$this->llLI1II] =$data; }$this->llLI1LI =2; }function _endElementPass3($parser, $name) {$this->llLI1LI =3; switch($this->llLILl1) {case "1101": if($this->I1IL1Ll[I13911] == I13954) {$this->I1IL1Ll += $this->llLI1lL; $this->_rapidImportCategoriesCB($this->I1IL1Ll, stripslashes($this->I1IL1Ll['ID_EXTERNAL'])); }$this->llLIL11 =I13892; $this->I1IL1Ll =Array(); break; }if($this->llLILl1 != I13823) {$this->llLILl1 =intval(intval($this->llLILl1)/100); }}function _startElementPass4($parser, $name, $attrs) {$name =$this->{$this->llLIL1I}($name); $this->TI1ITTl($parser, $name, $attrs); switch($this->llLILl1) {case I13936: $this->llLIL11 =I13892; break; case I13965: $this->llLIL11 =$this->llLI1IL; break; }}function _characterDataPass4($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {if($this->llLIL11 == $this->llLI1IL && $this->llLILl1 != I13965) {$data =$this->{$this->llLIL1l}($data); $this->I1IL1Ll[$this->llLI1II] =$data; }}$this->llLI1LI =2; }function _endElementPass4($parser, $name) {$this->llLI1LI =3; if(!$this->llLILLI) {switch($this->llLILl1) {case I13965: if($this->I1IL1Ll[I13911] == I13963) {if(isset($this->Il11l1I[$this->I1IL1Ll["ID_EXTERNAL"]])) {foreach($this->Il11l1I[$this->I1IL1Ll["ID_EXTERNAL"]] as $I11LIL1=>$imgFile) {$this->I1IL1Ll["IMAGE_".$I11LIL1] =$imgFile[I13949]; }}if(isset($this->I1IL1Ll["TAX"])) {$this->I1IL1Ll[I13966] =$this->_config[I13900][I13904][$this->I1IL1Ll[I13966]]; }if(isset($this->llLI1l1[$this->I1IL1Ll["ID_EXTERNAL"]])) {$this->TI1ITIl($this->I1IL1Ll["ID_EXTERNAL"], "PRICE"); unset($this->llLI1l1[$this->I1IL1Ll["ID_EXTERNAL"]]); $this->llLI1LL += $this->llLI1L1; }else {$this->TI1ITII(I13940); }if(isset($this->llLILL1[$this->I1IL1Ll[I13967]])) {$this->I1IL1Ll["FILES"] =$this->llLILL1[$this->I1IL1Ll[I13967]]; }$this->_rapidImportItemsCB($this->I1IL1Ll); }$this->llLIL11 =I13892; $this->I1IL1Ll =Array(); break; }if($this->llLILl1 != I13823) {$this->llLILl1 =intval(intval($this->llLILl1)/100); }}}function TI1ITII($llLllL1) {foreach($this->llLI1ll as $llLll1I=>$llLll1l) {$priceNum =$this->_config[I13875][I13904][$llLll1l[$this->_config[I13875]["id_tag"]]]; if(mb_strlen($priceNum) >0){ foreach($llLll1l as $key=>$value) {$this->I1IL1Ll[$llLllL1][$priceNum]["PRICE_TYPE_".$key] =$value; }}}}function TI1ITIl($llLlllL, $llLllL1) {foreach($this->llLI1l1[$llLlllL] as $llLll1I=>$Il111lI) {if(isset($this->llLI1ll[$llLll1I]) && isset($this->_config[I13875][I13904][$this->llLI1ll[$llLll1I][$this->_config[I13875]["id_tag"]]])) {$priceNum =$this->_config[I13875][I13904][$this->llLI1ll[$llLll1I][$this->_config[I13875][I13968]]]; $this->I1IL1Ll[$llLllL1][$priceNum] =$Il111lI +$this->llLI1ll[$llLll1I]; foreach($this->llLI1ll[$llLll1I] as $key=>$value) {$this->I1IL1Ll[$llLllL1][$priceNum]["PRICE_TYPE_".$key] =$value; }}}}function _PrepareTagNameStubCB($tagName) {return $tagName; }function _EncodeMbCB($tagName) {return mb_convert_encoding($tagName, 'UTF-8', $this->_config[I13886][I13905]); }function _PrepareTagNamePassCB($tagName) {$tagName =$this->{$this->llLIL1l}($tagName); $tagName =isset($this->_config["fields"][$this->llLIL11][$tagName]) ?$this->_config["fields"][$this->llLIL11][$tagName] :I13823; return $tagName; }function GetInfo() {$aInfo =Array( I13862=>"RapidXML1cV8ExchangeDriver", "title"=>$this->words["title"], "supported_actions"=>Array("import"), I13969=>Array("files"), "filemask"=>Array("*.xml"), I13970 => Array(), I13971 => Array("eshop_item", I13972, "eshop_user"), );return $aInfo; }function GetForm($type, &$formData) {parent::GetForm($type, $formData); $html =I13823; switch($type) {case "import": break; case "export": break; }$html =$this->gui->get($this->name.":".$type.I13973, $formData); return $html; }function TI1ITI1(&$fp, $llLll1L, $llLll11, $llLlLII, $encode =I13823) {$llLlLIl =xml_parser_create($encode); $res =true; xml_set_object($llLlLIl, $this); xml_parser_set_option($llLlLIl, XML_OPTION_CASE_FOLDING, 0); xml_set_element_handler($llLlLIl, $llLll1L, $llLll11); xml_set_character_data_handler($llLlLIl, $llLlLII); fseek($fp, 0); while($data =fread($fp, $this->llLILlL)) {if(!xml_parse($llLlLIl, $data, feof($fp))) {$llLlLIL =xml_error_string(xml_get_error_code($llLlLIl)); if($llLlLIL) {$this->I1IL1Ll[I13928]["text"] =$llLlLIL; }else {$this->I1IL1Ll[I13928]["text"] =xml_get_error_code($llLlLIl); }$this->I1IL1Ll[I13928]["line"] =xml_get_current_line_number($llLlLIl); $this->I1IL1Ll[I13928]["char"] =xml_get_current_column_number($llLlLIl); $res =false; }}xml_parser_free($llLlLIl); return $res; }function TTIIIl1($II1ILLL, $aData, $II1IL1l, $II1IL1L) {$content =$this->llLI11I; $this->llLI11I =I13823; $Il111LI =false; switch ($II1ILLL) {case I13972: $aOrderData =$aData; if (!isset($aOrderData[I13974]) || empty($aOrderData[I13974])) {$aOrderData[I13974] =$this->TTIIllI(); $Il111LI =true; }else {$aOrderData[I13974] =trim($aOrderData[I13974], "{}"); }$II1LI1I =$aOrderData[I13974]; if (is_array($aData["items"])) {$Il111Ll =$aData["items"]; unset($aData["items"]); $aItem =Array(); foreach ($Il111Ll as $llLlLI1=>$aItemData) {$aItem =$aItemData[I13975]["item_info"]; $aItem += $aItemData; $aItem["cur_price_total"] =$aItemData[I13975]["item_info"]["cur_price"] *$aItemData[I13976]; $taxItemValue =number_format($aItem["tax_item_value"], 4); $aItem["tax_item_string"] =$this->_config[I13900][I13904][$taxItemValue]; $aOrderData["items_list"] .= $this->gui->getDefPostf($this->name.":export_order_item", I13893.$this->II1I1lL, $aItem); }$aOrderData[I13977] =$this->gui->getDefPostf($this->name.":export_order_items_list", I13893.$this->II1I1lL, $aOrderData); if (isset($this->_config[I13875][I13904][$aItem["price_number"]])) {$aOrderData["type_price_id_external"] =$this->_config[I13875][I13904][$aItem["price_number"]]; }}if (is_array($aOrderData[I13978])) {$llLlLlI =$aOrderData[I13978]; unset($aOrderData[I13978]); foreach ($llLlLlI as $fieldName=>$fieldValue) {$aOrderData["custinfo_".$fieldName] =$fieldValue; }}$aOrderData["order_date"] =str_replace(I13962, "T", $aOrderData["real_order_date"]); $aOrderData["currency_id_external"] =$aOrderData[I13876][I13974]; $aOrderData["order_total"] =$aOrderData["total_tax"] +$aOrderData["total_price"] +$aOrderData["total_shipping"]; $content .= $this->gui->getDefPostf($this->name.I13979, I13893.$this->II1I1lL, $aOrderData); break; case "eshop_user": $aUserData =$aData; if (!isset($aUserData[I13974]) || empty($aUserData[I13974])) {$aUserData[I13974] =$this->TTIIllI(); $Il111LI =true; }else {$aUserData[I13974] =trim($aUserData[I13974], "{}"); }$II1LI1I =$aUserData[I13974]; $content .= $this->gui->getDefPostf($this->name.":export_user", I13893.$this->II1I1lL, $aUserData); break; }$res =Array(); $res["content"] =$this->{$this->llLIL1l}($content); $res[I13980] =$Il111LI; $res[I13974] =$II1LI1I; return $res; }function TTIIIlT($II1ILLL, &$aParams) {$II1ILLL =str_replace("eshop_", I13823, $II1ILLL); $this->_fields =$this->module->TTII111($II1ILLL."_export_fields"); return true; }}?>