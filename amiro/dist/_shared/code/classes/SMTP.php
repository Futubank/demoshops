<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @size       111012 xkqwgtwprurgmuqsyimquwwkzyuqywgsxmrzmpqnynsqzzlswrwgsqnpzknpkrmxmrurpnir
 */ ?><?php foreach(array(14082=>'NqT|dhwkqT|cRmTq',14083=>'%`0123456789',14084=>'fDHWKHGQn',14085=>'nHt?WHnnQWtQS',14086=>'tMIQS?Hut',14087=>'',14088=>'JHWZJOHDt',14089=>'|ZutOsMPQDt|is5',14090=>"unKnHCn?QrrHr",14091=>'eUmT',14092=>'?',14093=>'@=',14094=>'dTzRTTjd?fZMJQS',14095=>'zUTo',14096=>'oqjh',14097=>'?XVqRg=',14098=>'``',14099=>'DMAQ',14100=>"\r\n\r\n",14101=>'dhij',14102=>'^',14103=>'%',14104=>'!',14105=>'\\',14106=>'ZSSrQDD',14107=>'@',14108=>'#',14109=>'JHWZJ|GZrt',14110=>'`',14111=>'>',14112=>"\r\n",14113=>'duYLQWt',14114=>'%?',14115=>'GHrt',14116=>'GZDDCHrS',14117=>'RQturn+gZtO',14118=>'&%?') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once 'PEAR.php'; define('NET_SOCKET_READ', 1); define(I14082, 2); define('NET_SOCKET_ERROR', 4); class Net_Socket extends PEAR {var $fp =null; var $llLLl1I =true; var $llLLl1l =false; var $addr =''; var $port =0; var $timeout =null; var $llLLl1L =2048; var $llLLl11 ="\r\n"; function connect($addr, $port =0, $llLLl1l =null, $timeout =null, $options =null) {if (is_resource($this->fp)) {@fclose($this->fp); $this->fp =null; }if (!$addr) {return $this->raiseError('$addr cannot be empty'); }else if (strspn($addr, I14083) == strlen($addr)) {$this->addr =strpos($addr, ':') !== false ?'['.$addr.']' :$addr; }else {$this->addr =$addr; }$this->port =$port %65536; if ($llLLl1l !== null) {$this->llLLl1l =$llLLl1l; }$llLLLII =$this->llLLl1l ?'pfsockopen' :I14084; $errno =0; $errstr =''; $llLLLIl =@ini_set('track_errors', 1); if ($timeout <= 0) {$timeout =@ini_get('default_socket_timeout'); }if ($options && function_exists('stream_context_create')) {$context =stream_context_create($options); if (function_exists('stream_socket_client')) {$flags =STREAM_CLIENT_CONNECT; if ($this->llLLl1l) {$flags =STREAM_CLIENT_PERSISTENT; }$addr =$this->addr .':' .$this->port; $fp =stream_socket_client($addr, $errno, $errstr, $timeout, $flags, $context); }else {$fp =@$llLLLII($this->addr, $this->port, $errno, $errstr, $timeout, $context); }}else {$fp =@$llLLLII($this->addr, $this->port, $errno, $errstr, $timeout); }if (!$fp) {if ($errno == 0 && !strlen($errstr) && isset($php_errormsg)) {$errstr =$php_errormsg; }@ini_set('track_errors', $llLLLIl); return $this->raiseError($errstr, $errno); }@ini_set('track_errors', $llLLLIl); $this->fp =$fp; $this->TI1IIIT(); return $this->TI1IIT1($this->llLLl1I); }function disconnect() {if (!is_resource($this->fp)) {return $this->raiseError('not connected'); }@fclose($this->fp); $this->fp =null; return true; }function TI1IITI($llLLl11) {$this->llLLl11 =$llLLl11; return true; }function TI1IITl() {return $this->llLLl1I; }function TI1IIT1($mode) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$this->llLLl1I =$mode; stream_set_blocking($this->fp, (int)$this->llLLl1I); return true; }function TI1IIIT($seconds =null, $llLLLIL =null) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }if ($seconds === null && $llLLLIL === null) {$seconds =(int) $this->timeout; $llLLLIL =(int) (($this->timeout -$seconds) *1000000); }else {$this->timeout =$seconds +$llLLLIL/1000000; }if ($this->timeout >0) {return stream_set_timeout($this->fp, (int) $seconds, (int) $llLLLIL); }else {return false; }}function TI1IIII($size) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$llLLLI1 =stream_set_write_buffer($this->fp, $size); if ($llLLLI1 == 0) {return true; }return $this->raiseError('Cannot set write buffer.'); }function getStatus() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }return stream_get_meta_data($this->fp); }function TI1IIIl($size =null) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }if (is_null($size)) {return @fgets($this->fp); }else {return @fgets($this->fp, $size); }}function read($size) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }return @fread($this->fp, $size); }function write($data, $llLLLlI =null) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }if (is_null($llLLLlI) && !OS_WINDOWS) {$llLLLll =@fwrite($this->fp, $data); if (!$llLLLll) {$llLLLlL =$this->getStatus(); if (!is_array($llLLLlL)) {return $llLLLlL; }if (!empty($llLLLlL['timed_out'])) {return $this->raiseError('timed out'); }}return $llLLLll; }else {if (is_null($llLLLlI)) {$llLLLlI =1024; }$pos =0; $size =strlen($data); while ($pos <$size) {$llLLLll =@fwrite($this->fp, substr($data, $pos, $llLLLlI)); if (!$llLLLll) {$llLLLlL =$this->getStatus(); if (!is_array($llLLLlL)) {return $llLLLlL; }if (!empty($llLLLlL['timed_out'])) {return $this->raiseError(I14086); }return $llLLLll; }$pos += $llLLLll; }return $pos; }}function TI1III1($data) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }return fwrite($this->fp, $data .$this->llLLl11); }function TI1IIlT() {return (!is_resource($this->fp) || feof($this->fp)); }function TI1IIlI() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }return ord(@fread($this->fp, 1)); }function TI1IIll() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$I1IlLLl =@fread($this->fp, 2); return (ord($I1IlLLl[0]) +(ord($I1IlLLl[1]) << 8)); }function TI1IIl1() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$I1IlLLl =@fread($this->fp, 4); return (ord($I1IlLLl[0]) +(ord($I1IlLLl[1]) << 8) +(ord($I1IlLLl[2]) << 16) +(ord($I1IlLLl[3]) << 24)); }function TI1II1T() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$string =''; while (($char =@fread($this->fp, 1)) != "\x00") {$string .= $char; }return $string; }function TI1II1I() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$I1IlLLl =@fread($this->fp, 4); return sprintf('%d.%d.%d.%d', ord($I1IlLLl[0]), ord($I1IlLLl[1]), ord($I1IlLLl[2]), ord($I1IlLLl[3])); }function TI1II1l() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$line =''; $timeout =time() +$this->timeout; while (!feof($this->fp) && (!$this->timeout || time() <$timeout)) {$line .= @fgets($this->fp, $this->llLLl1L); if (substr($line, -1) == "\n") {return rtrim($line, $this->llLLl11); }}return $line; }function TI1II11() {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$data =I14087; while (!feof($this->fp)) {$data .= @fread($this->fp, $this->llLLl1L); }return $data; }function select($state, $llLLLl1, $llLLLLI =0) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }$read =null; $write =null; $IL11ll1 =null; if ($state &NET_SOCKET_READ) {$read[] =$this->fp; }if ($state &NET_SOCKET_WRITE) {$write[] =$this->fp; }if ($state &NET_SOCKET_ERROR) {$IL11ll1[] =$this->fp; }if (false === ($sr =stream_select($read, $write, $IL11ll1, $llLLLl1, $llLLLLI))) {return false; }$result =0; if (count($read)) {$result |= NET_SOCKET_READ; }if (count($write)) {$result |= NET_SOCKET_WRITE; }if (count($IL11ll1)) {$result |= NET_SOCKET_ERROR; }return $result; }function TI1IlTT($enabled, $type) {if (version_compare(phpversion(), "5.1.0", ">=")) {if (!is_resource($this->fp)) {return $this->raiseError(I14085); }return @stream_socket_enable_crypto($this->fp, $enabled, $type); }else {$msg ='Net_Socket::enableCrypto() requires php version >= 5.1.0'; return $this->raiseError($msg); }}}class Net_SMTP {var $host ='localhost'; var $port =25; var $localhost =I14088; var $llLLLLl =array(); var $llLLLLL =false; var $llLLLL1 =0; var $_debug =false; var $llLLL1I =null; var $Il1IL11 =null; var $llLLL1l =null; var $llLLL1L =0; var $llLLL11 =-1; var $llLL1II =array(); var $llLL1Il =null; var $llLL1IL =array(); function Net_SMTP($host =null, $port =null, $localhost =null, $llLLLLL =false, $timeout =0, $llLL1I1 =null) {if (isset($host)) {$this->host =$host; }if (isset($port)) {$this->port =$port; }if (isset($localhost)) {$this->localhost =$localhost; }$this->llLLLLL =$llLLLLL; $this->Il1IL11 =new Net_Socket(); $this->llLLL1l =$llLL1I1; $this->llLLL1L =$timeout; if (@include_once 'Auth/SASL.php') {$this->TI1IllI('CRAM-MD5', array($this, '_authCram_MD5')); $this->TI1IllI('DIGEST-MD5', array($this, I14089)); }$this->TI1IllI('LOGIN', array($this, '_authLogin'), false); $this->TI1IllI('PLAIN', array($this, '_authPlain'), false); }function TI1IIIT($seconds, $llLLLIL =0) {return $this->Il1IL11->TI1IIIT($seconds, $llLLLIL); }function setDebug($debug, $handler =null) {$this->_debug =$debug; $this->llLLL1I =$handler; }function TI1IlTI($message) {if ($this->_debug) {if ($this->llLLL1I) {call_user_func_array($this->llLLL1I, array(&$this, $message)); }else {echo "DEBUG: $message\n"; }}}function TI1IlTl($data) {$this->TI1IlTI("Send: $data"); $result =$this->Il1IL11->write($data); if (!$result || PEAR::isError($result)) {$msg =($result) ?$result->getMessage() :I14090; return PEAR::raiseError("Failed to write to socket: $msg", null, PEAR_ERROR_RETURN); }return $result; }function TI1IlT1($command, $args =I14087) {if (!empty($args)) {$command .= ' ' .$args; }if (strcspn($command, "\r\n") !== strlen($command)) {return PEAR::raiseError('Commands cannot contain newlines', null, PEAR_ERROR_RETURN); }return $this->TI1IlTl($command ."\r\n"); }function TI1IlIT($valid, $llLL1lI =false) {$this->llLLL11 =-1; $this->llLL1II =array(); if ($llLL1lI) {$this->llLLLL1++; return true; }for ($i =0; $i <= $this->llLLLL1; $i++) {while ($line =$this->Il1IL11->TI1II1l()) {$this->TI1IlTI("Recv: $line"); if (empty($line)) {$this->disconnect(); return PEAR::raiseError('Connection was closed', null, PEAR_ERROR_RETURN); }$code =substr($line, 0, 3); $this->llLL1II[] =trim(substr($line, 4)); if (is_numeric($code)) {$this->llLLL11 =(int)$code; }else {$this->llLLL11 =-1; break; }if (substr($line, 3, 1) != '-') {break; }}}$this->llLLLL1 =0; if (is_int($valid) && ($this->llLLL11 === $valid)) {return true; }elseif (is_array($valid) && in_array($this->llLLL11, $valid, true)) {return true; }return PEAR::raiseError('Invalid response code received from server', $this->llLLL11, PEAR_ERROR_RETURN); }function TI1IlII($command, $valid) {if (PEAR::isError($error =$this->TI1IlT1($command))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT($valid))) {return $error; }return true; }function getResponse() {return array($this->llLLL11, join("\n", $this->llLL1II)); }function TI1IlIl() {return $this->llLL1Il; }function connect($timeout =null, $llLLl1l =false) {$this->llLL1Il =null; $result =$this->Il1IL11->connect($this->host, $this->port, $llLLl1l, $timeout, $this->llLLL1l); if (PEAR::isError($result)) {return PEAR::raiseError('Failed to connect socket: ' .$result->getMessage()); }if ($this->llLLL1L >0) {if (PEAR::isError($error =$this->TI1IIIT($this->llLLL1L))) {return $error; }}if (PEAR::isError($error =$this->TI1IlIT(220))) {return $error; }list(, $this->llLL1Il) =$this->getResponse(); if (PEAR::isError($error =$this->TI1IlI1())) {return $error; }return true; }function disconnect() {if (PEAR::isError($error =$this->TI1IlT1(I14091))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(221))) {return $error; }if (PEAR::isError($error =$this->Il1IL11->disconnect())) {return PEAR::raiseError('Failed to disconnect socket: ' .$error->getMessage()); }return true; }function TI1IlI1() {if (PEAR::isError($error =$this->TI1IlT1('EHLO', $this->localhost))) {return $error; }if (PEAR::isError($this->TI1IlIT(250))) {if (PEAR::isError($error =$this->TI1IlT1('HELO', $this->localhost))) {return $error; }if (PEAR::isError($this->TI1IlIT(250))) {return PEAR::raiseError('HELO was not accepted: ', $this->llLLL11, PEAR_ERROR_RETURN); }return true; }foreach ($this->llLL1II as $argument) {$llLL1ll =strtok($argument, I14092); $arguments =substr($argument, strlen($llLL1ll) +1, strlen($argument) -strlen($llLL1ll) -1); $this->llLL1IL[$llLL1ll] =$arguments; }if (!isset($this->llLL1IL['PIPELINING'])) {$this->llLLLLL =false; }return true; }function TI1IllT() {$llLL1lL =explode(I14092, $this->llLL1IL['AUTH']); foreach ($this->llLLLLl as $method => $callback) {if (in_array($method, $llLL1lL)) {return $method; }}return PEAR::raiseError('No supported authentication methods', null, PEAR_ERROR_RETURN); }function auth($uid, $pwd ,$method =I14087, $llLL1l1 =true, $llLL1LI =I14087) {if ($llLL1l1 && version_compare(PHP_VERSION, '5.1.0', I14093) && extension_loaded('openssl') && isset($this->llLL1IL['STARTTLS']) && strncasecmp($this->host, 'ssl://', 6) !== 0) {if (PEAR::isError($result =$this->TI1IlT1('STARTTLS'))) {return $result; }if (PEAR::isError($result =$this->TI1IlIT(220))) {return $result; }if (PEAR::isError($result =$this->Il1IL11->TI1IlTT(true, STREAM_CRYPTO_METHOD_TLS_CLIENT))) {return $result; }elseif ($result !== true) {return PEAR::raiseError(I14094); }$this->TI1IlI1(); }if (empty($this->llLL1IL['AUTH'])) {return PEAR::raiseError('SMTP server does not support authentication'); }if (empty($method)) {if (PEAR::isError($method =$this->TI1IllT())) {return $method; }}else {$method =strtoupper($method); if (!array_key_exists($method, $this->llLLLLl)) {return PEAR::raiseError("$method is not a supported authentication method"); }}if (!isset($this->llLLLLl[$method])) {return PEAR::raiseError("$method is not a supported authentication method"); }if (!is_callable($this->llLLLLl[$method], false)) {return PEAR::raiseError("$method authentication method cannot be called"); }if (is_array($this->llLLLLl[$method])) {list($object, $method) =$this->llLLLLl[$method]; $result =$object->{$method}($uid, $pwd, $llLL1LI, $this); }else {$func =$this->llLLLLl[$method]; $result =$func($uid, $pwd, $llLL1LI, $this); }if (PEAR::isError($result)) {return $result; }return true; }function TI1IllI($name, $callback, $llLL1Ll =true) {if (!is_string($name)) {return PEAR::raiseError('Method name is not a string'); }if (!is_string($callback) && !is_array($callback)) {return PEAR::raiseError('Method callback must be string or array'); }if (is_array($callback)) {if (!is_object($callback[0]) || !is_string($callback[1])) return PEAR::raiseError('Bad mMethod callback array'); }if ($llLL1Ll) {$this->llLLLLl =array_merge(array($name => $callback), $this->llLLLLl); }else {$this->llLLLLl[$name] =$callback; }return true; }function _authDigest_MD5($uid, $pwd, $llLL1LI =I14087) {if (PEAR::isError($error =$this->TI1IlT1('AUTH', 'DIGEST-MD5'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(334))) {if ($this->llLLL11 === 503) {return true; }return $error; }$challenge =base64_decode($this->llLL1II[0]); $llLL1LL =&Auth_SASL::factory('digest-md5'); $llLL1L1 =base64_encode($llLL1LL->getResponse($uid, $pwd, $challenge, $this->host, "smtp", $llLL1LI)); if (PEAR::isError($error =$this->TI1IlT1($llLL1L1))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(334))) {return $error; }if (PEAR::isError($error =$this->TI1IlT1(I14087))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(235))) {return $error; }}function _authCRAM_MD5($uid, $pwd, $llLL1LI =I14087) {if (PEAR::isError($error =$this->TI1IlT1(I14095, 'CRAM-MD5'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(334))) {if ($this->llLLL11 === 503) {return true; }return $error; }$challenge =base64_decode($this->llLL1II[0]); $llLL11I =&Auth_SASL::factory('cram-md5'); $llLL1L1 =base64_encode($llLL11I->getResponse($uid, $pwd, $challenge)); if (PEAR::isError($error =$this->TI1IlT1($llLL1L1))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(235))) {return $error; }}function _authLogin($uid, $pwd, $llLL1LI =I14087) {if (PEAR::isError($error =$this->TI1IlT1(I14095, 'LOGIN'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(334))) {if ($this->llLLL11 === 503) {return true; }return $error; }if (PEAR::isError($error =$this->TI1IlT1(base64_encode($uid)))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(334))) {return $error; }if (PEAR::isError($error =$this->TI1IlT1(base64_encode($pwd)))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(235))) {return $error; }return true; }function _authPlain($uid, $pwd, $llLL1LI =I14087) {if (PEAR::isError($error =$this->TI1IlT1(I14095, 'PLAIN'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(334))) {if ($this->llLLL11 === 503) {return true; }return $error; }$llLL1L1 =base64_encode($llLL1LI .chr(0) .$uid .chr(0) .$pwd); if (PEAR::isError($error =$this->TI1IlT1($llLL1L1))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(235))) {return $error; }return true; }function helo($domain) {if (PEAR::isError($error =$this->TI1IlT1(I14096, $domain))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250))) {return $error; }return true; }function TI1Illl() {return $this->llLL1IL; }function TI1Ill1($sender, $params =null) {$args ="FROM:<$sender>"; if (is_array($params) && isset($params['verp'])) {if ($params['verp'] === true) {$args .= ' XVERP'; }elseif (trim($params['verp'])) {$args .= I14097 .$params['verp']; }}elseif (is_string($params) && !empty($params)) {$args .= I14092 .$params; }if (PEAR::isError($error =$this->TI1IlT1('MAIL', $args))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250, $this->llLLLLL))) {return $error; }return true; }function TI1Il1T($recipient, $params =null) {$args ="TO:<$recipient>"; if (is_string($params)) {$args .= I14092 .$params; }if (PEAR::isError($error =$this->TI1IlT1('RCPT', $args))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(array(250, 251), $this->llLLLLL))) {return $error; }return true; }function TI1Il1I(&$data) {$data =preg_replace('/^\./m', I14098, $data); $data =preg_replace('/(?:\r\n|\n|\r(?!\n))/', "\r\n", $data); }function data($data, $headers =null) {if (!is_string($data) && !is_resource($data)) {return PEAR::raiseError('Expected a string or file resource'); }$size =(is_null($headers)) ?0 :strlen($headers) +4; if (is_resource($data)) {$stat =fstat($data); if ($stat === false) {return PEAR::raiseError('Failed to get file size'); }$size += $stat[I14099]; }else {$size += strlen($data); }$limit =(isset($this->llLL1IL['SIZE'])) ?$this->llLL1IL['SIZE'] :0; if ($limit >0 && $size >= $limit) {$this->disconnect(); return PEAR::raiseError('Message size exceeds server limit'); }if (PEAR::isError($error =$this->TI1IlT1('DATA'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(354))) {return $error; }if (!is_null($headers)) {$this->TI1Il1I($headers); if (PEAR::isError($result =$this->TI1IlTl($headers .I14100))) {return $result; }}if (is_resource($data)) {while (strlen($line =fread($data, 8192)) >0) {while (!feof($data)) {$char =fread($data, 1); $line .= $char; if ($char != "\n") {break; }}$this->TI1Il1I($line); if (PEAR::isError($result =$this->TI1IlTl($line))) {return $result; }}}else {for ($offset =0; $offset <$size;) {$end =$offset +512000; if ($end >= $size) {$end =$size; }else {for (;$end <$size; $end++) {if ($data[$end] != "\n") {break; }}}$chunk =substr($data, $offset, $end -$offset); $this->TI1Il1I($chunk); if (PEAR::isError($result =$this->TI1IlTl($chunk))) {return $result; }$offset =$end; }}if (PEAR::isError($result =$this->TI1IlTl("\r\n.\r\n"))) {return $result; }if (PEAR::isError($error =$this->TI1IlIT(250, $this->llLLLLL))) {return $error; }return true; }function TI1Il1l($path) {if (PEAR::isError($error =$this->TI1IlT1('SEND', "FROM:<$path>"))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250, $this->llLLLLL))) {return $error; }return true; }function TI1Il11($path) {return TI1Il1l($path); }function TI1I1TT($path) {if (PEAR::isError($error =$this->TI1IlT1(I14101, "FROM:<$path>"))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250, $this->llLLLLL))) {return $error; }return true; }function TI1I1TI($path) {return TI1I1TT($path); }function TI1I1Tl($path) {if (PEAR::isError($error =$this->TI1IlT1('SAML', "FROM:<$path>"))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250, $this->llLLLLL))) {return $error; }return true; }function TI1I1T1($path) {return TI1I1Tl($path); }function rset() {if (PEAR::isError($error =$this->TI1IlT1('RSET'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250, $this->llLLLLL))) {return $error; }return true; }function vrfy($string) {if (PEAR::isError($error =$this->TI1IlT1('VRFY', $string))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(array(250, 252)))) {return $error; }return true; }function noop() {if (PEAR::isError($error =$this->TI1IlT1('NOOP'))) {return $error; }if (PEAR::isError($error =$this->TI1IlIT(250))) {return $error; }return true; }function TI1I1IT() {return true; }}class Mail_RFC822 {public $address =I14087; public $llLL11l =I14088; public $llLL11L =true; public $validate =true; public $llLL111 =array(); public $llL1III =array(); public $error =null; public $index =null; public $llL1IIl =0; public $llL1IIL =true; public $limit =null; function Mail_RFC822($address =null, $llLL11l =null, $llL1II1 =null, $validate =null, $limit =null) {if (isset($address)) $this->address =$address; if (isset($llLL11l)) $this->llLL11l =$llLL11l; if (isset($llL1II1)) $this->llLL11L =$llL1II1; if (isset($validate)) $this->validate =$validate; if (isset($limit)) $this->limit =$limit; }function TI1I1II($address =null, $llLL11l =null, $llL1II1 =null, $validate =null, $limit =null) {if (!isset($this->llL1IIL)) {$obj =new Mail_RFC822($address, $llLL11l, $llL1II1, $validate, $limit); return $obj->TI1I1II(); }if (isset($address)) $this->address =$address; if (isset($llLL11l)) $this->llLL11l =$llLL11l; if (isset($llL1II1)) $this->llLL11L =$llL1II1; if (isset($validate)) $this->validate =$validate; if (isset($limit)) $this->limit =$limit; $this->llL1III =array(); $this->llLL111 =array(); $this->error =null; $this->index =null; while ($this->address =$this->TI1I1Il($this->address)) {continue; }if ($this->address === false || isset($this->error)) {return PEAR::raiseError($this->error); }for ($i =0; $i <count($this->llLL111); $i++) {if (($return =$this->TI1I11T($this->llLL111[$i])) === false || isset($this->error)) {return PEAR::raiseError($this->error); }if (!$this->llLL11L) {$this->llL1III =array_merge($this->llL1III, $return); }else {$this->llL1III[] =$return; }}return $this->llL1III; }function TI1I1Il($address) {if (!empty($this->limit) AND count($this->llLL111) == $this->limit) {return I14087; }if ($this->TI1I1I1($address) && !isset($this->error)) {$llL1IlI =I14102; $llL1Ill =true; }elseif (!isset($this->error)) {$llL1IlI =','; $llL1Ill =false; }elseif (isset($this->error)) {return false; }$parts =explode($llL1IlI, $address); $string =$this->TI1I1lT($parts, $llL1IlI); if ($llL1Ill) {if (mb_strpos($string, ':') === false) {$this->error ='Invalid address: ' .$string; return false; }if (!$this->TI1I1lT(explode(':', $string), I14103)) {return false; }$this->llL1IIl++; }$this->llLL111[] =array( 'address' => trim($string), 'group' => $llL1Ill );$address =trim(mb_substr($address, mb_strlen($string) +1)); if ($llL1Ill && mb_substr($address, 0, 1) == ','){ $address =trim(mb_substr($address, 1)); return $address; }elseif (mb_strlen($address) >0) {return $address; }else {return I14087; }return false; }function TI1I1I1($address) {$parts =explode(',', $address); $string =$this->TI1I1lT($parts, I14104); if (count($parts =explode(I14103, $string)) >1) {$llL1IlL =$this->TI1I1lT($parts, I14103); return ($llL1IlL !== $string); }else {return false; }}function TI1I1lT($parts, $char) {$string =$parts[0]; for ($i =0; $i <count($parts); $i++) {if ($this->TI1I1lI($string) || $this->TI1I1ll($string, '<>') || $this->TI1I1ll($string, '[]') || $this->TI1I1ll($string, '()') || mb_substr($string, -1) == '\\') {if (isset($parts[$i +1])) {$string =$string .$char .$parts[$i +1]; }else {$this->error ='Invalid address spec. Unclosed bracket or quotes'; return false; }}else {$this->index =$i; break; }}return $string; }function TI1I1lI($string) {$string =explode('"', $string); $llL1Il1 =count($string); for ($i =0; $i <(count($string) -1); $i++) if (mb_substr($string[$i], -1) == '\\') $llL1Il1--; return ($llL1Il1 %2 === 0); }function TI1I1ll($string, $chars) {$llL1ILI =mb_substr_count($string, $chars[0]); $llL1ILl =mb_substr_count($string, $chars[1]); $this->TI1I1l1($string, $llL1ILI, $chars[0]); $this->TI1I1l1($string, $llL1ILl, $chars[1]); if ($llL1ILI <$llL1ILl) {$this->error ='Invalid address spec. Unmatched quote or bracket (' .$chars .')'; return false; }else {return ($llL1ILI >$llL1ILl); }}function TI1I1l1($string, &$num, $char) {$parts =explode($char, $string); for ($i =0; $i <count($parts); $i++){ if (mb_substr($parts[$i], -1) == I14105 || $this->TI1I1lI($parts[$i])) $num--; if (isset($parts[$i +1])) $parts[$i +1] =$parts[$i] .$char .$parts[$i +1]; }return $num; }function TI1I11T($address) {$llL1Ill =false; $llLL111 =array(); if ($address['group']) {$llL1Ill =true; $parts =explode(I14103, $address['address']); $groupname =$this->TI1I1lT($parts, I14103); $llL1III =array(); if (!$this->TI1I11I($groupname)){ $this->error ='Group name did not validate.'; return false; }else {if ($this->llLL11L) {$llL1III =new stdClass; $llL1III->groupname =$groupname; }}$address['address'] =ltrim(mb_substr($address[I14106], mb_strlen($groupname .I14103))); }if ($llL1Ill) {while (mb_strlen($address[I14106]) >0) {$parts =explode(I14104, $address[I14106]); $llLL111[] =$this->TI1I1lT($parts, I14104); $address[I14106] =trim(mb_substr($address[I14106], mb_strlen(end($llLL111) .I14104))); }}else {$llLL111[] =$address[I14106]; }if (!count($llLL111)){ $this->error ='Empty group.'; return false; }for ($i =0; $i <count($llLL111); $i++) {$llLL111[$i] =trim($llLL111[$i]); if (!$this->TI1lTTT($llLL111[$i])) {if (empty($this->error)) {$this->error ='Validation failed for "' .$llLL111[$i] .'"'; }return false; }}if ($this->llLL11L) {if ($llL1Ill) {$llL1III->llLL111 =$llLL111; }else {$llL1III =$llLL111[0]; }}else {if ($llL1Ill) {$llL1III =array_merge($llL1III, $llLL111); }else {$llL1III =$llLL111; }}return $llL1III; }function TI1I11I($phrase) {$parts =preg_split('/[ \\x09]+/', $phrase, -1, PREG_SPLIT_NO_EMPTY); $llL1ILL =array(); while (count($parts) >0){ $llL1ILL[] =$this->TI1I1lT($parts, I14092); for ($i =0; $i <$this->index +1; $i++) array_shift($parts); }for ($i =0; $i <count($llL1ILL); $i++) {if (mb_substr($llL1ILL[$i], 0, 1) == '"') {if (!$this->TI1I111($llL1ILL[$i])) {return false; }continue; }if (!$this->TI1I11l($llL1ILL[$i])) return false; }return true; }function TI1I11l($llL1IL1) {if (!$this->validate) {return true; }if (!preg_match('/^[\\x00-\\x7E]+$/i', $llL1IL1, $matches)) {return false; }if (preg_match('/[][()<>@,;\\:". ]/', $llL1IL1)) {return false; }if (preg_match('/[\\x00-\\x1F]+/', $llL1IL1)) {return false; }return true; }function TI1I111($llL1I1I) {$llL1I1I =mb_substr($llL1I1I, 1, -1); return !(preg_match('/(.)[\x0D\\\\"]/', $llL1I1I, $matches) && $matches[1] != I14105); }function TI1lTTT(&$mailbox) {$phrase =I14087; $comment =I14087; $comments =array(); $llL1I1l =$mailbox; while (mb_strlen(trim($llL1I1l)) >0) {$parts =explode('(', $llL1I1l); $llL1I1L =$this->TI1I1lT($parts, '('); if ($llL1I1L != $llL1I1l) {$comment =mb_substr(str_replace($llL1I1L, I14087, $llL1I1l), 1); $parts =explode(')', $comment); $comment =$this->TI1I1lT($parts, ')'); $comments[] =$comment; $llL1I1l =mb_substr($llL1I1l, mb_strpos($llL1I1l, $comment)+mb_strlen($comment)+1); }else {break; }}foreach ($comments as $comment) {$mailbox =str_replace("($comment)", I14087, $mailbox); }$mailbox =trim($mailbox); if (mb_substr($mailbox, -1) == I14107 && mb_substr($mailbox, 0, 1) != '<') {$parts =explode('<', $mailbox); $name =$this->TI1I1lT($parts, '<'); $phrase =trim($name); $llL1I11 =trim(mb_substr($mailbox, mb_strlen($name.'<'), -1)); if ($this->TI1I11I($phrase) === false || ($llL1I11 =$this->TI1lTTI($llL1I11)) === false) {return false; }}else {if (mb_substr($mailbox, 0, 1) == I14108 && mb_substr($mailbox, -1) == I14107) {$llL1lII =mb_substr($mailbox, 1, -1); }else {$llL1lII =$mailbox; }if (($llL1lII =$this->TI1lTII($llL1lII)) === false) {return false; }}$mbox =new stdClass(); $mbox->personal =$phrase; $mbox->comment =isset($comments) ?$comments :array(); if (isset($llL1I11)) {$mbox->mailbox =$llL1I11['local_part']; $mbox->host =$llL1I11['domain']; $llL1I11['adl'] !== I14087 ?$mbox->adl =$llL1I11['adl'] :I14087; }else {$mbox->mailbox =$llL1lII[I14109]; $mbox->host =$llL1lII['domain']; }$mailbox =$mbox; return true; }function TI1lTTI($llL1I11) {if (mb_strpos($llL1I11, I14103) !== false) {$parts =explode(I14103, $llL1I11); $llL1lIl =$this->TI1I1lT($parts, I14103); }else {$llL1lIl =$llL1I11; }if ($llL1lIl === $llL1I11){ unset($llL1lIl); $llL1lII =$llL1I11; if (($llL1lII =$this->TI1lTII($llL1lII)) === false) {return false; }}else {if (($llL1lIl =$this->TI1lTTl($llL1lIl)) === false) {return false; }$llL1lII =mb_substr($llL1I11, mb_strlen($llL1lIl .I14103)); if (($llL1lII =$this->TI1lTII($llL1lII)) === false) {return false; }}if (isset($llL1lIl)) {$return['adl'] =$llL1lIl; }else {$return['adl'] =I14087; }$return =array_merge($return, $llL1lII); return $return; }function TI1lTTl($llL1lIl) {$domains =explode(I14104, trim($llL1lIl)); for ($i =0; $i <count($domains); $i++) {$domains[$i] =str_replace('@', I14087, trim($domains[$i])); if (!$this->TTTIIIl($domains[$i])) return false; }return $llL1lIl; }function TTTIIIl($domain) {$llL1lIL =explode(I14110, $domain); while (count($llL1lIL) >0) {$llL1lI1[] =$this->TI1I1lT($llL1lIL, I14110); for ($i =0; $i <$this->index +1; $i++) array_shift($llL1lIL); }for ($i =0; $i <count($llL1lI1); $i++) {if (!$this->TI1lTT1(trim($llL1lI1[$i]))) return false; }return $domain; }function TI1lTT1($subdomain) {if (preg_match('|^\[(.*)]$|', $subdomain, $arr)){ if (!$this->TI1lTIT($arr[1])) return false; }else {if (!$this->TI1I11l($subdomain)) return false; }return true; }function TI1lTIT($llL1llI) {return !preg_match('/(.)[][\x0D\\\\]/', $llL1llI, $matches) && $matches[1] != I14105; }function TI1lTII($llL1lII) {$llL1lII =trim($llL1lII); if (mb_strpos($llL1lII, '@') !== false) {$parts =explode('@', $llL1lII); $local_part =$this->TI1I1lT($parts, '@'); $domain =mb_substr($llL1lII, mb_strlen($local_part .I14111)); }else {$local_part =$llL1lII; $domain =$this->llLL11l; }if (($local_part =$this->TI1lTIl($local_part)) === false) return false; if (($domain =$this->TTTIIIl($domain)) === false) return false; return array(I14109 => $local_part, 'domain' => $domain); }function TI1lTIl($local_part) {$parts =explode(I14110, $local_part); $words =array(); while (count($parts) >0){ $words[] =$this->TI1I1lT($parts, I14110); for ($i =0; $i <$this->index +1; $i++) {array_shift($parts); }}for ($i =0; $i <count($words); $i++) {if ($this->TI1I11I(trim($words[$i])) === false) return false; }return $local_part; }function TI1lTI1($data) {return count(preg_split('/(?<!\\\\),/', $data)); }function TI1lTlT($data, $strict =false) {$regex =$strict ?'/^([.0-9a-z_-]+)@(([0-9a-z-]+\.)+[0-9a-z]{2,4})$/i' :'/^([*+!.&#$|\'\\%\/0-9a-z^_`{}=?~:-]+)@(([0-9a-z-]+\.)+[0-9a-z]{2,4})$/i'; if (preg_match($regex, trim($data), $matches)) {return array($matches[1], $matches[2]); }else {return false; }}}class Mail {public $sep =I14112; function factory($driver, $params =array()) {$driver =mb_strtolower($driver); $class ='Mail_' .$driver; if (class_exists($class)) {return new $class($params); }else {return PEAR::raiseError('Unable to find class for driver ' .$driver); }}function send($recipients, $headers, $body) {if (is_array($recipients)) {$recipients =implode(', ', $recipients); }$subject =I14087; if (isset($headers['Subject'])) {$subject =$headers[I14113]; unset($headers[I14113]); }list(,$llL1lll) =Mail::TI1lTlI($headers); return mail($recipients, $subject, $body, $llL1lll); }function TI1lTlI($headers) {$lines =array(); $from =null; foreach ($headers as $key => $value) {if ($key === 'From') {$llLL111 =Mail_RFC822::TI1I1II($value, I14088, false); $from =$llLL111[0]->mailbox .I14111 .$llLL111[0]->host; if (strstr($from, I14092)) {return false; }$lines[] =$key .': ' .$value; }elseif ($key === 'Received') {array_unshift($lines, $key .': ' .$value); }else {$lines[] =$key .I14114 .$value; }}return array($from, join($this->sep, $lines) .$this->sep); }function TI1lTll($recipients) {if (is_array($recipients)) {$recipients =implode(', ', $recipients); }$llLL111 =Mail_RFC822::TI1I1II($recipients, I14088, false); $recipients =array(); if (is_array($llLL111)) {foreach ($llLL111 as $llL1llL) {$recipients[] =$llL1llL->mailbox .I14111 .$llL1llL->host; }}return $recipients; }}class Mail_smtp extends Mail {public $host =I14088; public $port =25; public $auth =false; public $username =I14087; public $password =I14087; public $localhost =I14088; function Mail_smtp($params) {if (isset($params['host'])) $this->host =$params['host']; if (isset($params['port'])) $this->port =$params[I14115]; if (isset($params['auth'])) $this->auth =$params['auth']; if (isset($params['username'])) $this->username =$params['username']; if (isset($params[I14116])) $this->password =$params[I14116]; if (isset($params[I14088])) $this->localhost =$params[I14088]; }function send($recipients, $headers, $body) {if (!($smtp =new Net_SMTP($this->host, $this->port, $this->localhost))) {return new PEAR_Error('unable to instantiate Net_SMTP object'); }if (PEAR::isError($smtp->connect())) {return new PEAR_Error('unable to connect to smtp server ' .$this->host .I14103 .$this->port); }if ($this->auth) {$method =is_string($this->auth) ?$this->auth :I14087; if (PEAR::isError($smtp->auth($this->username, $this->password, $method))) {return new PEAR_Error('unable to authenticate to smtp server'); }}list($from, $llL1lll) =$this->TI1lTlI($headers); if (!empty($headers['Return-Path'])) {$from =$headers[I14117]; }if (!isset($from)) {return new PEAR_Error('No from address given'); }if (PEAR::isError($smtp->TI1Ill1($from))) {return new PEAR_Error('unable to set sender to [' .$from .']'); }$recipients =$this->TI1lTll($recipients); foreach($recipients as $recipient) {if (PEAR::isError($res =$smtp->TI1Il1T($recipient))) {return new PEAR_Error('unable to add recipient [' .$recipient .I14118 .$res->getMessage()); }}if (PEAR::isError($smtp->data($llL1lll .I14112 .$body))) {return new PEAR_Error('unable to send data'); }$smtp->disconnect(); return true; }}?>
