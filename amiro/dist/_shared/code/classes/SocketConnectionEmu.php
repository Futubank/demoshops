<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       8575 xkqwmttmrpptiyxkgrxqgxlrgzusniuqsmurirktrugrryurlqnzlmuzszqkpqutxrnqpnir
 */ ?><?php foreach(array(14189=>'',14190=>"rQDGHnDQ%?#GrQ@",14191=>'VOHDt',14192=>'ZrPD',14193=>'sy',14194=>'GrHW',14195=>'IDP',14196=>'tBGQ',14197=>'~CCC',14198=>'tZrPQtsHIZMn',14199=>'`',14200=>'WHSQ',14201=>'WrQZtQ',14202=>'SY',14203=>'SYgZDDCHrS',14204=>'uDQrnZIQTQIGJZtQ') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'BaseObject.php'; class SocketConnectionEmu extends BaseObject {public $dest; public $timeout; public $request; public $response; public $I1ILI11; function SocketConnectionEmu($dest,$timeout=60) {$this->request =I14189; $this->BaseObject(); $this->dest =$dest; $this->I1ILI11 =false; $this->timeout =$timeout; }public static function TTTI1II() {return function_exists('fsockopen') && function_exists('stream_set_timeout'); }function connect() {return true; }function TI1IIIT($to) {}function send($str) {$str =unserialize(base64_decode($str)); $this->request =$str; echo "<pre>".print_r($str)."</pre><br>"; return true; }function TI1IIIl() {$aResponse =$this->GetResponse(); echo I14190.print_r($aResponse)."</pre><br>"; $str =base64_encode(serialize($aResponse)); return $str; }function disconnect() {}function GetResponse() {$aResponse =array(); $ll1IIlL =array(); if(is_array($this->request)) {if(count($this->request['batch'])) {foreach($this->request['batch'] as $aCmd) {switch($aCmd['type']) {case I14191: $ll1IIlL[] =$this->TI1llII($aCmd['proc'], $aCmd['args']); break; case 'DNS': $ll1IIlL[] =$this->TI1llIl($aCmd['proc'], $aCmd[I14192]); break; case 'Mbox': $ll1IIlL[] =$this->TI1llI1($aCmd['proc'], $aCmd[I14192]); break; case 'FTP': $ll1IIlL[] =$this->TI1lllT($aCmd['proc'], $aCmd[I14192]); break; case I14193: $ll1IIlL[] =$this->TI1lllI($aCmd['proc'], $aCmd[I14192]); break; case 'CMS': $ll1IIlL[] =$this->TI1llll($aCmd['proc'], $aCmd[I14192]); break; case 'SysUser': $ll1IIlL[] =$this->TI1lll1($aCmd[I14194], $aCmd[I14192]); break; default: break; }}}$aResponse =array( 'msg' => 'Success', 'results' => $ll1IIlL, 'code' => 0, );}else {$aResponse =array( I14195 => 'Error - getting response w/o request', 'results' => $ll1IIlL, 'code' => 1, );}return $aResponse; }function TI1llII($proc, $aArgs){ $aData =array(); switch($proc) {case 'create': switch($aArgs[I14196]) {case 'common': $path =explode('.', $aArgs['domain']); $dom =array_pop($path); array_unshift($path, $dom); $path =implode('.', $path).I14197; break; case 'subdomain': $sub =mb_substr($aArgs['domain'], 0, -(mb_strlen($aArgs['targetDomain'])+1)); $path =explode('.', $aArgs[I14198]); $dom =array_pop($path); array_unshift($path, $dom); $path =implode('.', $path)."/$sub"; break; case 'alias': $sub =mb_substr($aArgs['domain'], 0, -(mb_strlen($aArgs[I14198])+1)); $path =explode('.', $aArgs[I14198]); $dom =array_pop($path); array_unshift($path, $dom); $path =implode(I14199, $path)."/$sub"; break; default: $path =I14189; break; }$aData =array( 'path' => $path); break; default: $aData =I14189; break; }$aRes =array( I14195 => I14189, 'data' => $aData, 'code' => 0, );return $aRes; }function TI1llIl($proc, $aArgs){ $aData =array(); switch($proc) {default: $aData =1; break; }$aRes =array( I14195 => I14189, 'data' => $aData, I14200 => 0, );return $aRes; }function TI1llI1($proc, $aArgs){ $aData =array(); switch($proc) {default: $aData =I14189; break; }$aRes =array( I14195 => I14189, 'data' => $aData, I14200 => 0, );return $aRes; }function TI1lllT($proc, $aArgs){ $aData =array(); switch($proc) {case 'listDir': $aData =array('public_html'); break; default: $aData =I14189; break; }$aRes =array( I14195 => I14189, 'data' => $aData, I14200 => 0, );return $aRes; }function TI1lllI($proc, $aArgs){ $aData =array(); switch($proc) {case I14201: $aData =I14189; break; case 'createUser': $aData =I14189; break; case 'editUser': $aData =I14189; break; case 'destroyUser': $aData =I14189; break; default: $aData =I14189; break; }$aRes =array( I14195 => I14189, 'data' => $aData, I14200 => 0, );return $aRes; }function TI1llll($proc, $aArgs){ $aData =array(); switch($proc) {case I14201: $aData =array( I14202 => array( 'dbName' => 'cmsdb'.time(), 'dbUser' => 'dbuser'.time(), I14203 => time(), ));break; default: $aData =I14189; break; }$aRes =array( I14195 => I14189, 'data' => $aData, I14200 => 0, );return $aRes; }function TI1lll1($proc, $aArgs){ $aData =array(); switch($proc) {case I14201: $aData =array( 'password' => 'pas'.time(), 'username' => $aArgs[I14204].time(), );break; case 'destroy': $aData =I14189; break; default: $aData =I14189; break; }$aRes =array( I14195 => I14189, 'data' => $aData, I14200 => 0, );return $aRes; }}