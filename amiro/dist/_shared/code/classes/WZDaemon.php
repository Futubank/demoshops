<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       10988 xkqwtrwixwgxnwymqzxrxyislzqukmnxlkumlulwqnkigxwxsiwyxmkswxqrnukglzlipnir
 */ ?><?php foreach(array(14381=>'wjzddqd|gzTo',14382=>'dozRqs|hgT',14383=>"DMtQ?SQJQtQ",14384=>"DuDGQnS",14385=>"DMtQ?",14386=>'rQDtZrt|OttGS',14387=>"?",14388=>'uDQr',14389=>'EuHtZ',14390=>'nHnQ',14391=>'JJ11mJm') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'SysDaemon.php'; require_once $GLOBALS[I14381] .'ClanNode.php'; if($GLOBALS["BUILDER_VERSION"] <2){ class WZDaemon extends SysDaemon {function WZDaemon($auth='none',$dest=false,$timeout=480,$flags=0) {if($dest===false) $dest ='inet:localhost:'.$GLOBALS[I14382]['wzdaemon_port']; $this->SysDaemon($dest,$auth,$flags,$timeout); }function TlTTTl1($domain=false) {$node =&ClanNode::TT1I1Il($domain); return $node->TT1I1IT(); }function &admInstance($auth=false,$domain=false,$timeout=480,$flags=0) {return WZDaemon::TlTTT1T(WZDaemon::TlTTTl1($domain),$auth,$timeout,$flags); }function &TlTTT1T($url,$auth=false,$timeout=480,$flags=0) {$oSess =admSession(); if($auth===false) $auth =$oSess->TlIT11l(); return new WZDaemon($auth,$url,$timeout,$flags); }function TlTTT1I($params) {return $this->TI1l1T1("site create",$params); }function TlTTT1l($params) {return $this->TI1l1T1("site clone",$params); }function TlTTT11($params) {return $this->TI1l1T1("site alias",$params); }function TITTlIT($params) {return $this->TI1l1T1(I14383,$params); }function TlTTITT($params) {if(!isset($params['restart_httpd'])) $params['restart_httpd'] =1; if (isset($params['action']) and $params['action'] == I14384) {$lIL1IL1 =&DB_si::admInstance($params['domain']); $lIL1IL1->query('truncate cms_cache'); $lIL1IL1->query('truncate cms_cache_blocks'); $lIL1IL1->query('truncate cms_cache_content'); }return $this->TI1l1T1(I14385.$params['action']. " ".$params['domain']." ".$params[I14386]); }function TlTTITI($params) {return $this->TI1l1T1("demos ".$params['action']." ".$params['front'].I14387.$params['admin']); }function TlTTITl($params) {return $this->TI1l1T1("ftp ".$params['action'].I14387.$params['domain']); }function TlTTIT1($user,$password) {$p =array(I14388=>$user,'password'=>$password); return $this->TI1l1T1("ftp passwd",$p); }function TlTTIIT($params) {return $this->TI1l1T1("quota set ".$params['domain']. I14387.$params[I14389]); }function TlTTIII($params) {return $this->TI1l1T1("mail manage",$params); }function Ping() {return $this->TI1l1T1("daemon ping"); }function TlTTIIl() {return $this->TI1l1T1("httpd reload"); }function TlTTII1($domain) {if($this->TI1l1T1("dns zoneexists $domain")===false) return false; $res =$this->GetLastResponse(); $res =explode(' ',$res); if(sizeof($res)!=3) return false; return intval($res[2]); }}class WZDaemonPool {public $ll11IIL; public $ll11II1; function WZDaemonPool() {$this->ll11IIL =array(); $this->ll11II1 =false; }function TlTTIlT($yes=true) {$this->ll11II1 =$yes==true; }function &TlTTIlI($auth=false,$domain=false,$timeout=480) {if($domain===false) {$oSess =admSession(); $domain =$oSess->TlIT11I(); }return WZDaemonPool::TlTTIll(WZDaemon::TlTTTl1($domain),$auth,$timeout); }function &TlTTIll($url,$auth=false,$timeout=480) {if(!isset($this->ll11IIL[$url])) {if($this->ll11II1) return false; $this->ll11IIL[$url] =&WZDaemon::TlTTT1T($url,$auth,$timeout); }return $this->ll11IIL[$url]; }}}else{ $ll11IlI =null; class WZDaemon1 extends SysDaemon {function WZDaemon($auth=I14390,$dest=false,$timeout=480,$flags=0) {if($dest===false) $dest ='inet:localhost:'.$GLOBALS[I14382]['wzdaemon_port']; $this->SysDaemon($dest,$auth,$flags,$timeout); }function TlTTIl1($domain=false) {$node =&ClanNode::TT1I1Il($domain); return $node->TT1I1IT(); }function TlTTI1T($ll11Ill=false) {$node =&ClanNode::getBySubscr($ll11Ill); return $node->TT1I1IT(); }function TlTTI1I(&$daemon) {$GLOBALS['ll11IlI'] =$daemon; }function &admInstance($auth=false,$ll11Ill=false,$timeout=480,$flags=0) {if(is_object($GLOBALS['ll11IlI'])) {return $GLOBALS[I14391]; }else {return WZDaemon::TlTTT1T($ll11Ill === false? WZDaemon::TlTTIl1(): WZDaemon::TlTTI1T($ll11Ill),$auth,$timeout,$flags); }}function &TlTTT1T($url,$auth=false,$timeout=480,$flags=0) {$oSess =admSession(); if($auth===false) $auth =$oSess->TlIT11l(); return new WZDaemon($auth,$url,$timeout,$flags); }function TlTTI1l($params) {return $this->TI1l1T1($params); }function Ping() {return true; }}class WZDaemonPool {public $ll11IIL; public $ll11II1; public $core; function WZDaemonPool($core) {$this->core =$core; $this->ll11IIL =array(); $this->ll11II1 =false; }function TlTTIlT($yes=true) {$this->ll11II1 =$yes==true; }function &TlTTIlI($auth=false,$domain=false,$timeout=480) {if($domain===false) {$oSess =admSession(); $domain =$oSess->TlIT11I(); }return WZDaemonPool::TlTTIll(WZDaemon::TlTTIl1($domain),$auth,$timeout); }function &TlTTIll($url,$auth=false,$timeout=480) {if(!isset($this->ll11IIL[$url])) {if($this->ll11II1) return false; $this->ll11IIL[$url] =&WZDaemon::TlTTT1T($url,$auth,$timeout); $this->ll11IIL[$url]->TI1l1IT($this->core); }return $this->ll11IIL[$url]; }}}