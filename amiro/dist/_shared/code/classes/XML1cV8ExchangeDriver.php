<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       77721 xkqwpwlxtwlkrwpqyxlwunnutwqqqgyizmrnkqulxmzxzptzzpklyqluwutmxuryunytpnir
 */ ?><?php foreach(array(14392=>"fMQJSD",14393=>"qnWHSQdtuYwy",14394=>"",14395=>"]EuHt^",14396=>"]<34^",14397=>"whNFmp",14398=>"01",14399=>"dTzRT+Tzp",14400=>"06",14401=>"hylqwT",14402=>"02",14403=>"hylqwT+mNFh",14404=>"Nziq+hylqwT",14405=>"Tbgqd",14406=>"gRmwqd+izg",14407=>"10",14408=>"10010102",14409=>"Tbgq",14410=>"Fmjq|qXTqNdmhN",14411=>"1001010109",14412=>"VzjUq+1w",14413=>"1001010201",14414=>"03",14415=>"zim+RqFqRqNwq+NUi",14416=>"zim+VzjUq+1w",14417=>"FRhi",14418=>"tZP",14419=>"hylqwT+Tbgq+zTTR",14420=>"DtZrt|tZP",14421=>'mizpq|izmN',14422=>'mizpq|ghgUg',14423=>'mizpq|dizjj',14424=>'fMQJS|ZWtMHn',14425=>'fMQJS|SY',14426=>"WHGB",14427=>'WHGB',14428=>'fMQJSD',14429=>'rQGJZWQ',14430=>'0',14431=>'ZIM|vZJuQ|1W',14432=>'ZIM|vZJuQ|SY',14433=>"rQPuJZr",14434=>'WuDtHI|tBGQD',14435=>'HGQrZtMHn',14436=>'QDOHG|MtQI',14437=>"07",14438=>"08",14439=>"izg",14440=>"gqRwqNT",14441=>"MIGHrt",14442=>"10003",14443=>"WHnfMP|HGQn|QrrHr",14444=>"tBGQ",14445=>"0",14446=>"D1001010103",14447=>"tBGQ|tZP",14448=>"WurrQnWB",14449=>"D10010101080101",14450=>"D10010101080103",14451=>"HYLQWt|QDOHG",14452=>"fMQJS|QDOHG",14453=>"D100101020110",14454=>"ZIM|vZJuQ|1W",14455=>"D100101020107",14456=>"WHIGrQDDMHn",14457=>"GZDDCHrS",14458=>"QnWHSMnP",14459=>"GZrDQr",14460=>"HYLQWt|MS",14461=>"fHrIZt|SZtQ",14462=>"|",14463=>"HYLQWt|1W",14464=>"SZtZ|tBGQ",14465=>"SQJ|HYLQWtD",14466=>"RqFqRqNwq",14467=>'wzTzjhp',14468=>'fMQJS|QDOHG',14469=>"rQf|nuI",14470=>'IZGGMnP',14471=>"fMJQ|QxtQnDMHn",14472=>"tBGQD",14473=>"vZJuQ|1W",14474=>"?rQturn?",14475=>"IZGGMnP",14476=>"GrMWQD",14477=>"GQrWQnt",14478=>"MS|tZP",14479=>"tH",14480=>"ZWtMHn",14481=>"1",14482=>"3",14483=>"gRmwq|Tbgq",14484=>"ms|qXTqRNzj",14485=>"4",14486=>"MIZPQD",14487=>"SQJQtQ|HYLQWt",14488=>"whsq",14489=>"2",14490=>"gRmwq",14491=>"14",14492=>"wURRqNwb",14493=>"10012",14494=>"rQP",14495=>"MS|QxtQrnZJ",14496=>"MD|SQJQtQS",14497=>"HYLQWt",14498=>"10013",14499=>":02S",14500=>"SQJQtQ|rQfQrQnWQD",14501=>"GZrDQr|QrrHr",14502=>"wzTzjhp",14503=>"|wzTzjhp|wzTd",14504=>"|DtZrtqJQIQntgZDD4",14505=>"GrHWQDD|WZtQPHrMQD",14506=>"GrHWQDD|MtQID",14507=>"QxGHrt",14508=>"vZrD",14509=>"JMnQ",14510=>"11",14511=>"16",14512=>"mizpq",14513=>"MS",14514=>"GMS",14515=>"MIP|tBGQ",14516=>"SQJ|HYL|tBGQ",14517=>"175",14518=>"zwTmVq",14519=>"szTq",14520=>"MD|fHJSQr",14521=>"HrMPMnZJ|fMJQ|nZIQ",14522=>"fMJQ|nZIQ",14523=>"MIZPQ|SZtZ",14524=>"tIG|fMJQ|nZIQ",14525=>"md|yzdq",14526=>"HYLQWtD",14527=>"GrHWQDD|rQfQrQnWQD",14528=>"1101",14529=>"TzX",14530=>"IZG",14531=>"nZIQ",14532=>"GZtOtBGQD",14533=>"MIGHrt|IHSuJQD",14534=>"MnWJuSQS|MIGHrt|IHSuJQD",14535=>"QDOHG|HrSQr",14536=>"tQxt",14537=>"MtQID",14538=>"MtQI|MnfH",14539=>"tZx",14540=>"GrMWQ|nuIYQr",14541=>"WuDtMnfH|",14542=>"%QxGHrt|HrSQr",14543=>"MD|nQC|MS|QxtQrnZJ") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class XML1cV8ExchangeDriver extends ExchangeDriver {public $llLILll; public $llLILlL; public $llLILl1; public $llLILLI; public $_config; public $I1IL1Ll; public $llLILLl; public $llLILLL; public $Il11lL1; public $Il11l1I; public $llLILL1; public $llLIL1I; public $llLIL1l; public $llLIL1L; public $llLIL11; public $llLI1II; public $llLI1Il; public $lIllL1L; public $llLI1IL; public $llLI1I1; public $llLI1lI; public $llLI1ll; public $llLI1lL; public $llLI1l1; public $llLI1LI; public $llLI1Ll; public $II1LIIL; public $llLI1LL; public $Il11l1L; public $llLI1L1; public $llLI11I; public $aXmlReplaceChars; public $llLI11l; public $_fields; public $llLI11L; function XML1cV8ExchangeDriver(&$gui, &$module) {parent::ExchangeDriver($gui, $module); $this->name ="XML1cV8ExchangeDriver"; $this->llLILlL =524288; $this->llLILl1 =""; $this->llLILLI =false; $this->_config[I14392] =Array(); $this->_config["objects"] =Array(); $this->_config["compression"] =Array(); $this->I1IL1Ll =Array(); $this->llLILLl =Array(); $this->Il11lL1 =Array(); $this->Il11l1I =Array(); $this->llLILL1 =Array(); $this->llLIL1I ="_PrepareTagNameStubCB"; $this->llLIL1l ="EncodeStubCB"; $this->llLIL1L =I14393; $this->llLI1II =""; $this->llLI1Il ="0"; $this->lIllL1L =Array(); $this->llLI1IL =""; $this->llLI1I1 =Array(); $this->llLI1lI =Array(); $this->llLI1ll =Array(); $this->llLI1lL =Array(); $this->llLI1l1 =Array(); $this->llLI1LI =0; $this->llLI1Ll =""; $this->II1LIIL =0; $this->llLI1LL =0.25; $this->Il11l1L =0; $this->llLI1L1 =0; $this->llLI11I =I14394; $this->llLI11l =false; $this->aXmlReplaceChars =Array( "from"=>Array("&amp;", "&lt;", "&gt;", I14395), "to"=>Array("&#38;", "&#60;", "&#62;", I14396), );$this->llLI11L =array(); }function Init($type) {$res =false; if(parent::Init($type)) {$this->llLILll =$GLOBALS["LOCAL_FILES_PATH"].$this->module->module->GetOption("config_file"); if($type == "import") {$this->llLILLL =Array( I14394=>Array("tag"=>Array(I14397=>"10")), "10"=>Array("tag"=>Array("OBJECTS"=>I14398, "COMPRESSION"=>"02", "FTP"=>"03", I14399=>"04", "ENCODING"=>"05", "OBJECT-DELETION"=>I14400, "DATE-FORMAT-STRING"=>"07")), "1001"=>Array("tag"=>Array(I14401=>I14398)), "1002"=>Array("tag"=>Array("IS-COMRESSION"=>I14398, "NAME-ARCHIVE"=>I14402, "PASSWD"=>"03")), "100101"=>Array("tag"=>Array(I14403=>I14398, "ATTRIBS"=>I14402)), "10010101"=>Array("tag"=>Array("NAME-OBJECT-1C"=>I14398, I14404=>I14402, "DEFAULT_TYPE"=>"03", "TYPE_TAG"=>"04", I14405=>"05", "DATA_TYPE"=>I14400, "PRICE-ID-TAG"=>"07", I14406=>"08", "TAXES-MAP"=>"09", "OBJECT-DELETION-TYPE-1C"=>I14407, "BASE-CURRENCY-TAG"=>"11", "BASE-CURRENCY-VALUE"=>"12")), I14408=>Array("tag"=>Array("ATTRIB"=>I14398)), "1001010105"=>Array("tag"=>Array(I14409=>I14398)), "100101010501"=>Array("tag"=>Array("VALUE-1C"=>I14398, "NAME"=>I14402, I14410=>"03")), "1001010108"=>Array("tag"=>Array("MAP"=>I14398)), I14411=>Array("tag"=>Array("MAP"=>I14398)), "100101010801"=>Array("tag"=>Array(I14412=>I14398, "PRICE-NUMBER"=>I14402)), "100101010901"=>Array("tag"=>Array(I14412=>I14398, "PERCENT"=>I14402)), I14413=>Array("tag"=>Array("NAME-1C"=>I14398, "NAME"=>I14402, "AMI-DB-FIELD" => I14414, "AMI-ACTION" => "04", "AMI-MAPPING" => "05", I14415 => I14400, "AMI-REFERENCE-DATA-TYPE" => "07", "AMI-SPECIAL-NUM" => "08", "AMI-CUSTOM-FIELD-NUM" => "09", "AMI-CAT" => I14407)), "100101020105" => array("tag" => array(I14416 => I14398, "AMI-VALUE-DB" => I14402)), "1005"=>Array("tag"=>Array("TYPE-1C"=>I14398, I14417=>I14402, "TO"=>I14414, "PARSER"=>"04")), "1006"=>Array(I14418=>Array("TAG"=>I14398, "OBJECT-ID"=>I14402)), "100602"=>Array(I14418=>Array("TAG"=>I14398, I14419=>I14402)), );$this->llLIL1L ='EncodeToWinMbCB'; $res =$this->TI1T111("import"); if($res) {$this->_config[I14392]["body"][$this->_config["start_tag"]] =$this->_config[I14420]; }$llLI111 =$this->module->cms->Core->GetModOption($this->module->moduleName, 'item_fields_map'); $llLlIII =$this->module->cms->Core->GetModOption($this->module->moduleName, 'cat_fields_map'); if(isset($llLI111['IMAGE_MAIN']['operation'])){ $llLI111[I14421]['operation'] ='image'; }if(isset($llLI111['IMAGE_POPUP']['operation'])){ $llLI111[I14422]['operation'] ='image'; }if(isset($llLI111['IMAGE_SMALL']['operation'])){ $llLI111[I14423]['operation'] ='image'; }$llLlIIl =array(); $llLlIIL =array(); foreach($this->llLI11L as $fieldName => $llLlII1){ if($llLlII1['field_action'] == 'copy' || $llLlII1[I14424] == 'replace'){ if(isset($llLlII1['field_cat']) && $llLlII1['field_cat']){ $llLlIIL[] =$llLlII1['field_db']; }else{ $llLlIIl[] =$llLlII1[I14425]; }}}if(sizeof($llLlIIl)){ $llLlIlI =$this->TTIIlll('eshop_item/table', $llLlIIl); }if(sizeof($llLlIIL)){ $llLlIll =$this->TTIIlll('eshop_cat/table', $llLlIIL); }foreach($this->llLI11L as $fieldName => $llLlII1){ if(isset($llLlII1['field_cat']) && $llLlII1['field_cat']){ $llLlIlL =true; }else{ $llLlIlL =false; }switch($llLlII1[I14424]){ case I14426: if($llLlIlL){ $llLlIII[$fieldName] =array( 'operation' => 'copy', 'fields' => isset($llLlIll[$llLlII1[I14425]]) ?$llLlIll[$llLlII1[I14425]] :$llLlII1[I14425] );}else{ $llLI111[$fieldName] =array( 'operation' => I14427, 'fields' => isset($llLlIlI[$llLlII1[I14425]]) ?$llLlIlI[$llLlII1[I14425]] :$llLlII1[I14425] );}break; case "on_special": if(!$llLlIlL){ $llLI111[$fieldName] =array( 'operation' => 'on_special', I14428 => 'on_special', 'number' => intval($llLlII1[I14425]), 'pre_operation' => array( 'operation' => I14429, 'values' => array( 'true' => '1', 'false' => I14430 )));}break; case "replace": if($llLlIlL){ $llLlIII[$fieldName] =array( 'operation' => I14429, I14428 => isset($llLlIll[$llLlII1[I14425]]) ?$llLlIll[$llLlII1[I14425]] :$llLlII1[I14425] );}else{ $llLI111[$fieldName] =array( 'operation' => I14429, I14428 => isset($llLlIlI[$llLlII1[I14425]]) ?$llLlIlI[$llLlII1[I14425]] :$llLlII1[I14425] );}foreach($llLlII1['mapping'] as $llLlIl1){ if(isset($llLlIl1[I14431]) && isset($llLlIl1['ami_value_db'])){ if($llLlIlL){ $llLlIII[$fieldName]['values'][$llLlIl1[I14431]] =$llLlIl1['ami_value_db']; }else{ $llLI111[$fieldName]['values'][$llLlIl1[I14431]] =$llLlIl1[I14432]; }}}break; case "reference": $llLlILI =$this->module->cms->Core->GetModOption($this->module->moduleName, 'references_fields_map'); $llLlILI[$fieldName] =array( "operation" => I14426, I14392 => "name" );$this->module->cms->Core->SetModOption($this->module->moduleName, 'references_fields_map', $llLlILI); $llLlILl =$this->module->cms->Core->GetModOption($this->module->moduleName, 'references_tables_map'); $llLlILl["REFERENCE_".$llLlII1['ref_data']] =array( "type" => I14433, "id" => $llLlII1['ref_num'] );$this->module->cms->Core->SetModOption($this->module->moduleName, 'references_tables_map', $llLlILl); $llLlILL =$this->module->cms->Core->GetModOption('ext_eshop_custom_fields', I14434); $llLlILL[intval($llLlII1[I14425]) -1] =array( 0 => "char", 1 => $llLlII1['ref_num'], 2 => "select" );$this->module->cms->Core->SetModOption('ext_eshop_custom_fields', I14434, $llLlILL); $llLI111[$fieldName] =array( I14435 => 'reference', 'name' => $llLlII1[I14425] );break; }}$this->module->cms->Core->SetModOption($this->module->moduleName, 'item_fields_map', $llLI111); $this->module->cms->Core->SetModOption($this->module->moduleName, 'cat_fields_map', $llLlIII); $this->module->cms->Core->SetModOption(I14436, 'item_links_allowed', I14430); unset($llLI111); unset($llLlIII); }elseif($type == "export") {$this->llLILLL =Array( I14394=>Array(I14418=>Array(I14397=>I14407)), I14407=>Array(I14418=>Array("OBJECTS"=>I14398, "DATE-FORMAT-STRING"=>I14437)), "1001"=>Array(I14418=>Array(I14401=>I14398)), "100101"=>Array(I14418=>Array(I14403=>I14398)), "10010101"=>Array(I14418=>Array("NAME-OBJECT-1C"=>I14398, I14404=>I14402, I14406=>I14438, "TAXES-MAP"=>"09")), "1001010108"=>Array(I14418=>Array("MAP"=>I14398)), I14411=>Array(I14418=>Array(I14439=>I14398)), "100101010801"=>Array(I14418=>Array("PRICE-NUMBER"=>I14402, "ID-EXTERNAL"=>I14414)), "100101010901"=>Array(I14418=>Array(I14412=>I14398, I14440=>I14402)), );$res =$this->TI1T111("export"); }}return $res; }function TI1T11l() {$this->llLI1LI =0; $this->llLI1Ll =I14394; $this->llLILl1 =I14394; $this->I1IL1Ll =Array(); $this->llLILLI =false; $this->llLIL11 ="body"; }function TI1T111($type) {$res =false; if(file_exists($this->llLILll)) {if(($fp =@fopen($this->llLILll, "r"))) {$this->llLI1Il ="00"; if($type == I14441) {$llLlIL1 ="_endElementCfgImport"; }else {$llLlIL1 ="_endElementCfgExport"; }if($this->TI1ITI1($fp, "_startElementCfg", $llLlIL1, "_characterDataCfg")) {$res =true; }else {$this->TTIIlT1(I14442, "config_parse_error", $this->I1IL1Ll["parser_error"]); }$this->llLI1Il ="0"; fclose($fp); }else {$this->TTIIlT1("10002", I14443); }}else {$this->TTIIlT1("10001", "config_not_found"); }return $res; }function _startElementCfg($parser, $name, $attrs) {$name =$this->{$this->llLIL1I}($name); $this->TI1ITTl($parser, $name, $attrs); switch('s'.$this->llLILl1) {case "s10010101050102": if(isset($attrs[I14444]) && $attrs[I14444] == "free") {$this->I1IL1Ll["file_free"] ="1"; }else {$this->I1IL1Ll["file_free"] =I14445; }break; }}function _characterDataCfg($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {$data =$this->{$this->llLIL1L}($data); switch('s'.$this->llLILl1) {case "s1004": $this->_config[I14420] =$data; break; case "s1001010101": $this->I1IL1Ll["object_1c"] =$data; break; case I14446: $this->_config["images"]["default_type"] =$data; break; case "s1001010104": $this->_config["images"][I14447] =$data; break; case "s1001010107": $this->_config["prices"]["id_tag"] =$data; break; case "s1001010110": $this->I1IL1Ll["object_deletion_type"] =$data; break; case "s1001010111": $this->_config["currency"]["base_tag"] =$data; break; case "s1001010112": $this->_config[I14448]["base_value"] =$data; break; case "s100101020101": case "s10010101050101": $this->I1IL1Ll["field_1c"] =$data; break; case I14449: case "s10010101090101": $this->I1IL1Ll["value_1c"] =$data; break; case "s10010101080102": $this->I1IL1Ll["price_number"] =$data; break; case I14450: $this->I1IL1Ll["price_id_external"] =$data; break; case "s10010101090102": $this->I1IL1Ll["percent"] =$data; break; case "s1001010102": $this->I1IL1Ll[I14451] =$data; break; case "s1001010106": $this->I1IL1Ll["data_type"] =$data; break; case "s100101020102": case "s10010101050102": $this->I1IL1Ll[I14452] =$data; break; case "s100101020103": case "s100101020108": case "s100101020109": $this->I1IL1Ll["field_db"] =$data; break; case I14453: $this->I1IL1Ll["field_cat"] =$data; break; case "s100101020104": $this->I1IL1Ll["field_action"] =$data; break; case "s10010102010501": $this->I1IL1Ll[I14454] =$data; break; case "s10010102010502": $this->I1IL1Ll["ami_value_db"] =$data; break; case "s100101020106": $this->I1IL1Ll["ref_num"] =$data; break; case I14455: $this->I1IL1Ll["ref_data"] =$data; break; case "s10010101050103": $this->I1IL1Ll["file_extension"] =$data; break; case "s100201": $this->_config[I14456]["enable"] =$data; break; case "s100202": $this->_config[I14456]["file_name"] =$data; break; case "s100203": $this->_config[I14456][I14457] =$data; break; case "s100501": $this->_config["encoding"]["1C"] =$data; break; case "s100502": $this->_config[I14458]["from"] =$data; break; case "s100503": $this->_config[I14458]["to"] =$data; break; case "s100504": $this->_config[I14458][I14459] =$data; break; case "s100601": $this->_config["delete_object"][I14418] =$data; break; case "s10060201": $this->_config["delete_object"][I14460] =$data; break; case "s10060202": $this->_config["delete_object"]["object_type_attr"] =$data; break; case "s1007": $this->_config[I14461] =$data; break; }}$this->llLI1LI =2; }function _endElementCfgImport($parser, $name) {$this->llLI1LI =3; $name =$this->{$this->llLIL1I}($name); if(!$this->llLILLI) {if($this->llLILl1 != "1003") {$this->llLILl1 =mb_substr($this->llLILl1, 0, mb_strlen($this->llLILl1) -2); }switch('s'.$this->llLILl1) {case "s100101": if($name == I14403) {if($this->I1IL1Ll[I14451] == "REFERENCE") {$llLlI1I =$this->I1IL1Ll[I14451].I14462.$this->I1IL1Ll["data_type"]; $this->lIllL1L[] =$llLlI1I; $this->_config["objects"][$this->I1IL1Ll["object_1c"]] =$llLlI1I; $this->_config[I14392]["objects"][$this->I1IL1Ll[I14463]] =$llLlI1I; if(isset($this->I1IL1Ll["object_deletion_type"])) {$this->_config["del_objects"][$this->I1IL1Ll["object_deletion_type"]] =Array(I14444=>"REFERENCE", I14464=>$this->I1IL1Ll[I14464]); unset($this->I1IL1Ll["object_deletion_type"]); }}else {$this->_config["objects"][$this->I1IL1Ll[I14463]] =$this->I1IL1Ll[I14451]; $this->_config[I14392]["objects"][$this->I1IL1Ll[I14463]] =$this->I1IL1Ll[I14451]; if(isset($this->I1IL1Ll["object_deletion_type"])) {$this->_config[I14465][$this->I1IL1Ll["object_deletion_type"]] =Array(I14444=>$this->I1IL1Ll[I14451]); unset($this->I1IL1Ll["object_deletion_type"]); }}}break; case "s10010102": if($name == "ATTRIB"){ if($this->I1IL1Ll[I14451] == I14466) {$this->_config[I14392][$this->I1IL1Ll[I14451].I14462.$this->I1IL1Ll[I14464]][$this->I1IL1Ll["field_1c"]] =$this->I1IL1Ll[I14452]; }else {$this->_config[I14392][$this->I1IL1Ll[I14451]][$this->I1IL1Ll["field_1c"]] =$this->I1IL1Ll[I14452]; }if(isset($this->I1IL1Ll['object_eshop']) && ($this->I1IL1Ll['object_eshop'] == I14467) && isset($this->I1IL1Ll['field_eshop']) && isset($this->I1IL1Ll[I14424]) && isset($this->I1IL1Ll[I14425])){ $this->llLI11L[$this->I1IL1Ll['field_eshop']] =array( I14425 => strtolower($this->I1IL1Ll[I14425]), I14424 => strtolower($this->I1IL1Ll[I14424]) );if(isset($this->I1IL1Ll['field_cat']) && $this->I1IL1Ll['field_cat']){ $this->llLI11L[$this->I1IL1Ll[I14468]]['field_cat'] =true; }else{ $this->llLI11L[$this->I1IL1Ll[I14468]]['field_cat'] =false; }if($this->llLI11L[$this->I1IL1Ll[I14468]][I14424] == 'reference'){ $this->llLI11L[$this->I1IL1Ll[I14468]]['ref_num'] =$this->I1IL1Ll[I14469]; $this->llLI11L[$this->I1IL1Ll[I14468]]['ref_data'] =$this->I1IL1Ll["ref_data"]; }if(isset($this->I1IL1Ll['mapping'])){ $this->llLI11L[$this->I1IL1Ll[I14468]]['mapping'] =$this->I1IL1Ll[I14470]; unset($this->I1IL1Ll[I14470]); }unset($this->I1IL1Ll[I14425]); unset($this->I1IL1Ll['field_cat']); }}break; case "s1001010105": if($this->I1IL1Ll[I14452] == "FILE") {$this->llLI11l =true; }$tmp =Array(I14444=>$this->I1IL1Ll[I14452], "extension"=>$this->I1IL1Ll[I14471]); if($this->I1IL1Ll[I14452] == "FILE") {$tmp["free"] =$this->I1IL1Ll["file_free"]; }$this->_config["images"][I14472][$this->I1IL1Ll["field_1c"]] =$tmp; break; case "s100101010801": $this->_config["prices"]["map"][trim($this->I1IL1Ll[I14473])] =$this->I1IL1Ll["price_number"]; break; case "s1001010109": $this->_config["tax"]["map"][$this->I1IL1Ll[I14473]] =doubleval(eval(I14474.$this->I1IL1Ll["percent"].";")); break; case "s1001010201": if($name == "AMI-MAPPING"){ $this->I1IL1Ll[I14475][] =array( I14431 => $this->I1IL1Ll[I14454], I14432 => $this->I1IL1Ll["ami_value_db"] );}break; }}}function _endElementCfgExport($parser, $name) {$name =$this->{$this->llLIL1I}($name); if(!$this->llLILLI) {if($this->llLILl1 != "1003") {$this->llLILl1 =mb_substr($this->llLILl1, 0, mb_strlen($this->llLILl1) -2); }switch('s'.$this->llLILl1) {case "s1001010108": $this->_config[I14476]["map"][$this->I1IL1Ll["price_number"]] =$this->I1IL1Ll["price_id_external"]; break; case "s1001010109": $taxValue =number_format(doubleval(eval(I14474.$this->I1IL1Ll[I14477].";")), 4).I14394; $this->_config["tax"]["map"][$taxValue] =$this->I1IL1Ll[I14473]; break; }}}function TI1ITTT() {foreach($this->llLI1ll as $extId=>$data) {$priceNum =$this->_config[I14476]["map"][$data[$this->_config[I14476][I14478]]]; $this->llLI1lL["PRICE_TYPE"][$priceNum] =$data; }}function Start($actionType, &$aParams) {$II1LIlI =parent::Start($actionType, $aParams); if ($II1LIlI) {if ($actionType == I14441) {$dataSource =$aParams["data_source"]; if (file_exists($dataSource)) {$this->II1LIIL =filesize($dataSource); if (($fp =@fopen($dataSource, "r"))) {if ($this->_config[I14458]["from"] != $this->_config[I14458][I14479] || mb_strtolower($this->_config[I14458]["from"]) != 'utf-8') {$this->llLIL1l ="_EncodeMbCB"; }$this->llLIL1I ="_PrepareTagNamePassCB"; $II1LIlI =$this->TTIIlIT(Array(I14480=>"common")); if ($II1LIlI) {if ($this->llLI11l) {$II1LIlI =$this->TTIIlIT(Array(I14480=>"prepare_files")); if (!$II1LIlI) {$this->TTIIlT1("10012", "callback_error"); }}}if ($II1LIlI) {$this->llLILLL =Array( I14394=>Array(I14418=>Array($this->_config[I14420]=>I14481, I14394=>I14394)), I14481=>Array(I14418=>Array("CATALOG"=>I14481, "IMAGE"=>"2", $this->_config["delete_object"][I14418]=>I14482, "CURRENCY"=>"4", "CURRENCY_RATE"=>"5", I14483=>"6", "PRICE"=>"7")), "11"=>Array(I14418=>Array(I14484=>I14481, "IS_FOLDER"=>"2", "IS_DELETED"=>I14482, "ID_PARENT_EXTERNAL"=>I14485)), "12"=>Array(I14418=>Array("ID_OBJECT_EXTERNAL"=>I14481, "FILE"=>"2", $this->_config[I14486][I14447]=>I14482, "FILE_NAME"=>I14485, "DESCRIPTION"=>"5")), "13"=>Array(I14418=>Array($this->_config[I14487][I14460]=>I14481)), "16"=>Array(I14418=>Array(I14484=>I14481, "IS_DELETED"=>"2", "DESCRIPTION"=>I14482, "CURRENCY_ID_EXTERNAL"=>I14485, "DISCOUNT"=>"5", "WITH_TAX"=>"6", I14488=>"7")), "17"=>Array(I14418=>Array("DATE"=>I14481, "ACTIVE"=>I14489, "TYPE_PRICE_ID_EXTERNAL"=>I14482, "ITEM_ID_EXTERNAL"=>I14485, "CURRENCY_ID_EXTERNAL"=>"5", I14490=>"6", "DISCOUNT"=>"7")) );$i =1; $llLlI1l =Array(); foreach($this->_config[I14392]["CURRENCY"] as $tag) {$llLlI1l[$tag] =I14394.$i++; }$this->llLILLL[I14491][I14418] =$llLlI1l; unset($llLlI1l); $llLlI1L =Array(); foreach($this->_config[I14392]["CURRENCY_RATE"] as $tag) {$llLlI1L[$tag] =I14394.$i++; }$this->llLILLL["15"][I14418] =$llLlI1L; unset($llLlI1L); $this->TI1T11l(); if($this->TI1ITI1($fp, "_startElementPass1", "_endElementPass1", "_characterDataPass1", $this->_config[I14458][I14459])) {$this->TT1TIIT(); if(is_array($this->llLI1lI) && sizeof($this->llLI1lI) >0) {if($this->TTIIlIT(Array(I14480=>"process_currencies"))) {if(is_array($this->llLI1I1["CURRENCY"]) && sizeof($this->llLI1I1["CURRENCY"]) >0) {$aData =Array(); $this->II1I1IL->{$this->II1I1I1["delete_currency"]}($aData, $this->llLI1I1[I14492]); }foreach($this->llLI1lI as $extId => $data) {$data += Array(I14484=>$extId); $aParams["callbacks"]["object"]->{$aParams["callbacks"]["process_currencies"]}($data); }}else {$this->TTIIlT1(I14493, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array(I14480=>"process_currencies")); }if(is_array($this->Il11lL1["reg"]) || $llLlI11) {if($this->TTIIlIT(Array(I14480=>"prepare_categories"))) {$numCats =sizeof($this->Il11lL1[I14494]); for($i=0; $i<$numCats; $i++) {$aParams["callbacks"]["object"]->{$aParams["callbacks"]["prepare_categories"]}(Array(I14495=>$this->Il11lL1[I14494][$i]["id"], "id_parent_external"=>$this->Il11lL1[I14494][$i]["pid"], "is_mark_deleted"=>$this->Il11lL1[I14494][$i][I14496])); }}else {$this->TTIIlT1(I14493, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array(I14480=>"prepare_categories")); }if(is_array($this->Il11l1I)) {if($this->TTIIlIT(Array(I14480=>"prepare_images"))) {foreach($this->Il11l1I as $aFiles) {foreach($aFiles as $llLllII) {$aParams["callbacks"][I14497]->{$aParams["callbacks"]["prepare_images"]}($llLllII); }}}else {$this->TTIIlT1(I14493, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array(I14480=>"prepare_images")); }}else {$II1LIlI =false; $this->TTIIlT1(I14498, "data_parse_error", $this->I1IL1Ll["parser_error"]); }}$this->llLI1Il ="00"; if($II1LIlI && sizeof($this->lIllL1L) >0) {$this->llLILLL =Array( I14394=>Array(I14418=>Array($this->_config[I14420]=>"11", I14394=>I14394)) );$i =1; $llLllIl =Array(); foreach($this->lIllL1L as $llLllIL) {$llLllIl[$llLllIL] =sprintf(I14499, $i++); $j =1; $llLllI1 =Array(); foreach($this->_config[I14392][$llLllIL] as $tag) {$llLllI1[$tag] =sprintf(I14499, $j++); }$this->llLILLL["11".$llLllIl[$llLllIL].I14394] =Array(I14418 => $llLllI1); }$this->llLILLL["11"] =Array(I14418 => $llLllIl); if($this->TTIIlIT(Array(I14480=>"process_references"))) {if(is_array($this->llLI1I1[I14466]) && sizeof($this->llLI1I1[I14466]) >0) {foreach($this->llLI1I1[I14466] as $I11LlLI=>$llLlllI) {$aData[I14464] ="REFERENCE_".$I11LlLI; $this->II1I1IL->{$this->II1I1I1[I14500]}($aData, $llLlllI); }}$this->TI1T11l(); $this->Il11l1L =0.25 *$this->II1LIIL; if(!$this->TI1ITI1($fp, "_startElementPass2", "_endElementPass2", "_characterDataPass2", $this->_config[I14458][I14459])) {$II1LIlI =false; $this->TTIIlT1(I14498, "data_parse_error", $this->I1IL1Ll[I14501]); }}else {$this->TTIIlT1(I14493, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array(I14480=>"process_references")); }$this->llLI1I1["_CATALOG_CATS"] =Array(); if($II1LIlI && $this->TTIIlIT(Array(I14480=>"process_categories"))) {if(is_array($this->llLI1I1[I14502]) && sizeof($this->llLI1I1[I14502]) >0) {$this->llLI1I1["_CATALOG_CATS"] =Array(); foreach($this->llLI1I1[I14502] as $index=>$extId) {if($this->II1I1IL->{$this->II1I1I1["object_is_category"]}($extId)) {$this->llLI1I1["_CATALOG_CATS"][] =$extId; unset($this->llLI1I1[I14502][$index]); }}}if(is_array($this->llLI1I1["_CATALOG_CATS"]) && sizeof($this->llLI1I1[I14503]) >0) {$aData =Array(); $this->II1I1IL->{$this->II1I1I1["delete_categories"]}($aData, $this->llLI1I1[I14503]); }if(is_array($this->_config[I14392][I14502])) {$i =1; $llLllll =Array(); foreach($this->_config[I14392][I14502] as $tag) {$llLllll[$tag] =sprintf(I14499, $i++); }}$this->llLILLL =Array( I14394=>Array(I14418=>Array($this->_config[I14420]=>"11", I14394=>I14394)), "11"=>Array(I14418=>Array(I14502=>I14398)), "1101"=>Array(I14418=>$llLllll), );$this->TI1ITTT(); $this->TI1T11l(); $this->llLI1IL =I14502; $this->Il11l1L =0.5 *$this->II1LIIL; if(!$this->TI1ITI1($fp, I14504, "_endElementPass3", "_characterDataPass3", $this->_config[I14458][I14459])) {$II1LIlI =false; $this->TTIIlT1(I14498, "data_parse_error", $this->I1IL1Ll[I14501]); }}else {$this->TTIIlT1(I14493, "callback_error"); $II1LIlI =false; }$this->TTIIlII(Array(I14480=>I14505)); if($II1LIlI && $this->TTIIlIT(Array(I14480=>"process_items"))) {unset($this->II1I1IL->II1llIL->Engine->ext['ext_rating']); if(is_array($this->llLI1I1[I14502]) && sizeof($this->llLI1I1[I14502]) >0) {$aData =Array(); $this->II1I1IL->{$this->II1I1I1["delete_items"]}($aData, $this->llLI1I1[I14502]); }$this->TI1T11l(); $this->llLI1IL =I14502; $this->Il11l1L =0.75 *$this->II1LIIL; $this->llLI1L1 =0; $numPrices =sizeof($this->llLI1l1); if($numPrices >0) {$this->llLI1L1 =0.125/$numPrices; $this->llLI1LL /= 2; }if(!$this->TI1ITI1($fp, I14504, "_endElementPass4", "_characterDataPass4", $this->_config[I14458][I14459])) {$II1LIlI =false; $this->TTIIlT1(I14498, "data_parse_error", $this->I1IL1Ll[I14501]); }}else {$this->TTIIlT1(I14493, "callback_error"); $II1LIlI =false; }if($II1LIlI && sizeof($this->llLI1l1) >0) {$this->II1I1IL->I11l1Ll =true; foreach($this->llLI1l1 as $llLlllL=>$Il111lI) {$this->I1IL1Ll =Array(I14484=>$llLlllL); $this->TI1ITIl($llLlllL, "ITEM_UPDATE"); $this->II1I1IL->{$this->II1I1I1["process_items"]}($this->I1IL1Ll); $this->llLI1LL += $this->llLI1L1; $this->TTIIlIl($this->Il11l1L +$this->llLI1LL *$this->II1LIIL, $this->II1LIIL); }$this->II1I1IL->I11l1Ll =false; }$this->TTIIlII(Array(I14480=>I14506)); $this->TTIIlIl($this->II1LIIL, $this->II1LIIL); fclose($fp); }else {$this->TTIIlT1("10011", "data_open_error"); $II1LIlI =false; }}else {$this->TTIIlT1("10010", "data_not_found"); $II1LIlI =false; }}elseif($actionType == I14507) {if(function_exists("mb_convert_encoding")) {$this->llLIL1l ="EncodeToUtfMbCB"; }else {$this->llLIL1l ="EncodeToUtfPhpCB"; }$this->llLI11I =$this->gui->getAbsDefPostf($this->name.":export_header", $this->II1I1lL, $aParams[I14508] +Array("message_number"=>$this->II1I1ll)); $aParams["driver"]["message_number"] =$this->II1I1ll; }}return $II1LIlI; }function End($actionType) {$res =parent::End($actionType); if($actionType == I14441) {}elseif($actionType == I14507) {$res =$this->llLI11I.$this->gui->getAbsDefPostf($this->name.":export_footer", $this->II1I1lL, I14394); }return $this->{$this->llLIL1l}($res); }function TI1ITTI($parser, $errCode, $text, $llLlll1) {$aInfo =Array(I14509=>xml_get_current_line_number($parser), "element"=>$llLlll1); if($errCode >1 && $errCode <1001) {$this->llLILLI =true; }}function TI1ITTl(&$parser, $name, $attrs) {set_time_limit(25); $this->TTIIlIl($this->Il11l1L +$this->llLI1LL *xml_get_current_byte_index($parser), $this->II1LIIL); $this->llLI1LI =1; $this->llLI1II =$name; if(isset($this->llLILLL[$this->llLILl1])) {if(isset($this->llLILLL[$this->llLILl1][I14418][$name])) {$this->llLILl1 .= $this->llLILLL[$this->llLILl1][I14418][$name]; }else {$this->llLILl1 .= $this->llLI1Il; $this->TI1ITTI($parser, 1001, "unknown_element", $name); }}else {$this->llLILl1 .= $this->llLI1Il; }}function _startElementPass1($parser, $name, $attrs) {if((!(($this->llLILl1 == I14481 && $name == $this->_config[I14487][I14418]) || $this->llLILl1 == "13")) ){$name =$this->{$this->llLIL1I}($name); }$this->TI1ITTl($parser, $name, $attrs); switch($this->llLILl1) {case I14481: $this->llLIL11 ="objects"; break; case I14510: $this->llLIL11 =I14502; break; case "12": $this->llLIL11 ="IMAGE"; break; case I14491: $this->llLIL11 =I14492; break; case "15": $this->llLIL11 ="CURRENCY_RATE"; break; case I14511: $this->llLIL11 =I14483; break; case "17": $this->llLIL11 =I14490; break; case "131": $this->I1IL1Ll["del_obj_type"] =$attrs[$this->_config[I14487]["object_type_attr"]]; break; }}function TI1ITT1($parser, &$data) {if($this->llLI1LI == 2) {$this->llLI1Ll .= $data; $data =$this->llLI1Ll; }else {$this->llLI1Ll =$data; }}function _characterDataPass1($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {$data =$this->{$this->llLIL1l}($data); if($this->llLIL11 == I14512 && $this->llLILl1 != "12") {$this->I1IL1Ll["image_data"][$this->llLI1II] =$data; }switch($this->llLILl1) {case "111": case "121": $this->I1IL1Ll[I14513] =$data; break; case "112": $this->I1IL1Ll["is_folder"] =$data; break; case "113": $this->I1IL1Ll[I14496] =$data; break; case "114": $this->I1IL1Ll[I14514] =$data; break; case "122": $this->I1IL1Ll["file_name"] =$data; $this->I1IL1Ll["file_name_tag"] =$this->llLI1II; break; case "123": if(isset($this->_config[I14486][I14472][$data][I14444])) {$this->I1IL1Ll[I14515] =$data; }break; case "124": $this->I1IL1Ll["original_file_name"] =$data; break; case "131": $this->I1IL1Ll["del_obj_type"] =$this->{$this->llLIL1l}($this->I1IL1Ll[I14516]); if(isset($this->_config[I14465][$this->I1IL1Ll[I14516]])) {$llLllLI =$this->_config[I14465][$this->I1IL1Ll[I14516]]; if($llLllLI[I14444] == I14466) {$this->llLI1I1[$llLllLI[I14444]][$llLllLI[I14464]][] =$data; }else {$this->llLI1I1[$llLllLI[I14444]][] =$data; }}break; case "171": case "172": case "173": case "174": case I14517: case "176": case "177": if(isset($this->llLILLl[$this->llLI1II]) && $this->llLI1LI != 2) {$this->TI1ITIT(); }$this->llLILLl[$this->llLI1II] =$data; break; default: if(($this->llLIL11 == I14492 && $this->llLILl1 != I14491) || ($this->llLIL11 == "CURRENCY_RATE" && $this->llLILl1 != "15") || ($this->llLIL11 == I14483 && $this->llLILl1 != I14511)){ $this->I1IL1Ll[$this->llLI1II] =$data; }}}$this->llLI1LI =2; }function TI1ITIT() {if($this->llLILLl[I14518] == "true") {$this->llLILLl["DATE"] =str_replace("T", " ", $this->llLILLl[I14519]); $this->llLILLl[I14519] =DateTools::getCorrectUDate($this->llLILLl[I14519], $this->_config[I14461], I14445); if($this->llLILLl[I14519] <$this->II1I1Il) {$llLllLl =$this->llLILLl["ITEM_ID_EXTERNAL"]; $llLllLL =$this->llLILLl["TYPE_PRICE_ID_EXTERNAL"]; unset($this->llLILLl["ITEM_ID_EXTERNAL"]); unset($this->llLILLl["TYPE_PRICE_ID_EXTERNAL"]); unset($this->llLILLl[I14518]); if(isset($this->llLI1l1[$llLllLl][$llLllLL])) {if($this->llLI1l1[$llLllLl][$llLllLL][I14519] <$this->llLILLl[I14519]) {$this->llLI1l1[$llLllLl][$llLllLL] =$this->llLILLl; }}else {$this->llLI1l1[$llLllLl][$llLllLL] =$this->llLILLl; }}}$this->llLILLl =Array(); }function _endElementPass1($parser, $name) {$this->llLI1LI =3; if(!$this->llLILLI) {switch($this->llLILl1) {case I14510: if($this->I1IL1Ll[I14520] == "true") {$this->Il11lL1[I14514][$this->I1IL1Ll[I14514]][] =Array(I14513=>$this->I1IL1Ll[I14513], I14496=>$this->I1IL1Ll[I14496]); $this->Il11lL1[I14513][$this->I1IL1Ll[I14513]] =$this->I1IL1Ll[I14514]; }$this->llLIL11 ="objects"; $this->I1IL1Ll =Array(); break; case "12": if(isset($this->I1IL1Ll[I14515])) {$imageType =$this->I1IL1Ll[I14515]; }else {$imageType =$this->_config[I14486]["default_type"]; }if(isset($this->I1IL1Ll[I14521]) && !empty($this->I1IL1Ll[I14521])) {$fileExtension =get_file_ext($this->I1IL1Ll[I14521]); }else {$fileExtension =$this->_config[I14486][I14472][$imageType]["extension"]; }if($this->_config[I14486][I14472][$imageType][I14444] == "FILE") {if($this->llLI11l) {$this->I1IL1Ll["image_data"]["TMP_FILE_NAME"] =$this->I1IL1Ll[I14522]; $this->I1IL1Ll["image_data"]["IS_FREE"] =$this->_config[I14486][I14472][$imageType]["free"]; $fileName =$this->I1IL1Ll[I14522].".".$fileExtension; $this->llLILL1[$this->I1IL1Ll[I14523]["ID_OBJECT_EXTERNAL"]][] =$this->I1IL1Ll[I14523][I14484]; $this->II1I1IL->{$this->II1I1I1["prepare_files"]}($this->I1IL1Ll[I14523]); }}else {$this->I1IL1Ll["tmp_file_name"] =$this->I1IL1Ll[I14522]; if(get_file_ext($this->I1IL1Ll[I14522]) != $fileExtension) {$this->I1IL1Ll[I14522] .= ".".$fileExtension; }$this->Il11l1I[$this->I1IL1Ll[I14513]][$this->_config[I14486][I14472][$imageType][I14444]] =Array(I14522=>$this->I1IL1Ll[I14522], I14524=>$this->I1IL1Ll[I14524]); }$this->llLIL11 ="objects"; $this->I1IL1Ll =Array(); break; case I14491: $extId =$this->I1IL1Ll[I14484]; unset($this->I1IL1Ll[I14484]); if(!is_array($this->llLI1lI[$extId])) {$this->llLI1lI[$extId] =Array(); }if($this->I1IL1Ll[$this->_config[I14448]["base_tag"]] == $this->_config[I14448]["base_value"]) {$this->I1IL1Ll["IS_BASE"] =I14481; }else {$this->I1IL1Ll[I14525] =I14445; }$this->llLI1lI[$extId] += $this->I1IL1Ll; $this->llLIL11 ="objects"; $this->I1IL1Ll =Array(); break; case "15": $this->I1IL1Ll[I14519] =str_replace("T", " ", $this->I1IL1Ll[I14519]); $this->I1IL1Ll[I14519] =DateTools::getCorrectUDate($this->I1IL1Ll[I14519], $this->_config[I14461], I14445); $extId =$this->I1IL1Ll[I14484]; if(!is_array($this->llLI1lI[$extId])) {$this->llLI1lI[$extId] =Array(); }if($this->I1IL1Ll[I14519] <$this->II1I1Il) {if((isset($this->llLI1lI[$extId][I14519]) && $this->llLI1lI[$extId][I14519] <$this->I1IL1Ll[I14519]) || !isset($this->llLI1lI[$extId][I14519])) {unset($this->I1IL1Ll[I14484]); $this->llLI1lI[$extId] += $this->I1IL1Ll; }}$this->I1IL1Ll =Array(); $this->llLIL11 =I14526; break; case I14511: if($this->I1IL1Ll["IS_DELETED"] == "false") {$extId =$this->I1IL1Ll[I14484]; unset($this->I1IL1Ll[I14484]); unset($this->I1IL1Ll["IS_DELETED"]); $this->I1IL1Ll[$this->_config[I14476][I14478]] =trim($this->I1IL1Ll[$this->_config[I14476][I14478]]); $this->llLI1ll[$extId] =$this->I1IL1Ll; }$this->llLIL11 =I14526; $this->I1IL1Ll =Array(); break; case "17": $this->TI1ITIT(); $this->llLIL11 =I14526; break; }if($this->llLILl1 != I14394) {$this->llLILl1 =intval(intval($this->llLILl1)/10); }}}function _startElementPass2($parser, $name, $attrs) {$name =$this->{$this->llLIL1I}($name); $this->TI1ITTl($parser, $name, $attrs); switch($this->llLILl1) {case I14510: $this->llLIL11 =I14526; break; default: $ps =intval($this->llLILl1); if($ps >1100 && $ps <1200 && $name !=I14394) {$this->llLIL11 =$name; }break; }}function _characterDataPass2($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {if($this->llLIL11 != I14526 && intval($this->llLILl1) >110000) {$data =$this->{$this->llLIL1l}($data); $this->I1IL1Ll[$this->llLI1II] =$data; }}$this->llLI1LI =2; }function _endElementPass2($parser, $name) {$this->llLI1LI =3; if(!$this->llLILLI) {$ps =intval($this->llLILl1); if($ps >1100 && $ps <1200) {$name =$this->{$this->llLIL1I}($name); $this->I1IL1Ll[I14464] =$this->llLIL11; $this->II1I1IL->{$this->II1I1I1[I14527]}($this->I1IL1Ll); $this->llLIL11 =I14526; $this->I1IL1Ll =Array(); }if($this->llLILl1 != I14394) {$this->llLILl1 =intval(intval($this->llLILl1)/100); }}}function _characterDataPass3($parser, $data) {$this->TI1ITT1($parser, $data); if($this->llLIL11 == $this->llLI1IL && $this->llLILl1 != "1101") {$data =$this->{$this->llLIL1l}($data); $this->I1IL1Ll[$this->llLI1II] =$data; }$this->llLI1LI =2; }function _endElementPass3($parser, $name) {$this->llLI1LI =3; switch($this->llLILl1) {case "1101": if($this->I1IL1Ll["IS_FOLDER"] == "true") {$this->I1IL1Ll += $this->llLI1lL; $this->II1I1IL->{$this->II1I1I1[I14505]}($this->I1IL1Ll); }$this->llLIL11 =I14526; $this->I1IL1Ll =Array(); break; }if($this->llLILl1 != I14394) {$this->llLILl1 =intval(intval($this->llLILl1)/100); }}function _startElementPass4($parser, $name, $attrs) {$name =$this->{$this->llLIL1I}($name); $this->TI1ITTl($parser, $name, $attrs); switch($this->llLILl1) {case I14510: $this->llLIL11 =I14526; break; case I14528: $this->llLIL11 =$this->llLI1IL; break; }}function _characterDataPass4($parser, $data) {$this->TI1ITT1($parser, $data); if(!$this->llLILLI) {if($this->llLIL11 == $this->llLI1IL && $this->llLILl1 != I14528) {$data =$this->{$this->llLIL1l}($data); $this->I1IL1Ll[$this->llLI1II] =$data; }}$this->llLI1LI =2; }function _endElementPass4($parser, $name) {$this->llLI1LI =3; if(!$this->llLILLI) {switch($this->llLILl1) {case I14528: if($this->I1IL1Ll["IS_FOLDER"] == "false") {if(isset($this->Il11l1I[$this->I1IL1Ll[I14484]])) {foreach($this->Il11l1I[$this->I1IL1Ll[I14484]] as $I11LIL1=>$imgFile) {$this->I1IL1Ll["IMAGE_".$I11LIL1] =$imgFile[I14522]; }}if(isset($this->I1IL1Ll["TAX"])) {$this->I1IL1Ll[I14529] =$this->_config["tax"]["map"][$this->I1IL1Ll[I14529]]; }if(isset($this->llLI1l1[$this->I1IL1Ll[I14484]])) {$this->TI1ITIl($this->I1IL1Ll[I14484], I14490); unset($this->llLI1l1[$this->I1IL1Ll[I14484]]); $this->llLI1LL += $this->llLI1L1; }else {$this->TI1ITII("ITEM_UPDATE"); }if(isset($this->llLILL1[$this->I1IL1Ll[I14484]])) {$this->I1IL1Ll["FILES"] =$this->llLILL1[$this->I1IL1Ll[I14484]]; }$this->II1I1IL->{$this->II1I1I1[I14506]}($this->I1IL1Ll); }$this->llLIL11 =I14526; $this->I1IL1Ll =Array(); break; }if($this->llLILl1 != I14394) {$this->llLILl1 =intval(intval($this->llLILl1)/100); }}}function TI1ITII($llLllL1) {foreach($this->llLI1ll as $llLll1I=>$llLll1l) {$priceNum =$this->_config[I14476][I14530][$llLll1l[$this->_config[I14476][I14478]]]; if(mb_strlen($priceNum) >0){ foreach($llLll1l as $key=>$value) {$this->I1IL1Ll[$llLllL1][$priceNum]["PRICE_TYPE_".$key] =$value; }}}}function TI1ITIl($llLlllL, $llLllL1) {foreach($this->llLI1l1[$llLlllL] as $llLll1I=>$Il111lI) {if(isset($this->llLI1ll[$llLll1I]) && isset($this->_config[I14476][I14530][$this->llLI1ll[$llLll1I][$this->_config[I14476][I14478]]])) {$priceNum =$this->_config[I14476][I14530][$this->llLI1ll[$llLll1I][$this->_config[I14476][I14478]]]; $this->I1IL1Ll[$llLllL1][$priceNum] =$Il111lI +$this->llLI1ll[$llLll1I]; foreach($this->llLI1ll[$llLll1I] as $key=>$value) {$this->I1IL1Ll[$llLllL1][$priceNum]["PRICE_TYPE_".$key] =$value; }}}}function _PrepareTagNameStubCB($tagName) {return $tagName; }function _EncodeMbCB($tagName) {return mb_convert_encoding($tagName, 'UTF-8', $this->_config[I14458]["from"]); }function _PrepareTagNamePassCB($tagName) {$tagName =$this->{$this->llLIL1l}($tagName); $tagName =isset($this->_config[I14392][$this->llLIL11][$tagName]) ?$this->_config[I14392][$this->llLIL11][$tagName] :I14394; return $tagName; }function TT1TIIT() {if(is_array($this->Il11lL1[I14514]) && sizeof($this->Il11lL1[I14514]) >0) {foreach($this->Il11lL1[I14514] as $pid=>$childs) {if(!isset($this->Il11lL1[I14513][$pid])) {if(is_array($childs)) {foreach($childs as $child) {$this->Il11lL1[I14494][] =$child +Array(I14514=>$pid); unset($this->Il11lL1[I14513][$child[I14513]]); }}unset($this->Il11lL1[I14514][$pid]); }}$this->TT1TIIT(); }}function GetInfo() {$aInfo =Array( I14531=>"XML1cV8ExchangeDriver", "title"=>$this->words["title"], "supported_actions"=>Array(I14441, I14507), I14532=>Array("files"), "filemask"=>Array("*.xml"), I14533 => Array(), I14534 => Array("eshop_item", I14535, "eshop_user"), );return $aInfo; }function GetForm($type, &$formData) {parent::GetForm($type, $formData); $html =I14394; switch($type) {case I14441: break; case I14507: break; }$html =$this->gui->get($this->name.":".$type."_form", $formData); return $html; }function TI1ITI1(&$fp, $llLll1L, $llLll11, $llLlLII, $encode =I14394) {$llLlLIl =xml_parser_create($encode); $res =true; xml_set_object($llLlLIl, $this); xml_parser_set_option($llLlLIl, XML_OPTION_CASE_FOLDING, 0); xml_set_element_handler($llLlLIl, $llLll1L, $llLll11); xml_set_character_data_handler($llLlLIl, $llLlLII); fseek($fp, 0); while($data =fread($fp, $this->llLILlL)) {if(!xml_parse($llLlLIl, $data, feof($fp))) {$llLlLIL =xml_error_string(xml_get_error_code($llLlLIl)); if($llLlLIL) {$this->I1IL1Ll[I14501]["text"] =$llLlLIL; }else {$this->I1IL1Ll[I14501][I14536] =xml_get_error_code($llLlLIl); }$this->I1IL1Ll[I14501][I14509] =xml_get_current_line_number($llLlLIl); $this->I1IL1Ll[I14501]["char"] =xml_get_current_column_number($llLlLIl); $res =false; }}xml_parser_free($llLlLIl); return $res; }function TTIIIl1($II1ILLL, $aData, $II1IL1l, $II1IL1L) {$content =$this->llLI11I; $this->llLI11I =I14394; $Il111LI =false; switch ($II1ILLL) {case I14535: $aOrderData =$aData; if (!isset($aOrderData[I14495]) || empty($aOrderData[I14495])) {$aOrderData[I14495] =$this->TTIIllI(); $Il111LI =true; }else {$aOrderData[I14495] =trim($aOrderData[I14495], "{}"); }$II1LI1I =$aOrderData[I14495]; if (is_array($aData["items"])) {$Il111Ll =$aData["items"]; unset($aData[I14537]); $aItem =Array(); foreach ($Il111Ll as $llLlLI1=>$aItemData) {$aItem =$aItemData["ext_data"]["item_info"]; $aItem += $aItemData; $aItem["cur_price_total"] =$aItemData["ext_data"][I14538]["cur_price"] *$aItemData["qty"]; $taxItemValue =number_format($aItem["tax_item_value"], 4); $aItem["tax_item_string"] =$this->_config[I14539][I14530][$taxItemValue]; $aOrderData["items_list"] .= $this->gui->getDefPostf($this->name.":export_order_item", I14462.$this->II1I1lL, $aItem); }$aOrderData["items_list"] =$this->gui->getDefPostf($this->name.":export_order_items_list", I14462.$this->II1I1lL, $aOrderData); if (isset($this->_config[I14476][I14530][$aItem[I14540]])) {$aOrderData["type_price_id_external"] =$this->_config[I14476][I14530][$aItem[I14540]]; }}if (is_array($aOrderData["custinfo"])) {$llLlLlI =$aOrderData["custinfo"]; unset($aOrderData["custinfo"]); foreach ($llLlLlI as $fieldName=>$fieldValue) {$aOrderData[I14541.$fieldName] =$fieldValue; }}$aOrderData["order_date"] =str_replace(" ", "T", $aOrderData["real_order_date"]); $aOrderData["currency_id_external"] =$aOrderData[I14448][I14495]; $aOrderData["order_total"] =$aOrderData["total_tax"] +$aOrderData["total_price"] +$aOrderData["total_shipping"]; $content .= $this->gui->getDefPostf($this->name.I14542, I14462.$this->II1I1lL, $aOrderData); break; case "eshop_user": $aUserData =$aData; if (!isset($aUserData[I14495]) || empty($aUserData[I14495])) {$aUserData[I14495] =$this->TTIIllI(); $Il111LI =true; }else {$aUserData[I14495] =trim($aUserData[I14495], "{}"); }$II1LI1I =$aUserData[I14495]; $content .= $this->gui->getDefPostf($this->name.":export_user", I14462.$this->II1I1lL, $aUserData); break; }$res =Array(); $res["content"] =$this->{$this->llLIL1l}($content); $res[I14543] =$Il111LI; $res[I14495] =$II1LI1I; return $res; }function TTIIIlT($II1ILLL, &$aParams) {$II1ILLL =str_replace("eshop_", I14394, $II1ILLL); $this->_fields =$this->module->TTII111($II1ILLL."_export_fields"); return true; }}?>