<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       64731 xkqwqliupqwmgpntluslkgqzqzmmtpiwpimxssyrumuymkrimrppszuilptxusylxxgupnir
 */ ?><?php foreach(array(14544=>"]",14545=>"]Pt^",14546=>"",14547=>"|BZnSQx|PQn",14548=>"GZttQrn|rMPOt",14549=>"#whigzNb@",14550=>"#wURRqNwbms@",14551=>"#VqNshRwhsq@",14552=>"#~URj@",14553=>"#~hFFqRd@",14554=>"#~wzTqphRbms@",14555=>"#dohg@",14556=>"MIGHrt",14557=>'mdh+8859+1',14558=>'CY',14559=>"fMQJSD|IZG",14560=>"tZP",14561=>"01",14562=>"wURRqNwmqd",14563=>"06",14564=>"100106",14565=>"02",14566=>"gmwTURq",14567=>"VqNshR",14568=>"10",14569=>'utf8',14570=>"|QnSqJQIQnt",14571=>"MIP|SHCnJHZS|QrrHr",14572=>"QxGHrt",14573=>"SZtQ",14574=>"WurrQnWMQD|JMDt",14575=>"PQtwurrQnWBjMDt",14576=>'vZrD',14577=>"IQDDZPQ|nuIYQr",14578=>"bZnSQx`sMrQWt`wdV",14579=>"DuGGHrtQS|ZWtMHnD",14580=>'[`BIJ',14581=>"MIGHrt|IHSuJQD",14582=>"MnWJuSQS|MIGHrt|IHSuJQD",14583=>"|MIGHrt|MIP|tBGQD",14584=>"|MIGHrt|MIP|PQtD",14585=>"|MIGHrt|tMIQ|tBGQD",14586=>"nZIQ",14587=>"GrHWQDD|QrrHr",14588=>"20010",14589=>"WurrQnWB",14590=>"WZtMS",14591=>'GMWturQ|GZtO|CCC',14592=>"~",14593=>"RhhT|gzTo|ccc",14594=>"fZJDQ",14595=>'SMDWHunt|tBGQ',14596=>"MS",14597=>"WurrQnWB|MS",14598=>"GMWturQ",14599=>'bZnSQx`sMrQWt`wdV',14600=>'SrMvQrNZIQ',14601=>'tBGQ',14602=>"MD|nQC|MS|QxtQrnZJ",14603=>'QxGHrtTBGQ',14604=>'DQtNZIQ',14605=>"RUR",14606=>"MS|GZrQnt",14607=>'IHSmS',14608=>'QxGHrt',14609=>"mIPTBGQ",14610=>"mIPpQt",14611=>"TMIQTBGQ",14612=>"wZtwrQZtMnP",14613=>"QxGHrt|tBGQ",14614=>"WOQWK|ZvZMJZYMJMtB",14615=>"|QxGHrt|tBGQD",14616=>"%QxGHrt|tBGQ|rHC",14617=>"JMnQ",14618=>"vZJMS|GZttQrn",14619=>"2",14620=>"10010401",14621=>"10013",14622=>"WZJJYZWK|QrrHr",14623=>"DtZrtwZtQPHrMQD",14624=>"wzTqphRb",14625=>"zTTR|gzRqNTms",14626=>"GrHWQDD|MtQID",14627=>"vZJuQ",14628=>"URj",14629=>"|",14630=>"100104",14631=>"GrQGZrQ|WZtQPHrMQD",14632=>"ZWtMHn",14633=>"zTTR|ms",14634=>"zTTR|gRmwq",14635=>'MIGHrt',14636=>"ZSS",14637=>"OHDt",14638=>"fZMJ",14639=>"DtZtmIP",14640=>"zTTR|izmN|gRmwq",14641=>"zTTR|gmwTURq",14642=>"gRmwq|izg",14643=>"WHGB",14644=>"DQJQWt",14645=>"GMWturQ|WHGB",14646=>"||bzNsqX|",14647=>"ms|gzRqNT|qXTqRNzj",14648=>"bZnSQxwZtQPHrB",14649=>"kQQGmtQIwZtmS") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class YandexEshopDriver extends ExchangeDriver {public $aXmlReplaceChars; public $llLI11I; public $llLlLlL; public $_tmp; public $front; public $llLlLl1; public $Il11l1L; public $Il11l11; public $IlLl11L; public $llLlLLI; public $_config; public $llLILlL; public $llLI1Il; public $llLILLL; public $llLI1II; public $llLlLLl; public $llLlLLL; public $llLI1LI; public $llLILLI; public $llLlLL1; public $llLI1lI; public $llLlL1I; public $llLlL1l; public $Il11l1I; public $llLlL1L; public $llLlL11; public $llLl1II; public $llLl1Il; public $llLIL1l; public $llLl1IL; public $llLl1I1; public $ll11IlL =false; public $ll11Il1; protected $ll11ILI; function YandexEshopDriver(&$gui, &$module) {parent::ExchangeDriver($gui, $module); $this->name ="YandexEshopDriver"; $this->II1LIIL =0; $this->Il11l11 =1; $this->Il11l1L =0; $this->llLI11I =""; $this->llLlLlL =false; $this->aXmlReplaceChars =array( I14544 => "&amp;", "<" => "&lt;", ">" => I14545, "\"" => "&quot;" );$this->_tmp =""; $this->llLlLl1 =array("type" => I14546, "category_field" => I14546); $this->front =null; $this->IlLl11L =array(); $this->llLlLLI =array(); $this->_config =I14546; $this->llLILlL =524288; $this->llLI1Il ="0"; $this->llLILLL =array(); $this->llLI1II =I14546; $this->llLlLLl =I14546; $this->llLlLLL =I14546; $this->llLI1LI =0; $this->llLILLI =false; $this->_parseErrorInfo =false; $this->llLlLL1 =false; $this->llLI1lI =array(); $this->llLlL1I =array(); $this->llLlL1l =I14546; $this->Il11l1I =array(); $this->llLlL1L =array("YandexCategory" => false, "KeepItemCatId" => false); $this->llLlL11 =I14547; $this->llLl1II =null; $this->llLl1Il =array( "valid_pattern" => array ("|^<YML_CATALOG [^><]*>|si", "|^<CURRENCY [^></]*/>|si", "|^<CATEGORY [^><]*>|si", "|^<OFFER [^><]*>|si", "|^<\?xml[^<>]*\?>|si", "|^<!DOCTYPE[^><]*>|si",), "pattern_left" => "|^[^><]*<|is", I14548 => "|^[^><]*>|is", "valid_tags" => array ("<URL>", "<NAME>", I14549, "<CURRENCIES>", "<CATEGORIES>", "<OFFERS>", "<PRICE>", I14550, "<CATEGORYID>", "<PICTURE>", "<TYPEPREFIX>", "<VENDOR>", I14551, "<MODEL>", "<DESCRIPTION>", "</YML_CATALOG>", "</SHOP>", I14552, "</COMPANY>", "</NAME>", "</CURRENCIES>", "</CATEGORIES>", I14553, "</CATEGORY>", "</OFFER>", "</PRICE>", "</CURRENCYID>", I14554, "</PICTURE>", "</TYPEPREFIX>", "</MODEL>", "</DESCRIPTION>", I14555, "</VENDOR>", "</VENDORCODE>"), "replaceTag" => I14546, );$this->llLIL1l ="EncodeStubCB"; }function Init($type) {$res =parent::Init($type); return $res; }function Start($actionType, &$aParams) {$II1LIlI =parent::Start($actionType, $aParams); if ($II1LIlI) {if ($actionType == I14556) {$this->TTIIlIl(0, 100); $dataSource =$aParams["data_source"]; if (file_exists($dataSource)) {$this->II1LIIL =filesize($dataSource); $II1LIlI =$this->TIT1lTl($actionType); if ($II1LIlI && ($fp =@fopen($dataSource, 'r'))) {$data =fread($fp, $this->llLILlL); if (preg_match('/(<\?xml[^>]+encoding\s*=\s*")([^"]+)"/s', $data, $matches) && !in_array(mb_strtoupper($llLl1lI =$matches[2]), array ('UTF-8', I14557, 'US-ASCII')) ){$llLl1ll ='UTF-8'; $this->llLIL1l ="_EncodeMbCB"; $this->llLl1I1 =$llLl1ll; $this->llLl1IL =$llLl1lI; if ($II1LIlI) {$dataSource .= '.enc'; $llLl1lL =fopen($dataSource, I14558); $llLl1l1 =1; $data =str_replace($matches[0], $matches[1] .$llLl1ll .'"', $data); do {$I1ll11l =$this->{$this->llLIL1l}($data); fwrite($llLl1lL, $I1ll11l); $this->TTIIlIl(0, $this->II1LIIL); }while ($data =fread($fp, $this->llLILlL)); fclose($llLl1lL); }}fclose($fp); }if ($II1LIlI && ($fp =@fopen($dataSource, "r"))) {$II1LIlI =$this->TTIIlIT(array("action"=>"common")); if ($II1LIlI) {$this->_config =$this->module->TTII111(I14559, true); $this->llLILLL =array( I14546 => array("tag" => array("YML_CATALOG" => "10")), "10" => array(I14560 => array("SHOP" => "01")), "1001" => array(I14560 => array("NAME" => I14561, "COMPANY" => "02", "URL" => "03", I14562 => "04", "CATEGORIES" => "05", "OFFERS" => I14563)), "100104" => array(I14560 => array("CURRENCY" => I14561)), "100105" => array(I14560 => array("CATEGORY" => I14561)), I14564 => array(I14560 => array("OFFER" => I14561)), "10010601" => array(I14560 => array("URL" => I14561, "PRICE" => I14565, "CURRENCYID" => "03", "CATEGORYID" => "04", I14566 => "05", "NAME" => I14563, "TYPEPREFIX" => "07", I14567 => "08", "VENDORCODE" => "09", "MODEL" => I14568, "DESCRIPTION" => "11") ));}if ($this->llLlL1L["ImgType"] == "import_img_download") $this->Il11l11 =2/3; $this->TI1T11l(); $charset =$this->module->db->getCharset(true); $charset =$charset[0]; if (!in_array(mb_strtolower($charset), array (I14569, 'latin1'))) {$this->_xmlParserTargetEncoding =$charset; $this->llLl1IL ="utf-8"; $this->llLl1I1 =$charset; $this->llLIL1l ="_EncodeMbCB"; }if (!$this->TI1ITI1($fp, "_startElement", I14570, "_characterData")) {$II1LIlI =false; $this->TTIIlT1("10013", "data_parse_error", $this->_parseErrorInfo); }if ($this->llLILLI) {$II1LIlI =false; }fclose($fp); $this->Il11l1L =$this->Il11l11*$this->II1LIIL; $this->TTIIlIl($this->Il11l1L, $this->II1LIIL); if (is_array($this->Il11l1I) && count($this->Il11l1I) >0) {$this->Il11l11 =($this->II1LIIL -$this->Il11l1L) /count($this->Il11l1I); if (!$this->TT1TITT()) {$this->TTIIlT1("10013", I14571); }}$this->TTIIlIl($this->II1LIIL, $this->II1LIIL); if (isset($llLl1l1)) {@unlink($dataSource); }}else if ($II1LIlI) {$this->TTIIlT1("10011", "data_open_error"); $II1LIlI =false; }}else {$this->TTIIlT1("10010", "data_not_found"); $II1LIlI =false; }}elseif($actionType == I14572) {$II1LIlI =$this->TIT1lTl($actionType); if($II1LIlI) {$this->ll11Il1 =$this->module->TTII111('apply_discount_on_export'); $llLl1LI =I14546; if ($this->module->module->IssetOption($this->name."_export_shop_name")) $llLl1LI =$this->module->module->GetOption($this->name."_export_shop_name"); if ($llLl1LI == I14546) $llLl1LI =$this->module->cms->Core->GetOption("company_name"); $aData =array( I14573 => date("Y-m-d H:i"), "shop_name" => $this->module->cms->htmlchars($llLl1LI), "company_name" => $this->module->cms->htmlchars($this->module->cms->Core->GetOption("company_name")), I14574 => I14546, "categories_list" => I14546, );$II1LIlI =$this->module->oEshop->currencyEnable; if ($this->ll11Il1) {$tmp =$this->module->oEshop->cms->Side; $this->module->oEshop->cms->Side ='front'; $this->module->oEshop->TT11lI1($this->module->oEshop->ownerName); $this->module->oEshop->cms->Side =$tmp; }if(!$II1LIlI) {$this->TTIIlT1("10020", "rur_currency_is_missing"); }}if($II1LIlI) {$this->llLlLlL =true; $this->module->oEshop->setCallbackObject($this); $this->module->oEshop->setCallbackMethod(I14575, "_GetCurrenciesListCB"); $this->module->oEshop->getCurrencyList($aData[I14574]); if($this->llLlLlL) {$II1LIlI =false; $this->TTIIlT1("10020", "rur_currency_is_missing"); }}if($II1LIlI) {$this->_tmp =I14546; $this->module->oEshop->tree->setCallbackObject($this); $this->module->oEshop->tree->setCallbackMethod("createChildsArrayFlt", "_createChildsArrayFltCB"); $this->module->oEshop->tree->addFilter("public", "c.public=1"); $this->module->oEshop->tree->createChildsArrayFlt("name"); $aData["categories_list"] =$this->_tmp; if($aParams[I14576]['export_type'] != "Yandex.Direct.CSV") {$this->llLI11I =$this->gui->getAbsDefPostf($this->name.":export_header", $this->II1I1lL, $aParams["vars"] +$aData +array(I14577=>$this->II1I1ll)); }$aParams["driver"][I14577] =$this->II1I1ll; require_once $GLOBALS['CLASSES_PATH'] .'Front.php'; $this->front =new Front($this->module->cms->Core, I14546, true); $this->front->constructorPostActions(); }}}return $II1LIlI; }function End($actionType) {$res =parent::End($actionType); if($actionType == I14556) {}elseif($actionType == I14572 && $this->llLlLl1["type"] != I14578) {$res =$this->llLI11I.$this->gui->getAbsDefPostf($this->name.":export_footer", $this->II1I1lL, I14546); }if($actionType == I14572 && !$this->ll11IlL){ }return $res; }function GetInfo() {$aInfo =array( "name"=>$this->name, "title"=>$this->words["title"], I14579=>array(I14556, I14572), "pathtypes"=>array("files"), "filemask"=>array("*.xml", I14580), I14581 => array(), I14582 => array("eshop_item"), "use_front_filter" => array("eshop_item"), );return $aInfo; }function GetForm($type, &$formData) {parent::GetForm($type, $formData); switch ($type) {case I14556: $formData["import_img_error"] =1; if ($this->module->module->IssetProperty($this->name.I14583)) {$aTypes =$this->module->module->GetProperty($this->name.I14583); if (is_array($aTypes) && sizeof($aTypes) >0) {$formData["import_img_type_rows"] =I14546; $formData["import_img_error"] =0; foreach($aTypes as $key => $value) {$llLl1Ll =array( "type" => $value, "name" => ($this->words[$value]? $this->words[$value] :$value), );$formData["import_img_type_rows"] .= $this->gui->get($this->name.":import_img_type_row", $llLl1Ll); }}}else $formData["import_img_error"] =1; if ($formData["import_img_error"] == 0 && $this->module->module->IssetProperty($this->name."_import_img_gets")) {$aTypes =$this->module->module->GetProperty($this->name.I14584); if (is_array($aTypes) && sizeof($aTypes) >0) {$formData["import_img_get_rows"] =I14546; $formData["import_img_error"] =0; foreach($aTypes as $key => $value) {$llLl1Ll =array( "type" => $value, "name" => ($this->words[$value]? $this->words[$value] :$value), );$formData["import_img_get_rows"] .= $this->gui->get($this->name.":import_img_get_row", $llLl1Ll); }}}else $formData["import_img_error"] =1; if ($formData["import_img_error"] == 0 && $this->module->module->IssetProperty($this->name."_import_time_types")) {$aTypes =$this->module->module->GetProperty($this->name.I14585); if (is_array($aTypes) && sizeof($aTypes) >0) {$formData["import_time_type_rows"] =I14546; $formData["import_img_error"] =0; foreach($aTypes as $key => $value) {$llLl1Ll =array( "type" => $value, "name" => ((isset($this->words[$value]) && $this->words[$value]) ?$this->words[$value] :$value), );$formData["import_time_type_rows"] .= $this->gui->get($this->name.":import_time_type_row", $llLl1Ll); }}}else $formData["import_img_error"] =1; $formData["import_create_cat_arr_error"] =1; if ($this->module->module->IssetProperty($this->name."_import_create_cat_arr")) {$aTypes =$this->module->module->GetProperty($this->name."_import_create_cat_arr"); $llLl1LL =$this->module->module->GetOption($this->name."_import_create_cat"); if (is_array($aTypes) && sizeof($aTypes) >0) {$formData["import_create_cat_arr_rows"] =I14546; $formData["import_create_cat_arr_error"] =0; foreach($aTypes as $key => $value) {$llLl1Ll =array( "type" => $value, I14586 => ($this->words[$value]? $this->words[$value] :$value), "select" => ($llLl1LL == $value? "selected" :I14546), );$formData["import_create_cat_arr_rows"] .= $this->gui->get($this->name.":import_create_cat_arr_row", $llLl1Ll); }}}else $formData["import_create_cat_arr_error"] =1; break; case I14572: $this->TIT1lTI($formData); break; }$html =$this->gui->get($this->name.":".$type."_form", $formData); return $html; }function TTIIIl1($II1ILLL, $aData, $II1IL1l, $II1IL1L) {$content =$this->llLI11I; $this->llLI11I =I14546; $Il111LI =false; switch ($II1ILLL) {case "eshop_item": if ($aData["id_category"] == $this->module->oEshop->rootCatId) {$this->II1I1IL->{$this->II1I1I1[I14587]}($this->II1I1IL->II1llIL, I14572, $this->name == 'YandexEshopDriver' ?"miss_main_cat" :"miss_main_cat_items", I14546, true); $this->II1I1IL->II1llIL->Engine->SetLastError(1, "Item export failed"); $this->TTIIlT1(I14588, "item_export_fail"); break; }$II1LI1I =$aData["id_external"]; for($i=-1; $i<$this->module->oEshop->numPrices; $i++) {$priceNum =$this->module->oEshop->priceFields[$i]; if(doubleval($aData["price".$priceNum]) >0) {$currency =I14546; if($i == -1) {$currency =$this->module->oEshop->baseCurrency; }else {$I1LLLIL =$this->module->oEshop->TT11TlT($aData["cat_price".$priceNum]); $currency =$I1LLLIL[I14589]; }if($currency != I14546) {$aNavData =array(); $aNavData["id"] =$aData["id"]; $aNavData["id_sublink"] =$aData["sublink"]; $aNavData[I14590] =$aData["cat_id"]; $aNavData["catid_sublink"] =$aData["cat_sublink"]; $aData += $this->front->ApplyNav($aNavData); $picture =''; if(!empty($aData[I14591])){ $picture =$aData[I14591]; }else{ $llLl1L1 =parse_url($aData["picture_src"]); $picture =ltrim($llLl1L1['path'],'/'); $aPicture =explode("/", $picture); foreach ($aPicture as $llLl11I => $llLl11l) $aPicture[$llLl11I] =rawurlencode($llLl11l); $picture =implode(I14592, $aPicture); if(!empty($llLl1L1['query'])){ $picture .= '?' .htmlspecialchars($llLl1L1['query'], ENT_COMPAT, 'UTF-8'); }if(!empty($picture)){ $picture =$GLOBALS[I14593].$picture; }}$availability ="true"; if ($this->llLlLl1["check_availability"]) $availability =($aData["rest"] >0)? "true":I14594; $description =$this->_escapeXmlChars(unhtmlentities($aData["description"], true)); $description =str_replace("http://", I14546, $description); $price =doubleval($aData["price".$priceNum]); if ($this->ll11Il1) {$price =$this->module->oEshop->TT11ITI( $price, $aData['discount'], $aData[I14595], 1, array ('id_discount' => $aData['id_discount']) );}$aItemData =array( "type" => $this->llLlLl1["type"], I14596 => $aData[I14596], "url" => $GLOBALS[I14593].$this->module->cms->Core->GetModFrontLink($this->module->oEshop->ownerName."_item").$aData["nav_data"], "price" => $this->module->oEshop->convertCurrency($price, $this->module->oEshop->baseCurrency, $currency), I14597 => $currency, "category_id" => $aData["id_category"], "category_path" => $aData[$this->llLlLl1["category_field"]], I14598 => $picture, "model" => $this->_escapeXmlChars(unhtmlentities($aData[I14586], true)), I14586 => $this->_escapeXmlChars(unhtmlentities($aData[I14586], true)), "description" => $description, "availability" => strval($availability), );$aItemData += $aData; if($this->llLlLl1["type"] == I14599) {if(!$II1LI1I) {return array(); }$aItemData["id_external"] =$II1LI1I; $aItemData["url"] =trim($aItemData["url"], "?"); }$aEvent =array( I14600 => $this->name, 'exchangeType' => 'export', 'exportType' => $this->llLlLl1['type'], I14601 => 'product', 'aData' => &$aItemData );AMI_Event::fire('on_dataexchange_tpl_render', $aEvent, AMI_Event::MOD_ANY); $content .= $this->gui->get($this->TIT1lT1($II1ILLL), $aItemData); break; }}}break; }$res =array(); $this->ll11IlL =true; $res["content"] =$content; $res[I14602] =$Il111LI; $res["id_external"] =$II1LI1I; return $res; }function TIT1lT1($modId){ $setName ='item_row_' .str_replace('.', '_', $this->llLlLl1[I14601]); $aEvent =array( I14600 => $this->name, I14603 => $this->llLlLl1[I14601], 'exchangeType' => 'export', 'modId' => $modId, I14601 => 'product', I14604 => &$setName );AMI_Event::fire('on_dataexchange_get_tpl_set_name', $aEvent, AMI_Event::MOD_ANY); return $this->name .':' .$setName; }function TTIIIlT($II1ILLL, &$aParams) {$this->front->InitNavSettings($II1ILLL); $II1ILLL =str_replace("eshop_", I14546, $II1ILLL); $this->_fields =$this->module->TTII111($II1ILLL."_export_fields"); return true; }function _GetCurrenciesListCB(&$result, $code, $currency) {if($code == I14605) {$this->llLlLlL =false; }$currency["rate"] =$this->module->oEshop->convertCurrency(1, $code, I14605); $currency["code"] =$code; $result .= $this->gui->getAbsDefPostf($this->name.":currency_row", $this->II1I1lL, $currency); }function _createChildsArrayFltCB(&$II11L1l, &$record, &$Il11L1l) {if($this->module->oEshop->rootCatId != $record[I14596]) {$aData =array( I14596 => $record[I14596], I14586 => $this->_escapeXmlChars(unhtmlentities($record[I14586])), "id_parent" => $record[I14606], "is_root_parent" => ($this->module->oEshop->rootCatId == $record[I14606])? 1: 0, );$setName ="category_row"; $aEvent =array( I14600 => $this->name, 'exchangeType' => 'export', I14603 => $this->llLlLl1[I14601], I14607 => 'eshop_cat', I14601 => 'category', I14604 => &$setName );AMI_Event::fire('on_dataexchange_get_tpl_set_name', $aEvent, AMI_Event::MOD_ANY); $aEvent =array( I14600 => $this->name, 'exchangeType' => I14608, I14603 => $this->llLlLl1[I14601], I14601 => 'category', 'aData' => &$aData );AMI_Event::fire('on_dataexchange_tpl_render', $aEvent, AMI_Event::MOD_ANY); $this->_tmp .= $this->gui->getAbsDefPostf($this->name.":" .$setName, $this->II1I1lL, $aData); }}function _escapeXmlChars($str){ $str =preg_replace('/<script.*?<\/script>/si', '', $str); return strtr(TlT1Tl1($str, " "), $this->aXmlReplaceChars); }function TI1ITl1(&$str) {return strtr($str, $this->ll11ILI); }function TIT1lTl($type) {$II1LIlI =true; switch ($type) {case I14556: $this->llLlL1L["ImgType"] =$this->module->cms->Vars["import_img_type"]; if(!in_array($this->llLlL1L[I14609], $this->module->module->GetProperty($this->name.I14583))) {$II1LIlI =false; $this->TTIIlT1("10020", "wrong_import_img"); }if ($II1LIlI) {$this->llLlL1L["ImgGet"] =$this->module->cms->Vars["import_img_get"]; if(!in_array($this->llLlL1L[I14610], $this->module->module->GetProperty($this->name.I14584))) {$II1LIlI =false; $this->TTIIlT1("10020", "wrong_import_img"); }}if ($II1LIlI) {$this->llLlL1L["TimeType"] =$this->module->cms->Vars["import_time_type"]; if(!in_array($this->llLlL1L[I14611], $this->module->module->GetProperty($this->name.I14585))) {$II1LIlI =false; $this->TTIIlT1("10020", "wrong_import_img"); }}if ($II1LIlI) {$this->llLlL1L["CatCreating"] =I14546; if (isset($this->module->cms->Vars["import_create_cat_arr"])) $this->llLlL1L[I14612] =$this->module->cms->Vars["import_create_cat_arr"]; }break; case I14572: if (isset($this->module->cms->Vars["export_type"]) && $this->module->module->IssetOption($this->name."_export_types") )$this->llLlLl1["type"] =$this->module->cms->Vars[I14613]; if (!in_array($this->llLlLl1["type"], $this->module->module->GetAOption($this->name."_export_types"))) {$II1LIlI =false; $this->TTIIlT1("10020", "wrong_export_type"); }$this->llLlLl1[I14614] =false; if ($this->module->module->IssetOption($this->name."_export_check_availability") && ($this->module->module->GetOption($this->name."_export_check_availability") == "check_availability_true") )$this->llLlLl1[I14614] =true; break; }return $II1LIlI; }function TIT1lTI(&$formData) {if ($this->module->module->IssetOption($this->name."_export_types")) {$aTypes =$this->module->module->GetAOption($this->name.I14615); $formData["export_type_rows"] =I14546; $formData["export_type_error"] =0; if(is_array($aTypes) && sizeof($aTypes) >0) {foreach($aTypes as $key => $value) {$llLl1Ll =array( "type" => $value, I14586 => ((isset($this->words[$value]) && $this->words[$value]) ?$this->words[$value] :$value), );$formData["export_type_rows"] .= $this->gui->get($this->name.I14616, $llLl1Ll); }}else {$formData["export_type_error"] =1; }}else {$formData["export_type_error"] =1; }}function TI1ITI1(&$fp, $llLl11L, $llLl111, $llLLIII, $encode =I14546) {$this->Il11l11 =$this->Il11l11/2; $res =true; $llLlLIl =xml_parser_create($encode); xml_set_object($llLlLIl, $this); xml_set_element_handler($llLlLIl, $llLl11L, $llLl111); xml_set_character_data_handler($llLlLIl, $llLLIII); fseek($fp, 0); $llLLIIl =false; $llLLIIL =I14546; $llLLII1 =I14546; while($data =fread($fp, $this->llLILlL)) {$data =$llLLII1.$data; $llLLIIl =$this->TI1IT1T($data, $llLLIlI, $llLLII1); $this->Il11l1L =$this->Il11l1L +mb_strlen($llLLIlI) *$this->Il11l11; $llLLIIL .= $llLLIlI; if (!$llLLIIl) {if(!xml_parse($llLlLIl, $llLLIIL, feof($fp))) {$errCode =xml_get_error_code($llLlLIl); $llLlLIL =xml_error_string($errCode); if(!$llLlLIL) {$llLlLIL =$errCode; }if(!$this->_parseErrorInfo["text"] =$this->words[$llLlLIL]) {$this->_parseErrorInfo["text"] =$llLlLIL; }$this->_parseErrorInfo[I14617] =xml_get_current_line_number($llLlLIl); $this->_parseErrorInfo["char"] =xml_get_current_column_number($llLlLIl); $res =false; break; }$llLLIIL =I14546; }}xml_parser_free($llLlLIl); $this->Il11l11 =$this->Il11l11 *2; return $res; }function TI1IT1T($data, &$llLLIlI, &$llLLII1){ $llLLIlI =I14546; $llLLII1 =I14546; $llLLIIl =false; $process =(mb_strlen($data) >0); while ($process) {set_time_limit($this->module->I11l1l1); $process =true; $llLLIll =I14546; $llLLIlL =I14546; $llLLIl1 =I14546; $tag =I14546; $llLLILI =array(); $llLLILl =array(); $llLLILL =array(); $llLLIL1 =array(); $llLLI1I =array(); $llLLI1l =false; $llLLI1L =false; $llLLI11 =false; $llLLlII =false; $llLLlIl =false; if ($llLLI1l =preg_match($this->llLl1Il["pattern_left"], $data, $llLLILI, PREG_OFFSET_CAPTURE)) {$llLLIll =mb_substr($llLLILI[0][0], 0, -1); $tag ="<"; $llLLIl1 =mb_substr($data, mb_strlen($llLLILI[0][0])); if ($llLLI11 =preg_match($this->llLl1Il[I14548], $llLLIl1, $llLLILL, PREG_OFFSET_CAPTURE)) {$tag .= $llLLILL[0][0]; $llLLIl1 =mb_substr($llLLIl1, mb_strlen($llLLILL[0][0])); if (!$llLLlIl =in_array(mb_strtoupper($tag), $this->llLl1Il["valid_tags"])) {foreach ($this->llLl1Il[I14618] as $key => $pattern) {if ($llLLlIl =preg_match($pattern, $tag, $llLLI1I, PREG_OFFSET_CAPTURE)) {break; }}if (!$llLLlIl) {$tag =$this->llLl1Il["replaceTag"]; }}$llLLIlI .= $llLLIll.$tag; $data =$llLLIl1; }else {if ($llLLI1L =preg_match($this->llLl1Il["pattern_left"], $llLLIl1, $llLLILl, PREG_OFFSET_CAPTURE)) {$data =$llLLIll.$llLLIl1; }else {$process =false; $llLLII1 =$data; $llLLIIl =true; }}}else {if ($llLLlII =preg_match($this->llLl1Il[I14548], $data, $llLLIL1, PREG_OFFSET_CAPTURE)) {$data =mb_substr($data, 0, mb_strlen($llLLIL1[0][0])-1).mb_substr($data, mb_strlen($llLLIL1[0][0])); }else {$llLLIlI .= $data; $process =false; }}$this->TTIIlIl($this->Il11l1L +$this->Il11l11 *mb_strlen($llLLIlI), $this->II1LIIL); }return $llLLIIl; }function TI1ITTI($parser, $errCode, $text, $llLlll1) {$aInfo =array(I14617=>xml_get_current_line_number($parser), "element"=>$llLlll1); if($errCode >1 && $errCode <1001) {$this->llLILLI =true; }}function TI1T11l() {$this->llLI1LI =0; $this->llLI1Ll =I14546; $this->llLILl1 =I14546; $this->IlLl11L =array(); $this->llLlLLI =array();; $this->llLILLI =false; $this->llLI1II =I14546; $this->llLlLLl =I14546; $this->llLlLLL =I14546; $this->llLI1lI =array();; }function TI1ITTl(&$parser, $name, $attrs) {$this->llLI1LI =1; set_time_limit(25); $this->TTIIlIl($this->Il11l1L +$this->llLI1LL *xml_get_current_byte_index($parser), $this->II1LIIL); if (!$this->llLlLL1) {$this->llLlLLl =$name; $llLLlIL=I14546; $this->llLlLL1 =false; if(isset($this->llLILLL[$this->llLILl1])) {if(isset($this->llLILLL[$this->llLILl1][I14560][mb_strtoupper($name)])) {$llLLlIL =$this->llLILLL[$this->llLILl1][I14560][mb_strtoupper($name)]; }else {$llLLlIL =$this->llLI1Il; $this->llLlLL1 =true; }}else {$llLLlIL =$this->llLI1Il; }$this->llLILl1 .= $llLLlIL; }}function TI1ITT1($parser, &$data) {if (isset($this->_xmlParserTargetEncoding)) {$data =$this->{$this->llLIL1l}($data); }switch ($this->llLI1LI) {case "1": $this->llLI1Ll =$data; break; case I14619: $this->llLI1Ll .= $data; $data =$this->llLI1Ll; break; case "3": $data =$this->llLI1Ll; break; }}function _startElement($parser, $name, $attrs) {$this->TI1ITTl($parser, $name, $attrs); if (!$this->llLlLL1 && !$this->llLILLI) {switch($this->llLILl1) {case "100104": $this->llLI1II =I14562; $this->llLI1lI[] ="-"; $this->llLlLLL ="startCurrencies"; break; case I14620: $this->llLI1II ="CURRENCY"; $this->IlLl11L =array(); foreach ($attrs as $key => $val) $this->IlLl11L["ATTR_".$key] =$val; break; case "100105": if ($this->llLlLLL != "doneCurrencies") {$this->llLILLI =true; $this->TTIIlT1(I14621, "data_parse_error"); }else {if (!$this->TTIIlIT(array("action"=>"prepare_categories"))) {$this->llLILLI =true; $this->TTIIlT1("10012", I14622); }if (!$this->llLILLI && !$this->TTIIlIT(array("action"=>"process_categories"))) {$this->llLILLI =true; $this->TTIIlT1("10012", I14622); }else {$this->llLI1II ="CATEGORIES"; $this->llLlLLL =I14623; $this->TI1IITT(); }if ($this->llLlL1L["YandexCategory"]) $this->llLlLLL ="doneCategories"; }break; case "10010501": if (!$this->llLlL1L["YandexCategory"]) {$this->llLI1II =I14624; $this->IlLl11L =array(); foreach ($attrs as $key => $val) $this->IlLl11L["ATTR_".$key] =$this->llLlL11."_".$val; if ($this->IlLl11L["ATTR_PARENTID"] == $this->llLlL11."_0" || $this->IlLl11L[I14625] == $this->llLlL11."_") $this->IlLl11L[I14625] =I14546; }break; case I14564: if ($this->llLlLLL != "doneCategories") {$this->llLILLI =true; $this->TTIIlT1(I14621, "data_parse_error"); }else {if (!$this->TTIIlIT(array("action"=>I14626))) {$this->llLILLI =true; $this->TTIIlT1("10012", I14622); }else {unset($this->II1I1IL->II1llIL->Engine->ext['ext_rating']); $this->llLI1II ="OFFERS"; $this->llLlL1l =array("foundBaseCurrency" => false, I14627 => I14546); }}break; case "10010601": $this->llLI1II ="OFFER"; $this->IlLl11L =array(); foreach ($attrs as $key => $val) $this->IlLl11L["ATTR_".$key] =$val; break; case "100103": $this->llLI1II =I14628; $this->IlLl11L =array(); break; }}}function _characterData($parser, $data) {if ($this->llLI1LI == 3) return; if (!$this->llLILLI && !$this->llLlLL1) {$this->TI1ITT1($parser, $data); switch ($this->llLI1II) {case "OFFER": if ($this->llLI1II != $this->llLlLLl) {$this->IlLl11L["ATTR_".$this->llLlLLl] =trim($data); }break; case I14624: $this->IlLl11L["TAG_".$this->llLlLLl] =trim($data); break; case I14628: $data =parse_url(trim($data)); $data =str_replace(".", I14629, $data["host"]); $this->llLlL11 =$data; break; }}$this->llLI1LI =2; }function _endElement($parser, $name) {$this->llLI1LI =3; if (!$this->llLlLL1 && !$this->llLILLI) {switch($this->llLILl1) {case I14620: $llLLlI1 =$this->TT1TIT1($this->_config["CURRENCY"], $this->IlLl11L); if ($this->module->oEshop->baseCurrency != $this->IlLl11L["ATTR_ID"]) {$this->llLI1lI[] =$this->IlLl11L; }$this->llLlLLL ="doneCurrencies"; break; case I14630: unset($this->llLI1lI[0]); break; case "10010501": if (!$this->llLlL1L["YandexCategory"]) {$this->IlLl11L["SET_PRICE"] =array(); if ($this->IlLl11L[I14625] == I14546 && $this->llLlL1L["CAT_ID_PARENT_EXTERNAL"] != I14546) {$this->IlLl11L[I14625] =$this->llLlL1L["CAT_ID_PARENT_EXTERNAL"]; }$aCatData =$this->TT1TIT1($this->_config[I14624], $this->IlLl11L); $aCatData["id_external"] =$aCatData["ID_EXTERNAL"]; $aCatData["id_parent_external"] =$aCatData["ID_PARENT_EXTERNAL"]; $this->II1I1IL->{$this->II1I1I1[I14631]}($aCatData, true); $this->II1I1IL->{$this->II1I1I1["process_categories"]}($aCatData, true); $this->llLlLLL ="doneCategories"; }break; case "100105": if (!$this->llLlL1L["YandexCategory"]) {$this->TTIIlII(array(I14632=>"process_categories")); $this->TTIIlII(array(I14632=>I14631)); }break; case I14564: if ($this->llLlLLI["ATTR_ID"] != I14546){ $this->TTTl1TT(); }$this->TTIIlII(array(I14632=>I14626)); break; case "10010601": if ($this->IlLl11L["ATTR_ID"] != I14546 ){if ($this->llLlLLI[I14633] != I14546 && $this->llLlLLI[I14633] != $this->IlLl11L[I14633]) {$this->TTTl1TT(); $this->llLlL1l =array("foundBaseCurrency" => false, I14627 => I14546); }if (!$this->llLlL1l["foundBaseCurrency"]) {if ($this->IlLl11L["ATTR_CURRENCYID"] != $this->module->oEshop->baseCurrency) {foreach ($this->llLI1lI as $key => $llLLllI) {if ($llLLllI[I14633] == $this->IlLl11L["ATTR_CURRENCYID"]) {$this->llLlL1l[I14627] =floatval($this->IlLl11L[I14634])*floatval($llLLllI["ATTR_RATE"]); break; }}}else {$this->llLlL1l[I14627] =floatval($this->IlLl11L[I14634]); $this->llLlL1l["foundBaseCurrency"] =true; }}$this->llLlLLI =$this->IlLl11L; }break; }}if(!$this->llLILLI) {if ($this->llLlLL1 && $this->llLlLLl == $name) {$this->llLILl1 =intval(intval($this->llLILl1)/10); $this->llLlLL1 =false; }elseif (!$this->llLlLL1) $this->llLILl1 =intval(intval($this->llLILl1)/100); }}function TI1IT1I($fileName) {set_time_limit($this->llLlL1L[I14611]); $II1LIlI =true; $bytes =0; $llLLlll =false; $this->_parseErrorInfo["statImg"] ="none"; $targetName =$this->TTIIll1($fileName); $aEvent =array( I14601 => I14635, 'driver' => $this->name, I14607 => $this->module->II1llIL->Name, 'sourceURL' => &$fileName, 'targetName' => &$targetName );AMI_Event::fire( 'v5_on_dataexchange_download_image', $aEvent, AMI_Event::MOD_ANY );$targetName =$this->module->cms->TTITI11($targetName); $targetName =$GLOBALS["CUSTOM_PICTURES_PATH"].$this->module->I11lLl1.I14592. $targetName; $fileName =$this->TI1ITl1($fileName); if($this->llLlL11) $fileName =str_replace($this->llLlL11.I14629, I14546, $fileName); switch ($this->llLlL1L[I14610]) {case "import_img_get_all": $llLLlll =true; if (file_exists($targetName)) $this->_parseErrorInfo["statImg"] ="apply"; else $this->_parseErrorInfo["statImg"] =I14636; break; case "import_img_get_new": if (!file_exists($targetName)) {$llLLlll =true; $this->_parseErrorInfo["statImg"] =I14636; }break; }if ($llLLlll) {$llLLllL =parse_url($fileName); if (($llLLllL["scheme"] != "http") || (empty($llLLllL[I14637])) || (empty($llLLllL["path"]))) {$II1LIlI =false; $this->_parseErrorInfo["statImg"] ="fail"; }if (!$this->llLl1II->download($fileName, $targetName)) {$II1LIlI =false; $this->_parseErrorInfo["statImg"] =I14638; }}return $II1LIlI; }function TT1TITT() {$this->ll11ILI =array_flip($this->aXmlReplaceChars); $II1LIlI =$this->TTIIlIT(array(I14632=>I14626)); if ($II1LIlI) {require_once $GLOBALS['CLASSES_PATH'] .'HttpDownloader.php'; $this->llLl1II =new HttpDownloader(); $llLLll1 =0; foreach($this->Il11l1I as $fileName => $llLLlLI ){$llLLll1++; if ($this->TI1IT1I ($fileName)) {$this->II1I1IL->{$this->II1I1I1["prepare_images"]}(array("file_name"=>$fileName)); }for ($i =1; $i <= $llLLlLI; $i++) $this->II1I1IL->{$this->II1I1I1[I14587]}($this->II1I1IL->II1llIL, $this->_parseErrorInfo[I14639], "images", $aData["file_name"]); $this->TTIIlIl($this->Il11l1L +$this->Il11l11 *$llLLll1, $this->II1LIIL); }}else {$this->TTIIlT1("10012", I14622); $II1LIlI =false; }$this->TTIIlII(array(I14632=>I14626)); return $II1LIlI; }function TTTl1TT() {$this->llLlLLI["SET_PRICE"] =array(); if ($this->llLlL1l[I14627] != I14546) $this->llLlLLI[I14640] =$this->llLlL1l[I14627]; $this->llLlLLI[I14633] =$this->llLlL11.I14629.$this->llLlLLI[I14633]; $this->llLlLLI["ATTR_CATEGORYID"] =$this->llLlL11.I14629.$this->llLlLLI["ATTR_CATEGORYID"]; if($this->llLlL11){ $this->llLlLLI["ATTR_PICTURE"] =str_replace(basename($this->llLlLLI["ATTR_PICTURE"]), $this->llLlL11.I14629.basename($this->llLlLLI[I14641]), $this->llLlLLI[I14641]); }if ($this->llLlL1L["ITEM_ID_PARENT_EXTERNAL"] != I14546) $this->llLlLLI["ATTR_CATEGORYID"] =$this->llLlL1L["ITEM_ID_PARENT_EXTERNAL"]; $aItemData =$this->TT1TIT1($this->_config["OFFER"], $this->llLlLLI); $this->II1I1IL->{$this->II1I1I1[I14626]}($aItemData, $this->KeepItemCatId()); $this->llLlLLI =array(); }function TI1IT1l($aMap, &$aData) {$aPriceData =$this->TT1TIT1($aMap[I14642], $aData); return $aPriceData; }function TT1TITl($aMap, &$aData) {$prices =array(); foreach((array)$aData as $numPrice=>$aPriceData) {$prices[$numPrice] =$this->TT1TIT1($aMap, $aPriceData); }return $prices; }function TI1IT11($llLLlLl) {$llLLlLL =I14546; if ($llLLlLl != I14546 && $this->llLlL1L[I14609] != "import_img_omit" ){$llLLlLL =$GLOBALS["CUSTOM_PICTURES_HTTP_PATH"].$this->module->I11lLl1.I14592. $this->module->cms->TTITI11($this->TTIIll1($llLLlLl)); if ($this->llLlL1L[I14609] == "import_img_download") {if (!array_key_exists($llLLlLl, $this->Il11l1I)) {$this->Il11l1I[$llLLlLl] =1; }else {$this->Il11l1I[$llLLlLl]++; }}}return $llLLlLL; }function TT1TIT1($aMap, &$aData) {$aRowData =array(); foreach ((array) $aMap as $mappedField => $aRule) {switch ($aRule["operation"]) {case I14643 :$aRowData[$mappedField] =(isset($aData[$aRule["fields"]])? $aData[$aRule["fields"]] :$aRule["default"]); break; case I14627 :$aRowData[$mappedField] =$aRule["fields"]; break; case I14644 :foreach ((array) $aRule["set"] as $value => $llLLlL1) {if ($aData[$aRule["fields"]] == $value) {$aRowData[$mappedField] =$aData[$llLLlL1]; break; }}if ($aRowData[$mappedField] == I14546 )$aRowData[$mappedField] =$aData[$aRule["default"]]; break; case I14598 :$aRowData[$mappedField] =$this->TI1IT11($aData[$aRule["fields"]]); break; case I14645 :$aRowData[$mappedField] =$aRowData[$aRule["fields"]]; break; }}return $aRowData; }function TI1IITT() {if ($this->llLlL1L[I14612] == "yandex_import_item_yandex" || $this->llLlL1L[I14612] == "yandex_import_cat_yandex" ){$aCatData =array(); $aCatData["SET_PRICE"] =array(); $aCatData[I14633] =I14646.$this->module->langData; $aCatData["TAG_CATEGORY"] ="Yandex.Market"; $aCatData["IS_DELETED"] ="true"; $aCatData =$this->TT1TIT1($this->_config[I14624], $aCatData); $aCatData[I14647] =I14546; $aCatData["id_external"] =$aCatData["ID_EXTERNAL"]; $aCatData["id_parent_external"] =$aCatData[I14647]; $this->II1I1IL->{$this->II1I1I1[I14631]}($aCatData, true); $this->II1I1IL->{$this->II1I1I1["process_categories"]}($aCatData, true); }$this->llLlL1L["ITEM_ID_PARENT_EXTERNAL"] =I14546; $this->llLlL1L["CAT_ID_PARENT_EXTERNAL"] =I14546; if ($this->llLlL1L[I14612] == "yandex_import_item_yandex" ){$this->llLlL1L["ITEM_ID_PARENT_EXTERNAL"] =$aCatData["ID_EXTERNAL"]; $this->llLlL1L[I14648] =true; $this->llLlL1L["KeepItemCatId"] =true; }if ($this->llLlL1L[I14612] == "yandex_import_cat_yandex" ){$this->llLlL1L["CAT_ID_PARENT_EXTERNAL"] =$aCatData["ID_EXTERNAL"]; $this->llLlL1L[I14649] =true; }}function KeepItemCatId() {return $this->llLlL1L[I14649]; }function _EncodeMbCB($str) {return mb_convert_encoding($str, 'UTF-8', $this->llLl1IL); }}