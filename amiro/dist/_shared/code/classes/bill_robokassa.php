<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    Driver_PaymentSystem 
 * @version    $Id$ 
 * @since      5.8.6 
 * @size       9875 xkqwuqgukruwuwnnyikgrxzyiiryliwsiikyxkprskmpqrgptnlgnzlyszlwpqurnxglpnir
 */ ?><?php foreach(array(14936=>"QrrHr",14937=>"QrrnH",14938=>'SQDWrMGtMHn',14939=>'WZnWQJ',14940=>'YuttHn',14941=>"YuttHn",14942=>"IQrWOZnt|MS",14943=>'IQrWOZnt|MS',14944=>'%',14945=>'DtZtuD',14946=>'GZDDCHrS1',14947=>'HrSQr|ZIHunt',14948=>'dMPnZturQVZJuQ',14949=>'mnvmS',14950=>"mnvmS") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class BILL_driver_robokassa extends BILL_driver_base{ public function getPayButton(array &$aRes, array $aData, $bAutoRedirect =false){ $bRes =true; $aTemplateData =Array("return" => $this->ll11LIl->parameters["DEFAULT_RETURN_ADDRESS"]); if(is_array($aData)){ $aTemplateData =array_merge($aTemplateData, $aData); }$aRes[I14936] ="Success"; $aRes["errno"] =0; if(empty($aTemplateData["process_url"])){ $aRes["errno"] =1; $aRes[I14936] ="process_url is missed"; $bRes =false; }else if(empty($aTemplateData["merchant_id"])){ $aRes["errno"] =2; $aRes[I14936] ="merchant purse is missed"; $bRes =false; }else if(empty($aTemplateData["amount"])){ $aRes[I14937] =3; $aRes[I14936] ="amount is missed"; $bRes =false; }else if(empty($aTemplateData["item_number"])){ $aRes[I14937] =4; $aRes[I14936] ="item_number is missed"; $bRes =false; }else if(empty($aTemplateData["description"])){ $aRes[I14937] =5; $aRes[I14936] ="description is missed"; $bRes =false; }else if(empty($aTemplateData["button_name"]) && empty($aTemplateData["button"])){ $aRes[I14937] =6; $aRes[I14936] ="button is missed"; $bRes =false; }foreach(array('return', I14938, 'button_name') as $fldName) {$data[$fldName] =htmlspecialchars($data[$fldName]); }$aHiddenData =$aData; unset($aHiddenData['process_url'], $aHiddenData['return'], $aHiddenData['callback'], $aHiddenData[I14939], $aHiddenData['merchant_id'], $aHiddenData['amount'], $aHiddenData[I14938], $aHiddenData['order'], $aHiddenData['button_name'], $aHiddenData[I14940], $aHiddenData['password1'], $aHiddenData['password2']); foreach($aHiddenData as $key => $value){ $aTemplateData["hiddens"] .= "<input type=\"hidden\" name=\"$key\" value=\"$value\">\r\n"; }$aTemplateData["button"] =trim($aTemplateData[I14941]); if(!empty($aTemplateData[I14941])) {$aTemplateData["_button_html"] =1; }if(!$bRes){ $aTemplateData["disabled"] ="disabled"; }return parent::getPayButton($aRes, $aTemplateData, $bAutoRedirect); }public function getPayButtonParams(array $aData, array &$aRes){ $aTemplateData =$aData; $aRes[I14936] ="Success"; $aRes[I14937] =0; if(empty($aTemplateData[I14942])){ $aRes[I14937] =1; $aRes[I14936] ="merchant purse is missed"; return false; }else if(empty($aTemplateData["amount"])){ $aRes[I14937] =3; $aRes[I14936] ="amount is missed"; return false; }foreach(Array(I14938) as $fldName){ if(isset($aTemplateData[$fldName])){ $aTemplateData[$fldName] =htmlspecialchars($aTemplateData[$fldName]); }}$aTemplateData['signatureValue'] =md5($aData[I14943] .':' .$aData['amount'] .':' .$aData['order_id'] .I14944 .$aData['password1'] .':shpitem_number=' .$aData['order_id']); return parent::getPayButtonParams($aTemplateData, $aRes); }public function payProcess(array $aGet, array $aPost, array &$aRes, array $aCheckData, array $aOrderData){ $this->clearCartOnPayProcess =true; $aRes[I14936] =""; $bAccepted =false; $aParams =$aPost +$aGet; if(!empty($aParams[I14945]) && $aParams[I14945] == 'fail'){ return false; }if(isset($aParams['SignatureValue'])){ $signature =md5($aParams['OutSum'] .I14944 .$aParams['InvId'] .I14944 .$aCheckData[I14946] .':shpitem_number=' .$aParams['InvId']); if(strcasecmp($aParams['SignatureValue'], $signature) == 0){ $bAccepted =true; }else{ $aRes['error'] ='Hashes do not match'; }}else{ $aRes['error'] ='Hash not found'; }return $bAccepted; }public function payCallback(array $aGet, array $aPost, array &$aRes, array $aCheckData, array $aOrderData){ $aRes[I14936] =""; $returnVal =0; $aParams =$aPost +$aGet; $customData =unserialize($aOrderData[0]); $feePercent =floatval($customData['fee_percent']); if(floatval(($aOrderData[I14947] +$aOrderData['shipping']) *(1 +$feePercent/100)) != floatval($aParams['OutSum'])) {$aRes['error'] ='Wrong order amount'; }else if(isset($aParams[I14948])){ $signature =md5($aParams['OutSum'] .I14944 .$aParams['InvId'] .I14944 .$aCheckData['password2'] .':shpitem_number=' .$aParams[I14949]); if(strcasecmp($aParams[I14948], $signature) == 0){ $returnVal =1; }else{ $aRes['error'] ='Hashes do not match'; }}else{ $aRes['error'] ='Hash not found'; }return $returnVal; }public function getProcessOrder(array $aGet, array $aPost, array &$aRes, array $aAdditionalParams){ $orderId =0; if(!empty($aGet[I14950])){ $orderId =$aGet[I14950]; }if(!empty($aPost[I14950])){ $orderId =$aPost[I14950]; }return intval($orderId); }function onPaymentConfirmed($orderId){ while(ob_get_level()){ ob_end_clean(); }header('Status: 200 OK'); header('HTTP/1.0 200 OK'); print 'OK' .$orderId; exit; }}