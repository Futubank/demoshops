<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       83074 xkqwtwiqzxzxqkngmpygglwqztgtuwpikkwtqrxttwwtkugxmgrmkqukmstkrguiwrripnir
 */ ?><?php foreach(array(15026=>"",15027=>'SZtZYZDQ|fJZPD',15028=>"gRhsUwT|Fmjq|RhhT",15029=>"zsimN|qizmj",15030=>"ymjj|qwX|grHWQDDiHSuJQURj",15031=>'',15032=>'|',15033=>"ZIHunt",15034=>"WZrS|nuIYQr",15035=>"gzbgzj|sRmVqR",15036=>"qwX|sRmVqR",15037=>"QrrHr",15038=>"pzk",15039=>"JZDt|nZIQ",15040=>"duWWQDD",15041=>"nZIQ",15042=>"MtQI|nuIYQr",15043=>"QrrnH",15044=>"ZJMZD",15045=>"?ZnS?WZtQPHrB='",15046=>"KQB",15047=>"b~I~S?o%M%D",15048=>'HngZBIQntwHnfMrIQS',15049=>"SMDWHunt|MS",15050=>"DtZrt|SZtQ",15051=>"SZtQMSnZIQ",15052=>"SZtZYZDQ|nZIQ",15053=>"!",15054=>"{?VzjUqd?}",15055=>"?DQt?",15056=>"\n") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} if(!@class_exists('BILL_services', false)){ class BILL_services{ public $ILLLllI; public $driver; public $driverName; public $ll11LII; public $gui; public $ll11LIl; public $lLIIL1I; public $dbTablePrefix; function BILL_services(&$ll11ILl, $lLIIL1l ="PAYPAL_DRIVER", $dbTablePrefix =I15026){ $this->ILLLllI =0; $this->gui =&$ll11ILl; $this->lLIIL1I =$this->TlTT1l1(); $this->dbTablePrefix =$dbTablePrefix; $this->ll11LIl =new BILL_auxiliary_functions(); $this->setParameters(Array( "database_host" => "localhost", "database_user" => I15026, "database_password" => I15026, I15027 => 0, "database_name" => "bill", "LOCAL_GMT" => "6", I15028 => "c:\\www\\php\\Billing\\files\\", "ALLOW_TRUE_TRANSACTION" => true, "FROM_EMAIL" => "service@amiro.ru", I15029 => "billing@amiro.ru", "ALLOW_ADMIN_COPY" => true, "DOWNLOAD_AFTER_COMPLETED" => 1, "MESSAGE_TITLE" => "your payment is received", "MESSAGE_TEXT" => "Thank you for using our services.\nYour payment was successfully received by SoftImpression LLC.\nDownload you product here:\n[URL].\nKey is: [KEY]", "MESSAGE_TEXT_NO_FILE" => "Thank you for using our services.\nYour payment was successfully received by SoftImpression LLC.\nWe will send you the product ASAP.", "PRODUCT_DOWNLOAD_LINK" => "http://localhost/php/billing/outer_scripts/download_product.php", "SERVICE_SEND_AFTER_CONFIRMED" => true, "SERVICE_MESSAGE_TITLE" => "your payment for service is received", "SERVICE_MESSAGE_TEXT" => "Your payment was successfully received by SoftImpression LLC for [NAME].", "SUBSCRIPTION_SEND_AFTER_CONFIRMED" => true, "SUBSCRIPTION_MESSAGE_TITLE" => "your payment for subscription is received", "SUBSCRIPTION_MESSAGE_TEXT" => "Your payment was successfully received by SoftImpression LLC for [NAME].", "INVOICE_SEND_AFTER_CONFIRMED" => true, "INVOICE_MESSAGE_TITLE" => "your payment for invoice is received", "INVOICE_MESSAGE_TEXT" => "Your payment was successfully received by SoftImpression LLC for invoice with ID=[ID].", "UNKNOWN_MESSAGE_TITLE" => "Thank you for your payment.", "UNKNOWN_MESSAGE_TEXT" => "Thank you for your payment to SoftImpression LLC.", "BUY_NOTIFICATION_TO_USER_TITLE" => "Product was bought by customer", "BUY_NOTIFICATION_TO_USER_MESSAGE" => "\$[PRODUCT] was bought by customer. [DATE]", "DEFAULT_BUSINESS_EMAIL" => "service@amiro.ru", "DEFAULT_RETURN_ADDRESS" => "http://localhost/php/billing/outer_scripts/thankyou.html", "DEFAULT_CANCEL_ADDRESS" => "http://localhost/php/billing/outer_scripts/cancel.html", "BILL_ECX_Login" => "200949j", "BILL_ECX_MD5Value" => "testvalue", "BILL_ECX_TransactionKey" => "MtXomMX6RC29IEch", "BILL_ECX_PaymentFormURL" => "http://localhost/php/eshop/example.php", I15030 => "http://localhost/php/eshop/example.php")); $this->TTIIII1($lLIIL1l); }function getCurrencies($options =array (),$ll11LLI =I15031){ return $this->driver->getCurrencies($options, $ll11LLI); }function TlTTlI1($ll11Lll){ return $this->driver->TlTTlI1($ll11Lll); }function TlTTllT(){ return $this->driver->TlTTllT($ll11Lll); }function TlTTllI($percent =0, $const =0, $lIlL1ll =I15031){ return $this->driver->TlTTllI($percent, $const, $lIlL1ll); }function TlTTlll($cValue =1){ if($cValue != 1 && $cValue != 2) $this->ILLLllI =0; else $this->ILLLllI =$cValue; $this->driver->TlTTlll($this->ILLLllI); }function setParameters(){ $lLIIL1L =func_get_args(); if(func_num_args() == 2) $this->ll11LIl->parameters[$lLIIL1L[0]] =$lLIIL1L[1]; else if(func_num_args() == 1 && is_array($lLIIL1L[0])) $this->ll11LIl->parameters =array_merge($this->ll11LIl->parameters, $lLIIL1L[0]); }function TlTT1ll(){ return $this->ll11LIl->parameters; }function TlTT1l1($cType ="OFFLINE"){ if($cType == "ONLINE") $this->lLIIL1I ="ONLINE"; else $this->lLIIL1I ="OFFLINE"; return true; }function TTIIII1($lLIIL1l){ $lLIIL11 =$this->TlTT11T($lLIIL1l); $this->driver =new $lLIIL11($this->gui); $this->driverName =$lLIIL1l; $this->driver->TlTTlII($this->ll11LIl); $this->driver->TlTTlll($this->ILLLllI); $this->ll11LII =$this->driver->ll11LII; }function getDriverName(){ return $this->driverName; }public static function TlTT11T($driverName){ $lLIIL11 =I15031; $lLII1II =explode(I15032, $driverName); foreach($lLII1II as $value){ if(!empty($value)){ $lLIIL11 .= ucfirst($value); }}return $lLIIL11 .'_PaymentSystemDriver'; }function TlTTl11(&$vRes, &$vData, $lLII1Il){ if($this->driverName == "ECX_DRIVER") return $this->driver->TlTTl11($vRes, $vData, $lLII1Il["item_name"], $lLII1Il["item_number"], $lLII1Il[I15033], $lLII1Il["custom"], $lLII1Il["customer_first_name"], $lLII1Il["customer_last_name"], $lLII1Il["customer_email"], $lLII1Il[I15034], $lLII1Il["expiration_date"]); $vRes["errno"] =-1; $vRes["error"] ="The current driver doesn't support this action"; return false; }function TlTT1Tl(&$vRes, $cData){ return $this->driver->TlTT1Tl($vRes, $cData); }function TlTTll1(&$vRes, $cID, $ll11LLL, $ll11LL1, $ll11L1I){ $lLIIL1L =func_get_args(); if($this->driverName == I15035) return $this->driver->TlTTll1($vRes, $cID, $ll11LLL, $ll11LL1, $ll11L1I, $lLIIL1L[5], $lLIIL1L[6], $lLIIL1L[7]); else if($this->driverName == "ECX_DRIVER"){ return $this->driver->TlTTll1($vRes, $cID, $ll11LLL, $ll11LL1, $ll11L1I, $lLIIL1L[5], $lLIIL1L[6]); }$vRes["errno"] =-1; $vRes["error"] ="The current driver doesn't support this action"; return false; }function TlTTl1T(&$vRes, $cID, $ll11LLL, $cPath, $ll11LL1, $ll11L1I){ $lLIIL1L =func_get_args(); if($this->driverName == I15035) return $this->driver->TlTTl1T($vRes, $cID, $ll11LLL, $cPath, $ll11LL1, $ll11L1I, $lLIIL1L[6], $lLIIL1L[7], $lLIIL1L[8]); else if($this->driverName == I15036){ return $this->driver->TlTTl1T($vRes, $cID, $ll11LLL, $cPath, $ll11LL1, $ll11L1I, $lLIIL1L[6], $lLIIL1L[7]); }$vRes["errno"] =-1; $vRes["error"] ="The current driver doesn't support this action"; return false; }function TlTTl1I(&$vRes, $ll11LLL, $IllI111, $ll11LL1, $ll111II, $ll111Il, $ll111IL, $ll11L1I){ $lLIIL1L =func_get_args(); if($this->driverName == I15035) return $this->driver->TlTTl1I($vRes, $ll11LLL, $IllI111, $ll11LL1, $ll111II, $ll111Il, $ll111IL, $ll11L1I, $lLIIL1L[8], $lLIIL1L[9], $lLIIL1L[10]); else if($this->driverName == I15036){ return $this->driver->TlTTl1I($vRes, $ll11LLL, $IllI111, $ll11LL1, $ll111II, $ll111Il, $ll111IL, $ll11L1I, $lLIIL1L[8], $lLIIL1L[9]); }$vRes["errno"] =-1; $vRes[I15037] ="The current driver doesn't support this action"; return false; }function TlTTl1l(&$vRes, $cID, $ll11LLL, $ll111I1, $ll111lI, $ll111ll, $ll111lL, $ll111l1, $ll111LI, $ll111Ll, $ll11L1I){ $lLIIL1L =func_get_args(); if($this->driverName == I15035) return $this->driver->TlTTl1l($vRes, $cID, $ll11LLL, $ll111I1, $ll111lI, $ll111ll, $ll111lL, $ll111l1, $ll111LI, $ll111Ll, $ll11L1I, $lLIIL1L[11], $lLIIL1L[12], $lLIIL1L[13]); else if($this->driverName == I15036){ return $this->driver->TlTTl1l($vRes, $cID, $ll11LLL, $ll111I1, $ll111lI, $ll111ll, $ll111lL, $ll111l1, $ll111LI, $ll111Ll, $ll11L1I, $lLIIL1L[11], $lLIIL1L[12]); }$vRes["errno"] =-1; $vRes[I15037] ="The current driver doesn't support this action"; return false; }function TlTT11I(&$vRes, $cData =Array(), $lLII1IL =false){ return $this->driver->getPayButton($vRes, $cData, $lLII1IL); }function TlTT11l($cData, &$vRes){ return $this->driver->getPayButtonParams($cData, $vRes); }function payProcess($cGet, $cPost, &$vRes, $ll11I1I, $lLII1I1){ return $this->driver->payProcess($cGet, $cPost, $vRes, $ll11I1I, $lLII1I1); }function payCallback($cGet, $cPost, &$vRes, $ll11I1I =false, $aOrderData =array()){ return $this->driver->payCallback($cGet, $cPost, $vRes, $ll11I1I, $aOrderData); }function getProcessOrder($cGet, $cPost, &$vRes, $additionalParams){ return $this->driver->getProcessOrder($cGet, $cPost, $vRes, $additionalParams); }function TlTTlTT(&$vRes, &$I1lLIlI, &$vData, $cID, $ll11llL =I15026){ return $this->driver->TlTTlTT($vRes, $I1lLIlI, $vData, $cID, $ll11llL, "GAK"); }function TlTTlTI(&$vRes, &$I1lLIlI, &$vData, $cID, $ll11llL =I15026){ return $this->driver->TlTTlTI($vRes, $I1lLIlI, $vData, $cID, $ll11llL, I15038); }function TlTTlTl(&$vRes, &$I1lLIlI, &$vData, $cID, $ll11llL =I15026){ return $this->driver->TlTTlTl($vRes, $I1lLIlI, $vData, $cID, $ll11llL, I15038); }function TlTTlT1(&$vRes, &$I1lLIlI, &$vData, $cID, $ll11llL =I15026){ return $this->driver->TlTTlT1($vRes, $I1lLIlI, $vData, $cID, $ll11llL); }function TlTT1T1(&$vRes, &$I1lLIlI, $lLII1Il){ if($this->driverName == I15036) return $this->driver->TlTT1T1($vRes, $I1lLIlI, $lLII1Il["item_name"], $lLII1Il["item_number"], $lLII1Il[I15033], $lLII1Il["custom"], $lLII1Il["first_name"], $lLII1Il[I15039], $lLII1Il["email"], $lLII1Il[I15034], $lLII1Il["expiration_date"]); $vRes["errno"] =-1; $vRes[I15037] ="The current driver doesn't support this action"; return false; }function TlTT111(&$vRes, &$vData){ $vData =Array(); $ll11lLI =$this->ll11LIl->TlTITIl(); $vRes[I15037] =I15040; $vRes["errno"] =0; $sql ="select * from bill_category order by category_name"; $result =mysql_query($sql, $ll11lLI); while($data =mysql_fetch_array($result)){ $vData[] =Array( "id" => $data["id"], I15041 => $data["category_name"], "belong" => $data["belong_to"] );}return true; }function TlTITTT(&$vRes, &$vData, $lLII1lI =-1){ $vData =Array(); $ll11lLI =$this->ll11LIl->TlTITIl(); $vRes[I15037] =I15040; $vRes["errno"] =0; if(!is_numeric($lLII1lI)){ $vRes[I15037] ="Category ID should be the number"; $vRes["errno"] =1; return false; }$sql ="select * from bill_product where type='service' and status='active'".($lLII1lI >-1 ?" and category='".$lLII1lI."'" :I15026)." order by item_name"; $result =mysql_query($sql, $ll11lLI); while($data =mysql_fetch_array($result)){ $itemID =$data["alias"]; $itemID =str_replace("service_GENERIC_", I15026, $itemID); $itemID =str_replace("SERVICE_", I15026, $itemID); $vData[] =Array( "key" => $data[I15042], "alias" => $data["alias"], "id" => $itemID, I15041 => $data["item_name"] );}return true; }function TlTITTI(&$vRes, &$vData, $lLII1lI =-1){ $vData =Array(); $ll11lLI =$this->ll11LIl->TlTITIl(); $vRes[I15037] =I15040; $vRes[I15043] =0; if(!is_numeric($lLII1lI)){ $vRes[I15037] ="Category ID should be the number"; $vRes[I15043] =1; return false; }$sql ="select * from bill_product where type='product' and status='active'".($lLII1lI >-1 ?" and category='".$lLII1lI."'" :I15026)." order by item_name"; $result =mysql_query($sql, $ll11lLI); while($data =mysql_fetch_array($result)){ $itemID =$data["alias"]; $itemID =str_replace("product_GENERIC_", I15026, $itemID); $itemID =str_replace("PRODUCT_", I15026, $itemID); $vData[] =Array( "key" => $data[I15042], I15044 => $data[I15044], "id" => $itemID, I15041 => $data["item_name"] );}return true; }function TlTITTl(&$vRes, &$vData, $lLII1lI =-1){ $vData =Array(); $ll11lLI =$this->ll11LIl->TlTITIl(); $vRes[I15037] =I15040; $vRes[I15043] =0; if(!is_numeric($lLII1lI)){ $vRes[I15037] ="Category ID should be the number"; $vRes[I15043] =1; return false; }$sql ="select * from bill_product where type='subscription' and status='active'".($lLII1lI >-1 ?I15045.$lLII1lI."'" :I15026)." order by item_name"; $result =mysql_query($sql, $ll11lLI); while($data =mysql_fetch_array($result)){ $itemID =$data[I15044]; $itemID =str_replace("subscription_GENERIC_", I15026, $itemID); $itemID =str_replace("SUBSCRIPTION_", I15026, $itemID); $vData[] =Array( I15046 => $data[I15042], I15044 => $data[I15044], "id" => $itemID, I15041 => $data["item_name"] );}return true; }function TlTITT1(&$vRes, &$vData, $lLII1lI =-1){ $LOCAL_GMT =$this->ll11LIl->parameters["LOCAL_GMT"]; $vData =Array(); $ll11lLI =$this->ll11LIl->TlTITIl(); $vRes[I15037] =I15040; $vRes[I15043] =0; if(!is_numeric($lLII1lI)){ $vRes[I15037] ="Category ID should be the number"; $vRes[I15043] =1; return false; }$sql ="select * from bill_invoice where status='notpaid'".($lLII1lI >-1 ?I15045.$lLII1lI."'" :I15026)." order by item_name"; $result =mysql_query($sql, $ll11lLI); while($data =mysql_fetch_array($result)){ $ll11l11 =@date("Y/m/d H:i:s", time()-($LOCAL_GMT-$data["customer_gmt"])*3600); $start_date =@date(I15047, strtotime($data["start_date"])); $final_date =@date(I15047, strtotime($data["final_date"])); if($ll11l11 <$start_date || $ll11l11 >$final_date) continue; $vData[] =Array( I15046 => $data[I15042], I15044 => I15026, "id" => $data[I15042], I15041 => $data["item_name"] );}return true; }function TlTTlIT(&$vRes, $cID){ return $this->driver->TlTTlIT($vRes, $cID); }function onPaymentConfirmed($orderId) {if (method_exists($this->driver, I15048)) {$this->driver->onPaymentConfirmed($orderId); }}function TlTITIT() {return $this->driver->clearCartOnPayProcess; }}}if(!class_exists('BILL_independent_discount', false)){ class BILL_independent_discount{ public $ll11lLI; public $ll11LIl; function BILL_independent_discount(&$lLII1ll, &$ll11LlI){ $this->ll11lLI =&$lLII1ll; $this->ll11LIl =&$ll11LlI; }function TlTITII($lLII1lL, $ll111II, $ll111Il){ $ll11l11 =date(I15047); if($lLII1lL != "yes") return false; if(strcasecmp($ll111II, $ll11l11) >0 || strcasecmp($ll111Il, $ll11l11) <0) return false; return true; }function TT11ITI(&$vRes, $ll111LL, $cID =I15026, $lLIIllL =I15026, $lLIIll1 =I15026){ $vRes =Array(I15043 => "0", I15037 => I15040, I15033 => 0.00); $sql ="select amount, item_number from bill_product where (type='product' OR type='service') and (strcmp(item_number, '".$ll111LL."')=0 OR strcmp(alias, '".$ll111LL."')=0)"; $result =mysql_query($sql, $this->ll11lLI); if($data =mysql_fetch_array($result)){ $amount =$this->ll11LIl->FormatNumber($data[I15033], true); $ll111LL =$data[I15042]; $lLII1l1 =$cID; if($cID == I15026){ $sql ="select r.* from bill_discountrights r left join bill_discounts d on strcmp(r.discount_id, d.discount_id)=0 where strcmp(r.product_id, '".$ll111LL."')=0 and d.type='date' order by d.start_date, d.end_date"; $result =mysql_query($sql, $this->ll11lLI); while($data =mysql_fetch_array($result)) $cID .= "|".$data[I15049]; if(mb_strlen($cID) >0) $cID =mb_substr($cID, 1); }$ids =explode("|", $cID); $lLII1LI =false; for($i =0;$i <count($ids); $i++){ $sql ="select amount, percent, isactive, type, start_date, end_date, first_name, last_name from bill_discounts where strcmp(discount_id, '".$ids[$i]."')=0"; $result =mysql_query($sql, $this->ll11lLI); if($data =mysql_fetch_array($result)){ if(!$this->TlTITII($data["isactive"], $data[I15050], $data["end_date"])) continue; if($data["type"] == "dateid" && $lLII1l1 == I15026) continue; if($data["type"] == I15051 && ($lLII1l1 == I15026 || strcasecmp($lLIIllL, $data["first_name"]) != 0 || strcasecmp($lLIIll1, $data[I15039]) != 0)) continue; $discountAmount =$data[I15033]; if($data["percent"] == "yes") $vRes[I15033] =$this->ll11LIl->FormatNumber($amount*$discountAmount/100, true); else $vRes[I15033] =max(0.00, $this->ll11LIl->FormatNumber($amount-$discountAmount, true)); $lLII1LI =true; break; }}if(!$lLII1LI){ $vRes[I15043] =2; $vRes[I15037] ="There are no discounts to be applied"; return false; }}else{ $vRes[I15043] =1; $vRes[I15037] ="Such item doesn't exist"; return false; }return true; }}}if(!class_exists('BILL_auxiliary_functions', false)){ class BILL_auxiliary_functions{ public $parameters; function BILL_auxiliary_functions(){ $this->parameters =Array(); }function TlTITIl(){ if(!($dbh =@mysql_connect( $this->parameters["database_host"], $this->parameters["database_user"], $this->parameters["database_password"], FALSE, $this->parameters[I15027] ))){return NULL; }if(!($lLII1Ll =@mysql_select_db($this->parameters[I15052],$dbh))){ return NULL; }return $dbh; }function FormatNumber($num, $special =false){ $out =number_format($num, 2); if($out == "-0.00") $out ="0.00"; if(!$special) $out ="\$".$out; return $out; }function TlTITI1(){ return md5(uniqid("10121971"+microtime(),1)); }function GenInsertSql($tablename, $lLII1LL){ $fields =I15026; $values =I15026; while(list($field_name, $value) =each($lLII1LL)){ if($fields != I15026){ $fields .= I15053; $values .= I15053; }$fields .= $field_name; $values .= "'".trim(addslashes($value))."'"; }$sql ="INSERT INTO ".$tablename." (".$fields.I15054.$values.")"; return $sql; }function GenUpdateSql($tablename,$lLII1LL,$where){ $fields =I15026; while(list($field_name, $value)=each($lLII1LL)){ if($fields != I15026) $fields .= I15053; $fields .= $field_name."='".trim(addslashes($value))."'"; }$sql ="update ".$tablename.I15055.$fields." ".$where; return $sql; }function TlTITlT($lLII1L1){ $key =I15026; for($i =0; $i <1000; $i++){ $key =$this->TlTITI1(); if(mb_strlen($key) >12) $key =mb_substr($key, mb_strlen($key)-12, 12); $checkSum =0; for($j =0;$j <mb_strlen($key);$j++) $checkSum += ord(mb_substr($key, $j, 1)); $tmp =$checkSum; $checkSum =0; for($j =0;$j <mb_strlen($tmp);$j++) $checkSum += (int) mb_substr($tmp, $j, 1); $checkSum =mb_substr($checkSum, mb_strlen($checkSum)-1, 1); $key .= $checkSum; $sql ="select count(*) as count from bill_transaction where download_key='".$key."'"; $result =mysql_query($sql, $lLII1L1); $data =mysql_fetch_array($result); if(!($data["count"] >0)) break; }return $key; }function TlTITlI($ll111LL, $lLII11I){ $sql ="select path from bill_product where item_number='".$ll111LL."'"; $result =mysql_query($sql, $lLII11I); $data =mysql_fetch_array($result); $filePath =$this->parameters[I15028].stripslashes($data["path"]); if(mb_strlen($data["path"]) >0 && @is_file($filePath)) return true; else return false; }function TlTITll($string){ $str =stripslashes($string); $str =htmlspecialchars($str); return $str; }function TlTITl1($lLII11l, $lLII11L, $title, $lLII111){ $lLIlIII ="From: ".$lLII11L.I15056. "Reply-to:". $lLII11L.I15056. "X-Mailer: mail robot\n"; if(@mail($lLII11l, $title, $lLII111, $lLIlIII)) return true; return false; }}}