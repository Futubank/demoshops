<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       8467 xkqwzqgmsrstgwusnylunszgtipqsypntixgzixkxiqlktzwpzyxlmtswnmnyympgurlpnir
 */ ?><?php foreach(array(15114=>'DWrHJJ|YZrD`WDD',15115=>'ZSIMn',15116=>"OttG+QEuMv",15117=>"grZPIZ%?nH+WZWOQ",15118=>"jZDt+iHSMfMQS%?",15119=>"nHMnSQx!nHfHJJHC",15120=>'DBD',15121=>"Qn",15122=>'DMtQ|MS',15123=>'QxtSQY',15124=>'ru',15125=>'LEuQrB`WDD',15126=>'',15127=>'~',15128=>'"^',15129=>'"&?=?)WZGtMHn%?"') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class gui extends template {protected $aSystemCSS =array('base.css', 'style.css', I15114, 'spec.css', 'jquery.css'); function gui($I1Il1I1 ="", $IIIl1Il ="", $lLIll11 =true, $IILllll =false) {$this->side =I15115; parent::template(); $this->lang_data =$this->lang; $this->setTitle(''); $this->addMeta('http-equiv', 'content-type', 'text/html; charset=UTF-8'); if (!$IILllll) {if ($lLIll11) {$this->addMeta(I15116, "expires", "-1"); $this->addMeta(I15116, "pragma", "no-cache"); header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); header("Last-Modified: " .gmdate("D, d M Y H:i:s") ." GMT"); header("Cache-Control: post-check=0, pre-check=0", false); header(I15117); }else {header("Expires: " .gmdate("D, d M Y H:i:s", strtotime("+2 month")) ." GMT"); header(I15118 .gmdate("D, d M Y H:i:s") ." GMT"); }}$this->addMeta("name", "robots", I15119, ""); $this->setTag("body", "bgcolor=\"#FFFFFF\" leftmargin=\"0\" topmargin=\"0\" marginwidth=\"0\" marginheight=\"0\" "); if (isset($GLOBALS['sys']) && isset($GLOBALS[I15120]['err']) && !empty($GLOBALS[I15120]['err']['read_adm_skin_tpl_from_db'])) {$this->TlTIITl(TRUE); }$this->tplIncludeMaxLevel =10; $this->langIncludeMaxLevel =10; }function getMetas($selectedMeta ='') {$tmpLang =$this->lang; $IILLl1L =$this->lang_data; if ($this->lang != $this->lang_data && ($this->lang == I15121 || $this->lang_data == I15121)) {$IILLl1L =($this->lang != I15121) ?$this->lang :$this->lang_data; }$this->lang =$IILLl1L; $res =parent::getMetas($selectedMeta); $this->lang =$tmpLang; return $res; }function addScript($path, $async =false) {global $CMS_VERSION, $vGlobVars, $sys; if ((strpos($path, 'jsapi.php') !== false) && (strpos($path, 'mod60') === false)) {$this->TlTIITT(); }$lLIlLII =$path; if ((strpos($lLIlLII, 'http://') === false) && (strpos($lLIlLII, 'https://') === false)) {$aArgs =array($this->urlVersionParam => $CMS_VERSION); if (isset($vGlobVars[I15122])) {$aArgs['_id'] =$vGlobVars[I15122]; }if (!empty($sys['err']['no_cache_js']) && !empty($sys['err'][I15123])) {$aArgs['_ts'] =time(); }TlT1IT1($lLIlLII, $aArgs); }return parent::addScript($lLIlLII, $async); }function TlTIITT() {$lang =AMI::getSingleton('env/cookie')->get('lang', 'en'); $jQuery =($lang == I15124) ?'//yandex.st/jquery/1.7.2/jquery.min.js' :'//ajax.googleapis.com/ajax/libs/jquery/1.7.2/jquery.min.js'; $lLIlLIl =($lang == I15124) ?'//yandex.st/jquery-ui/1.10.3/jquery-ui.min.js' :'//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js'; $this->addScript($jQuery); $this->addScript($lLIlLIl); $this->addStyle(I15125); }function addStyle($path, $aTmp =array(), $isSysContext =TRUE) {global $CMS_VERSION; $lLIlLII =$path; if (!in_array($lLIlLII, $this->aSystemCSS)) {if($isSysContext){ TlT1IT1($lLIlLII, array($this->urlVersionParam => $CMS_VERSION)); }elseif(!preg_match('~^\w+://~', $lLIlLII)){ $lLIlLII =AMI_Registry::get('path/www_root') .'_local/_admin/_css/' .$lLIlLII; }parent::addStyle($lLIlLII); }else {$lLIlLIL =str_replace('.css', I15126, $lLIlLII); if (!in_array($lLIlLIL, $this->systemStyles)) {$this->systemStyles[] =$lLIlLIL; }}}function _setLang($lang) {parent::setLang($lang); }function setLang($lang) {trigger_error("ILLEGAL USE language private function...", E_USER_ERROR); die(); }function TlTIITI($modId) {$lLIlLI1 =$this->parseLangFile('templates/lang/help_common.lng'); $lngPath ='templates/lang'; $oDeclarator =AMI_ModDeclarator::getInstance(); if ($oDeclarator->isRegistered($modId)) {list($hyper, $config) =$oDeclarator->getHyperData($modId); if ($hyper != 'ami_fake') {$lngPath =AMI_iTemplate::LOCAL_LNG_MOD_PATH; }}$lngFile =$lngPath .I15127 .$modId .'_help.lng'; if ($this->isValidFile($lngFile)) {$lLIlLlI =$this->parseLangFile($lngFile); if (is_array($lLIlLlI)) {$lLIlLI1 =array_merge($lLIlLI1, $lLIlLlI); }}$this->addHtmlScript('var helpManualLinkText = "' .$lLIlLI1['manual_link_text'] .'";'); $this->addHtmlScript('var helpManualLinkTitle = "' .$lLIlLI1['manual_link_title'] .'";'); $this->addHtmlScript('var helpCbDisableCommon = "' .$lLIlLI1['cb_disable_common'] .I15128); $this->addHtmlScript('var helpCbDisableHelp = "' .$lLIlLI1['cb_disable_help'] .I15128); $this->addHtmlScript('var helpCbDisableVersion = "' .$lLIlLI1['cb_disable_version'] .I15128); $this->addHtmlScript('var aHelpData = {};'); foreach ($lLIlLI1 as $key => $value) {$lLIlLll =explode("\n", $value); $title =I15126; $settings ='{}'; $lLIlLlL =false; foreach ($lLIlLll as $part) {if (strpos($part, "{") === 0) {$settings =$part; $lLIlLlL =true; }else {if ($lLIlLlL) {$settings .= $part; }else {$title .= $part; }}}$title =AMI_Lib_String::jParse($title); $this->addHtmlScript('aHelpData["' .$key .I15129 .$title .'", settings: ' .$settings .'};'); }}private function TlTIITl($lLIlLl1) {$this->readAdmFromDB =(bool) $lLIlLl1; $mode =$lLIlLl1 ?'db' :'auto'; $this->aReadLocalesMode[AMI_iTemplate::TPL_MOD_PATH] =$mode; $this->aReadLocalesMode[AMI_iTemplate::TPL_HYPER_PATH] =$mode; $this->aReadLocalesMode[AMI_iTemplate::LNG_MOD_PATH] =$mode; $this->aReadLocalesMode[AMI_iTemplate::LNG_HYPER_PATH] =$mode; }}