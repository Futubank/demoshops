<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       140088 xkqwgznknwzkiwixtsqzquqwwpswmxkuyrgsnizlnxltntgrxxmgpzwwrminqsgnlpuxpnir
 */ ?><?php foreach(array(15169=>'oTTg~1`0?403?FHrYMSSQn',15170=>'FHrYMSSQn!?MnvZJMS?URj,?',15171=>'?Zt?',15172=>"dbd|s|RmpoT",15173=>"dbd|c|RmpoT",15174=>"dbd|R|RmpoT",15175=>"dbd|z|RmpoT",15176=>'ohdTihsq|dozRqs',15177=>'ohdTihsq|zsimN',15178=>'sqFmNq001',15179=>"dbd|zwT|sqF|RmpoTd",15180=>"nHnQ",15181=>"rDrtIQ",15182=>"vMQC",15183=>"SQJ",15184=>"QSMt",15185=>'wjzddqd|gzTo',15186=>'wid|iHSuJQDdQttMnPD`GOG',15187=>'IHSuJQD',15188=>'unKnHCn',15189=>'`GOG',15190=>'GZPQ|',15191=>'DMAQ',15192=>'DHrt|WHJ',15193=>'DHrt|SMI',15194=>'IZx|GZPQD',15195=>'',15196=>'WID|',15197=>'MS',15198=>'ZSIMn|GZPQ|OQZSQr',15199=>'ZSIMn|IQnu|WZGtMHn',15200=>"MS",15201=>"",15202=>'hYDHJQtQ?wHrQ%%dQtTZYJQdHrtFMQJSD?IQtOHS?WZJJQS',15203=>'DHrt|fMQJSD',15204=>"WOQWK|JMnKD|WHnfJMWt",15205=>'MnOQrMt|DQttMnPD',15206=>'HGtMHn',15207=>"UnKnHCn?",15208=>"?'",15209=>"'?Mn?IHSuJQ?'",15210=>"'",15211=>'ZWtMHnD',15212=>"ZWtMHnD",15213=>"[",15214=>"|dmsq",15215=>"frHnt",15216=>"frHnt|",15217=>'QnPMnQ|WJZDDQD',15218=>"'QnPMnQ|WJZDDQD'?GrHGQrtB?nHt?fHunS?fHr?IHSuJQ?'",15219=>'GJuPMn|',15220=>'ZGM|vQrDMHn',15221=>'06`00',15222=>'QnPMnQ`GOG IHS|MS=',15223=>'GJuPMn|MS',15224=>'QnPMnQ|vQrDMHn',15225=>'0600',15226=>'ZSIMn|rQEuQDt|tBGQD',15227=>'ZLZx',15228=>'Qnv~WHHKMQ',15229=>'ZIM|QnPMnQ',15230=>"nZIQ",15231=>"JMnK",15232=>"MS|DMtQ",15233=>'JMnK',15234=>",,,",15235=>"mnWHrrQWt?GZrZIQtQrD?nuIYQr```",15236=>"hGtMHnD",15237=>"wuDtHIsZtZ",15238=>'hGtMHnD',15239=>"grHGQrtMQD",15240=>"dQZrWOFMQJSD",15241=>"dQZrWOsZtZ",15242=>'grHGQrtMQD',15243=>'mJJ111j',15244=>'uDQr',15245=>"unKnHCn",15246=>"SQfZuJt",15247=>'SQfZuJt',15248=>'rQYGCErLYBBnCrtnWvPBOA',15249=>'ErLYBBnCrtnWCvPBOA',15250=>'tInBCvPBOACLYBBn',15251=>'ErLYBBnCKnACPrfnPnE',15252=>'BrMrBCOIrACErLYBBn',15253=>'|ZIC',15254=>'CIZ|',15255=>'fQrfO|PfYu|IL!fZtvfrE|IL!tZvPnQ!PvEOn|MQf!fQrfO|fJf!tZvBBvH!fPnPf|DDn!ArPv|JQrBBnt!ArPv|YvBYDPQYW!ArPv|Hx!fEYuPrA|tZvWWvuf|WYufr!rtZnuGKr|nPnE|WYufr!fArPv|QrfO|WYufr!PZrArrQtn|WYufr!QrfO|WYufr!fPQYWrQ|QrEQY|WYufr!fZYWOYG|WYufr!fPZOYGfvE|WYufr!QrEQY|WYufr!PQnG|WYufr!ArPv|WYufr!fErvDvffnBG!fQrfvPQrMEn|MEn!frGnBW|MEn!fHYC!frBvD!rHvQGfHOf!frPYM!xGnHErrD!uGQnrf!SnD!AOHBnYPYuW!frBGvPQn!fWOYQt|fJf!frPvf|vPBOA|MQf!fQrMvQE|JnW',15256=>'rHvQGfHOf',15257=>'frtnffrA|rPnMvQW',15258=>'!',15259=>'rBWAnf!EQnIvL!JQrBBnt!YvBYDPQYW!Hx!WYufr!rPnvBvDDn',15260=>'mJjmJJ1',15261=>'WHrQ',15262=>'rQEurQ|rQYuMJS|IHSuJQD',15263=>'WID',15264=>'QSMtMHn',15265=>'frQQ',15266=>'Qxt|IHSu',15267=>'JQD|WuDtHI|fMQJSD',15268=>'zim|iHSsQW',15269=>'JZrZtHr',15270=>'PQtmn',15271=>'DtZnWQ',15272=>'PQtRQPM',15273=>'DtQrQS',15274=>'ZI',15275=>'v|AOBPvDr',15276=>'QSD',15277=>'PQtgZ',15278=>'rQnt',15279=>'WZ',15280=>'t',15281=>'PQtz',15282=>'ttr',15283=>'IZr',15284=>'KQr',15285=>'PQtoB',15286=>'GQrsZtZ',15287=>'GOH',15288=>'tHZJYuI',15289=>'uDQ|WZtQPHrMQD',15290=>'tZnB|vPBOA|LYBBn',15291=>'QrfO|vPBOA',15292=>'ErLYBBn|rtnW|vPBOA',15293=>'Du',15294=>'DBD|uDQrD',15295=>"uDQr",15296=>'VqRdmhNd',15297=>'ZWt|SY',15298=>'DtZrt|vQrDMHn',15299=>'|ZJHnQ|rQWHrS',15300=>'nZIQ',15301=>'SY|vQrDMHn',15302=>'vZJuQ',15303=>'~;}\S-\`{)3(\S-$~',15304=>'`',15305=>'GKP',15306=>'JMW',15307=>'vQrDMHn',15308=>'zdwmm',15309=>'UTF+8',15310=>'ZSIMn',15311=>"W",15312=>"PtID`",15313=>"BI",15314=>"ZWHJ",15315=>"JOH",15316=>"vIDtu",15317=>"721",15318=>'0',15319=>'1`0`',15320=>"GZrZI3",15321=>"JMW",15322=>"JMDt",15323=>"OHDtD",15324=>'GZrZI3',15325=>"UnSQfMnQS?IHSuJQ?*",15326=>"&```",15327=>"dQtiHSsuIGsZtZ%%?UnSQfMnQS?IHSuJQ?*",15328=>'QnPMnQ`GOG',15329=>'EuQrB',15330=>'IHS|MS',15331=>'WHrQ|IHSuJQ',15332=>"hGtMHn?",15333=>"%",15334=>"?WZnnHt?YQ?MnOQrMtQS?frHI?MtDQJf",15335=>"?WZnnHt?YQ?MnOQrMtQS?frHI?",15336=>'%',15337=>'Drv|HGtMHnD',15338=>'ZJJHCQS|MnOQrMtZnWQ',15339=>'MnOQrMtZnWQ',15340=>"MnDtZJJQS",15341=>"hCnQr?MD?unKnHCn?Hr?nHt?MnDtZJJQS?Mn?pQtiHSuJQDyBhCnQr?*",15342=>"SHnt|DOHC|Mn|GI",15343=>"DQZrWO|YB|GZrQnt",15344=>"hCnQr?MDn't?fHunS?*",15345=>"IHSuJQ",15346=>"iHSuJQ?nZIQ?*",15347=>"&?MD?rQDQrvQS```",15348=>'fMrDt|IHS|MS',15349=>"iHSuJQ?CMtO?tOMD?nZIQ?ZJrQZSB?QxMDtD?*",15350=>"UnSQfMnQS?GZrQnt?IHSuJQ?*",15351=>"iHSuJQ?MD?nHt?fHunS?*",15352=>"IHSuJQD",15353=>"tZYHrSQr",15354=>'tZYHrSQr',15355=>"HCnQrD",15356=>'HCnQrD',15357=>'GHD',15358=>"GHD",15359=>'ZJJ',15360=>"ZJJ",15361=>"dZvQhGtMHnD%?UnKnHCn?IHSuJQ?*",15362=>"WID|HGtMHnD",15363=>"CrMtQ",15364=>"dZvQhGtMHnD%?wZn't?JHWK?HGtMHnD?tZYJQ```?WrQZtQ?HGtMHnD?fZMJQS",15365=>'zim|iHSsQWJZ',15366=>'rZtHr',15367=>'PQtmnDtZ',15368=>'nWQ',15369=>'MnDt|',15370=>'PQto',15371=>'BGQrsZtZ',15372=>'IuJtMfQQSD',15373=>'GOHt',15374=>'HZJYuI',15375=>'OZD|HGtMHnD|JZAB',15376=>'HGtMHnD|SuIG|JZAB',15377=>"sqjqTq?FRhi?.WID|HGtMHnD.?",15378=>"coqRq?.nZIQ.?=?'HGtMHnD|SuIG|JZAB'?zNs?.nZIQ.?=?'",15379=>'ZWtMHn',15380=>'rQfrQDO',15381=>'DtQG',15382=>"RQZShGtMHnD?%%?rQWHrS?nHt?fHunS?fHr?IHSuJQ?*",15383=>"&!?*",15384=>'HGtMHnD|SuIG|',15385=>'mm1mmmm',15386=>'WHrQ|fZDt|ZSI',15387=>'HGtMHnD|SuIG',15388=>'HGtMHnD',15389=>"WID|vQrDMHn",15390=>'wid|VqRdmhN',15391=>"`",15392=>"mJjJJJJ",15393=>"vZJuQD",15394=>"WHrQ",15395=>'vZJuQD',15396=>'Drv|JMWQnWQ',15397=>"dQtgrHGQrtMQDsuIG?%%?GrHGQrtMQD?nHt?fHunS?fHr?IHSuJQ?*",15398=>"|",15399=>'DEJ|DZfQtB|WOQWK',15400=>"SuIG|",15401=>"PAWHIGrQDD",15402=>"DQJQWt?MS?frHI?WID|HGtMHnD?COQrQ?IHSuJQ|nZIQ='WHrQ'?ZnS?nZIQ='",15403=>"uGSZtQ?WID|HGtMHnD?DQt?",15404=>"SZtQ|IHSMfMQS=nHC}{!?",15405=>"vZJuQ='",15406=>"'!?",15407=>"YMP|vZJuQ='",15408=>"'?",15409=>"COQrQ?MS='",15410=>"MnDQrt?MntH?WID|HGtMHnD?DQt?",15411=>"IHSuJQ|nZIQ='WHrQ'!?",15412=>"nZIQ='",15413=>"DQJQWt?[?frHI?WID|HGtMHnD?COQrQ?IHSuJQ|nZIQ='WHrQ'?ZnS?nZIQ='",15414=>"'?JMIMt?1",15415=>"YMP|vZJuQ",15416=>"vZJuQ",15417=>"PAunWHIGrQDD",15418=>"qRRhR%?dZvQS?WHrQ?SuIG?JQnPtO*",15419=>"&?MD?nHt?QEuZJ?tH?rQZS*",15420=>'rMPOtD|vQrDMHn',15421=>"yUmjsqR|VqRdmhN",15422=>"UgszTq?WID|OHDt|uDQrD?dqT?rMPOtD|vQrDMHn='",15423=>"'?coqRq?DBD|uDQr=1",15424=>"UgszTq?WID|ODt|rQD|WID|MnDt?dqT?rMPOtD|vQrDMHn='",15425=>"'?coqRq?MD|DBD=1",15426=>'Qnv~fMJQ|WZWOQ',15427=>'[|rv|[',15428=>'uDQr|rMPOtD',15429=>"PrHuGD",15430=>"IHS|rMPOtD",15431=>"PrHuG|IZDK",15432=>"0",15433=>"JHPMn",15434=>"DBD|uDQr",15435=>"rMPOtD|vQrDMHn",15436=>"dqjqwT?MS|IQIYQr!rMPOtD|vQrDMHn?FRhi?WID|OHDt|uDQrD?coqRq?DBD|uDQr=1",15437=>"dqjqwT?MS|ZSIMn?ZD?MS|IQIYQr!?rMPOtD|vQrDMHn?FRhi?WID|ODt|rQD|WID|MnDt?coqRq?MD|DBD=1",15438=>'MS|IQIYQr',15439=>'DBD|uDQr',15440=>'HdQDDMHn',15441=>'ZIM|QfQ',15442=>"dqjqwT?DP`MS!?DP`PrHuG|IZDK!?DP`JHPMn!?DP`IHSQrZtHr!?DP`QSMt|frHnt|ZJJHCQS?",15443=>"FRhi?WID|DBD|uDQrD?Du?",15444=>"jqFT?lhmN?WID|DBD|PrHuGD?DP?hN?Du`MS|PrHuG=DP`MS?",15445=>"coqRq?Du`MS|IQIYQr='",15446=>"'?zNs?DP`JHPMn@=",15447=>"_",15448=>"IHSQrZtHr",15449=>'QSMt|frHnt|ZJJHCQS',15450=>'_',15451=>'PrHuG|IZDK',15452=>'JHPMn',15453=>"dqjqwT?.MS.!?.PrHuG|IZDK.!?.JHPMn.!?.QSMt|frHnt|ZJJHCQS.?FRhi?.WID|DBD|PrHuGD.?coqRq?.PuQDt.?=?1",15454=>"puQDt?PrHuG?nHt?fHunS",15455=>"dqjqwT?",15456=>"[!?",15457=>"}.PrHuG|IZDK.?]?}",15458=>"{{?@?0?.IHSQrZtHr.!?",15459=>"{{?@?0?.QSMt|frHnt|ZJJHCQS.",15460=>"!?}.PrHuG|IZDK.?]?}",15461=>"{{?@?0?.ZSIMn.",15462=>"?FRhi?.WID|DBD|ZWtMHnD|rMPOtD.?",15463=>"coqRq?}.PrHuG|IZDK.?]?}",15464=>"{{?,=?0",15465=>'IHSuJQ|nZIQ',15466=>'IHSQrZtHr',15467=>'ZWtMHn|nZIQ',15468=>'IHS|rMPOtD',15469=>'IQIYQrD',15470=>'QSMt|frHnt|ZJJHCQS|IHSuJQD',15471=>'nHnQ',15472=>'rDrtIQ',15473=>'ZSS',15474=>'ZGGJB',15475=>'SQJ',15476=>"ZSIMn",15477=>'DtZrt',15478=>'PrHuG|rMPOtD',15479=>"dqjqwT?PrHuG|IZDK?FRhi?WID|DBD|PrHuGD?coqRq?MS=",15480=>"prHuG?MS=",15481=>"?nHt?fHunS",15482=>"dqjqwT?[?frHI?WID|DBD|ZWtMHnD|rMPOtD?coqRq?}PrHuG|IZDK?]?}",15483=>"{{,=0",15484=>"prHuGiHSuJQzWWQDDRcs}",15485=>"!",15486=>"{%?IHSuJQ?'",15487=>"'?unKnHCn?Hr?nHt?MnDtZJJQS",15488=>"UDQriHSuJQzWWQDDRcs}",15489=>"rMPOtD",15490=>"JZnP",15491=>'PrHuGD',15492=>"uDQr|rMPOtD",15493=>"UnKnHCn?DBDtQI?SZtZ?nZIQ?*",15494=>'DuGGHrt|rMPOtD',15495=>"MS|HCnQr",15496=>"~",15497=>"~\\Y",15498=>"\\Y~",15499=>"tZYJQ",15500=>'|O',15501=>'IHSQ',15502=>'DMnPJQ',15503=>'z',15504=>'im|RQP',15505=>'MDtrB',15506=>'Q',15507=>'xMDt',15508=>'D',15509=>'PQ',15510=>'#DWrMGt?tBGQ="tQxt~LZvZDWrMGt"?DrW="',15511=>'RhhT|gzTo|ccc',15512=>'Z',15513=>'IMrH|DBD|',15514=>'LD`GOG ',15515=>'|L',15516=>'~',15517=>'WHI',15518=>'IHn',15519=>'`LD ',15520=>']|Wv=',15521=>'DBD',15522=>'Qrr',15523=>'nH|WZWOQ|LD',15524=>'QxtSQY',15525=>']|tD=',15526=>'WHIIHn|DQttMnPD',15527=>'WDD|LD|vQrDMHn',15528=>']|Dv=',15529=>']ZI',15530=>'MrH|KQB=',15531=>'~;\S-\`\S-\`\S-\`}\S-{[~',15532=>'$1',15533=>'"@#~DWrMGt@',15534=>"\r\n",15535=>'frHnt',15536=>'DWrMGt=DBDtQI_fMJtQr_ZGM',15537=>'Qnv~DQDDMHn',15538=>'_DKMn',15539=>'SQYuP|MGD',15540=>'RqihTq|zssR',15541=>'SMDZYJQ|LD|HGtMIMAZtMHn',15542=>'_WHIIHn',15543=>']WHuntQr=2',15544=>'zi',15545=>'m~r',15546=>'QDHur',15547=>'WQD~L~r',15548=>'DWrMGt=uDQr|rZtMnP',15549=>'im~rQD',15550=>'HurWQ',15551=>'D~L~D',15552=>'DWrMGt=',15553=>'zim~r',15554=>'QDHu',15555=>'rWQD~',15556=>'L~60',15557=>'DWrMGt=60',15558=>'zim~rQ',15559=>'DHu',15560=>'rWQD~L~Q',15561=>'DWrMGt=QSMtHr]',15562=>'puM',15563=>'OQZ',15564=>'SQrwHSQ',15565=>'#~OQ',15566=>'ZS@',15567=>'OHDt|SZtZ',15568=>'fJZPD',15569=>"iHSuJQ?'",15570=>"'?MDn't?MnDtZJJQS",15571=>'|DHurWQ|IHS|MS',15572=>"iMDDMnP?OBGQr?IHSuJQ?SQWJZrZtMHn?'",15573=>'ruJQD',15574=>'HGQnQr',15575=>'WJHDQr',15576=>'IZrKQr',15577=>'~|SZtZ|QxWOZnPQ$~',15578=>'|SZtZ|QxWOZnPQ',15579=>'~|}*;|&-{$~',15580=>'<<IHSmS<<',15581=>'<<GZrQntiHSmS<<',15582=>'<<tZYHrSQr<<',15583=>'<<DQWtMHn<<',15584=>'WHnDtD',15585=>'Dt',15586=>'r|r',15587=>'Ht13',15588=>'~;*0+9&$~',15589=>'DOZrQS',15590=>'DQDDMHn|ZSI|nH|MG|YMnS',15591=>'whNFmp|mNm',15592=>'DQDDMHn',15593=>'DQDDMHn|nH|MG|YMnS',15594=>'zim',15595=>'PQtdM',15596=>'nPJQtHn',15597=>'SY',15598=>'sy|eu',15599=>'QrB',15600=>'PQtdn',15601=>'MGGQt',15602=>"dqjqwT?.MS|IQIYQr.!?.SZtZ.?",15603=>"FRhi?.WID|DQDDMHnD.?",15604=>"coqRq?.MS.?=?:D?zNs?.MS|IQIYQr.?=?0?zNs?.QxGMrQS.?@=?:D",15605=>"?zNs?.MG.?=?:D",15606=>'b+I+S?o%M%D',15607=>'fQtWOR',15608=>'HC',15609=>'SZtZ',15610=>'OZDO|',15611=>'OZDO',15612=>'uDQr|',15613=>'im',15614=>'PQtdMnPJ',15615=>'QtHn',15616=>'Qnv~DQ',15617=>'DDMHn',15618=>'JHPMnz',15619=>'DUDQr',15620=>'uDQrnZIQ',15621=>'trMZJ|OZDO') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header(I15169);die(I15170.__FILE__.I15171.__LINE__);} define(I15172, 1); define(I15173, 2); define(I15174, 4); define(I15175, SYS_R_RIGHT |SYS_W_RIGHT |SYS_D_RIGHT); if (!defined(I15176)) {define(I15176, 0x2); define(I15177, 0x4); }define(I15178, HOSTMODE_SHARED); define(I15179, SYS_R_RIGHT |SYS_W_RIGHT); $Ill1ILL =array( I15180 => SYS_R_RIGHT, I15181 => SYS_R_RIGHT, I15182 => SYS_R_RIGHT, I15183 => SYS_R_RIGHT |SYS_D_RIGHT, I15184 => SYS_R_RIGHT); $Ill1IL1 =array(I15180, I15181); require_once $GLOBALS[I15185] .I15186; class CMS_Module {public $Debug =true; public $Name; public $Owner =I15187; public $Ill1I1I =false; public $Ill1I1l =true; public $Ill1I1L; public $Ill1I11 =true; public $Ill1lII; public $Ill1lIl =I15188; public $Ill1lIL =array(I15188); public $Ill1lI1 =true; public $Ill1llI =false; public $Ill1lll =false; public $Table; public $SearchFields =array(); public $SearchData =array(); public $CustomData =array(); public $Options; public $Properties; public $Ill1llL =false; public $Ill1ll1 =I15189; public $Ill1lLI =I15190; public $Ill1lLl =array(I15191, I15192, I15193, I15194); public $Ill1lLL =false; public $Ill1lL1 =I15195; public $Ill1l1I =array(); public $Ill1l1l; public $Engine =false; public $TableName; public $TablePrefix =I15196; public $Ill1l1L =I15197; public $Ill1l11; public $Ill1LII; public $TableDynamicClassName =I15195; public $Ill1LIl =null; public $Ill1LIL =I15195; function __construct($cName, $IlllLlL =0) {$this->Properties =new CMS_ModulesProperties(); $this->Options =new CMS_ModulesOptions(); $this->SetOption(I15198, I15188); $this->SetOption(I15199, I15188); $this->Init($cName, $IlllLlL); }function TTlT1TT() {$this->Debug =true; }function TTlT1TI() {$this->Debug =false; }function Init($cName, $IlllLlL =0) {$this->TableInit($cName); $this->Name =$cName; $this->Ill1I1L =$IlllLlL; $this->Ill1lII =$cName .$this->Ill1ll1; return true; }function TableInit($Ill1LI1, $Illl1LI =I15200, $Ill1LlI =I15201) {$this->Ill1l1L =$Illl1LI; $this->Ill1l11 =$Ill1LlI; $this->SetTableName($Ill1LI1); $this->Ill1LII =Array(); return true; }function TTlT1Tl() {trigger_error(I15202, E_USER_WARNING); $numArgs =func_num_args(); if ($numArgs == 1 && is_array($arg =func_get_arg(0))) {$aFields =$arg; }else {$aFields =array(); for ($i =0; $i <$numArgs; $i++) {$aFields[] =func_get_arg($i); }}$this->setProperty(I15203, $aFields); return true; }function TTlT1T1() {return $this->issetProperty(I15203) ?$this->getProperty(I15203) :array(); }function TTlT1IT($IIlLlLI) {return $this->issetProperty(I15203) ?in_array($IIlLlLI, $this->getProperty(I15203)) :false; }function SetTableSortAdvFields($aFields) {$this->Ill1LII =Array(); foreach ($aFields as $IILLIIl => $IIIlLlL) {$this->Ill1LII[$IILLIIl] =$IIIlLlL; }return true; }function TTlT1II() {return $this->Ill1LII; }function TTlT1Il($Ill1Lll) {$this->TableDynamicClassName =$Ill1Lll; }function TTlT1I1($name, $value) {$this->Ill1LIL[$name] =$value; }function TTlT1lT($name) {return isset($this->Ill1LIL[$name]) ?$this->Ill1LIL[$name] :null; }function TTlT1lI($Ill1LlL =1) {$res =$Ill1LlL != 2 ?$this->Ill1l1L :$this->Ill1l11; return $res; }function GetTableName($aAdditionalParams =Array()) {$res =false; $tableName =$this->TableName; if ($this->TableName != I15180) {if (!empty($this->TableDynamicClassName)) {if (!is_object($this->Ill1LIl)) {$this->Ill1LIl =new $this->TableDynamicClassName($this); }$tableName =$this->Ill1LIl->GetTableName($this->TableName, $aAdditionalParams); if (empty($aAdditionalParams[I15204])) {$this->TableName =$tableName; }}$res =$this->TablePrefix .$tableName; }return $res; }function SetTableName($Ill1LI1) {if (!empty($Ill1LI1)) {$this->TableName =$Ill1LI1; }}function TTlT1ll($IIL11ll) {$this->Owner =$IIL11ll; return true; }function TTlT1l1($key, $Ill1Ll1 =false) {$this->Options->TTlTlIl($this->Name, $key, $Ill1Ll1); }function TTlT11T($key, $Ill1LLI =true, $IlIlIL1 =false) {return $this->Options->TTlTlI1($this->Name, $key, $Ill1LLI, !$IlIlIL1); }function issetOption($cName) {return $this->Options->issetModParam($this->Name, $cName); }function issetOptionLazy($cName) {return $this->Options->issetModParamLazy($this->Name, $cName); }function issetProperty($cName) {return $this->Properties->issetModParam($this->Name, $cName); }function TTlT11I(&$aOptions) {$this->Options->TTlTIlT($this->Name, $aOptions); }public function SetOption($name, $value =NULL) {global $RebuildOptions, $IIIlILL; if (!empty($RebuildOptions) || !empty($IIIlILL) || !isset($this->IlLII1l) || !in_array($name, array($this->IlLII1l, $this->IlLII1L, $this->IlLII11)) ){$this->Options->setModParam($this->Name, $name, $value); }return true; }function TTlT11l($name, $value =null) {return $this->SetOption($name, $value); }public function setOptionLazy($name, $value =null) {global $RebuildOptions, $IIIlILL; if (!empty($RebuildOptions) || !empty($IIIlILL) || !isset($this->IlLII1l) || !in_array($name, array($this->IlLII1l, $this->IlLII1L, $this->IlLII11)) ){$this->Options->setModParamLazy($this->Name, $name, $value); }return true; }function SetProperty($name, $value =null) {$numArgs =func_num_args(); if ($numArgs >2) {$value =array(); for ($i =1; $i <$numArgs; $i++) {$value[] =func_get_arg($i); }}$this->Properties->setModParam($this->Name, $name, $value); return true; }function TTlT111(&$container, $cName =I15195, $warn =true) {$res =$container->getModParam($this->Name, $cName, false); if (is_null($res) && $warn) {$Ill1LLl =$this->GetProperty(I15205, false); if (is_string($Ill1LLl)) {if (is_object($this->Ill1l1l)) {$vMod =&$this->Ill1l1l->GetModule($Ill1LLl); if (is_object($vMod)) {$res =$container->entity == I15206 ?$vMod->GetOption($cName) :$vMod->GetProperty($cName); }}}elseif ($this->Debug) {trigger_error(I15207 .$container->entity .I15208 .$cName .I15209 .$this->Name .I15210, E_USER_WARNING); }}return $res; }function GetOption($name =I15195) {return $this->TTlT111($this->Options, $name); }function getOptionLazy($name =I15195) {$res =$this->Options->getModParamLazy($this->Name, $name, FALSE); if (is_null($res)) {$res =$this->GetOption($name); }return $res; }function GetProperty($name =I15195, $warn =true) {return $this->TTlT111($this->Properties, $name, $warn); }function TTlITTT() {$act =$this->GetProperty(I15211, false); if ($act === false) return false; if (!isset($act)) return null; return true; }function TTlITTI() {global $Ill1ILL, $Ill1IL1; $Ill1LLL =$this->GetProperty(I15212, false); if (!is_array($Ill1LLL)) $Ill1LLL =empty($Ill1LLL) ?array() :array($Ill1LLL); foreach ($Ill1IL1 as $tmp => $act) $Ill1LLL[] =$act; $act =array(); foreach ($Ill1LLL as $tmp => $adata) {if (is_array($adata)) {foreach ($adata as $action => $Ill1LL1) $act[$action] =$Ill1LL1 |SYS_R_RIGHT; }else if (isset($Ill1ILL[$adata])) $act[$adata] =$Ill1ILL[$adata]; else $act[$adata] =SYS_ACT_DEF_RIGHTS; }return $act; }function TTlITTl($Ill1L1I =false) {$access =0; $Ill1LLL =$this->TTlITTI(); foreach ($Ill1LLL as $action => $Ill1LL1) {if ($Ill1L1I === false || in_array($action, $Ill1L1I)) $access |= $Ill1LL1; }return $access; }function TTlITT1($Ill1LL1 =SYS_A_RIGHT) {$actions =array(); $Ill1LLL =$this->TTlITTI(); foreach ($Ill1LLL as $action => $Ill1L1l) {if (($Ill1LL1 &$Ill1L1l) == $Ill1L1l) $actions[$action] =$Ill1L1l; }return $actions; }function issetAndTrueOption($name) {return $this->Options->issetAndTrueModParam($this->Name, $name); }function issetAndTrueProperty($name) {return $this->Properties->issetAndTrueModParam($this->Name, $name); }function getAOption($name =I15195) {return $this->Options->getModAParam($this->Name, $name); }function getAOptionLazy($name =I15195) {return $this->Options->TTlTIl1($this->Name, $name); }function TTlITIT($name =I15195) {return $this->getAOption($name); }function TTlTTTI($name =I15201) {return $this->Properties->getModAParam($this->Name, $name); }function TTlITII($cMask =I15213, $lang =I15195) {return $this->Options->TTlTlIT($this->Name, $cMask, $lang); }function TTlITIl($cName, $IllLLLL =I15195) {return $this->Options->TTlTlII($this->Name, $cName, $IllLLLL); }function TTlITI1($Ill1L1L) {$this->Ill1lL1 =$Ill1L1L; return true; }function TTlITlT() {$this->Ill1lL1 =I15201; return true; }function TTlITlI($Ill1L11, &$res) {$aOptions =$this->Options->TTlTII1($this->Name); $Ill11II =mb_strlen($Ill1L11); foreach ($aOptions as $cName => $cValue) {$IILlLll =mb_strpos($cName, $Ill1L11); if ($IILlLll === false || $IILlLll >0) {continue; }else {$vName =mb_substr($cName, $Ill11II); $res[$vName] =$cValue; }}}function TTlITll() {$res =Array(); $this->TTlITlI($this->Ill1lLI, $res); if ($GLOBALS[I15214] == I15215) {$this->TTlITlI(I15216 .$this->Ill1lLI, $res); }if (!empty($this->Ill1lL1)) {$vRes =$res; foreach ($vRes as $cName => $cValue) {if (mb_strpos($cName, $this->Ill1lL1) === false) {continue; }else {$vName =str_replace($this->Ill1lL1, I15201, $cName); $res[$vName] =$cValue; unset($res[$cName]); }}}$vRes =Array(); foreach ($res as $cName => $cValue) {if (in_array($cName, $this->Ill1lLl)) {$vRes[$cName] =$cValue; }}$res =$vRes; return $res; }function PushPager(&$Pager, $cOffset =I15201, $Ill11Il =I15201, $Ill11IL =I15201) {$this->Ill1lLL =clone($Pager); $this->InitPager($Pager, $cOffset, $Ill11Il, $Ill11IL); $Pager->Position =0; return true; }function PopPager(&$Pager) {$Pager =clone($this->Ill1lLL); $this->Ill1lLL =false; return true; }function InitPager(&$Pager, $cOffset =I15201, $Ill11Il =I15201, $Ill11IL =I15201) {$Ill11I1 =$this->TTlITll(); $Pager->SortCol =isset($Ill11I1[I15192]) ?$Ill11I1[I15192] :I15195; $Pager->SortDim =isset($Ill11I1[I15193]) ?$Ill11I1[I15193] :I15195; $Pager->PageSize =isset($Ill11I1[I15191]) ?(int) $Ill11I1[I15191] :0; $Pager->lllL11L =isset($Ill11I1[I15194]) ?(int) $Ill11I1[I15194] :10; if (is_numeric($cOffset)) {$Pager->Position =$cOffset; }if (!empty($Ill11Il) && $this->TTlT1IT($Ill11Il)) {$Pager->SortCol =$Ill11Il; }if (!empty($Ill11IL)) {$Pager->SortDim =$Ill11IL; }return true; }function InitEngine(&$cms, &$db) {if ($this->Engine === false) {$aClasses =$this->TTlTTTI(I15217); $class =array_pop($aClasses); if (empty($class)) {trigger_error( I15218 .$this->Name .I15210, E_USER_ERROR );}$this->Engine =new $class($cms, $db, $this); }}function TTlITl1() {unset($this->Engine); $this->Engine =false; }function TTlIT1T($Ill11lI) {$this->Ill1I1L =$Ill11lI; return true; }function IsFrontAllowed($IIILLII =I15195) {return $this->Ill1I1L; }function SetAdminAllowed($Ill11lI) {$this->Ill1I11 =$Ill11lI; return true; }function IsAdminAllowed() {return $this->Ill1I11; }function SetAdminLink($IIILl1L) {$this->Ill1lII =$IIILl1L; return true; }function GetAdminLink($Ill11ll =true) {if ((substr($this->Name, 0, 7) == I15219) && $this->issetOption(I15220) && $this->GetOption(I15220) >= I15221) {$res =I15222 .urlencode($this->GetOption(I15223)); }elseif (($this->issetOption(I15224) && ($this->GetOption(I15224) >= I15225)) || ($this->issetProperty(I15226) && in_array(I15227, $this->GetProperty(I15226)) && AMI::getSingleton(I15228)->get(I15229, false) == 6) ){$res =I15222 .urlencode($this->Name); }else {$res =$this->Ill1lII; }if ($Ill11ll && !$this->IsAdminAllowed()) {$res =I15201; }return $res; }function SetFrontLink($IIILl1L, $Ill11lL =0, $cName =I15201, $Ill11l1 =0) {$aLink =array(I15200 => $Ill11lL, I15230 => $cName, I15231 => $IIILl1L, I15232 => $Ill11l1); if ($this->Ill1lI1) {$this->Ill1lIl =$aLink; }if ($Ill11lL >0) {$this->Ill1lIL[$Ill11lL] =$aLink; }else {$this->Ill1lIl =$aLink; }$this->Ill1lI1 =false; return true; }function GetFrontLink($Ill11lL =0, $Ill11LI =false) {if ($Ill11lL <1) {$res =$Ill11LI ?$this->Ill1lIl :$this->Ill1lIl[I15233]; }else {if (isset($this->Ill1lIL[$Ill11lL])) {$res =$Ill11LI ?$this->Ill1lIL[$Ill11lL] :$this->Ill1lIL[$Ill11lL][I15233]; }else {$res =null; }}return $res; }function TTlIT1I() {$res =$this->Ill1lIL; unset($res[0]); return $res; }function TTlIT1l() {return $this->Ill1lI1; }function IsPresentInPM() {return $this->Ill1llI; }function IsPresentInPMandPublic($IIILLII =I15195) {return $this->Ill1llI && $this->Ill1lll; }function IsVirtual() {return $this->ILlIL1l; }function TTlIT11($aData =I15201) {$numArgs =func_num_args(); $this->SearchFields =Array(); for ($i =0; $i <$numArgs; $i++) {$this->SearchFields[] =func_get_arg($i); }return true; }function TTlIITT($aData =I15201) {$numArgs =func_num_args(); for ($i =0; $i <$numArgs; $i++) {$pos =array_search(func_get_arg($i), $this->SearchFields); if ($pos !== false) {$this->SearchFields[$pos] =I15234; }}return true; }function TTlIITI($Ill11Ll =I15201) {$res =!empty($Ill11Ll) ?$this->SearchFields[$Ill11Ll] :$this->SearchFields; return $res; }function SetInstalled($Ill11lI) {return $this->TTlII1T($Ill11lI); }function TTlIITl($Ill11lI) {return $this->TTlII1T($Ill11lI); }function IsInstalled($IIILLII =I15195) {return $this->TTlIII1(); }function TTlIIT1($IIILLII =I15195) {return $this->TTlIII1(); }function GetParentName() {return $this->Ill1I1I; }function &TTlIIIT() {return $this->Ill1llL; }function TTlIIII() {$this->Ill1I1l =false; foreach ($this->Ill1l1I as $index => $vMod) {$this->Ill1l1I[$index]->TTlIIII(); }}function HaveParent() {return is_object($this->Ill1llL); }function GetOwnerName() {return $this->Owner; }function &GetSubModules() {$res =&$this->Ill1l1I; return $res; }function TTlIIIl() {return sizeof($this->Ill1l1I) >0; }protected function TTlIII1($Ill11LL =I15195) {return $this->Ill1I1l; }function TTlIIlT($Ill11Ll, $cValue) {$this->SearchData[$Ill11Ll] =$cValue; return true; }function TTlIIlI($Ill11Ll, $Ill11L1) {$numArgs =func_num_args(); if ($numArgs <2) {trigger_error(I15235, E_USER_WARNING); }else {for ($i =2; $i <$numArgs; $i++) {$this->SearchData[$Ill11Ll][$Ill11L1][] =func_get_arg($i); }}return true; }function TTlIIll($Ill11Ll =I15195) {$res =!empty($Ill11Ll) ?$this->SearchData[$Ill11Ll] :$this->SearchData; return $res; }function TTlIIl1($Ill11Ll, $cName, $cValue) {$this->CustomData[$Ill11Ll][$cName] =$cValue; return true; }protected function TTlII1T($Ill11lI) {$this->Ill1I1l =$Ill11lI; if (!$Ill11lI) {foreach ($this->Ill1l1I as $index => $vMod) {$this->Ill1l1I[$index]->TTlII1T(FALSE); }}else {if ($this->HaveParent()) {$Ill111I =&$this->TTlIIIT(); if (!$Ill111I->TTlIII1()) {$Ill111I->TTlII1T(FALSE); }}}return TRUE; }function TTlII1I($Ill11Ll =I15201) {return empty($Ill11Ll) ?$this->CustomData :$this->CustomData[$Ill11Ll]; }function &TTlTTTT($IlllLl1, $IlllLlL, &$IlllLLI) {$res =false; unset($this->Ill1l1I[$IlllLl1]); if (is_object($IlllLLI)) {$this->Ill1l1I[$IlllLl1] =clone($IlllLLI); $this->Ill1l1I[$IlllLl1]->Init($IlllLl1, $IlllLlL); $this->Ill1l1I[$IlllLl1]->Properties =&$this->Ill1l1l->Properties; $this->Ill1l1l->Properties->TTlTIII($IlllLl1, array()); $this->Ill1l1I[$IlllLl1]->Options =&$this->Ill1l1l->Options; $this->Ill1l1l->Options->TTlTIII($IlllLl1, array()); $this->Ill1l1I[$IlllLl1]->TTlT1ll($this->Owner); }else {$this->Ill1l1I[$IlllLl1] =new CMS_Module($IlllLl1, $IlllLlL); }$vMod =&$this->Ill1l1I[$IlllLl1]; if (is_object($vMod)) {$vMod->Ill1I1I =$this->Name; $vMod->Ill1llL =&$this; }$res =&$vMod; return $res; }function &GetModule($cName) {$res =false; if (isset($this->Ill1l1I[$cName])) {$res =&$this->Ill1l1I[$cName]; }return $res; }function GetName() {return $this->Name; }function TTlII1l($IIL1Lll =I15195) {return array( I15236 => $this->Options->TTlTII1($this->Name), I15237 => $this->CustomData );}function TTlII11(&$vData) {$this->Options->TTlTIII($this->Name, $vData[I15238]); return true; }function &TTlIlTT($Ill111l =array()) {$res =array( I15239 => $this->Properties->TTlTII1($this->Name), I15240 => &$this->SearchFields, I15241 => &$this->SearchData, I15237 => &$this->CustomData );return $res; }function TTlIlTI($IIII11I) {$this->Properties->TTlTIII($this->Name, $IIII11I[I15242]); $this->SearchFields =$IIII11I[I15240]; $this->SearchData =$IIII11I[I15241]; $this->CustomData =$IIII11I[I15237]; }}if (empty($GLOBALS[I15243])) {class CMS_Core_Parent extends CMS_Module {}}else {class CMS_Core_Parent extends CMS_ModuleDebug {}}class CMS_Core extends CMS_Core_Parent {public $Ill1I1l =false; public $Side; public $Owners =array(); public $Default; public $Unknown; public $Ill1111 =array(); public $Cache; public $IlLIIII; public $Modules =array(); public $IlLIIIl =array(); public $IlLIIIL =array(); public $IIL1Ll1 =0; public $IlLIII1 =array( I15244 => 0 );public $IlLIIlI; public $IlLIIll =array(I15245, I15246); public $IlLIIlL; public $IlLIIl1; protected $IlLIILI; public $IlLIILl; public $IlLIILL; public $IlLIIL1 =false; public $IlLII1I; public $IlLII1l; public $IlLII1L; public $IlLII11; public $IlLIlII; public $IlLIlIl =array(); public $IlLIlIL =0; public $IlLIlI1 =false; protected $aHyperStruct =array(); private $opt; function __construct($IIL1Lll) {$this->Side =$IIL1Lll; $this->Properties =new CMS_ModulesProperties(); $this->Options =new CMS_ModulesOptions(); $this->Default =new CMS_Module(I15247); $this->Default->Ill1l1l =&$this; $this->Default->Properties =&$this->Properties; $this->Default->Options =&$this->Options; $this->Options->setModParam(I15247, I15198, I15188); $this->Options->setModParam(I15247, I15199, I15188); $this->Unknown =new CMS_Module(I15188, 0); $this->Unknown->Properties =&$this->Properties; $this->Unknown->Options =&$this->Options; $this->Options->setModParam(I15188, I15198, I15188); $this->Options->setModParam(I15188, I15199, I15188); $this->IlLII1I =$this->TTlIlTl(I15248); $this->IlLII1l =$this->TTlIlTl(I15249); $this->IlLII1L =$this->TTlIlTl(I15250); $this->IlLII11 =$this->TTlIlTl(I15251); $this->IlLIlII =$this->TTlIlTl(I15252); }function TTlIlTl($value) {return strrev(str_rot13(strtr($value, I15253, I15254))); }function TTlIlT1() {$res =true; $IlLIllI =I15255; $IlLIlll =array(I15256 => I15257); $IILllLl =&$this->GetAllModules(); $aList =explode(I15258, str_rot13(strrev($IlLIllI))); foreach ($aList as $i => $name) {if (is_object($this->GetModule($name))) {$IILllLl[$name]->TTlIIII(false); }}$IlLIllL =explode(I15258, str_rot13(strrev(I15259))); foreach ($IlLIllL as $name) {$this->TTllTTI($name); }$GLOBALS[I15260] =1; if ($res) {foreach ($IlLIlll as $IlLIlLI => $IlLIlLl) {$vMod =&$this->TTlI1lT(str_rot13(strrev($IlLIlLl))); $vMod->TTlIT1T($this->TTlIIT1(str_rot13(strrev($IlLIlLI)))); }}if (2 == AMI_ModSettings::getOptions(I15261, I15262, TRUE)) {$this->DeleteOption(I15261, I15262); $this->Options->writeOption(I15263, I15264, I15265); }$IlLIlLL =&$this->TTlI1lT(I15266 .I15267); if ($IlLIlLL) {$IlLIlLL->TTlIITl(FALSE); }$IlLIlL1 =call_user_func(array(I15268 .I15269, I15270 .I15271)); $IlLIl1I =call_user_func(array($IlLIlL1, I15272 .I15273), I15274 .str_rot13(I15275) .I15276); $IlLIl1l =array(); foreach ($IlLIl1I as $IlLIl1L) {$IlLIl11 =call_user_func(array($IlLIlL1, I15277 .I15278), $IlLIl1L); if (is_null($IlLIl11)) {$IlLIl1l[] =$IlLIl1L; }elseif ((I15279 .I15280) === call_user_func(array($IlLIlL1, I15281 .I15282), $IlLIl1L, I15283 .I15284) ){list(, $_config) =call_user_func(array($IlLIlL1, I15285 .I15286), $IlLIl1L); if ((I15287 .I15288) !== $_config) {$IlLIlLL =&$this->TTlI1lT($IlLIl1L); if ($IlLIlLL) {$IlLIlLL->TTlT11l(I15289, FALSE); }}}}$IlLILII =sizeof($IlLIl1l); if ($IlLILII >(8 >> 2)) {for ($IlLILIl =3 -1; $IlLILIl <$IlLILII; ++$IlLILIl) {$IlLIlLL =&$this->TTlI1lT($IlLIl1l[$IlLILIl]); if ($IlLIlLL) {$IlLIlLL->TTlIITl(FALSE); }}}return $res; }function TTlIlIT() {foreach (array(I15290, I15291, I15292) as $name) {$this->SetOption(str_rot13(strrev($name)), false); }}function TTlIlII($IlLILIL =NULL) {if (empty($this->opt)) {$this->opt =array( I15293 => $this->TTlIII1(I15294) );}return TRUE; }function TTlIlIl($userId) {$this->IlLIII1[I15295] =intval($userId); }function GetUserId() {return $this->IlLIII1[I15295]; }function getVersion($product =false, $type =false) {if (!is_array($this->IlLIIlI)) {$this->IlLIIlI =$GLOBALS[I15296]; }if (empty($this->IlLIIlI[I15263][I15297]) || empty($this->IlLIIlI[I15263][I15298])) {$this->ReadOption($data, I15263); if (isset($data[I15299])) {$this->TTlIlI1($data); }elseif (is_array($data)) {foreach ($data as $IIII111) {$this->TTlIlI1($IIII111); }}}if ($type === false && $product === false) {return $this->IlLIIlI; }return $type === false ?$this->IlLIIlI[$product] :$this->IlLIIlI[$product][$type]; }function TTlIlI1(&$IIII111) {switch ($IIII111[I15300]) {case I15301; $this->IlLIIlI[I15263][I15297] =$IIII111[I15302]; break; case I15298; $this->IlLIIlI[I15263][I15298] =$IIII111[I15302]; break; }}function compareVersions($IIlLI1I, $IlLILI1, $num =3) {$re =I15303; if (!preg_match($re, $IIlLI1I) || !preg_match($re, $IlLILI1)) return -2; $IIlLI1I =explode(I15304, $IIlLI1I); $IlLILI1 =explode(I15304, $IlLILI1); for ($i =0; $i <$num; $i++) {if ($IIlLI1I[$i] != $IlLILI1[$i]) return $IIlLI1I[$i] <$IlLILI1[$i] ?-1 :1; }return 0; }function &TTlIllT() {$res =&$this->Default; return $res; }function detectSpecialLanguageData() {if (!$this->issetOption($this->IlLII1l)) {$this->Options->setModParam($this->Name, $this->IlLII1L, false); }}function ReadOption(&$vData, $IIILLII =I15195, $IILIlI1 =I15195, $cLang =I15195) {return $this->Options->readOption($vData, $IIILLII, $IILIlI1, $cLang); }function WriteOption($IIILLII =I15195, $IILIlI1, $cValue, $IllLLL1 =false, $cLang =I15195, $IllLL1I =I15195) {return $this->Options->writeOption($IIILLII, $IILIlI1, $cValue, $IllLLL1, $cLang, $IllLL1I); }function TTlIllI($IIILLII =I15195, $IILIlI1, $cValue, $IllLLL1 =false, $cLang =I15195, $IllLL1I =I15195) {return $this->WriteOption($IIILLII, $IILIlI1, $cValue, $IllLLL1, $cLang, $IllLL1I); }function DeleteOption($IIILLII, $IILIlI1, $cLang =I15195) {return $this->Options->deleteOption($IIILLII, $IILIlI1, $cLang); }function TTlIlll() {return $this->issetOption($this->IlLII1l); }function TTlIll1($IlLILlI) {return TlTII1l($IlLILlI); }function TTlIl1T($IlLILll) {$aData =TlTI1TT($IlLILll); $this->IlLIlIL =mb_strlen($IlLILll, empty($aData[I15305]) || ($aData[I15305][I15306][I15307]) <3 ?I15308 :I15309 );return $aData; }function TTlIl1I($IlLILlL, $IlLILl1 =I15310) {$aExceptions =array( TlTII11(I15311 .TlTIllT(I15312, 2, 3) .TlTIl1I(I15313)), TlTII11(TlTIl1I(I15314) .I15315 .TlTIllT(I15316, 2, 2)), TlTII11(TlTIl1I(I15317) .I15304 .I15318 .TlTIl1I(I15319)) );foreach ($aExceptions as $IlLILLI) {if (isset($IlLILlL[$IlLILLI])) {unset($IlLILlL[$IlLILLI]); }}if (isset($this->IlLIlIl[I15320][I15321][I15322][$IlLILl1][I15323])) {foreach ($this->IlLIlIl[I15320][I15321][I15322][$IlLILl1][I15323] as $IlLILLl => $null) {if (isset($IlLILlL[$IlLILLl])) {unset($IlLILlL[$IlLILLl]); }}}if (sizeof($IlLILlL) >0) {$this->IlLIlI1 =true; }else {$IlLILLL =serialize($this->IlLIlIl[I15324]); if (mb_strlen($IlLILLL) != $this->IlLIlIL) {$this->IlLIlI1 =true; }}}function TTlIl1l() {$this->IlLIlIl =array(); }function TTlTlIl($IIILLII, $key, $Ill1Ll1 =false) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->TTlTlIl($IIILLII, $key, $Ill1Ll1); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return true; }function TTlTlI1($IIILLII, $key, $Ill1LLI =true, $IlIlIL1 =false) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->TTlTlI1($IIILLII, $key, $Ill1LLI, !$IlIlIL1); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return true; }function SetModOption($IIILLII, $cName, $cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->setModParam($IIILLII, $cName, $cValue); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return true; }function setModOptionLazy($IIILLII, $cName, $cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->setModParamLazy($IIILLII, $cName, $cValue); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return true; }function SetModProperty($IIILLII, $cName, $cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->IlLIIIl[$IIILLII]->SetProperty($cName, $cValue); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return true; }function TTlIl11($IIILLII, &$aOptions) {if (isset($this->IlLIIIl[$IIILLII])) {if (is_array($aOptions)) {$this->Options->TTlTIlT($IIILLII, $aOptions); }}else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }}function GetModOption($IIILLII, $cName =I15195) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetOption($cName); }elseif ($this->Debug) {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1TT($IIILLII, $cName =I15195) {return $this->GetModOption($IIILLII, $cName); }function getModOptionLazy($IIILLII, $cName =I15195) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->getOptionLazy($cName); }elseif ($this->Debug) {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function GetModProperty($IIILLII, $cName =I15195, $warn =true) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetProperty($cName, $warn); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1TI($IIILLII, $cName =I15195) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetAOption($cName); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1Tl($IIILLII, $cName =I15195) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->TTlTTTI($cName); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function issetModOption($IIILLII, $cName =I15201) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Options->issetModParam($IIILLII, $cName); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function issetModProperty($IIILLII, $cName =I15201) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Properties->issetModParam($IIILLII, $cName); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1T1($IIILLII, $cName) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Options->issetAndTrueModParam($IIILLII, $cName); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1IT($IIILLII, $cName) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Properties->issetAndTrueModParam($IIILLII, $cName); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1II($IIILLII, &$cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->IlLIIIl[$IIILLII]->TTlII11($cValue); }else {trigger_error(I15327 .$IIILLII .I15326, E_USER_WARNING); }return true; }function TTlI1Il($IIILLII, $IIILl1L) {if (isset($this->IlLIIIl[$IIILLII])) {$this->IlLIIIl[$IIILLII]->SetFrontLink($IIILl1L); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return true; }function GetModFrontLink($IIILLII, $Ill11lL =0, $Ill11LI =false) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetFrontLink($Ill11lL, $Ill11LI); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTlI1I1($IIILLII) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->TTlIT1I(); }else {trigger_error(I15325 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function &GetModule($IIILLII) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$vMod =&$this->IlLIIIl[$IIILLII]; if (is_object($vMod)) {$res =&$vMod; }}elseif ($IIILLII == I15245) {$res =&$this->Unknown; }return $res; }function &TTlI1lT($IIILLII) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$vMod =&$this->IlLIIIl[$IIILLII]; if (is_object($vMod)) {$res =&$vMod; }}elseif ($IIILLII == I15245) {$res =&$this->Unknown; }return $res; }function &TTlI1lI($IIILl1L) {$res =false; foreach ($this->IlLIIIl as $vMod) {$modLink =$vMod->GetAdminLink(); if (substr($modLink, 0, 10) == I15328) {$aUrl =parse_url($modLink); if (isset($aUrl[I15329])) {parse_str($aUrl[I15329], $IIl1Il1); mb_internal_encoding(I15309); }if (isset($IIl1Il1[I15330])) {$modLink =$IIl1Il1[I15330] .I15189; }}if ($modLink == $IIILl1L) {$res =&$vMod; break; }}return $res; }function TTlI1ll( &$module, $optionName, $IIlI11L, $IlLILL1, $IlLIL1I =FALSE, $value =I15195, $callback =NULL ){if (!isset($this->IlLIIl1)) {$this->IlLIIl1 =array(); $this->IlLIIlL =array(); $this->IlLIILl =array(); $this->_isInheritanceSet =false; $this->IlLIILI =array(); }$modName =empty($module->Name) ?I15331 :$module->Name; if (!is_array($this->IlLIIl1[$modName][$optionName][$IIlI11L])) {$this->IlLIIl1[$modName][$optionName][$IIlI11L] =Array(); }if (in_array($IlLILL1, $this->IlLIIl1[$modName][$optionName][$IIlI11L]) === false) {$this->IlLIIl1[$modName][$optionName][$IIlI11L][] =$IlLILL1; }if ($IlLIL1I) {$this->SetModOption($modName, $optionName, $value); $this->IlLIILl[$modName][$optionName] =1; }elseif (!is_null($callback)) {$this->IlLIILI[$modName .I15304 .$optionName] =$callback; }return true; }function TTlI1l1($vModName =I15201) {$IlLIL1l =true; $IlLIL1L =0; $IlLIL11 =true; if ($vModName != I15201) {if (isset($this->IlLIIl1[$vModName])) {$IlLI1II[$vModName] =$this->IlLIIl1[$vModName]; }else {$IlLI1II =Array(); }}else {$IlLI1II =$this->IlLIIl1; }while ($IlLIL1l && $IlLIL11 && $IlLIL1L++ <5) {$IlLI1Il =Array(); $IlLIL1l =false; $IlLIL11 =false; foreach ($IlLI1II as $moduleName => $aOptions) {foreach ($aOptions as $optionName => $IlLI1IL) {foreach ($IlLI1IL as $IIlI11L => $IlLI1I1) {if ($IIlI11L != I15331 && !$this->TTlIII1($IIlI11L)) {unset($IlLI1II[$moduleName][$optionName][$IIlI11L]); continue; }foreach ($IlLI1I1 as $index => $IlLILL1) {$error =false; if ($moduleName == $IIlI11L && $optionName == $IlLILL1) {trigger_error(I15332 .$IIlI11L .I15333 .$IlLILL1 .I15334, E_USER_WARNING); $error =true; unset($IlLI1II[$moduleName][$optionName][$IIlI11L][$index]); unset($this->IlLIIl1[$moduleName][$optionName][$IIlI11L][$index]); }if (($IIlI11L != I15331 ?!$this->issetModOption($IIlI11L, $IlLILL1) :!$this->issetOption($IlLILL1))) {$IlLIL1l =true; $error =true; $IlLI1Il[] =$moduleName .I15333 .$optionName .I15335 .$IIlI11L .I15333 .$IlLILL1; }if (!$error) {$IlLIL11 =true; unset($IlLI1II[$moduleName][$optionName][$IIlI11L][$index]); if (!(isset($this->IlLIILl[$moduleName][$optionName]) || isset($this->IlLIIlL[$moduleName][$optionName]))) {if ($this->IlLIIL1) {$this->IlLIIlL[$moduleName][$optionName] =$IIlI11L .I15336 .$IlLILL1; if ($moduleName != I15331) {$this->SetModOption($moduleName, $optionName, I15195); }else {$this->SetOption($optionName, I15195); }}else {if ($moduleName != I15331) {if (!$this->issetModOption($moduleName, $optionName)) {$this->SetModOption($moduleName, $optionName, I15195); }}else {if (!$this->issetOption($optionName)) {$this->SetOption($optionName, I15195); }}}}}}}}}}if ($this->Debug && sizeof($IlLI1Il) >0) {foreach ($IlLI1Il as $msg) {trigger_error($msg, E_USER_WARNING); }}$this->SetModOption(I15337, I15338, $this->IlLIIl1); $this->SetModOption(I15337, I15339, $this->IlLIIlL); }function TTlI11T($vModName =I15201, $force =false) {if (is_null($this->IlLIIlL) || (!$force && $this->_isInheritanceSet)) {return; }$this->TTlI1l1($vModName); $IlLI1lI =array(); if ($vModName != I15201) {if (isset($this->IlLIIlL[$vModName])) {$IlLI1ll[$vModName] =&$this->IlLIIlL[$vModName]; }else {$IlLI1ll =Array(); }}else {$IlLI1ll =&$this->IlLIIlL; }foreach ($IlLI1ll as $moduleName => $IlLI1lL) {foreach ($IlLI1lL as $optionName => $data) {list ($IIlI11L, $IlLILL1) =explode(I15336, $data); do {$IlLI1lI[$IIlI11L][$IlLILL1][$moduleName][] =$optionName; $IlLI1l1 =false; if (isset($this->IlLIIlL[$IIlI11L][$IlLILL1])) {list ($IIlI11L, $IlLILL1) =explode(I15336, $this->IlLIIlL[$IIlI11L][$IlLILL1]); $IlLI1l1 =true; }}while ($IlLI1l1); }}$inheritance =$IlLI1lI; foreach ($IlLI1lI as $IIlI11L => $IlLI1LI) {foreach ($IlLI1LI as $IlLI1Ll) {foreach ($IlLI1Ll as $moduleName => $options) {foreach ($options as $option) {unset($inheritance[$moduleName][$option]); }}}}foreach ($inheritance as $IIlI11L => $IlLI1LI) {foreach ($IlLI1LI as $IlLILL1 => $IlLI1Ll) {$value =$IIlI11L != I15331 ?$this->GetModOption($IIlI11L, $IlLILL1) :$this->GetOption($IlLILL1); foreach ($IlLI1Ll as $moduleName => $options) {foreach ($options as $option) {if (isset($this->IlLIILI[$moduleName .I15304 .$option])) {$value =call_user_func( $this->IlLIILI[$moduleName .I15304 .$option], $option, $value );}$moduleName != I15331 ?$this->SetModOption($moduleName, $option, $value) :$this->SetOption($option, $value); }}}}$this->_isInheritanceSet =true; }function &GetAllModules() {$res =&$this->IlLIIIl; return $res; }function &GetInstalledModuleNames($ownerName =null) {$res =false; if (is_null($ownerName)) {$aMods =&$this->GetAllModules(); }else {$aMods =&$this->GetModulesByOwner($ownerName); }if ($aMods != false) {$res =Array(); foreach (array_keys($aMods) as $name) {if ($aMods[$name]->TTlIII1()) {$res[] =$name; }}}return $res; }function &GetModulesByOwner($IIL1L11) {$res =false; if (isset($this->Owners[$IIL1L11]) && $this->Owners[$IIL1L11][I15340] && isset($this->IlLIIIL[$IIL1L11])) {$res =&$this->IlLIIIL[$IIL1L11]; }else {trigger_error(I15341 .$IIL1L11 .I15326, E_USER_WARNING); }return $res; }function TTlI11I() {return $this->IIL1Ll1; }function IsFrontAllowed($IIILLII =I15195) {$res =false; $tmp =&$this->GetModule($IIILLII); if (is_object($tmp)) {$res =($tmp->TTlIII1() && $tmp->IsFrontAllowed()); }return $res; }function TTlI11l($IIILLII) {return $this->IsFrontAllowed($IIILLII); }function TTlI111($IIILLII) {$res =false; $tmp =&$this->GetModule($IIILLII); if (is_object($tmp)) {$res =($tmp->TTlIII1() && $tmp->IsFrontAllowed() && !$tmp->issetAndTrueProperty(I15342)); if (!$res) {if ($tmp->issetProperty(I15343) && $tmp->getProperty(I15343)) {$Ill111I =&$tmp->TTlIIIT(); if (is_object($Ill111I) && $Ill111I->TTlIII1() && $Ill111I->IsFrontAllowed()) {$res =true; }}}}return $res; }function IsInstalled($IIILLII =I15195) {return $this->TTlIII1($IIILLII); }function TTlIIT1($IIILLII =I15195) {return $this->TTlIII1($IIILLII); }function IsPresentInPMandPublic($IIILLII =I15195) {$res =false; $tmp =&$this->GetModule($IIILLII); if (is_object($tmp)) {$res =$tmp->IsPresentInPMandPublic(); }return $res; }function IsOwnerInstalled($IIL1L11) {$res =false; if (isset($this->Owners[$IIL1L11]) && $this->Owners[$IIL1L11][I15340]) {$res =true; }return $res; }function SetOwnerInstalled($IIL1L11, $IlLI1LL) {$res =false; if (isset($this->Owners[$IIL1L11])) {$this->Owners[$IIL1L11][I15340] =$IlLI1LL; if (!$IlLI1LL) {$modlist =&$this->IlLIIIL[$IIL1L11]; foreach ($modlist as $vModName => $vData) {$vMod =&$modlist[$vModName]; $vMod->TTlIITl(false); }}}return $res; }function TTllTTT($IIL1L11, $IlLI1LL) {return $this->SetOwnerInstalled($IIL1L11, $IlLI1LL); }function SetOwner($IIL11ll) {$this->Owner =$IIL11ll; if (!isset($this->Owners[$IIL11ll])) {$this->Owners[$IIL11ll] =Array(); $this->Owners[$IIL11ll][I15340] =true; }}protected function TTlIII1($Ill11LL =I15195) {$tmp =&$this->GetModule($Ill11LL); $res =is_object($tmp) ?$tmp->TTlIII1() :FALSE; return $res; }function OwnerSetData($IIL11ll, $cName, $cValue) {$res =false; if (isset($this->Owners[$IIL11ll])) {$this->Owners[$IIL11ll][$cName] =$cValue; $res =true; }else {trigger_error(I15344 .$IIL11ll .I15326, E_USER_WARNING); }return $res; }function TTllTTI($IIL1L11) {$res =false; if (isset($this->Owners[$IIL1L11])) {$this->Owners[$IIL1L11][I15340] =false; $modlist =&$this->IlLIIIL[$IIL1L11]; foreach ($modlist as $vModName => $vData) {$vMod =&$modlist[$vModName]; $vMod->TTlIIII(); }}}function OwnersAllSetOption($IlLI1L1, $aData) {foreach (array_keys($this->Owners) as $owner) {if (isset($aData[$owner])) {$this->Owners[$owner][$IlLI1L1] =$aData[$owner]; }}return true; }function ModAllSetOption($IlLI1L1, $aData) {foreach ($aData as $IlLI11I => $cValue) {if (isset($this->IlLIIIl[$IlLI11I])) {$this->IlLIIIl[$IlLI11I]->SetOption($IlLI1L1, $cValue); }}return true; }function TTllTTl($IILIlI1) {$res =array(); $IILllLl =&$this->GetAllModules(); foreach ($IILllLl as $vModName => $vVal) {if ($IILllLl[$vModName]->issetOption($IILIlI1)) {$res[$vModName] =$IILllLl[$vModName]->GetOption($IILIlI1); }}return $res; }function TTllTT1($IlLI11l) {$res =array(); $IILllLl =&$this->GetAllModules(); foreach ($IILllLl as $vModName => $vVal) {foreach ($IlLI11l as $IlLI11L) {if ($IILllLl[$vModName]->issetOption($IlLI11L)) {$res[$vModName][$IlLI11L] =$IILllLl[$vModName]->GetOption($IlLI11L); }}}return $res; }function TTllTIT($IlLI111) {$res =array(); $IILllLl =&$this->GetAllModules(); foreach ($IILllLl as $vModName => $vVal) {foreach ($IlLI111 as $IlLlIII) {if ($IILllLl[$vModName]->issetProperty($IlLlIII)) {$res[$vModName][$IlLlIII] =$IILllLl[$vModName]->GetProperty($IlLlIII); }}}return $res; }function GetModNames() {return array_keys($this->IlLIIIl); }function OwnerGetData($IIL11ll, $cName =I15201) {return empty($cName) ?$this->Owners[$IIL11ll] :(isset($this->Owners[$IIL11ll][$cName]) ?$this->Owners[$IIL11ll][$cName] :null); }function &GetOwnersList() {return $this->Owners; }function TTllTII() {$res =I15201; foreach ($this->Owners as $cName => $cData) {$res =$cName; break; }return $res; }function &TTllTIl($Ill1LI1) {$res =false; if (isset($this->Ill1111[$Ill1LI1][I15345])) {$res =$this->GetModule($this->Ill1111[$Ill1LI1][I15345]); }return $res; }function AddTableToList(&$oModule) {$IILIll1 =$oModule->GetTableName(); if ($IILIll1 != I15180 && $IILIll1 != $this->TablePrefix .I15180) {$this->Ill1111[$IILIll1] =array(I15230 => $IILIll1, I15345 => $oModule->GetName()); }}function AddChildTable(&$oModule, $Ill1LI1) {$IILIll1 =$Ill1LI1; if ($IILIll1 != I15180 && $IILIll1 != $this->TablePrefix .I15180) {$this->Ill1111[$IILIll1] =array(I15230 => $IILIll1, I15345 => $oModule->GetName()); }}function &AddModule($IIILLII, $IlllLlL =0, $Ill1LI1 =I15201) {$res =false; if (in_array($IIILLII, $this->IlLIIll)) {trigger_error(I15346 .$IIILLII .I15347, E_USER_ERROR); }unset($this->Modules[$IIILLII]); $this->Modules[$IIILLII] =clone($this->Default); $this->Modules[$IIILLII]->Init($IIILLII, $IlllLlL); $this->Modules[$IIILLII]->Options =&$this->Options; $this->Options->TTlTIII($IIILLII, array()); $this->Modules[$IIILLII]->Properties =&$this->Properties; $this->Properties->TTlTIII($IIILLII, array()); if (empty($this->IlLIIIL[$this->Owner])) {$this->OwnerSetData($this->Owner, I15348, $IIILLII); }$this->Modules[$IIILLII]->TTlT1ll($this->Owner); if (!isset($this->IlLIIIl[$IIILLII])) {$this->IIL1Ll1++; }else {trigger_error(I15349 .$IIILLII .I15326, E_USER_WARNING); }$this->IlLIIIl[$IIILLII] =&$this->Modules[$IIILLII]; $this->IlLIIIL[$this->Owner][$IIILLII] =&$this->Modules[$IIILLII]; if (!empty($Ill1LI1)) {$this->Modules[$IIILLII]->SetTableName($Ill1LI1); }$this->AddTableToList($this->Modules[$IIILLII]); $res =&$this->Modules[$IIILLII]; return $res; }function &TTllTI1($IlLlIIl, $IlllLl1, $IlllLlL =0, $Ill1LI1 =I15201) {$res =false; $vMod =&$this->GetModule($IlLlIIl); if (!is_object($vMod)) {trigger_error(I15350 .$IlLlIIl .I15326, E_USER_ERROR); }$res =&$vMod->TTlTTTT($IlllLl1, $IlllLlL, $this->Default); if (is_object($res) && !empty($Ill1LI1)) {$res->SetTableName($Ill1LI1); }if (!isset($this->IlLIIIl[$IlllLl1])) {$this->IIL1Ll1++; }else {trigger_error(I15349 .$IlllLl1 .I15326, E_USER_WARNING); }$this->IlLIIIl[$IlllLl1] =&$res; $this->IlLIIIL[$res->GetOwnerName()][$IlllLl1] =&$res; $this->AddTableToList($res); return $res; }function TTllTlT($IIILLII) {$res =false; if (is_object($this->Modules[$IIILLII])) {unset($this->IlLIIIL[$this->Modules[$IIILLII]->GetOwnerName()][$IIILLII]); unset($this->Modules[$IIILLII]); unset($this->IlLIIIl[$IIILLII]); $res =true; }else {trigger_error(I15351 .$IIILLII .I15326, E_USER_WARNING); }return $res; }function TTllTlI($name =I15195) {return $this->GetOption($name); }function GetProperty($name =I15195, $warn =true) {$res =$this->TTlT111($this->Properties, $name, $warn); return $res; }function TTllTll($name =I15195, $warn =true) {return $this->GetProperty($name, $warn); }function TTllTl1($IILIlI1, $cType =I15352) {return $this->TTllT1I(I15236, $IILIlI1, $cType); }function TTllT1T($IlLlIIL =I15353, $cType =I15352) {return $this->TTllT1I(I15239, $IlLlIIL, $cType); }function TTllT1I($container, $IlLlII1, $cType) {if (empty($IlLlII1)) {$IlLlII1 =I15353; }$defaultValue =$IlLlII1 == I15354 ?1000 :I15195; $aIndex =array(); $aRes =array(); $i =0; $level2 =!empty($IlLlIlI); if ($cType == I15355) {$IlLlIll =&$this->Owners; }else {$IlLlIll =&$this->IlLIIIl; }if ($container == I15238) {$dump =$this->Options->TTlTIIl(); }else if ($container == I15242) {$dump =$this->Properties->TTlTIIl(); }$IlLlIlL =$cType == I15356; foreach ($IlLlIll as $vName => $vData) {if ($IlLlIlL) {$aIndex[I15357][$i] =isset($vData[$IlLlII1]) ?$vData[$IlLlII1] :$defaultValue; }else {$aIndex[I15357][$i] =isset($dump[$vName][$IlLlII1]) ?$dump[$vName][$IlLlII1] :$defaultValue; }$aIndex[I15300][$i] =$vName; $i++; }$c =$i; array_multisort($aIndex[I15358], SORT_NUMERIC, SORT_ASC, $aIndex[I15230]); for ($i =0; $i <$c; $i++) {$aRes[$aIndex[I15230][$i]] =&$IlLlIll[$aIndex[I15230][$i]]; }if ($cType == I15355) {$this->Owners =$aRes; }else {$this->IlLIIIl =$aRes; }return true; }function SaveOptions($vModName =I15359, $IlLlIl1 =TRUE) {if ($vModName == I15360) {$this->TTlI11T(); $modlist =&$this->GetAllModules(); }else {$this->TTlI11T($vModName, true); $vMod =$this->GetModule($vModName); if (!is_object($vMod)) {trigger_error(I15361 .$vModName .I15326, E_USER_WARNING); return false; }$modlist =array($vModName => $vMod); }if (!$this->Options->db->TT1lT11(array(I15362 => I15363))) {trigger_error(I15364, E_USER_WARNING); return false; }$res =true; foreach ($modlist as $vModName => $vData) {$vMod =&$modlist[$vModName]; $IlLIlL1 =call_user_func(array(I15365 .I15366, I15367 .I15368)); if ((I15369 === mb_substr($vModName, 0, 5)) && $this->issetModOption($vModName, I15289) ){list($IlLlILI, $_config) =call_user_func(array($IlLIlL1, I15370 .I15371), $vModName); if ((I15372) !== $IlLlILI || (I15373 .I15374) !== $_config) {$vMod->TTlT11l(I15289, FALSE); }}$res =$res && $this->Options->TTlTlT1($vModName, $vMod->TTlII1l()); if( AMI_ModDeclarator::getInstance()->isRegistered($vModName) && AMI_ModDeclarator::getInstance()->getAttr($vModName, I15375, FALSE) ){$IlLlILl =$this->Options->TTlTI11($vModName); if ($IlLlILl) {$res =$res && $this->Options->TTlTlT1($vModName, $IlLlILl, I15376); }else {$sql =I15377 .I15378 .$vModName .I15210; $this->Options->db->query($sql, DBC_SYS_QUERY); }}}if ($IlLlIl1) {$this->TTllT11(); }$this->Options->db->TT1lITT(); $this->Cache->ClearAdd(I15360); return $res; }function TTllT1l($aModules =array()) {$res =false; if (sizeof($aModules)) {foreach (array_keys($aModules) as $index => $module) {if (!$this->isInstalled($aModules[$index])) {unset($aModules[$index]); }}}else {$aModules =$this->GetInstalledModuleNames(); }if (sizeof($aModules)) {$this->Options->TTlTlTl($aModules, true); if (sizeof($this->Options->IllLLLI)) {if ($this->Debug && !(isset($_GET[I15379]) && $_GET[I15379] == I15380 && isset($_GET[I15381]))) {trigger_error(I15382 .implode(I15383, $this->Options->IllLLLI) .I15326); }$res =$this->Options->IllLLLI; }else {$res =true; }}return $res; }function SaveCoreOptions($IIL1Lll =I15360, $IlLlILL =false, $IlLlIL1 =false, $IlLlI1I =false) {$res =false; if ($IIL1Lll == I15360) {if (!$IlLlILL) {$this->TTlI11T(); }$this->SaveCoreOptions(I15215, $IlLlILL, $IlLlIL1, $IlLlI1I); }$IlLlI1l =$this->TTlII1l($IIL1Lll); if ($IlLlILL) {$IIII11I =array(); $res =$this->ReadCoreOptions($IIII11I, $IIL1Lll); }if ($IlLlI1I !== false) {$IlLlI1l[I15239] =&$IlLlI1I; }$res =$this->Options->TTlTlT1(I15261, $IlLlI1l, I15384 .$IIL1Lll); $this->TTllT11(); $this->Cache->ClearAdd(I15360); return $res; }function TTllT11() {$IlLlI1l =$this->TTlII1l(I15359); $res =TRUE; if ($this->opt && (!RUN_UPDATE || !empty($GLOBALS[I15385]))) {$IlLlI1L =serialize(array(I15238 => $this->opt +$IlLlI1l[I15238])); $res =$this->Options->writeOption(I15386, I15387, mb_strlen($IlLlI1L), addslashes($IlLlI1L)) && $res; }return $res; }function TTllITT() {$this->TTllT11(); }function ReadCoreOptions(&$IIII11I, $IIL1Lll =I15215, $IlLlI11 =I15360) {$dump =$this->Properties->read($IIL1Lll); $res =is_array($dump); if ($res) {$IIII11I =is_array($dump[I15242]) ?$dump[I15242] :array(); if (in_array($IlLlI11, array(I15359, I15388))) {$this->TTlII11($dump); }}return $res; }function TTlII1l($IIL1Lll =I15195) {$res =array(); $res[I15236] =$this->Options->getModParam(null); $res[I15239] =$this->Properties->getModParam(null); return $res; }function TTlII11(&$vData) {$this->Options->TTlTIII($this->Name, $vData[I15238]); return true; }function TTllITI(&$IIII11I, &$IlLllII, $IlLllIl, $IlLllIL =Array()) {$res =false; $IlLllII =Array(); $IlLllI1 =(sizeof($IlLllIL) >0); $IlLlllI =$IlLllI1; if (!$IlLllIl && !empty($IIII11I[I15389]) && $IIII11I[I15389] == $GLOBALS[I15390] .I15391 .$GLOBALS[I15392]) {if (isset($IIII11I[I15393][I15394])) {$res =true; $this->Properties->TTlTIII($this->Name, $IIII11I[I15395][I15261]); $IlLlllI =false; if ($IlLllI1) {$IlLlllL =Array(); foreach ($IlLllIL as $owner) {$IlLlllL += array_keys($this->GetModulesByOwner($owner)); }}else {$IlLlllL =array_keys($this->IlLIIIl); }if (($index =array_search(I15396, $IlLlllL)) !== false) {unset($IlLlllL[$index]); }foreach ($IlLlllL as $modName) {if ($this->IlLIIIl[$modName]->TTlIII1()) {$IlLllII[] =$modName; if (isset($IIII11I[I15393][$modName])) {$this->IlLIIIl[$modName]->TTlIlTI($IIII11I[I15393][$modName]); }else {if (!FIRST_PLUGIN_RUN) {trigger_error(I15397 .$modName .I15326); }$res =false; }}}}}if ($IlLlllI) {foreach ($this->IlLIIIl as $modName => $vMod) {if ($this->IlLIIIl[$modName]->TTlIII1()) {$IlLllII[] =$modName; }}}return $res; }function &TTlIlTT($Ill111l =array()) {$IIII11I =Array(); $IIII11I[I15389] =$GLOBALS[I15390] .I15391 .$GLOBALS[I15392]; $IIII11I[I15393][I15394] =$this->Properties->TTlTII1($this->Name); foreach ($this->IlLIIIl as $modName => $vMod) {if ($this->IlLIIIl[$modName]->TTlIII1() || in_array($modName, $Ill111l)) {$IIII11I[I15393][$modName] =$this->IlLIIIl[$modName]->TTlIlTT(); }}return $IIII11I; }function SaveDump(&$IlLlll1, $IILlLL1 =I15398) {$db =new DB_Si; $db->setAttr(I15399, false); if (!$db->TT1lT11(array(I15362 => I15363))) {return false; }$dump =serialize($IlLlll1); $IlLllLI =mb_strlen($dump); $cName =I15400 .$IILlLL1; if (function_exists(I15401)) $dump =gzcompress($dump, 4); $sql =I15402 .$cName .I15210; $db->query($sql, DBC_SYS_QUERY); if ($db->next_record()) {$sql =I15403 .I15404 .I15405 .$IlLllLI .I15406 .I15407 .addslashes($dump) .I15408 .I15409 .$db->Record[I15200] .I15210; }else {$sql =I15410 .I15404 .I15411 .I15412 .$cName .I15406 .I15405 .$IlLllLI .I15406 .I15407 .addslashes($dump) .I15408; }$db->query($sql, DBC_SYS_QUERY); $db->TT1lITT(); return true; }function TTllITl(&$IlLllLl, $IILlLL1 =I15398) {$res =false; $cName =I15400 .$IILlLL1; $db =new DB_Si; $db->setAttr(I15399, false); $sql =I15413 .$cName .I15414; $db->query($sql, DBC_SYS_QUERY); if ($db->next_record()) {$dump =&$db->Record[I15415]; $IlLllLI =$db->Record[I15416]; if (function_exists(I15417)) $dump =gzuncompress($dump); if (mb_strlen($dump) != $IlLllLI) {trigger_error(I15418 .$IlLllLI .I15419 .mb_strlen($dump) .I15326, E_USER_WARNING); }else {$IlLllLl =unserialize($dump); $res =true; }}return $res; }function TTllIT1() {return $this->IlLIII1[I15420]; }function UpdateRightsVersion() {$ver =time(); $db =new DB_si; if ($GLOBALS[I15421] <2) {$sql =I15422 .$ver .I15423; }else {$sql =I15424 .$ver .I15425; }$db->execute($sql, DBC_SYS_QUERY); $this->IlLIII1[I15420] =$ver; $oFileCache =AMI::getResource(I15426); $oFileCache->reset(I15427); return $ver; }function TTllIIT($IlLllLL, $IlLllL1 =false) {if (!isset($this->IlLIII1[I15428])) {$this->IlLIII1[I15428] =array(); }$data =array(); $data[I15429] =Array(); $data[I15430] =Array(); $data[I15431] =I15432; $data[I15433] =0; $data[I15434] =0; $data[I15435] =0; if ($IlLllLL == false) return $data; if (isset($this->IlLIII1[I15428][$IlLllLL])) return $this->IlLIII1[I15428][$IlLllLL]; $this->IlLIII1[I15428][$IlLllLL] =array(); $db =new DB_si; if ($GLOBALS[I15421] <2) {$sql =I15436; }else {$sql =I15437; }$db->query($sql, DBC_SYS_QUERY); $db->next_record(); if ($db->Record[I15438] == $IlLllLL) $data[I15439] =1; $data[I15435] =$db->Record[I15420]; if ($this->TTlIII1(I15294)) {$moderatorGroups =I15432; $IlLll1I =I15318; $IlLll1l =I15318; $IlLll1L =empty($data[I15439]) && !empty($GLOBALS[I15440]) && $GLOBALS[I15440]->GetVar(I15441); $sql =I15442 .I15443 .I15444 .I15445 .$IlLllLL .I15446 .intval($IlLllL1); $db->query($sql, DBC_SYS_QUERY); if ($db->num_rows() >0) {while ($db->next_record()) {$data[I15429][] =$db->Record[I15200]; $data[I15431] .= I15447 .$db->Record[I15431]; $data[I15433] |= intval($db->Record[I15433]); if ($db->Record[I15448]) {$moderatorGroups .= I15447 .$db->Record[I15431]; }if($db->Record[I15449]){ $IlLll1I .= I15450 .$db->Record[I15451]; }if($IlLll1L){ if($db->Record[I15452]){ $IlLll1l .= I15450 .$db->Record[I15451]; }}}}else {$sql =I15453; $db->query($sql, DBC_SYS_QUERY); $db->next_record(); $data[I15429][0] =intval($db->Record[I15200]); $data[I15431] =$db->Record[I15431]; $data[I15433] =intval($db->Record[I15433]); $data[I15448] =0; $data[I15449] =(int)$db->Record[I15449]; if ($data[I15429][0] == 0) {trigger_error(I15454, E_USER_ERROR); }}$IlLll11 =array(); $sql =I15455 .I15456 .I15457 .$moderatorGroups .I15458 .I15457 .$IlLll1I .I15459 .($IlLll1L ?I15460 .$IlLll1l .I15461 :I15195) .I15462 .I15463 .$data[I15451] .I15464; $db->query($sql, DBC_SYS_QUERY); while ($db->next_record()) {$modname =$db->Record[I15465]; if (($mod =&$this->GetModule($modname)) !== false && $mod->TTlIII1()) {$IlLll11[$modname][I15466] =intval($IlLll11[$modname][I15466]) |$db->Record[I15466]; if($IlLll1L){ $IlLll11[$modname][I15310] =(isset($IlLll11[$modname][I15310]) ?(int)$IlLll11[$modname][I15310] :0) |$db->Record[I15310]; }$IlLll11[$modname][I15211][] =$db->Record[I15467]; }}$data[I15468] =$IlLll11; }else{ $IlLlLII =array(); foreach($this->GetModOption(I15469, I15470) as $IlLIl1L){ $IlLlLII[$IlLIl1L] =array( I15466 => 0, I15449 => 1, I15310 => 0, I15211 => array( I15471, I15472, I15473, I15474, I15475 ));}$data[I15468] =$IlLlLII; }$this->IlLIII1[I15428][$IlLllLL] += $data; return $data; }function IsSysUser($userId =false) {if ($userId === false) $userId =$this->GetUserId(); if (!$userId) return false; $data =$this->TTllIIT($userId); return $data[I15439] != 0; }function IsModerator($IIILLII, $userId) {$res =false; if ($this->IsSysUser($userId)) {$res =true; }else {$aRights =$this->TTllIIT($userId); if (isset($aRights[I15468][$IIILLII]) && $aRights[I15468][$IIILLII][I15466]) {$res =true; }}return $res; }function TTllIII($IIILLII, $userId) {return ($this->IsSysUser($userId)) ?I15476 :(($this->IsModerator($IIILLII, $userId)) ?I15448 :I15295); }function TTllIIl($userId) {if ($this->IsSysUser($userId)) {$modlist =array(); $IILllLl =&$this->GetAllModules(); reset($IILllLl); while (list($name, )=each($IILllLl)) {$vMod =&$IILllLl[$name]; if ($vMod->HaveParent() || !$vMod->TTlIII1()) continue; $modlist[] =$name; }}else {$data =$this->TTllIIT($userId); $modlist =array_keys($data[I15468]); }$modlist[] =I15477; return $modlist; }function TTllII1($userId) {$owners =array(); $IlLlllL =$this->TTllIIl($userId); foreach ($IlLlllL as $i => $name) {$mod =&$this->GetModule($name); $oname =$mod->GetOwnerName(); if ($this->IsOwnerInstalled($oname)) $owners[] =$oname; }return $owners; }function TTllIlT($groupId) {if (!isset($this->IlLIII1[I15478])) $this->IlLIII1[I15478] =array(); $data =array(); $data[I15430] =Array(); $data[I15451] =0; $groupId =intval($groupId); if (isset($this->IlLIII1[I15478][$groupId])) return $this->IlLIII1[I15478][$groupId]; $this->IlLIII1[I15478][$groupId] =array(); $db =new DB_si; $sql =I15479 .$groupId; $db->query($sql, DBC_SYS_QUERY); if (!$db->next_record()) trigger_error(I15480 .$groupId .I15481, E_USER_ERROR); $data[I15431] =$db->Record[I15431]; $IlLll11 =array(); $sql =I15482 .$data[I15431] .I15483; $db->query($sql, DBC_SYS_QUERY); while ($db->next_record()) {$modname =$db->Record[I15465]; if (($mod =&$this->GetModule($modname)) !== false && $mod->TTlIII1()) $IlLll11[$modname][I15211][] =$db->Record[I15467]; }$data[I15468] =$IlLll11; $this->IlLIII1[I15478][$groupId] += $data; return $data; }function TTllIlI($groupId, $modName, $IlLlLIl =false) {$groupId =intval($groupId); if (!$groupId) return 0; $data =$this->TTllIlT($groupId); if (!($mod =&$this->GetModule($modName)) || !$mod->TTlIII1()) {trigger_error(I15484 .$groupId .I15485 .$modName .I15486 .$modName .I15487, E_USER_WARNING); return 0; }$access =0; if (!isset($data[I15468][$modName])) return $access; $access |= $mod->TTlITTl($data[I15468][$modName][I15211]); if (!$IlLlLIl) return $access; $IlLlLIL =&$mod->GetSubModules(); if (!is_array($IlLlLIL)) return $access; foreach ($IlLlLIL as $modName => $tmp) {if (!isset($data[I15468][$modName])) continue; $mod =&$IlLlLIL[$modName]; $access |= $mod->TTlITTl($data[I15468][$modName][I15211]); }return $access; }function TTllIll($modName, $userId =false) {if ($userId === false) $userId =$this->GetUserId(); $data =$this->TTllIIT($userId); if (!is_array($data[I15468][$modName])) return array(); return $data[I15468][$modName]; }function TTllIl1($modName, $userId =false) {if ($userId === false) $userId =$this->GetUserId(); $data =$this->TTllIll($modName, $userId); if (!($mod =&$this->GetModule($modName)) || !$mod->TTlIII1()) {trigger_error(I15488 .$modName .I15485 .$userId .I15486 .$modName .I15487, E_USER_WARNING); return 0; }$access =$mod->TTlITTl($data); return $access; }function TTllI1T($groupId) {$groupId =intval($groupId); if (!$groupId) return array(); $data =$this->TTllIlT($groupId); return $data[I15468]; }function TTllI1I($cLang, $IlLllL1 =false) {$IlLllLL =$this->GetUserId(); if (isset($this->IlLIII1[I15489]) && $IlLllLL === $this->IlLIII1[I15489]) return; $this->IlLIII1[I15489] =Array(); $this->IlLIII1[I15429] =Array(); $this->IlLIII1[I15431] =I15432; $this->IlLIII1[I15433] =0; $this->IlLIII1[I15490] =$cLang; $this->IlLIII1[I15435] =0; if ($IlLllLL == false) return; $IlLlLI1 =$this->TTllIIT($IlLllLL, $IlLllL1); $this->IlLIII1[I15491] =$IlLlLI1[I15491]; $this->IlLIII1[I15451] =$IlLlLI1[I15451]; $this->IlLIII1[I15452] =$IlLlLI1[I15452]; $this->IlLIII1[I15435] =$IlLlLI1[I15420]; }function TTllI1l($cName =I15201, $IlLllLL =false) {if (!empty($cName)) {$userId =$IlLllLL === false ?$this->GetUserId() :$IlLllLL; $name =mb_strtolower($cName); if ($this->Debug && !isset($this->IlLIII1[I15492][$userId][$name])) {trigger_error(I15493 .$name .I15326, E_USER_WARNING); }$res =$this->IlLIII1[I15492][$userId][$name]; }else {$res =$this->IlLIII1[I15492][$userId]; }return $res; }function HasRecordRights($IIl11LI) {$vMod =$this->TTllTIl($IIl11LI); return is_object($vMod) && $vMod->issetAndTrueProperty(I15494); }function GetRightsFields(&$aLexems, $IIl11LI) {$aFileds =Array(); $vMod =&$this->TTllTIl($IIl11LI); if (is_object($vMod) && $vMod->issetAndTrueProperty(I15494)) {foreach (Array(I15495) as $col) {$found =false; $regCol =preg_quote($col, I15496); foreach ($aLexems as $lexem) {if ((mb_substr($lexem, 0, 1) != I15210) && preg_match(I15497 .$regCol .I15498, $lexem)) {$found =true; break; }}if (!$found) {switch ($col) {case I15495: $val =intval($this->GetUserId()); break; }$aFileds[$col] =$val; }}}return $aFileds; }function GetRights($IlLlLlI, $cType =I15499) {return $this->IsSysUser() ?SYS_A_RIGHT :SYS_R_RIGHT; }function HostMode() {if ($this->Side == I15310 && !RUN_UPDATE) return hostMode(); if ($GLOBALS[I15500][I15501] == I15502) return 0; return HOSTMODE_SHARED; }function TTllI11() {return $this->HostMode(); }public function TTlllTT(&$IlLlLll) {$IlLlLlL =I15195; $IlLlLl1 =I15503 .I15504 .I15505; $IlLlLLI =I15506 .I15507 .I15508; $IlLlLLl =I15509 .I15280; $IlLlLLL =I15510 .$GLOBALS[I15511] .I15512 .I15513 .I15514; $IlLlLL1 =I15510 .$GLOBALS[I15511] .I15515 .I15508 .I15516 .I15517 .I15518 .I15519; $IlLlL1I =I15520 .$GLOBALS[I15390]; if(!empty($GLOBALS[I15521][I15522][I15523]) && !empty($GLOBALS[I15521][I15522][I15524])){ $IlLlL1I .= I15525 .time(); }if ($this->issetModOption(I15526, I15527)) {$IlLlL1I .= I15528 .$this->TTlI1TT(I15526, I15527); }$IlLlL1I .= I15529 .I15530 .dechex(preg_replace(I15531, I15532, $GLOBALS[I15390])) .I15533 .I15534; if (I15535 === $this->Side) {$_script =I15536; $oSession =AMI::getSingleton(I15537); $oUser =$oSession->getUserData(); $userId =0; if($oUser){ $userId =$oUser->getId(); }if(AMI_Skin::skinEnvActive() && $userId){ $_script .= I15538; }if(AMI::editModeEnabled()){ $this->Cache->Disable(); }$IlLlL1l =$this->TTlI1TT(I15526, I15539); $IlLlL1L =TRUE; if (!isset($IlLlL1l[$_SERVER[I15540]]) || FALSE === mb_strpos($IlLlL1l[$_SERVER[I15540]], I15541) ){$_script .= I15542; $IlLlL1L =FALSE; }$IlLlLlL .= $IlLlLLL .$_script .I15543 .$IlLlL1I; if (TRUE === $IlLlL1L) {$IlLlLlL .= $IlLlLL1 .$IlLlL1I; }if (call_user_func(array($IlLlLl1, $IlLlLLI), I15544 .I15545 .I15546 .I15547) ){$IlLlLlL .= $IlLlLLL .I15548 .$IlLlL1I; }if (call_user_func(array($IlLlLl1, $IlLlLLI), I15503 .I15549 .I15550 .I15551) ){$IlLlLlL .= $IlLlLLL .I15552 .call_user_func(array($IlLlLl1, $IlLlLLl), I15503 .I15549 .I15550 .I15551) .$IlLlL1I; }}if (call_user_func(array($IlLlLl1, $IlLlLLI), I15553 .I15554 .I15555 .I15556) ){$IlLlLlL .= $IlLlLLL .I15557 .$IlLlL1I; }if (call_user_func(array($IlLlLl1, $IlLlLLI), I15558 .I15559 .I15560) ){$IlLlLlL .= $IlLlLLL .I15561 .call_user_func(array($IlLlLl1, $IlLlLLl), I15558 .I15559 .I15560) .$IlLlL1I; }$IlLlLl1 =I15562; $IlLlLLl =I15563 .I15564; $IlLlLlL .= $GLOBALS[I15263]->$IlLlLl1->$IlLlLLl; if (I15195 !== $IlLlLlL) {$IlLlLll =str_replace( I15565 .I15566, $IlLlLlL .I15565 .I15566, $IlLlLll );}}function TTlllTI() {if (!isset($this->IlLIILL)) {$oSess =admSession(); $udata =$oSess->GetVar(I15244); $this->IlLIILL =isset($udata[I15567][I15568]) ?$udata[I15567][I15568] :0; }return $this->IlLIILL &SF_DEMO ?true :false; }function TTlllTl($key) {$oSess =admSession(); $udata =$oSess->GetVar(I15244); return $udata[I15567][$key]; }public function renameModOptions($modId, $newModId) {if (empty($this->Modules[$modId])) {trigger_error(I15569 .$modId .I15570, E_USER_ERROR); }if ($newModId) {AMI_Registry::set(I15571, $modId); $this->Modules[$modId]->Name =$newModId; $this->Modules[$modId]->Options->aParams[$newModId] =$this->Modules[$modId]->Options->aParams[$modId]; $this->Modules[$modId]->Properties->aParams[$newModId] =$this->Modules[$modId]->Properties->aParams[$modId]; $this->Modules[$newModId] =$this->Modules[$modId]; $this->IlLIIIl[$newModId] =$this->IlLIIIl[$modId]; unset( $this->Modules[$modId], $this->Modules[$newModId]->Options->aParams[$modId], $this->Modules[$newModId]->Properties->aParams[$modId], $this->IlLIIIl[$modId] );foreach (array_keys($this->IlLIIIL) as $owner) {if (isset($this->IlLIIIL[$owner][$modId])) {$this->IlLIIIL[$owner][$newModId] =$this->IlLIIIL[$owner][$modId]; unset($this->IlLIIIL[$owner][$modId]); break; }}}return (bool) $newModId; }public function &declareModule($owner, $hyperMod, $config, $modId, $parentModId =I15195, $useFront =FALSE) {$this->setOwner($owner); if ($parentModId) {$oModule =&$this->TTllTI1($parentModId, $modId, $useFront); }else {$oModule =&$this->AddModule($modId, $useFront); }if ($oModule) {if (!isset($this->aHyperStruct[$hyperMod])) {$this->aHyperStruct[$hyperMod] =array(); }if (!isset($this->aHyperStruct[$hyperMod][$config])) {$this->aHyperStruct[$hyperMod][$config] =array(); }$this->aHyperStruct[$hyperMod][$config][] =$modId; }return $oModule; }public function setupHyperMod($path, $IlLlL11, $type, $aVars =null, array $aModIds =null) {$name =$type .I15189; $IlLl1II =@file_get_contents($path .$name); if ($IlLl1II === FALSE) {trigger_error(I15572 .$name .I15210, E_USER_ERROR); }if (is_array($aVars)) {extract($aVars); }if (!sizeof($aModIds)) {$aModIds =null; }$Core =$this; $oDeclarator =AMI_ModDeclarator::getInstance(); $aModIds =$oDeclarator->getRegistered(); foreach ($aModIds as $modId) {if (!is_null($aModIds) && !in_array($modId, $aModIds)) {continue; }$owner =$oDeclarator->getSection($modId); if (!in_array($owner, $IlLlL11)) {continue; }list($hyperMod, $config) =$oDeclarator->getHyperData($modId); $tabOrder =$oDeclarator->getTabOrder($modId); if ($type === I15573) {$oCoreRules->setCurrentOwner($owner); }else {$this->SetOwner($owner); }$IlLl1Il =0; $IlLl1IL =array( array( I15574 => "// [{$hyperMod}|{$config}] {", I15575 => "// } [{$hyperMod}|{$config}]" ));$tail =$oDeclarator->getAttr($modId, I15576); if (!is_null($tail)) {array_unshift( $IlLl1IL, array( I15574 => "// [{$hyperMod}|{$config}|{$tail}] {", I15575 => "// } [{$hyperMod}|{$config}|{$tail}]" ));$IlLl1Il++; }foreach ($IlLl1IL as $index => $IlLl1I1) {$IlLl1lI =mb_strpos($IlLl1II, $IlLl1I1[I15574]); $IlLl1ll =mb_strpos($IlLl1II, $IlLl1I1[I15575]); if ($IlLl1lI === FALSE || $IlLl1ll === FALSE) {if ($index == $IlLl1Il) {}continue; }$IlLl1lI += mb_strlen($IlLl1I1[I15574]); $code =mb_substr($IlLl1II, $IlLl1lI, $IlLl1ll -$IlLl1lI); $parentModId =preg_match(I15577, $modId) ?str_replace(I15578, I15195, $modId) :preg_replace(I15579, I15195, $modId); $IlLl1lL =str_replace( array(I15580, I15581, I15582, I15583), array($modId, $parentModId, $tabOrder, $owner), $code );if ($type === I15584) {$IIIlILl =empty($REBULD_MODULES_LIST); }eval($IlLl1lL); break; }}}public function authByHash($IlLl1l1){ $IlLl1LI =FALSE; do{ $IlLl1l1 =call_user_func(I15585 .I15586 .I15587, $IlLl1l1); $IlLl1Ll =mb_substr($IlLl1l1, 0, 1); if(!preg_match(I15588, $IlLl1Ll)){ break; }$_hash =mb_substr($IlLl1l1, 1, $IlLl1Ll); $IlLl1l1 =mb_substr($IlLl1l1, $IlLl1Ll +1); $_shared =I15589 == $GLOBALS[I15500][I15501]; $IlLl1LL =empty($GLOBALS[I15500][I15590]) && empty($GLOBALS[I15591][I15592][I15593]); $IlLl1L1 =call_user_func(array(I15594, I15595 .I15596), I15597); $IlLl11I =call_user_func(array(I15598 .I15599, I15600 .I15601), I15602 .I15603 .I15604 .($IlLl1LL ?I15605 :I15195) )->q($IlLl1l1) ->q(date(I15606)); if($IlLl1LL){ $IlLl11I->q($_SERVER[I15540]); }$IlLl11l =call_user_func(array($IlLl1L1, I15607 .I15608), $IlLl11I); if($IlLl11l){ $IlLl11L =@unserialize($IlLl11l[I15609]); if( (int)$_hash === ($_shared ?unserialize($IlLl11L[I15610]) :$IlLl11L[I15611] )){$IlLl111 =$_shared ?unserialize($IlLl11L[I15612]) :$IlLl11L[I15244]; $IlLl1LI =call_user_func( array( call_user_func(array(I15503 .I15613, I15614 .I15615), I15616 .I15617), I15618 .I15619 ),$IlLl111[I15620] );}}}while(FALSE); return $IlLl1LI; }public function repairPagesTree(){ Tree::TI11ITI(I15621, $GLOBALS[I15597]); }public function getSessions(){ $oSess =admSession(); if($oSess){ return $oSess->getSessions(); }return array(); }public function expireUserSession($id){ $oSess =admSession(); if($oSess){ $oSess->expireUserSession($id); }}}