<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       55041 xkqwiwxxuzsqmkugkwxqwslkqsptptzpmzrszkilngtxmyxnkynlqnxmlgkwisnrnirmpnir
 */ ?><?php foreach(array(15622=>'oTTg~1`0?403?FHrYMSSQn',15623=>'FHrYMSSQn!?MnvZJMS?URj,?',15624=>'?Zt?',15625=>"tQIGJZtQD~GZPQD`tGJ",15626=>"tQIGJZtQD~IQnu`tGJ",15627=>"IQnu",15628=>"IZMn",15629=>"MIP|IZMn",15630=>"DuY",15631=>"DuY2",15632=>"MIP|DuY",15633=>"YHttHI",15634=>"tHG",15635=>"|GZPQ",15636=>"tQIGJZtQD~JZBHutD~",15637=>"",15638=>'',15639=>"dqjqwT?JZnP?",15640=>"FRhi?WID|GZPQD?",15641=>"JZnP",15642=>"dqjqwT?MS?",15643=>"?",15644=>"hRsqR?yb?MS?jmimT?1",15645=>"MS",15646=>"!?",15647=>"coqRq?MS='",15648=>"'?",15649=>"jmimT?1",15650=>"'!'",15651=>"coqRq?IHSuJQ|nZIQ?mN}'",15652=>"'{?",15653=>"hRsqR?yb?MS?",15654=>"coqRq?IHSuJQ|nZIQ='",15655=>"coqRq?MG|ZrQZ?#?0?",15656=>"dqjqwT?MG|ZrQZ?",15657=>"MG|ZrQZ",15658=>"GZtO",15659=>"nZIQ",15660=>"nZv|YZr",15661=>"!?YHSB?",15662=>"dqjqwT?GZrQnt|MS!?nZIQ!?MG|ZrQZ!?MD|GrMntZYJQ!?UNmX|TmiqdTzig}JZDt|WOZnPQS{?ZD?uJZDt|WOZnPQS!?",15663=>"OtIJ|tMtJQ!?OtIJ|KQBCHrSD!?OtIJ|SQDWrMGtMHn!?GZPQ|nHMnSQx!?OtIJ|tMtJQ|MnOQrMt!?DOHC|DMYJMnPD?",15664=>"'",15665=>"tMtJQ",15666=>"OtIJ|tMtJQ",15667=>"KQBCHrSD",15668=>"OtIJ|KQBCHrSD",15669=>"SQDWrMGtMHn",15670=>"OtIJ|SQDWrMGtMHn",15671=>"tMtJQ|MnOQrMt",15672=>"OtIJ|tMtJQ|MnOQrMt",15673=>"DOHC|DMYJMnPD",15674=>"||GZPQ|nZIQ",15675=>"uJZDt|WOZnPQS",15676=>'GZPQ|nHMnSQx',15677=>'mmJjmJj',15678=>'dqjqwT?GZPQ|nHMnSQx?FRhi?WID|GZPQD?coqRq?MS=',15679=>"GZrQnt|MS",15680=>"DMYJ|YZr",15681=>"GZPQ|nZIQ",15682=>"%nZIQ",15683=>"MD|GrMntZYJQ",15684=>"GrMnt|fJZP",15685=>"GrMnt|vQrDMHn",15686=>"%GrMnt|vQrDMHn",15687=>"GrMnt|JMnK",15688=>"YHSB",15689=>"%YHSB",15690=>"%nZv|DGJMttQr",15691=>"GZPQ|JMnK",15692=>"DWrMGt|JMnK",15693=>"DGJMttQr",15694=>"GZPQ|MS",15695=>"MtQI",15696=>"%nZv|MtQI",15697=>"%nZv|YZr",15698=>'GZPQ|404',15699=>'GrMnt|vQrDMHn',15700=>"%DMYJ|DGJMttQr",15701=>'IHSuJQ|nZIQ',15702=>"|ZWtMvQ",15703=>"%DMYJ|YZr",15704=>"%GZtO|DGJMttQr",15705=>"%GZtO",15706=>"DuYIQnu",15707=>"OZvQ|DuYIQnu",15708=>"IZMniQnujQvQJD",15709=>"tHGmS",15710=>"DuYiQnusZtZ",15711=>"1",15712=>"MIP|IQnu|nHrIZJ",15713=>"MIP|",15714=>"MIP|IQnu|HvQr",15715=>"MIP|IQnu|ZWtMvQ",15716=>"'!",15717=>"DuYdGJMttQr",15718=>"uDQ|nHMnSQx",15719=>"rQJnHfHJJHC",15720=>'rQJ="nHfHJJHC"',15721=>"nHMnSQx|DtZrt",15722=>'#nHMnSQx@',15723=>"nHMnSQx|QnS",15724=>'#~nHMnSQx@',15725=>"JMnK",15726=>"JQvQJ",15727=>"WurrQntJBzWtMvQmtQI",15728=>"ZWtMvQ|WOMJS",15729=>"|MtQI",15730=>"%",15731=>"|YJHWK",15732=>"GZrQnt|IQnu|MS",15733=>"WHntQnt",15734=>"DuYIQnuD",15735=>"DQGZrQtQduYiQnu",15736=>'DuYIQnu',15737=>"ZJJ",15738=>"ZJJHCQS|IQnu|JQvQJ",15739=>"|DGJMttQr",15740=>"!",15741=>"IQnu|IZMn|MtQI",15742=>"LDSZtZ",15743=>"%IQnu|LDGrQJHZS",15744=>"IZMn|IQnu",15745=>"DuYIQnuQD",15746=>"IQnu|YHttHI|MtQI",15747=>"YHttHI|IQnu",15748=>"IQnu|tHG|MtQI",15749=>"tHG|IQnu",15750=>"GZPQD",15751=>"vMrtuZJ|JMnKD",15752=>"~",15753=>"uDQS|vMrtuZJ|IHSuJQD",15754=>"GuYJMW",15755=>"IHSuJQ|nZIQ",15756=>"frHnt|JMnK",15757=>"jZBHut?yJHWKD?WHunt?MD?nHt?MnMtMZJMAQS?Hr?MnvZJMS```",15758=>"dqjqwT?[?",15759=>"JZB|MS",15760=>'OtIJ|OQZS|tZMJ',15761=>"!?JZB|f",15762=>"|tBGQ",15763=>"|YHSB",15764=>"dqjqwT?JZB|IZMn|YHSB!?WDD|fMJQ!?OtIJ|OQZS|tZMJ",15765=>"?frHI?WID|JZBHutD?COQrQ?MS='",15766=>"JZB|f",15767=>"JZB|IZMn|YHSB",15768=>"WDD|fMJQ",15769=>"jZBHut?MD?nHt?fHunS?}JZB|MS=*",15770=>"dqjqwT?[?frHI?WID|JZBHutD?COQrQ?MD|SQfZuJt='1'?ZnS?JZnP='",15771=>"dqjqwT?YHSB?",15772=>"<<DGQW|IHSuJQ|YHSB<<",15773=>"GZPQ|YHSB",15774=>"JZBHut|MS",15775=>"JZBHut|YHSB",15776=>"JZBHut|WDD",15777=>"JZBHut|YJHWKD",15778=>'JZBHut|YJHWK|nuID',15779=>"FUNw|mNwjUsqd|gzTo",15780=>"funW|JZBHut`GOG",15781=>"WHIIHn%GZPQ|YHSB",15782=>"WHIIHn%IHSuJQ|YHSB",15783=>"DGQW|IHSuJQ|YHSB",15784=>"JZB|YHSB|YHSB",15785=>"MnMt",15786=>'MnMt',15787=>"QnS",15788=>"JZB|YHSB",15789=>"nZIQ!?JZB|YHSB|tBGQ",15790=>"dqjqwT?",15791=>"'?ZnS?JZnP='",15792=>"JZB|YHSB|tBGQ",15793=>"*|nZIQ|&",15794=>"*|WHntQnt|&",15795=>"JZB|",15796=>"JZB",15797=>"JZB|IZMn",15798=>'OQZS',15799=>"dqjqwT?.rQSMrQWtMHn|WHSQ.!?.SQDt|JMnK.?FRhi?.WID|GZPQD.?coqRq?.MS.?=?",15800=>'rQSMrQWtMHn|WHSQ',15801=>'dtZtuD%?200?hk',15802=>'dqRVqR|gRhThwhj',15803=>'?200?hk',15804=>'iHvQS?gQrIZnQntJB',15805=>'FHunS',15806=>'?',15807=>'SQDt|JMnK',15808=>'~',15809=>'jHWZtMHn%?',15810=>'?503?dQrvMWQ?TQIGHrZrMJB?UnZvZMJZYJQ',15811=>'dtZtuD%?503?dQrvMWQ?TQIGHrZrMJB?UnZvZMJZYJQ',15812=>'tQIGJZtQD~JZnP~GZPQ|404`JnP',15813=>'rQSMrQWtMHn|503',15814=>'?404?NHt?FHunS',15815=>'dtZtuD%?404?NHt?FHunS',15816=>'rQSMrQWtMHn|404',15817=>'mnvZJMS?rQSMrQWtMHn?oTTg?DtZtuD?') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header(I15622);die(I15623.__FILE__.I15624.__LINE__);} class Page{ public $_tmpSubMenuCommonData; public $IlLLIII; function Page(&$IlLLIIl, $IlLLIIL =I15625, $IlLLII1 =I15626){ $this->_tmpSubMenuCommonData =array(); $this->template =$IlLLIIL; $this->menuTemplate =$IlLLII1; $this->MenuBlock =I15627; $this->MenuSubBlock =Array(I15628=>I15628, I15629=>I15629, I15630=>I15630, I15631 => I15631, I15632=>I15632, I15633=>I15633, I15634=>I15634); $this->block =I15635; $this->LayoutTemplatesPath =I15636; $this->DefaultId =1; $this->ReturnDefault =true; $this->PathRootId =0; $this->DrawPath =false; $this->DrawNavBar =false; $this->DrawSiblingsBar =false; $this->DrawName =false; $this->DrawPageName =false; $this->DrawPrintLink =false; $this->CachedPageBody =I15637; $this->CachedPageId =false; $this->CachedPageLayoutId =false; $this->CachedPageLayoutBody =I15637; $this->CachedPageLayoutCssName =I15637; $this->CachedPageBlocks =array(); $this->CachedLayoutHTMLHeadTail =I15638; $this->CachedPageHTMLHeadTail =I15638; $this->isLinkConflictsMode =false; $this->IlLLIII =array(); $this->_aUsedLayoutBlocks =array(); $this->db =new DB_si; $this->Cms =&$IlLLIIl; $this->Gui =&$IlLLIIl->Gui; $this->Gui->addBlock($this->block, $this->template); $this->Gui->addBlock($this->MenuBlock, $this->menuTemplate); $this->tree =&Tree::getInstance($this->Cms); $this->tree->lang =$this->Gui->lang; $this->tree->lang_data =$this->Gui->lang; $this->tree->ll1Il1L =true; $this->tree->ll1Il11 =true; }function TTlllT1($IlLLIlI =1, $IlLLIll =0, $IlLLIlL =0, $IlLLIl1 =0, $IlLLIIL =I15637){ if(!empty($IlLLIIL)){ $this->template =$IlLLIIL; $this->Gui->addBlock($this->block, $this->template); }$this->ReturnDefault =$IlLLIlI; $this->DrawPath =$IlLLIll; $this->DrawNavBar =$IlLLIlL; $this->DrawName =$IlLLIl1; }function TTlllIT($IlLLIIL, $cBlockName=I15635, $IlLLILI=I15637, $IlLLILl=I15627){ $IlLLILL =I15637; $vT =I15637; $IlLLIL1 =I15637; $IlLLI1I =I15637; if(!empty($IlLLIIL)) $vT =$IlLLIIL; if(!empty($cBlockName)) $IlLLILL =$cBlockName; if(!empty($IlLLILI)) $IlLLI1I =$IlLLILI; if(!empty($IlLLILl)) $IlLLIL1 =$IlLLILl; if(!empty($IlLLILL)&&!empty($vT)){ $this->template =$vT; $this->block =$IlLLILL; $this->Gui->addBlock($this->block, $this->template); }if(!empty($IlLLIL1)&&!empty($IlLLI1I)){ $this->menuTemplate =$IlLLI1I; $this->MenuBlock =$IlLLIL1; $this->Gui->addBlock($this->MenuBlock, $this->menuTemplate); }}function TTlllII($Ill11lL){ $res =I15637; $this->tree->UseLang =false; $NONE =false; $found =$this->tree->TI1l1lI($Ill11lL, $NONE); if(!$found && $this->ReturnDefault) $Ill11lL =$this->DefaultId; $sql =I15639. I15640. "WHERE id='$Ill11lL'"; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record[I15641]; }return $res; }function TTlllIl($IlLLI1l){ $res =false; $sql =I15642. I15640. "WHERE lay_id='$IlLLI1l'".$this->tree->TI1l1lT().I15643. I15644; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record[I15645]; }return $res; }function TTlllI1($Ill11lL, $IlLLI1L){ $res =false; $IlLLI11 =I15646.implode(I15646, $IlLLI1L); $sql =I15642.$IlLLI11.I15643. I15640. I15647.$Ill11lL.I15648.$this->tree->TI1l1lT().I15643. I15649; $res =$this->db->getRecord($sql); return $res; }function TTllllT($IIILLII, $IlLLlII =I15637){ return $this->TTllll1($IIILLII, $IlLLlII ,I15649); }function TTllllI($aModNames, $IlLLlII =I15637){ $IIILLII =implode(I15650, $aModNames); return $this->TTllll1($IIILLII, $IlLLlII); }function TTlllll($IIILLII, $IlLLlII =I15637){ return $this->TTllll1($IIILLII, $IlLLlII, I15637); }function TTllll1($IIILLII, $IlLLlII ,$limit){ $res =false; $IlLLlIl =I15637; if(is_array($IlLLlII)){ $IlLLlIl =I15646.implode(I15646, $IlLLlII); }$sql =I15642.$IlLLlIl.I15643. I15640. I15651.$IIILLII.I15652.$this->tree->TI1l1lT().I15643. I15653.$limit; $this->db->query($sql); if($limit != I15637) {if($this->db->next_record()) {if($IlLLlII == I15637) {$res =$this->db->Record[I15645]; }else {$res =$this->db->Record; }}}else {while($this->db->next_record()) {if($IlLLlII == I15637) {$res[] =$this->db->Record[I15645]; }else {$res[] =$this->db->Record; }}}return $res; }function getPageInfoByModuleName($IIILLII, $Ill11LI =I15637){ $res =false; $IlLLlIl =I15637; if(is_array($Ill11LI)){ $IlLLlIl =I15646.implode(I15646, $Ill11LI); }$sql =I15642.$IlLLlIl.I15643. I15640. I15654.$IIILLII.I15648.$this->tree->TI1l1lT().I15643. I15644; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record; }return $res; }function AdjustPageId($Ill11lL, $IlLLlIL =true){ $res =$Ill11lL; $IlLLlI1 =0; $found =$this->tree->TI1l1lI($Ill11lL, $IlLLlI1); if($IlLLlI1 >0){ $res =$Ill11lL =$IlLLlI1; $found =$this->tree->TI1l1lI($Ill11lL, $IlLLlI1); }elseif($IlLLlI1 <0){ $res =$IlLLlI1; $found =true; }if(!$found && $this->ReturnDefault){ if($IlLLlIL){ $res =$this->AdjustPageId($this->DefaultId, false); }else{ $res =false; }}return $res; }function GetDefaultPageByIPArea(&$IlLLllI){ $res =true; $NONE =false; $found =$this->tree->TI1l1lI($IlLLllI, $NONE); if(!$found){ $sql =I15642. I15640. I15655.$this->tree->TI1l1lT().I15643. I15649; $this->db->query($sql); if($this->db->next_record()) {$page =$IlLLllI; $IlLLllI =$this->db->Record[I15645]; $sql =I15656. I15640. I15647.$page.I15648. I15649; $this->db->query($sql); if($this->db->next_record()) {$this->Cms->TTITl11(-1 *$this->db->Record[I15657]); }else {trigger_error("Default page $page not exists"); }}else {$res =false; }}return $res; }function CheckDefaultPageBySiteId(&$IlLLllI){ $NONE =false; return $this->tree->TI1l1lI($IlLLllI, $NONE); }function getDefaultPageIds(){ return $this->tree->getDefaultPageIds(); }function TTI111T($Ill11lL, &$IlLLlll, $originalPageId =0){ global $ActiveScriptFullLink; $res =I15637; $data =array(); $NONE =false; $found =$this->tree->TI1l1lI($Ill11lL, $NONE); if(!$found && $this->ReturnDefault) $Ill11lL =$this->DefaultId; if($found || $this->ReturnDefault){ if($this->DrawPath) $data[I15658] =$this->getPath($Ill11lL, I15659, $this->RootPathId); if($this->DrawNavBar) $data[I15660] =$this->TTlll1T($Ill11lL); $IlLLllL =($this->CachedPageId)?I15637:I15661; $sql =I15662. I15663. $IlLLllL. I15640. I15647.$Ill11lL.I15664; $this->db->query($sql); if($this->db->next_record()) {$IlLLlll[I15665] =$this->db->Record[I15666]; $IlLLlll[I15667] =$this->db->Record[I15668]; $IlLLlll[I15669] =$this->db->Record[I15670]; $IlLLlll[I15671] =$this->db->Record[I15672]; $IlLLlll[I15673] =$this->db->Record[I15673]; $IlLLlll[I15674] =$this->db->Record[I15659]; $IlLLlll[I15675] =$this->db->Record[I15675]; if($this->db->Record[I15676] || !$GLOBALS[I15677]){ $this->Gui->setRobotsMeta(false); }else if($originalPageId >0 && $originalPageId != $Ill11lL){ $sql =I15678 .$originalPageId; $oResult =$this->db->select($sql); if(($aRecord =$oResult->nextRecord()) && $aRecord[I15676]){ $this->Gui->setRobotsMeta(false); }}if($this->Cms->TTIT1TT()==0) $this->Cms->TTITl11($this->db->Record[I15657]); $pid =$this->db->Record[I15679]; if($this->DrawSiblingsBar && $IlLLlll[I15673]) $data[I15680] =$this->TTlll1I($pid, $Ill11lL); if($this->DrawPageName) $data[I15681] =$this->db->Record[I15659]; if($this->DrawName) $data[I15659] =$this->Gui->getAbs($this->block.I15682, Array(I15659 => $this->db->Record[I15659]) );if($this->DrawPrintLink && $this->db->Record[I15683]){ $IlLLll1 =$ActiveScriptFullLink; TlT1IT1($IlLLll1, array($this->Cms->Core->GetOption(I15684)=>1) );$data[I15685] =$this->Gui->getAbs($this->block.I15686, Array(I15687 => $IlLLll1) );}$IlLLllL =($this->CachedPageId)?$this->CachedPageBody:$this->db->Record[I15688]; $data[I15688] =$this->Gui->getAbs($this->block.I15689, Array(I15688 => $this->Gui->MYnl2br($IlLLllL)) );}$res =$this->Gui->get($this->block, $data); $this->CachedPageBody =$res; $this->CachedPageId =$Ill11lL; }return $res; }function TTlll1T($Ill11lL){ $res =I15637; $splitter =$this->Gui->getAbs($this->block.I15690, I15637); $children =$this->tree->TI11TII($Ill11lL, 1); foreach( $children as $vid => $IlLLlLI ){$IlLLlLl =Array(); $IlLLlLl[I15691] =$this->tree->TI11TIT($IlLLlLI[I15692]); $IlLLlLl[I15693] =$splitter; if(empty($res)) $IlLLlLl[I15693] =I15637; $IlLLlLl[I15694] =$vid; $IlLLlLl[I15695] =$IlLLlLI[I15659]; $res .= $this->Gui->get($this->block.I15696, $IlLLlLl); }if(!empty($res)) {$res =$this->Gui->getAbs($this->block.I15697, Array(I15660 => $res) );}return $res; }function TTlll1I($IlLLlLL, $Ill11lL){ static $IlLLlL1 =array (I15698 => 1, I15699 => 1); $res =I15637; $splitter =$this->Gui->getAbs($this->block.I15700, I15637); $children =$this->tree->TI11TII($IlLLlLL, 1, false); foreach( $children as $vid => $IlLLlLI ){if (!empty($IlLLlLI[I15701]) && isset($IlLLlL1[$IlLLlLI[I15701]])) {continue; }$IlLLlLl =Array(); $IlLLlLl[I15691] =$this->tree->TI11TIT($IlLLlLI[I15692]); $IlLLlLl[I15693] =$splitter; if(empty($res)) $IlLLlLl[I15693] =I15637; $IlLLlLl[I15694] =$vid; $IlLLlLl[I15695] =$IlLLlLI[I15659]; $IlLLl1I =I15637; if($vid == $Ill11lL) $IlLLl1I =I15702; $res .= $this->Gui->get($this->block.":sibl_item$IlLLl1I", $IlLLlLl); }$res =$this->Gui->getAbs($this->block.I15703, Array(I15680 => $res) );return $res; }function getPath($Ill11lL, $IIlLlLI =I15659, $IlLLl1l =I15637, $IILLILl =false){ $res =I15637; $splitter =$this->Gui->getAbs($this->block.I15704, I15637); $IlLLl1L =is_array($IlLLl1l); $path =$this->tree->TI11TI1($Ill11lL, 1, $this->PathRootId); if($IlLLl1L){ $IlLLl11 =array(); $IlLLLII =key($IlLLl1l); $IlLLLIl =current($IlLLl1l); foreach( $path as $vid=>$IlLLlLI ){$IlLLl11[$vid] =$IlLLlLI; if($IlLLlLI[$IlLLLII] == $IlLLLIl){ break; }}$path =$IlLLl11; }$path =array_reverse($path, true); foreach( $path as $vid => $IlLLlLI ){if( $IILLILl && empty($IlLLlLI[$IIlLlLI]) ){continue; }$p =Array(); $p[I15691] =$this->tree->TI11TIT($IlLLlLI[I15692]); $p[I15693] =$splitter; if(empty($res)) $p[I15693] =I15637; $p[I15694] =$vid; $p[I15695] =$IlLLlLI[$IIlLlLI]; $IlLLl1I =I15637; if($vid == $Ill11lL) $IlLLl1I =I15702; $res .= $this->Gui->get($this->block.":path_item$IlLLl1I", $p); }$res =$this->Gui->getAbs($this->block.I15705, Array(I15658 => $res) );return $res; }function TTlll1l(&$IlLLLIL, $IlLLLI1, $IlLLLlI, $parentId, $IlLLLll){ $IlLLLIL[I15706] =I15637; $IlLLLIL[I15707] =I15637; if($IlLLLI1 >$this->_tmpSubMenuCommonData[I15708]){ return I15637; }$IlLLLlL =$IlLLLI1-1; $IlLLLl1 =array(); if($IlLLLll[I15679] != $this->_tmpSubMenuCommonData[I15709]){ if(isset($this->_tmpSubMenuCommonData[I15710][$IlLLLI1][$parentId]) && is_array($this->_tmpSubMenuCommonData[I15710][$IlLLLI1][$parentId])) {$IlLLLl1 =$this->_tmpSubMenuCommonData[I15710][$IlLLLI1][$parentId]; }}else return I15637; $IlLLLLI =I15637; foreach($IlLLLl1 as $IlLLLLl =>$IlLLLLL){ $IlLLLIL[I15707] =I15711; $IlLLLL1 =array(); $IlLLLLI .= $this->TTlll1l($IlLLLL1, $IlLLLI1+1, $parentId, $IlLLLLl, $IlLLLLL); $IlLLL1I =I15637; if(mb_strlen($IlLLLLL[I15712]) >4){ $IlLLL1I =I15713; $IlLLLL1[I15712] =$IlLLLLL[I15712]; $IlLLLL1[I15714] =$IlLLLLL[I15714]; $IlLLLL1[I15715] =$IlLLLLL[I15715]; if(mb_strlen($IlLLLL1[I15714]) >4) $IlLLL1l .= I15664.$IlLLLL1[I15714].I15716; }$IlLLLL1[I15693] =$this->_tmpSubMenuCommonData[I15717.$IlLLLI1]; $IlLLLL1[I15679] =$parentId; $IlLLLL1[I15645] =$IlLLLLl; $IlLLLL1[I15659] =$IlLLLLL[I15659]; if($IlLLLLL[I15718]){ $IlLLLL1[I15719] =I15720; $IlLLLL1[I15721] =I15722; $IlLLLL1[I15723] =I15724; }$IlLLLL1[I15725] =$this->tree->TI11TIT($IlLLLLL[I15692]); $IlLLLL1[I15726] =$IlLLLI1-1; if(empty($IlLLLIL[I15706])) $IlLLLL1[I15693] =I15637; $IlLLl1I =I15637; if($IlLLLLl == $this->_tmpSubMenuCommonData[I15727] || isset($IlLLLL1[I15728])){ $IlLLl1I =I15702; $IlLLLIL[I15728] =true; }$IlLLL1L =array($IlLLLlL.I15729.$IlLLl1I, I15729.$IlLLl1I); $IlLLLIL[I15706] .= $this->Gui->getDefPostf($this->MenuBlock.I15730.$this->MenuSubBlock[$IlLLL1I.I15630], $IlLLL1L, $IlLLLL1); }$res =I15637; if(!empty($IlLLLIL[I15706])){ $IlLLL1L =array($IlLLLlL.I15731, I15731); $IlLLLIL[I15706] =$this->Gui->getAbsDefPostf( $this->MenuBlock.I15730.$this->MenuSubBlock[I15630], $IlLLL1L, Array(I15732=>$IlLLLlI, I15679=>$parentId, I15733=>$IlLLLIL[I15706], I15734 => $IlLLLLI, I15726 => $IlLLLI1-1) );$res =$IlLLLIL[I15706]; if ($this->_tmpSubMenuCommonData[I15735]) {unset($IlLLLIL[I15736]); }}return $res; }function TTlll11($IlLLL11){ if(isset($this->IlLLIII[$IlLLL11])){ return $this->IlLLIII[$IlLLL11]; }else{ $IlLL1II =array(); $IlLL1II =$this->tree->TTlll11($IlLLL11); $this->IlLLIII[$IlLLL11] =$IlLL1II; return $IlLL1II; }}function TTll1TT($IlLL1Il=0, $IlLL1IL=0, $IlLL1I1=I15628, $IlLL1lI =false) {$res =Array(); $this->tree->ll1IlLL =true; $this->tree->UseHidden =false; $this->tree->ll1Il1I =false; $this->tree->UseModLinks =true; $this->tree->ll1Il1L =true; $this->tree->ll1Il11 =false; $this->tree->UseScriptLinks =true; $this->tree->ll1ILII =true; $this->_tmpSubMenuCommonData[I15709] =0; $parentId =0; $IlLL1ll =$this->TTlll11($IlLL1IL); if(($IlLL1lL =array_search($IlLL1Il, $IlLL1ll)) !== false){ $parentId =($IlLL1lL >0 ?$IlLL1ll[$IlLL1lL-1] :0); $this->_tmpSubMenuCommonData[I15709] =$parentId; }$IlLL1ll =array_flip($IlLL1ll); unset($IlLL1ll[$parentId], $IlLL1ll[$IlLL1Il]); if($IlLL1I1==I15628 || $IlLL1I1==I15737){ $this->tree->ll1ILll =I15628; $IlLL1l1 =false; $this->_tmpSubMenuCommonData[I15708] =$this->Cms->PManager->GetOption(I15738); $this->_tmpSubMenuCommonData[I15735] =$IlLL1lI; $IlLL1LI =I15637; $IlLL1Ll =I15637; $IlLLL1l =I15637; $splitter =$this->Gui->getAbs($this->MenuBlock.I15730.$this->MenuSubBlock[I15628].I15739, I15637); for($i =1; $i <= $this->_tmpSubMenuCommonData[I15708]; $i++){ $this->_tmpSubMenuCommonData[I15717.$i] =$this->Gui->getAbsDefPostf($this->MenuBlock.I15730.$this->MenuSubBlock[I15630], array(($i-1).I15739, I15739)); }$aMenu =$this->tree->TI11TII($parentId.I15740.$IlLL1Il, 1, true, true); $this->_tmpSubMenuCommonData[I15710] =array(); $IlLL1LL =array_keys($aMenu); for($i =2; $i <= $this->_tmpSubMenuCommonData[I15708]; $i++){ $itemIds =implode(I15740, $IlLL1LL); $IlLL1LL =array(); $IlLL1L1 =(empty($itemIds))? array(): $this->tree->TI11TII($itemIds, 1); foreach($IlLL1L1 as $id => $aItem){ $this->_tmpSubMenuCommonData[I15710][$i][$aItem[I15679]][$id] =$aItem; $IlLL1LL[] =$id; }}foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $this->_tmpSubMenuCommonData[I15727] =$IlLL1IL; $IlLL1Ll .= $this->TTlll1l($v, 2, 0, $vid, $IlLLlLI); if(isset($v[I15728])){ $IlLL11I =$vid; }$IlLLL1I =I15637; if(mb_strlen($IlLLlLI[I15712])>4){ $IlLLL1I =I15713; $v[I15712] =$IlLLlLI[I15712]; $v[I15714] =$IlLLlLI[I15714]; $v[I15715] =$IlLLlLI[I15715]; if(mb_strlen($v[I15714])>4) $IlLLL1l .= I15664.$v[I15714].I15716; }$v[I15693] =$splitter; $v[I15645] =$vid; $v[I15659] =$IlLLlLI[I15659]; $v[I15725] =$this->tree->TI11TIT($IlLLlLI[I15692]); if($IlLLlLI[I15718]){ $v[I15719] =I15720; $v[I15721] =I15722; $v[I15723] =I15724; }if(empty($IlLL1LI)) $v[I15693] =I15637; $IlLLl1I =I15637; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I15702; if(EventApplyVars($this->Gui, I15741, $v)){ $IlLL1LI .= $this->Gui->get($this->MenuBlock.I15730.$this->MenuSubBlock[$IlLLL1I.I15628]."_item$IlLLl1I", $v); }}if(!empty($IlLLL1l)){ $jsdata =array(I15742=>mb_substr($IlLLL1l, 0, -1)); $this->Gui->addHtmlScript($this->Gui->get($this->MenuBlock.I15743, $jsdata)); }$res[I15744] =$this->Gui->getAbs($this->MenuBlock.I15730.$this->MenuSubBlock[I15628].I15731, Array(I15733=>$IlLL1LI)); $res[I15745] =$IlLL1Ll; }if($IlLL1I1==I15633 || $IlLL1I1==I15737){ $this->tree->ll1ILll =I15633; $IlLL11l =I15637; $splitter =$this->Gui->getAbs($this->MenuBlock.I15730.$this->MenuSubBlock[I15633].I15739, I15637); $aMenu =$this->tree->TI11TIl(1); foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $v[I15693] =$splitter; $v[I15645] =$vid; $v[I15659] =$IlLLlLI[I15659]; $v[I15725] =$this->tree->TI11TIT($IlLLlLI[I15692]); if($IlLLlLI[I15718]){ $v[I15719] =I15720; $v[I15721] =I15722; $v[I15723] =I15724; }if(empty($IlLL11l)) $v[I15693] =I15637; $IlLLl1I =I15637; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I15702; if(EventApplyVars($this->Gui, I15746, $v)){ $IlLL11l .= $this->Gui->get($this->MenuBlock.I15730.$this->MenuSubBlock[I15633]."_item$IlLLl1I", $v); }}$res[I15747] =$this->Gui->getAbs($this->MenuBlock.I15730.$this->MenuSubBlock[I15633].I15731, Array(I15733=>$IlLL11l)); }if($IlLL1I1==I15634 || $IlLL1I1==I15737){ $this->tree->ll1ILll =I15634; $IlLL11L =I15637; $splitter =$this->Gui->getAbs($this->MenuBlock.I15730.$this->MenuSubBlock[I15634].I15739, I15637); $aMenu =$this->tree->TI11TIl(1); foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $v[I15693] =$splitter; $v[I15645] =$vid; $v[I15659] =$IlLLlLI[I15659]; $v[I15725] =$this->tree->TI11TIT($IlLLlLI[I15692]); if($IlLLlLI[I15718]){ $v[I15719] =I15720; $v[I15721] =I15722; $v[I15723] =I15724; }if(empty($IlLL11L)) $v[I15693] =I15637; $IlLLl1I =I15637; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I15702; if(EventApplyVars($this->Gui, I15748, $v)){ $IlLL11L .= $this->Gui->get($this->MenuBlock.I15730.$this->MenuSubBlock[I15634]."_item$IlLLl1I", $v); }}$res[I15749] =$this->Gui->getAbs($this->MenuBlock.I15730.$this->MenuSubBlock[I15634].I15731, Array(I15733=>$IlLL11L)); }return $res; }function TTll1TI($IlLL111, $pageId, $modName, $IlL1III, &$IlL1IIl, $IIILLIL =I15638){ global $lang; $found =true; $IlL1IIl =Array(); $aVirtualLinks =$this->Cms->Core->GetModProperty(I15750, I15751); if(isset($aVirtualLinks[$modName])) {$IlL1IIL =I15637; $masterModuleName =$modName; $IlL1II1 =$pageId; if(mb_substr($IlL1III, -1) != I15752){ $IlL1III .=I15752; }$checkScriptLink =ltrim(mb_substr($IlLL111, mb_strlen($IlL1III)), I15752); $vScriptLink =$IlLL111; if(mb_substr($checkScriptLink, -1) != I15752){ $checkScriptLink .=I15752; }$aUsedVirtualModules =$this->Cms->Core->GetModOption(I15750, I15753); $aVirtualModules =array_intersect(array_keys($aVirtualLinks[$masterModuleName]), $aUsedVirtualModules); foreach($aVirtualModules as $IlL1IlI) {if($this->Cms->Core->IsFrontAllowed($IlL1IlI)) {$link =$aVirtualLinks[$masterModuleName][$IlL1IlI]; if(mb_substr($link, -1) != I15752){ $link .=I15752; }if($checkScriptLink == $link) {$IlL1IIL =$IlL1IlI; break; }}}if($IlL1IIL != I15637 && $IlL1IIL != $IIILLIL) {$IlL1Ill =$this->tree->UseHidden; $IlL1IlL =$this->tree->ll1Il1L; $this->tree->UseHidden =false; $this->tree->ll1Il1L =false; $IlL1Il1 =$this->TTllllT($IlL1IIL, Array(I15692, I15754)); $this->tree->UseHidden =$IlL1Ill; $this->tree->ll1Il1L =$IlL1IlL; if($IlL1Il1 !== false) {if(!$this->isLinkConflictsMode && $IlLL111 != $IlL1Il1[I15692]) {$found =false; }if($IlL1Il1[I15754] >0) {$IlL1II1 =$IlL1Il1[I15645]; if(!$this->isLinkConflictsMode) {$vScriptLink =$IlL1Il1[I15692]; }}}if($found) {$IlL1IIl =Array( I15645 => $IlL1II1, I15755 => $IlL1IIL, I15692 => $vScriptLink, );}}}return $found; }function DetectPageByLink($IlLL111, $IlL1ILI =false, $IlL1ILl =false, $IIILLIL =I15637){ global $lang; $res =Array(); if(!empty($IlLL111)){ $res =$this->tree->TI1l1l1($IlLL111, $IlL1ILI, $IlL1ILl); if(!$this->isLinkConflictsMode && isset($res[$lang])) {$IIILLlL =Array(); if($this->TTll1TI($IlLL111, $res[$lang][I15645], $res[$lang][I15755], $res[$lang][I15692], $IIILLlL, $IIILLIL)){ $res[$lang] =$IIILLlL +$res[$lang]; }else {$res =Array(); }}}return $res; }function DetectPageById($cId){ $res =Array(); if(isset($cId) && $cId>0){ $res =$this->tree->TI1l11T($cId); }else{ trigger_error("Wrong page Id [$cId]...",E_USER_WARNING); }return $res; }function TTll1Tl($Ill11lL){ $res =I15637; $sql ="select script_link from cms_pages where id='$Ill11lL'"; $this->db->query($sql); if($this->db->next_record()){ $res =$this->tree->TI11TIT($this->db->Record[I15692]); }return $res; }function TTll1T1($IlLL111){ $res =I15637; $res =$this->tree->TI11TIT($IlLL111); return $res; }function TTll1IT($Ill11lL){ $res =false; $IlL1ILL =$this->tree->ll1ILl1; $IlL1IL1 =$this->tree->ll1Il11; $IlL1I1I =$this->tree->ll1ILII; $this->tree->ll1ILII =false; $this->tree->ll1Il11 =false; $this->tree->ll1ILl1 =true; $aPrev =$this->tree->TI11T1I($Ill11lL); if($aPrev!==false){ $res =$aPrev; $res[I15756] =$this->tree->TI11TIT($aPrev[I15692]); }$this->tree->ll1ILl1 =$IlL1ILL; $this->tree->ll1Il11 =$IlL1IL1; $this->tree->ll1ILII =$IlL1I1I; return $res; }function TTll1II($Ill11lL){ $res =false; $IlL1ILL =$this->tree->ll1ILl1; $IlL1IL1 =$this->tree->ll1Il11; $IlL1I1I =$this->tree->ll1ILII; $this->tree->ll1ILII =false; $this->tree->ll1Il11 =false; $this->tree->ll1ILl1 =true; $aNext =$this->tree->TI11T1T($Ill11lL); if($aNext!==false){ $res =$aNext; $res[I15756] =$this->tree->TI11TIT($aNext[I15692]); }$this->tree->ll1ILl1 =$IlL1ILL; $this->tree->ll1Il11 =$IlL1IL1; $this->tree->ll1ILII =$IlL1I1I; return $res; }function TTll1Il($Ill11lL, $IlL1I1l =0){ $res =false; $data =array(); $IlL1I1L =false; if(!isset($this->LayBlocksCount) || $this->LayBlocksCount<1){ trigger_error(I15757, E_USER_ERROR); }$NONE =false; $found =$this->tree->TI1l1lI(($IlL1I1l)?$IlL1I1l:$Ill11lL, $NONE); if(!$found && $this->ReturnDefault){ $Ill11lL =$this->DefaultId; }$sql =I15758. I15640. I15647.$Ill11lL.I15664; $IlL1I11 =&$this->db->select($sql); if($IlL1I11->nextRecord() && ($IlL1I11->Record[I15759]>0)) {$IlL1lII =0; if(isset($this->Cms->Vars[I15759]) && $this->Cms->Vars[I15759] >0) {$IlL1I1L =true; $this->CachedPageLayoutId =$this->Cms->Vars[I15759]; $IlL1lII =$IlL1I11->Record[I15759]; }else {$this->CachedPageLayoutId =$IlL1I11->Record[I15759]; }$this->CachedPageHTMLHeadTail =$IlL1I11->Record[I15760]; $this->CachedPageId =$Ill11lL; $this->CachedPageBody =$IlL1I11->Record[I15688]; $IlL1lIl =I15637; for($i=1; $i <= $this->LayBlocksCount; $i++) {$IlL1lIl .= I15761.$i.I15762; if($IlL1I1L){ $IlL1lIl .= I15761.$i.I15763; }}$sql =I15764.$IlL1lIl.I15765; $IlL1lIL =&$this->db->select($sql.$this->CachedPageLayoutId.I15664); $found =false; if($IlL1lIL->nextRecord()){ $found =true; }elseif($IlL1lII) {$IlL1lIL =&$this->db->select($sql.$IlL1lII.I15664); if($IlL1lIL->nextRecord()){ $found =true; }}if($found) {for($i=1; $i <= $this->LayBlocksCount; $i++) {if($IlL1lIL->Record[I15766.$i.I15762] != I15637) {$this->_aUsedLayoutBlocks[] =$i; }}$this->CachedPageLayoutBody =$IlL1lIL->Record[I15767]; $this->CachedPageLayoutCssName =$IlL1lIL->Record[I15768]; $this->CachedLayoutHTMLHeadTail =$IlL1lIL->Record[I15760]; foreach($this->_aUsedLayoutBlocks as $IlL1lI1){ $this->CachedPageBlocks[$IlL1lI1] =$IlL1I1L ?$IlL1lIL->Record[I15766.$IlL1lI1.I15763] :$IlL1I11->Record[I15766.$IlL1lI1.I15763]; }$res =true; }else{ trigger_error(I15769.$this->CachedPageLayoutId."] for page id=[$Ill11lL]...", E_USER_WARNING); }}else{ trigger_error("Init layouts: page not found or layout is undefined. Search for default Layout (request for page id=[$Ill11lL])...", E_USER_WARNING); $sql =I15770.$this->tree->lang.I15664; $IlL1lIL =&$this->db->select($sql); if($IlL1lIL->next_record()){ $vRec =$IlL1lIL->Record; $this->CachedPageLayoutId =$vRec[I15645]; for($i=1; $i<=$this->LayBlocksCount; $i++){ if($IlL1lIL->Record[I15766.$i.I15762] != I15637) {$this->CachedPageBlocks[$i] =$IlL1lIL->Record[I15766.$i.I15763]; $this->_aUsedLayoutBlocks[] =$i; }}$this->CachedPageLayoutBody =$IlL1lIL->Record[I15767]; $this->CachedPageLayoutCssName =$IlL1lIL->Record[I15768]; $this->CachedLayoutHTMLHeadTail =$IlL1lIL->Record[I15760]; $res =true; }else{ trigger_error("Default Layout is not found (request for page id=[$Ill11lL])...", E_USER_WARNING); }}if($IlL1I1l){ $sql =I15771. I15640. I15647.$IlL1I1l.I15664; $this->db->query($sql); if($this->db->next_record()){ $this->CachedPageId =$IlL1I1l; $this->CachedPageBody =str_replace(I15772, $this->db->Record[I15688], $this->CachedPageBody); }}return $res; }function TTll1I1(){ $data =array(); if(!isset($this->LayBlocksCount) || $this->LayBlocksCount<1){ trigger_error(I15757, E_USER_ERROR); }$data[I15773] =$this->CachedPageBody; $data[I15694] =$this->CachedPageId; $data[I15774] =$this->CachedPageLayoutId; $data[I15775]= $this->CachedPageLayoutBody; $data[I15776] =$this->CachedPageLayoutCssName; $data[I15777] =$this->CachedPageBlocks; $data[I15760] =$this->CachedLayoutHTMLHeadTail .$this->CachedPageHTMLHeadTail; $data[I15778] =$this->_aUsedLayoutBlocks; return $data; }function TTll1lT(&$IlL1llI) {$this->_aUsedLayoutBlocks =&$IlL1llI; }function TTll1lI(&$frn, &$ModuleHtml, &$IlL1lll, &$HtmlBody){ require_once($GLOBALS[I15779].I15780); $IlL1llL =array(); if(!empty($ModuleHtml[I15688])){ $frn->Gui->AddText(I15688, $frn->Gui->getAbs(I15781, I15733, $ModuleHtml[I15688])); $IlL1ll1 =$frn->Gui->getAbs(I15782, I15733, $HtmlBody); if($frn->Gui->isVarDefined(I15688, I15783)==1){ $IlL1llL[I15784] =$frn->Gui->getAbs(I15688, I15783, $IlL1ll1); }else{ $IlL1llL[I15784] =$frn->Gui->getAbs(I15688).$IlL1ll1; }}else{ $IlL1llL[I15784] =$frn->Gui->ParseText($frn->Gui->getAbs(I15781, I15733, $HtmlBody)); }foreach($this->_aUsedLayoutBlocks as $IlL1lLI) {$IlL1lLl =I15766.$IlL1lLI.I15763; $IlL1llL[$IlL1lLl] =$frn->Gui->ParseText($IlL1lll[I15777][$IlL1lLI]); }$frn->Gui->addStyle($IlL1lll[I15776]); $frn->Gui->setHeaderCode($IlL1lll[I15760]); $IlL1llL[I15785] =$frn->Gui->header(); $frn->Core->TTlllTT($IlL1llL[I15786]); $IlL1llL[I15787] =$frn->Gui->footer(); if($frn->Gui->ForceExport){ $IlL1lLL =array(I15788=>I15788, I15628=>I15628); $IlL1lL1 =I15789; for($i=1; $i<=$this->LayBlocksCount; $i++){ $IlL1lL1 .= I15761.$i.I15762; $IlL1lLL[I15766.$i] =I15766.$i; }$sql =I15790.$IlL1lL1.I15765.$IlL1lll[I15774].I15791.$this->tree->lang.I15664; $this->db->query($sql); if($this->db->next_record()){ $vRec =&$this->db->Record; if(!empty($vRec[I15792])){ $IlL1lLL[I15788] =$vRec[I15792]; }if(!empty($vRec[I15659])){ $IlL1lLL[I15628] =$vRec[I15659]; }for($i=1; $i<=$this->LayBlocksCount; $i++){ $IlL1lLl =I15766.$i.I15762; if(!empty($vRec[$IlL1lLl])){ $IlL1lLL[I15766.$i] =$vRec[$IlL1lLl]; }}}$IILLl1I =array(I15793, I15794); foreach($IlL1llL as $vName=>$vData){ if(mb_strpos($vName, I15795)!==false){ $IlL1l1I =str_replace(I15763, I15637, $vName); if($IlL1l1I==I15796) $IlL1l1I =I15788; $IlL1l1l =$IlL1lLL[$IlL1l1I]; $IILLl1l =array($IlL1l1I, $vData); $IlL1llL[$vName] =str_replace($IILLl1I, $IILLl1l, TlT1TII($IlL1l1I, $IlL1l1l, I15794)); }}$IILLl1I =array(I15793); $IILLl1l =array(I15797); $IlL1l1L =TlT1TT1(I15768, $IlL1lll[I15776]); if(!empty($IlL1lll[I15760])) {$IlL1llL[I15785] =str_replace( $IlL1lll[I15760], TlT1TT1(I15798, I15638) .$IlL1lll[I15760] .TlT1TIT(I15798), $IlL1llL[I15785] );}$IlL1llL[I15785] =$IlL1l1L.$IlL1llL[I15785].str_replace($IILLl1I, $IILLl1l, TlT1TT1(I15797, $IlL1lLL[I15628])); $IlL1llL[I15787] =str_replace($IILLl1I, $IILLl1l, TlT1TIT(I15797)).$IlL1llL[I15787]; }$Content =$frn->Gui->ParseText($IlL1lll[I15775], $IlL1llL); return $Content; }public function processRedirection($pageId, $IlL1l11){ $sql =I15799 .(int)$pageId; $record =$this->db->getRecord($sql); if($record && $record[I15800]){ $code =(int)$record[I15800]; if($code != 404){ $this->Cms->Core->Cache->pageIsComplitedForSave =true; $IlL1l11->DelHeader(I15801); $IlL1l11->DelHeader($GLOBALS[I15802].I15803); }switch($code){ case 301: case 302: $status =$code == 301 ?I15804 :I15805; $IlL1l11->AddHeader($GLOBALS[I15802] .I15806 .$code .I15806 .$status, true); $pos =mb_strpos($record[I15807], I15808); if($pos !== 0 && !isFullLink($record[I15807])){ $record[I15807] =I15808 .$record[I15807]; }$IlL1l11->AddHeader(I15809 .$record[I15807], true); break; case 503: $IlL1l11->AddHeader($GLOBALS[I15802] .I15810, true); $IlL1l11->AddHeader(I15811, true); global $frn; $lang =$frn->Gui->parseLangFile(I15812); echo $lang[I15813]; break; case 404: list($IlL1LII, $activeModule) =cmsHandle404(false); if($IlL1LII || $activeModule == I15698){ return; }$this->Cms->Core->Cache->pageIsComplitedForSave =true; $IlL1l11->DelHeader(I15801); $IlL1l11->DelHeader($GLOBALS[I15802].I15803); $IlL1l11->AddHeader($GLOBALS[I15802] .I15814, true); $IlL1l11->AddHeader(I15815, true); global $frn; $lang =$frn->Gui->parseLangFile(I15812); echo $lang[I15816]; break; default: trigger_error(I15817 .$code, E_USER_ERROR); }echo I15806; $IlL1l11->SetSkip200Status(true); $IlL1l11->Out(); $this->Cms->Core->Cache->markPageIsSkipped(); die; }}}