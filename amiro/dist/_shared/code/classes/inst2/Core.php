<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       145590 xkqwlpskqzqwkgswzgrlnstsmunwnmirltnxnizlnxltntgrxxmgpzwwrminqsgnlpuxpnir
 */ ?><?php foreach(array(15818=>'oTTg~1`0?403?FHrYMSSQn',15819=>'FHrYMSSQn!?MnvZJMS?URj,?',15820=>'?Zt?',15821=>"dbd|s|RmpoT",15822=>"dbd|c|RmpoT",15823=>"dbd|R|RmpoT",15824=>"dbd|z|RmpoT",15825=>'ohdTihsq|dozRqs',15826=>'ohdTihsq|zsimN',15827=>'sqFmNq001',15828=>"dbd|zwT|sqF|RmpoTd",15829=>"nHnQ",15830=>"rDrtIQ",15831=>"vMQC",15832=>"SQJ",15833=>"QSMt",15834=>'wjzddqd|gzTo',15835=>'wid|iHSuJQDdQttMnPD`GOG',15836=>'IHSuJQD',15837=>'unKnHCn',15838=>'`GOG',15839=>'GZPQ|',15840=>'DMAQ',15841=>'DHrt|WHJ',15842=>'DHrt|SMI',15843=>'IZx|GZPQD',15844=>'',15845=>'WID|',15846=>'MS',15847=>'ZSIMn|GZPQ|OQZSQr',15848=>'ZSIMn|IQnu|WZGtMHn',15849=>"MS",15850=>"",15851=>'hYDHJQtQ?wHrQ%%dQtTZYJQdHrtFMQJSD?IQtOHS?WZJJQS',15852=>'DHrt|fMQJSD',15853=>"WOQWK|JMnKD|WHnfJMWt",15854=>'MnOQrMt|DQttMnPD',15855=>'HGtMHn',15856=>"UnKnHCn?",15857=>"?'",15858=>"'?Mn?IHSuJQ?'",15859=>"'",15860=>'ZWtMHnD',15861=>"ZWtMHnD",15862=>"[",15863=>"|dmsq",15864=>"frHnt",15865=>"frHnt|",15866=>'QnPMnQ|WJZDDQD',15867=>"'QnPMnQ|WJZDDQD'?GrHGQrtB?nHt?fHunS?fHr?IHSuJQ?'",15868=>'GJuPMn|',15869=>'ZGM|vQrDMHn',15870=>'06`00',15871=>'QnPMnQ`GOG IHS|MS=',15872=>'GJuPMn|MS',15873=>'QnPMnQ|vQrDMHn',15874=>'0600',15875=>'ZSIMn|rQEuQDt|tBGQD',15876=>'ZLZx',15877=>'Qnv~WHHKMQ',15878=>'ZIM|QnPMnQ',15879=>"nZIQ",15880=>"JMnK",15881=>"MS|DMtQ",15882=>'JMnK',15883=>",,,",15884=>"mnWHrrQWt?GZrZIQtQrD?nuIYQr```",15885=>"hGtMHnD",15886=>"wuDtHIsZtZ",15887=>'hGtMHnD',15888=>"grHGQrtMQD",15889=>"dQZrWOFMQJSD",15890=>"dQZrWOsZtZ",15891=>'grHGQrtMQD',15892=>'mJJ111j',15893=>'uDQr',15894=>"unKnHCn",15895=>"SQfZuJt",15896=>'SQfZuJt',15897=>'rQYGCErLYBBnCrtnWvPBOA',15898=>'ErLYBBnCrtnWCvPBOA',15899=>'tInBCvPBOACLYBBn',15900=>'ErLYBBnCKnACPrfnPnE',15901=>'BrMrBCOIrACErLYBBn',15902=>'|ZIC',15903=>'CIZ|',15904=>"QH",15905=>'GJuPMnD',15906=>"JMW",15907=>"vQrDMHn",15908=>'Drv|IuJtM|DMtQD',15909=>'DBD|PrHuGD',15910=>'nQCD',15911=>'ZrtMWJQD',15912=>'GOHtHZJYuI',15913=>'fZE',15914=>'DQZrWO',15915=>'fQQSYZWK',15916=>'vHtQD',15917=>'DuYDWrMYQ',15918=>'fMJQD',15919=>'fHruI',15920=>'PuQDtYHHK',15921=>'LHYD',15922=>'ZSv|GJZWQD',15923=>'ZSv|ZSvQrtMDQr',15924=>'YJHP',15925=>'WJZDDMfMQSD',15926=>'QDOHG|MtQI',15927=>'QDOHG|WZrt',15928=>'QDOHG|HrSQr',15929=>'QDOHG|HrSQr|rQGHrtD',15930=>'QDOHG|uDQr',15931=>'KY|MtQI',15932=>'GHrtfHJMH|MtQI',15933=>'PZJJQrB|MtQI',15934=>'Zff|DtZtD',15935=>'YMJJMnP',15936=>'Drv|ZuSMt',15937=>'CA|SQDMPnD',15938=>'CA|OHDt|uDQrD',15939=>'ZSv|ZSvQrtMDQrD',15940=>'QDOHG|SMDWHuntD',15941=>'QDOHG|WHuGHnD',15942=>'QDOHG|ZPrQQIQnt',15943=>'QDOHG|uDQr|MtQID',15944=>'QDOHG|SZtZ|QxWOZnPQ',15945=>'QDOHG|DOMGGMnP|IQtOHSD',15946=>'rZtMnP',15947=>'GrMvZtQ|IQDDZPQD',15948=>"QI",15949=>'QD',15950=>'OHG|MtQI',15951=>'QDO',15952=>'HG|HrSQr',15953=>'QDOH',15954=>'G|SZtZ|QxWOZnPQ',15955=>'Du',15956=>'YD|DQ',15957=>'nS',15958=>'DQZ',15959=>'rWO',15960=>'zim|iHSsQW',15961=>'JZrZtHr',15962=>'PQtmn',15963=>'DtZnWQ',15964=>'PQtRQPM',15965=>'DtQrQS',15966=>'ZI',15967=>'v|AOBPvDr',15968=>'QSD',15969=>'PQtgZ',15970=>'rQnt',15971=>'HGt',15972=>"HGt",15973=>'wis|DKMG',15974=>"wis|DKMG",15975=>"IHSuJQ",15976=>"SZtZ",15977=>"wis|frHnt|ZJJHCQS",15978=>"wis|rQIHvQ|MtQI",15979=>"WHrQ",15980=>'DBD|uDQrD',15981=>'zim|iHSd',15982=>'QttMnPD',15983=>'PQthGtMH',15984=>'nD',15985=>'WHrQ',15986=>'rQEurQ|rQYuMJS|IHSuJQD',15987=>'WID',15988=>'QSMtMHn',15989=>'Hn|PQt|QSMtMHn',15990=>'YuDMnQDD',15991=>'IMnMIZrKQt',15992=>'vMtrMnZ',15993=>'WHrGHrZtQ',15994=>'DuYD|DQnS',15995=>'vMDMtKZ',15996=>"uDQr",15997=>'VqRdmhNd',15998=>'ZWt|SY',15999=>'DtZrt|vQrDMHn',16000=>'|ZJHnQ|rQWHrS',16001=>'nZIQ',16002=>'SY|vQrDMHn',16003=>'vZJuQ',16004=>'~;}\S-\`{)3(\S-$~',16005=>'`',16006=>'GKP',16007=>'JMW',16008=>'vQrDMHn',16009=>'zdwmm',16010=>'UTF+8',16011=>'ZSIMn',16012=>"W",16013=>"PtID`",16014=>"BI",16015=>"ZWHJ",16016=>"JOH",16017=>"vIDtu",16018=>"721",16019=>'0',16020=>'1`0`',16021=>"GZrZI3",16022=>"JMDt",16023=>"OHDtD",16024=>'GZrZI3',16025=>'SZtZDQt|IZx|ZJJHCQS',16026=>"dqjqwT?WHunt}[{?ZD?WHunt?",16027=>"FRhi?",16028=>"|SZtZDQtD?S?",16029=>"coqRq?1",16030=>"WHunt",16031=>"SZtZDQt|IZx|ZJJHCQS",16032=>"DtZtuD|IZxSD|fZMJ",16033=>"rQS",16034=>"UnSQfMnQS?IHSuJQ?*",16035=>"&```",16036=>"dQtiHSsuIGsZtZ%%?UnSQfMnQS?IHSuJQ?*",16037=>'QnPMnQ`GOG',16038=>'EuQrB',16039=>'IHS|MS',16040=>'WHrQ|IHSuJQ',16041=>"hGtMHn?",16042=>"%",16043=>"?WZnnHt?YQ?MnOQrMtQS?frHI?MtDQJf",16044=>"?WZnnHt?YQ?MnOQrMtQS?frHI?",16045=>'%',16046=>'Drv|HGtMHnD',16047=>'ZJJHCQS|MnOQrMtZnWQ',16048=>'MnOQrMtZnWQ',16049=>"MnDtZJJQS",16050=>"hCnQr?MD?unKnHCn?Hr?nHt?MnDtZJJQS?Mn?pQtiHSuJQDyBhCnQr?*",16051=>"SHnt|DOHC|Mn|GI",16052=>"DQZrWO|YB|GZrQnt",16053=>"hCnQr?MDn't?fHunS?*",16054=>"iHSuJQ?nZIQ?*",16055=>"&?MD?rQDQrvQS```",16056=>'fMrDt|IHS|MS',16057=>"iHSuJQ?CMtO?tOMD?nZIQ?ZJrQZSB?QxMDtD?*",16058=>"UnSQfMnQS?GZrQnt?IHSuJQ?*",16059=>"iHSuJQ?MD?nHt?fHunS?*",16060=>"IHSuJQD",16061=>"tZYHrSQr",16062=>'tZYHrSQr',16063=>"HCnQrD",16064=>'HCnQrD',16065=>'GHD',16066=>"GHD",16067=>'ZJJ',16068=>"ZJJ",16069=>"dZvQhGtMHnD%?UnKnHCn?IHSuJQ?*",16070=>"WID|HGtMHnD",16071=>"CrMtQ",16072=>"dZvQhGtMHnD%?wZn't?JHWK?HGtMHnD?tZYJQ```?WrQZtQ?HGtMHnD?fZMJQS",16073=>'OZD|HGtMHnD|JZAB',16074=>'HGtMHnD|SuIG|JZAB',16075=>"sqjqTq?FRhi?.WID|HGtMHnD.?",16076=>"coqRq?.nZIQ.?=?'HGtMHnD|SuIG|JZAB'?zNs?.nZIQ.?=?'",16077=>'ZWtMHn',16078=>'rQfrQDO',16079=>'DtQG',16080=>"RQZShGtMHnD?%%?rQWHrS?nHt?fHunS?fHr?IHSuJQ?*",16081=>"&!?*",16082=>'HGtMHnD|SuIG|',16083=>'mm1mmmm',16084=>'WHrQ|fZDt|ZSI',16085=>'HGtMHnD|SuIG',16086=>'HGtMHnD',16087=>"WID|vQrDMHn",16088=>'wid|VqRdmhN',16089=>"`",16090=>"mJjJJJJ",16091=>"vZJuQD",16092=>'vZJuQD',16093=>'Drv|JMWQnWQ',16094=>'IMn|tZYHrSQr',16095=>"dQtgrHGQrtMQDsuIG?%%?GrHGQrtMQD?nHt?fHunS?fHr?IHSuJQ?*",16096=>"|",16097=>'DEJ|DZfQtB|WOQWK',16098=>"SuIG|",16099=>"PAWHIGrQDD",16100=>"DQJQWt?MS?frHI?WID|HGtMHnD?COQrQ?IHSuJQ|nZIQ='WHrQ'?ZnS?nZIQ='",16101=>"uGSZtQ?WID|HGtMHnD?DQt?",16102=>"SZtQ|IHSMfMQS=nHC}{!?",16103=>"vZJuQ='",16104=>"'!?",16105=>"YMP|vZJuQ='",16106=>"'?",16107=>"COQrQ?MS='",16108=>"MnDQrt?MntH?WID|HGtMHnD?DQt?",16109=>"IHSuJQ|nZIQ='WHrQ'!?",16110=>"nZIQ='",16111=>"DQJQWt?[?frHI?WID|HGtMHnD?COQrQ?IHSuJQ|nZIQ='WHrQ'?ZnS?nZIQ='",16112=>"'?JMIMt?1",16113=>"YMP|vZJuQ",16114=>"vZJuQ",16115=>"PAunWHIGrQDD",16116=>"qRRhR%?dZvQS?WHrQ?SuIG?JQnPtO*",16117=>"&?MD?nHt?QEuZJ?tH?rQZS*",16118=>'rMPOtD|vQrDMHn',16119=>"yUmjsqR|VqRdmhN",16120=>"UgszTq?WID|OHDt|uDQrD?dqT?rMPOtD|vQrDMHn='",16121=>"'?coqRq?DBD|uDQr=1",16122=>"UgszTq?WID|ODt|rQD|WID|MnDt?dqT?rMPOtD|vQrDMHn='",16123=>"'?coqRq?MD|DBD=1",16124=>'Qnv~fMJQ|WZWOQ',16125=>'[|rv|[',16126=>'uDQr|rMPOtD',16127=>"PrHuGD",16128=>"IHS|rMPOtD",16129=>"PrHuG|IZDK",16130=>"0",16131=>"JHPMn",16132=>"DBD|uDQr",16133=>"rMPOtD|vQrDMHn",16134=>"dqjqwT?MS|IQIYQr!rMPOtD|vQrDMHn?FRhi?WID|OHDt|uDQrD?coqRq?DBD|uDQr=1",16135=>"dqjqwT?MS|ZSIMn?ZD?MS|IQIYQr!?rMPOtD|vQrDMHn?FRhi?WID|ODt|rQD|WID|MnDt?coqRq?MD|DBD=1",16136=>'MS|IQIYQr',16137=>'DBD|uDQr',16138=>'HdQDDMHn',16139=>'ZIM|QfQ',16140=>"dqjqwT?DP`MS!?DP`PrHuG|IZDK!?DP`JHPMn!?DP`IHSQrZtHr!?DP`QSMt|frHnt|ZJJHCQS?",16141=>"FRhi?WID|DBD|uDQrD?Du?",16142=>"jqFT?lhmN?WID|DBD|PrHuGD?DP?hN?Du`MS|PrHuG=DP`MS?",16143=>"coqRq?Du`MS|IQIYQr='",16144=>"'?zNs?DP`JHPMn@=",16145=>"_",16146=>"IHSQrZtHr",16147=>'QSMt|frHnt|ZJJHCQS',16148=>'_',16149=>'PrHuG|IZDK',16150=>'JHPMn',16151=>"dqjqwT?.MS.!?.PrHuG|IZDK.!?.JHPMn.!?.QSMt|frHnt|ZJJHCQS.?FRhi?.WID|DBD|PrHuGD.?coqRq?.PuQDt.?=?1",16152=>"puQDt?PrHuG?nHt?fHunS",16153=>"dqjqwT?",16154=>"[!?",16155=>"}.PrHuG|IZDK.?]?}",16156=>"{{?@?0?.IHSQrZtHr.!?",16157=>"{{?@?0?.QSMt|frHnt|ZJJHCQS.",16158=>"!?}.PrHuG|IZDK.?]?}",16159=>"{{?@?0?.ZSIMn.",16160=>"?FRhi?.WID|DBD|ZWtMHnD|rMPOtD.?",16161=>"coqRq?}.PrHuG|IZDK.?]?}",16162=>"{{?,=?0",16163=>'IHSuJQ|nZIQ',16164=>'IHSQrZtHr',16165=>'ZWtMHn|nZIQ',16166=>'IHS|rMPOtD',16167=>'IQIYQrD',16168=>'QSMt|frHnt|ZJJHCQS|IHSuJQD',16169=>'nHnQ',16170=>'rDrtIQ',16171=>'ZSS',16172=>'ZGGJB',16173=>'SQJ',16174=>"ZSIMn",16175=>'DtZrt',16176=>'PrHuG|rMPOtD',16177=>"dqjqwT?PrHuG|IZDK?FRhi?WID|DBD|PrHuGD?coqRq?MS=",16178=>"prHuG?MS=",16179=>"?nHt?fHunS",16180=>"dqjqwT?[?frHI?WID|DBD|ZWtMHnD|rMPOtD?coqRq?}PrHuG|IZDK?]?}",16181=>"{{,=0",16182=>"prHuGiHSuJQzWWQDDRcs}",16183=>"!",16184=>"{%?IHSuJQ?'",16185=>"'?unKnHCn?Hr?nHt?MnDtZJJQS",16186=>"UDQriHSuJQzWWQDDRcs}",16187=>"rMPOtD",16188=>"JZnP",16189=>'PrHuGD',16190=>"uDQr|rMPOtD",16191=>"UnKnHCn?DBDtQI?SZtZ?nZIQ?*",16192=>'DuGGHrt|rMPOtD',16193=>"MS|HCnQr",16194=>"~",16195=>"~\\Y",16196=>"\\Y~",16197=>"tZYJQ",16198=>'|O',16199=>'IHSQ',16200=>'DMnPJQ',16201=>'z',16202=>'im|RQP',16203=>'MDtrB',16204=>'Q',16205=>'xMDt',16206=>'D',16207=>'PQ',16208=>'t',16209=>'#DWrMGt?tBGQ="tQxt~LZvZDWrMGt"?DrW="',16210=>'RhhT|gzTo|ccc',16211=>'Z',16212=>'IMrH|DBD|',16213=>'LD`GOG ',16214=>'|L',16215=>'~',16216=>'WHI',16217=>'IHn',16218=>'`LD ',16219=>']|Wv=',16220=>'DBD',16221=>'Qrr',16222=>'nH|WZWOQ|LD',16223=>'QxtSQY',16224=>']|tD=',16225=>'WHIIHn|DQttMnPD',16226=>'WDD|LD|vQrDMHn',16227=>']|Dv=',16228=>']ZI',16229=>'MrH|KQB=',16230=>'~;\S-\`\S-\`\S-\`}\S-{[~',16231=>'$1',16232=>'"@#~DWrMGt@',16233=>"\r\n",16234=>'frHnt',16235=>'DWrMGt=DBDtQI_fMJtQr_ZGM',16236=>'Qnv~DQDDMHn',16237=>'_DKMn',16238=>'SQYuP|MGD',16239=>'RqihTq|zssR',16240=>'SMDZYJQ|LD|HGtMIMAZtMHn',16241=>'_WHIIHn',16242=>']WHuntQr=2',16243=>'zi',16244=>'m~r',16245=>'QDHur',16246=>'WQD~L~r',16247=>'DWrMGt=uDQr|rZtMnP',16248=>'im~rQD',16249=>'HurWQ',16250=>'D~L~D',16251=>'DWrMGt=',16252=>'zim~r',16253=>'QDHu',16254=>'rWQD~',16255=>'L~60',16256=>'DWrMGt=60',16257=>'zim~rQ',16258=>'DHu',16259=>'rWQD~L~Q',16260=>'DWrMGt=QSMtHr]',16261=>'puM',16262=>'OQZ',16263=>'SQrwHSQ',16264=>'#~OQ',16265=>'ZS@',16266=>'OHDt|SZtZ',16267=>'fJZPD',16268=>"iHSuJQ?'",16269=>"'?MDn't?MnDtZJJQS",16270=>'|DHurWQ|IHS|MS',16271=>"iMDDMnP?OBGQr?IHSuJQ?SQWJZrZtMHn?'",16272=>'ruJQD',16273=>'HGQnQr',16274=>'WJHDQr',16275=>'IZrKQr',16276=>'~|SZtZ|QxWOZnPQ$~',16277=>'|SZtZ|QxWOZnPQ',16278=>'~|}*;|&-{$~',16279=>'<<IHSmS<<',16280=>'<<GZrQntiHSmS<<',16281=>'<<tZYHrSQr<<',16282=>'<<DQWtMHn<<',16283=>'WHnDtD',16284=>'Dt',16285=>'r|r',16286=>'Ht13',16287=>'~;*0+9&$~',16288=>'DOZrQS',16289=>'DQDDMHn|ZSI|nH|MG|YMnS',16290=>'whNFmp|mNm',16291=>'DQDDMHn',16292=>'DQDDMHn|nH|MG|YMnS',16293=>'zim',16294=>'PQtdM',16295=>'nPJQtHn',16296=>'SY',16297=>'sy|eu',16298=>'QrB',16299=>'PQtdn',16300=>'MGGQt',16301=>"dqjqwT?.MS|IQIYQr.!?.SZtZ.?",16302=>"FRhi?.WID|DQDDMHnD.?",16303=>"coqRq?.MS.?=?:D?zNs?.MS|IQIYQr.?=?0?zNs?.QxGMrQS.?@=?:D",16304=>"?zNs?.MG.?=?:D",16305=>'b+I+S?o%M%D',16306=>'fQtWOR',16307=>'HC',16308=>'SZtZ',16309=>'OZDO|',16310=>'OZDO',16311=>'uDQr|',16312=>'im',16313=>'PQtdMnPJ',16314=>'QtHn',16315=>'Qnv~DQ',16316=>'DDMHn',16317=>'JHPMnz',16318=>'DUDQr',16319=>'uDQrnZIQ',16320=>'trMZJ|OZDO') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header(I15818);die(I15819.__FILE__.I15820.__LINE__);} define(I15821, 1); define(I15822, 2); define(I15823, 4); define(I15824, SYS_R_RIGHT |SYS_W_RIGHT |SYS_D_RIGHT); if (!defined(I15825)) {define(I15825, 0x2); define(I15826, 0x4); }define(I15827, HOSTMODE_SHARED); define(I15828, SYS_R_RIGHT |SYS_W_RIGHT); $Ill1ILL =array( I15829 => SYS_R_RIGHT, I15830 => SYS_R_RIGHT, I15831 => SYS_R_RIGHT, I15832 => SYS_R_RIGHT |SYS_D_RIGHT, I15833 => SYS_R_RIGHT); $Ill1IL1 =array(I15829, I15830); require_once $GLOBALS[I15834] .I15835; class CMS_Module {public $Debug =true; public $Name; public $Owner =I15836; public $Ill1I1I =false; public $Ill1I1l =true; public $Ill1I1L; public $Ill1I11 =true; public $Ill1lII; public $Ill1lIl =I15837; public $Ill1lIL =array(I15837); public $Ill1lI1 =true; public $Ill1llI =false; public $Ill1lll =false; public $Table; public $SearchFields =array(); public $SearchData =array(); public $CustomData =array(); public $Options; public $Properties; public $Ill1llL =false; public $Ill1ll1 =I15838; public $Ill1lLI =I15839; public $Ill1lLl =array(I15840, I15841, I15842, I15843); public $Ill1lLL =false; public $Ill1lL1 =I15844; public $Ill1l1I =array(); public $Ill1l1l; public $Engine =false; public $TableName; public $TablePrefix =I15845; public $Ill1l1L =I15846; public $Ill1l11; public $Ill1LII; public $TableDynamicClassName =I15844; public $Ill1LIl =null; public $Ill1LIL =I15844; function __construct($cName, $IlllLlL =0) {$this->Properties =new CMS_ModulesProperties(); $this->Options =new CMS_ModulesOptions(); $this->SetOption(I15847, I15837); $this->SetOption(I15848, I15837); $this->Init($cName, $IlllLlL); }function TTlT1TT() {$this->Debug =true; }function TTlT1TI() {$this->Debug =false; }function Init($cName, $IlllLlL =0) {$this->TableInit($cName); $this->Name =$cName; $this->Ill1I1L =$IlllLlL; $this->Ill1lII =$cName .$this->Ill1ll1; return true; }function TableInit($Ill1LI1, $Illl1LI =I15849, $Ill1LlI =I15850) {$this->Ill1l1L =$Illl1LI; $this->Ill1l11 =$Ill1LlI; $this->SetTableName($Ill1LI1); $this->Ill1LII =Array(); return true; }function TTlT1Tl() {trigger_error(I15851, E_USER_WARNING); $numArgs =func_num_args(); if ($numArgs == 1 && is_array($arg =func_get_arg(0))) {$aFields =$arg; }else {$aFields =array(); for ($i =0; $i <$numArgs; $i++) {$aFields[] =func_get_arg($i); }}$this->setProperty(I15852, $aFields); return true; }function TTlT1T1() {return $this->issetProperty(I15852) ?$this->getProperty(I15852) :array(); }function TTlT1IT($IIlLlLI) {return $this->issetProperty(I15852) ?in_array($IIlLlLI, $this->getProperty(I15852)) :false; }function SetTableSortAdvFields($aFields) {$this->Ill1LII =Array(); foreach ($aFields as $IILLIIl => $IIIlLlL) {$this->Ill1LII[$IILLIIl] =$IIIlLlL; }return true; }function TTlT1II() {return $this->Ill1LII; }function TTlT1Il($Ill1Lll) {$this->TableDynamicClassName =$Ill1Lll; }function TTlT1I1($name, $value) {$this->Ill1LIL[$name] =$value; }function TTlT1lT($name) {return isset($this->Ill1LIL[$name]) ?$this->Ill1LIL[$name] :null; }function TTlT1lI($Ill1LlL =1) {$res =$Ill1LlL != 2 ?$this->Ill1l1L :$this->Ill1l11; return $res; }function GetTableName($aAdditionalParams =Array()) {$res =false; $tableName =$this->TableName; if ($this->TableName != I15829) {if (!empty($this->TableDynamicClassName)) {if (!is_object($this->Ill1LIl)) {$this->Ill1LIl =new $this->TableDynamicClassName($this); }$tableName =$this->Ill1LIl->GetTableName($this->TableName, $aAdditionalParams); if (empty($aAdditionalParams[I15853])) {$this->TableName =$tableName; }}$res =$this->TablePrefix .$tableName; }return $res; }function SetTableName($Ill1LI1) {if (!empty($Ill1LI1)) {$this->TableName =$Ill1LI1; }}function TTlT1ll($IIL11ll) {$this->Owner =$IIL11ll; return true; }function TTlT1l1($key, $Ill1Ll1 =false) {$this->Options->TTlTlIl($this->Name, $key, $Ill1Ll1); }function TTlT11T($key, $Ill1LLI =true, $IlIlIL1 =false) {return $this->Options->TTlTlI1($this->Name, $key, $Ill1LLI, !$IlIlIL1); }function issetOption($cName) {return $this->Options->issetModParam($this->Name, $cName); }function issetOptionLazy($cName) {return $this->Options->issetModParamLazy($this->Name, $cName); }function issetProperty($cName) {return $this->Properties->issetModParam($this->Name, $cName); }function TTlT11I(&$aOptions) {$this->Options->TTlTIlT($this->Name, $aOptions); }public function SetOption($name, $value =NULL) {global $RebuildOptions, $IIIlILL; if (!empty($RebuildOptions) || !empty($IIIlILL) || !isset($this->IlLII1l) || !in_array($name, array($this->IlLII1l, $this->IlLII1L, $this->IlLII11)) ){$this->Options->setModParam($this->Name, $name, $value); }return true; }function TTlT11l($name, $value =null) {return $this->SetOption($name, $value); }public function setOptionLazy($name, $value =null) {global $RebuildOptions, $IIIlILL; if (!empty($RebuildOptions) || !empty($IIIlILL) || !isset($this->IlLII1l) || !in_array($name, array($this->IlLII1l, $this->IlLII1L, $this->IlLII11)) ){$this->Options->setModParamLazy($this->Name, $name, $value); }return true; }function SetProperty($name, $value =null) {$numArgs =func_num_args(); if ($numArgs >2) {$value =array(); for ($i =1; $i <$numArgs; $i++) {$value[] =func_get_arg($i); }}$this->Properties->setModParam($this->Name, $name, $value); return true; }function TTlT111(&$container, $cName =I15844, $warn =true) {$res =$container->getModParam($this->Name, $cName, false); if (is_null($res) && $warn) {$Ill1LLl =$this->GetProperty(I15854, false); if (is_string($Ill1LLl)) {if (is_object($this->Ill1l1l)) {$vMod =&$this->Ill1l1l->GetModule($Ill1LLl); if (is_object($vMod)) {$res =$container->entity == I15855 ?$vMod->GetOption($cName) :$vMod->GetProperty($cName); }}}elseif ($this->Debug) {trigger_error(I15856 .$container->entity .I15857 .$cName .I15858 .$this->Name .I15859, E_USER_WARNING); }}return $res; }function GetOption($name =I15844) {return $this->TTlT111($this->Options, $name); }function getOptionLazy($name =I15844) {$res =$this->Options->getModParamLazy($this->Name, $name, FALSE); if (is_null($res)) {$res =$this->GetOption($name); }return $res; }function GetProperty($name =I15844, $warn =true) {return $this->TTlT111($this->Properties, $name, $warn); }function TTlITTT() {$act =$this->GetProperty(I15860, false); if ($act === false) return false; if (!isset($act)) return null; return true; }function TTlITTI() {global $Ill1ILL, $Ill1IL1; $Ill1LLL =$this->GetProperty(I15861, false); if (!is_array($Ill1LLL)) $Ill1LLL =empty($Ill1LLL) ?array() :array($Ill1LLL); foreach ($Ill1IL1 as $tmp => $act) $Ill1LLL[] =$act; $act =array(); foreach ($Ill1LLL as $tmp => $adata) {if (is_array($adata)) {foreach ($adata as $action => $Ill1LL1) $act[$action] =$Ill1LL1 |SYS_R_RIGHT; }else if (isset($Ill1ILL[$adata])) $act[$adata] =$Ill1ILL[$adata]; else $act[$adata] =SYS_ACT_DEF_RIGHTS; }return $act; }function TTlITTl($Ill1L1I =false) {$access =0; $Ill1LLL =$this->TTlITTI(); foreach ($Ill1LLL as $action => $Ill1LL1) {if ($Ill1L1I === false || in_array($action, $Ill1L1I)) $access |= $Ill1LL1; }return $access; }function TTlITT1($Ill1LL1 =SYS_A_RIGHT) {$actions =array(); $Ill1LLL =$this->TTlITTI(); foreach ($Ill1LLL as $action => $Ill1L1l) {if (($Ill1LL1 &$Ill1L1l) == $Ill1L1l) $actions[$action] =$Ill1L1l; }return $actions; }function issetAndTrueOption($name) {return $this->Options->issetAndTrueModParam($this->Name, $name); }function issetAndTrueProperty($name) {return $this->Properties->issetAndTrueModParam($this->Name, $name); }function getAOption($name =I15844) {return $this->Options->getModAParam($this->Name, $name); }function getAOptionLazy($name =I15844) {return $this->Options->TTlTIl1($this->Name, $name); }function TTlITIT($name =I15844) {return $this->getAOption($name); }function TTlTTTI($name =I15850) {return $this->Properties->getModAParam($this->Name, $name); }function TTlITII($cMask =I15862, $lang =I15844) {return $this->Options->TTlTlIT($this->Name, $cMask, $lang); }function TTlITIl($cName, $IllLLLL =I15844) {return $this->Options->TTlTlII($this->Name, $cName, $IllLLLL); }function TTlITI1($Ill1L1L) {$this->Ill1lL1 =$Ill1L1L; return true; }function TTlITlT() {$this->Ill1lL1 =I15850; return true; }function TTlITlI($Ill1L11, &$res) {$aOptions =$this->Options->TTlTII1($this->Name); $Ill11II =mb_strlen($Ill1L11); foreach ($aOptions as $cName => $cValue) {$IILlLll =mb_strpos($cName, $Ill1L11); if ($IILlLll === false || $IILlLll >0) {continue; }else {$vName =mb_substr($cName, $Ill11II); $res[$vName] =$cValue; }}}function TTlITll() {$res =Array(); $this->TTlITlI($this->Ill1lLI, $res); if ($GLOBALS[I15863] == I15864) {$this->TTlITlI(I15865 .$this->Ill1lLI, $res); }if (!empty($this->Ill1lL1)) {$vRes =$res; foreach ($vRes as $cName => $cValue) {if (mb_strpos($cName, $this->Ill1lL1) === false) {continue; }else {$vName =str_replace($this->Ill1lL1, I15850, $cName); $res[$vName] =$cValue; unset($res[$cName]); }}}$vRes =Array(); foreach ($res as $cName => $cValue) {if (in_array($cName, $this->Ill1lLl)) {$vRes[$cName] =$cValue; }}$res =$vRes; return $res; }function PushPager(&$Pager, $cOffset =I15850, $Ill11Il =I15850, $Ill11IL =I15850) {$this->Ill1lLL =clone($Pager); $this->InitPager($Pager, $cOffset, $Ill11Il, $Ill11IL); $Pager->Position =0; return true; }function PopPager(&$Pager) {$Pager =clone($this->Ill1lLL); $this->Ill1lLL =false; return true; }function InitPager(&$Pager, $cOffset =I15850, $Ill11Il =I15850, $Ill11IL =I15850) {$Ill11I1 =$this->TTlITll(); $Pager->SortCol =isset($Ill11I1[I15841]) ?$Ill11I1[I15841] :I15844; $Pager->SortDim =isset($Ill11I1[I15842]) ?$Ill11I1[I15842] :I15844; $Pager->PageSize =isset($Ill11I1[I15840]) ?(int) $Ill11I1[I15840] :0; $Pager->lllL11L =isset($Ill11I1[I15843]) ?(int) $Ill11I1[I15843] :10; if (is_numeric($cOffset)) {$Pager->Position =$cOffset; }if (!empty($Ill11Il) && $this->TTlT1IT($Ill11Il)) {$Pager->SortCol =$Ill11Il; }if (!empty($Ill11IL)) {$Pager->SortDim =$Ill11IL; }return true; }function InitEngine(&$cms, &$db) {if ($this->Engine === false) {$aClasses =$this->TTlTTTI(I15866); $class =array_pop($aClasses); if (empty($class)) {trigger_error( I15867 .$this->Name .I15859, E_USER_ERROR );}$this->Engine =new $class($cms, $db, $this); }}function TTlITl1() {unset($this->Engine); $this->Engine =false; }function TTlIT1T($Ill11lI) {$this->Ill1I1L =$Ill11lI; return true; }function IsFrontAllowed($IIILLII =I15844) {return $this->Ill1I1L; }function SetAdminAllowed($Ill11lI) {$this->Ill1I11 =$Ill11lI; return true; }function IsAdminAllowed() {return $this->Ill1I11; }function SetAdminLink($IIILl1L) {$this->Ill1lII =$IIILl1L; return true; }function GetAdminLink($Ill11ll =true) {if ((substr($this->Name, 0, 7) == I15868) && $this->issetOption(I15869) && $this->GetOption(I15869) >= I15870) {$res =I15871 .urlencode($this->GetOption(I15872)); }elseif (($this->issetOption(I15873) && ($this->GetOption(I15873) >= I15874)) || ($this->issetProperty(I15875) && in_array(I15876, $this->GetProperty(I15875)) && AMI::getSingleton(I15877)->get(I15878, false) == 6) ){$res =I15871 .urlencode($this->Name); }else {$res =$this->Ill1lII; }if ($Ill11ll && !$this->IsAdminAllowed()) {$res =I15850; }return $res; }function SetFrontLink($IIILl1L, $Ill11lL =0, $cName =I15850, $Ill11l1 =0) {$aLink =array(I15849 => $Ill11lL, I15879 => $cName, I15880 => $IIILl1L, I15881 => $Ill11l1); if ($this->Ill1lI1) {$this->Ill1lIl =$aLink; }if ($Ill11lL >0) {$this->Ill1lIL[$Ill11lL] =$aLink; }else {$this->Ill1lIl =$aLink; }$this->Ill1lI1 =false; return true; }function GetFrontLink($Ill11lL =0, $Ill11LI =false) {if ($Ill11lL <1) {$res =$Ill11LI ?$this->Ill1lIl :$this->Ill1lIl[I15882]; }else {if (isset($this->Ill1lIL[$Ill11lL])) {$res =$Ill11LI ?$this->Ill1lIL[$Ill11lL] :$this->Ill1lIL[$Ill11lL][I15882]; }else {$res =null; }}return $res; }function TTlIT1I() {$res =$this->Ill1lIL; unset($res[0]); return $res; }function TTlIT1l() {return $this->Ill1lI1; }function IsPresentInPM() {return $this->Ill1llI; }function IsPresentInPMandPublic($IIILLII =I15844) {return $this->Ill1llI && $this->Ill1lll; }function IsVirtual() {return $this->ILlIL1l; }function TTlIT11($aData =I15850) {$numArgs =func_num_args(); $this->SearchFields =Array(); for ($i =0; $i <$numArgs; $i++) {$this->SearchFields[] =func_get_arg($i); }return true; }function TTlIITT($aData =I15850) {$numArgs =func_num_args(); for ($i =0; $i <$numArgs; $i++) {$pos =array_search(func_get_arg($i), $this->SearchFields); if ($pos !== false) {$this->SearchFields[$pos] =I15883; }}return true; }function TTlIITI($Ill11Ll =I15850) {$res =!empty($Ill11Ll) ?$this->SearchFields[$Ill11Ll] :$this->SearchFields; return $res; }function SetInstalled($Ill11lI) {return $this->TTlII1T($Ill11lI); }function TTlIITl($Ill11lI) {return $this->TTlII1T($Ill11lI); }function IsInstalled($IIILLII =I15844) {return $this->TTlIII1(); }function TTlIIT1($IIILLII =I15844) {return $this->TTlIII1(); }function GetParentName() {return $this->Ill1I1I; }function &TTlIIIT() {return $this->Ill1llL; }function HaveParent() {return is_object($this->Ill1llL); }function GetOwnerName() {return $this->Owner; }function &GetSubModules() {$res =&$this->Ill1l1I; return $res; }function TTlIIIl() {return sizeof($this->Ill1l1I) >0; }protected function TTlIII1($Ill11LL =I15844) {return $this->Ill1I1l; }function TTlIIlT($Ill11Ll, $cValue) {$this->SearchData[$Ill11Ll] =$cValue; return true; }function TTlIIlI($Ill11Ll, $Ill11L1) {$numArgs =func_num_args(); if ($numArgs <2) {trigger_error(I15884, E_USER_WARNING); }else {for ($i =2; $i <$numArgs; $i++) {$this->SearchData[$Ill11Ll][$Ill11L1][] =func_get_arg($i); }}return true; }function TTlIIll($Ill11Ll =I15844) {$res =!empty($Ill11Ll) ?$this->SearchData[$Ill11Ll] :$this->SearchData; return $res; }function TTlIIl1($Ill11Ll, $cName, $cValue) {$this->CustomData[$Ill11Ll][$cName] =$cValue; return true; }protected function TTlII1T($Ill11lI) {$this->Ill1I1l =$Ill11lI; if (!$Ill11lI) {foreach ($this->Ill1l1I as $index => $vMod) {$this->Ill1l1I[$index]->TTlII1T(FALSE); }}else {if ($this->HaveParent()) {$Ill111I =&$this->TTlIIIT(); if (!$Ill111I->TTlIII1()) {$Ill111I->TTlII1T(FALSE); }}}return TRUE; }function TTlII1I($Ill11Ll =I15850) {return empty($Ill11Ll) ?$this->CustomData :$this->CustomData[$Ill11Ll]; }function &TTlTTTT($IlllLl1, $IlllLlL, &$IlllLLI) {$res =false; unset($this->Ill1l1I[$IlllLl1]); if (is_object($IlllLLI)) {$this->Ill1l1I[$IlllLl1] =clone($IlllLLI); $this->Ill1l1I[$IlllLl1]->Init($IlllLl1, $IlllLlL); $this->Ill1l1I[$IlllLl1]->Properties =&$this->Ill1l1l->Properties; $this->Ill1l1l->Properties->TTlTIII($IlllLl1, array()); $this->Ill1l1I[$IlllLl1]->Options =&$this->Ill1l1l->Options; $this->Ill1l1l->Options->TTlTIII($IlllLl1, array()); $this->Ill1l1I[$IlllLl1]->TTlT1ll($this->Owner); }else {$this->Ill1l1I[$IlllLl1] =new CMS_Module($IlllLl1, $IlllLlL); }$vMod =&$this->Ill1l1I[$IlllLl1]; if (is_object($vMod)) {$vMod->Ill1I1I =$this->Name; $vMod->Ill1llL =&$this; }$res =&$vMod; return $res; }function &GetModule($cName) {$res =false; if (isset($this->Ill1l1I[$cName])) {$res =&$this->Ill1l1I[$cName]; }return $res; }function GetName() {return $this->Name; }function TTlII1l($IIL1Lll =I15844) {return array( I15885 => $this->Options->TTlTII1($this->Name), I15886 => $this->CustomData );}function TTlII11(&$vData) {$this->Options->TTlTIII($this->Name, $vData[I15887]); return true; }function &TTlIlTT($Ill111l =array()) {return array( I15888 => $this->Properties->TTlTII1($this->Name), I15889 => &$this->SearchFields, I15890 => &$this->SearchData, I15886 => &$this->CustomData );}function TTlIlTI($IIII11I) {$this->Properties->TTlTIII($this->Name, $IIII11I[I15891]); $this->SearchFields =$IIII11I[I15889]; $this->SearchData =$IIII11I[I15890]; $this->CustomData =$IIII11I[I15886]; }}if (empty($GLOBALS[I15892])) {class CMS_Core_Parent extends CMS_Module {}}else {class CMS_Core_Parent extends CMS_ModuleDebug {}}class CMS_Core extends CMS_Core_Parent {public $Ill1I1l =false; public $Side; public $Owners =array(); public $Default; public $Unknown; public $Ill1111 =array(); public $Cache; public $IlLIIII; public $Modules =array(); public $IlLIIIl =array(); public $IlLIIIL =array(); public $IIL1Ll1 =0; public $IlLIII1 =array( I15893 => 0 );public $IlLIIlI; public $IlLIIll =array(I15894, I15895); public $IlLIIlL; public $IlLIIl1; protected $IlLIILI; public $IlLIILl; public $IlLIILL; public $IlLIIL1 =false; public $IlLII1I; public $IlLII1l; public $IlLII1L; public $IlLII11; public $IlLIlII; public $IlLIlIl =array(); public $IlLIlIL =0; public $IlLIlI1 =false; protected $aHyperStruct =array(); private $opt; function __construct($IIL1Lll) {$this->Side =$IIL1Lll; $this->Properties =new CMS_ModulesProperties(); $this->Options =new CMS_ModulesOptions(); $this->Default =new CMS_Module(I15896); $this->Default->Ill1l1l =&$this; $this->Default->Properties =&$this->Properties; $this->Default->Options =&$this->Options; $this->Options->setModParam(I15896, I15847, I15837); $this->Options->setModParam(I15896, I15848, I15837); $this->Unknown =new CMS_Module(I15837, 0); $this->Unknown->Properties =&$this->Properties; $this->Unknown->Options =&$this->Options; $this->Options->setModParam(I15837, I15847, I15837); $this->Options->setModParam(I15837, I15848, I15837); $this->IlLII1I =$this->TTlIlTl(I15897); $this->IlLII1l =$this->TTlIlTl(I15898); $this->IlLII1L =$this->TTlIlTl(I15899); $this->IlLII11 =$this->TTlIlTl(I15900); $this->IlLIlII =$this->TTlIlTl(I15901); }function TTlIlTl($value) {return strrev(str_rot13(strtr($value, I15902, I15903))); }function TT1lTTT($IlLILIL) {$IlLILIL[I15904][I15905] =1; $ILlIL1L =false; if (empty($IlLILIL[I15906][I15907])) {$IlLIllI =array(I15908, I15909, I15910, I15911, I15912, I15913, I15914, I15915, I15916, I15917, I15918, I15919, I15920, I15921, I15922, I15923, I15924, I15925, I15926, I15927, I15928, I15929, I15930, I15931, I15932, I15933, I15934, I15935, I15936, I15937, I15938); }else {$IlLIllI =array(I15908, I15909, I15911, I15912, I15913, I15914, I15915, I15916, I15917, I15918, I15921, I15922, I15939, I15925, I15926, I15927, I15928, I15940, I15941, I15929, I15930, I15942, I15943, I15944, I15945, I15931, I15932, I15933, I15934, I15935, I15936, I15946, I15937, I15938); }$IlLIlll =array( I15917 => I15947 );if (is_array($IlLILIL[I15948])) {$ILlIL1L =true; $IILllLl =&$this->GetAllModules(); foreach ($IlLIllI as $i => $name) {if (empty($IlLILIL[I15948][$name]) && is_object($this->GetModule($name))) {$IILllLl[$name]->TTlIITl(false); }}}if ($ILlIL1L && is_array($IlLILIL[I15904])) {$vOwners =$this->GetOwnersList(); foreach ($vOwners as $name => $vOwner) {if (empty($IlLILIL[I15904][$name])) {$this->TTllTTT($name, false); }}}else {$ILlIL1L =false; }if ($ILlIL1L) {foreach ($IlLIlll as $IlLIlLI => $IlLIlLl) {$vMod =&$this->TTlI1lT($IlLIlLl); $vMod->TTlIT1T($this->TTlIIT1($IlLIlLI)); }}$IlLIl1l =array( I15949 .I15950, I15951 .I15952, I15953 .I15954, I15955 .I15956 .I15957, I15958 .I15959 );$ILlIL11 =array(); $ILlIL11[] =array(); $ILlIL11[0][] =(int) FALSE; $ILlIL11[0][] =$IlLIl1l[0]; $ILlIL11[0][] =$IlLIl1l[1]; $ILlIL11[0][] =$IlLIl1l[2]; $ILlIL11[] =array(1 +(24 >> 3), $IlLIl1l[0], $IlLIl1l[1]); $ILlIL11[] =array(2 *(3 +2), $IlLIl1l[0]); $ILlIL11[] =array(13 -3, $IlLIl1l[3]); $ILlIL11[] =array(1 +3, $IlLIl1l[4]); $_found =FALSE; foreach ($ILlIL11 as $IlLIl1l) {foreach ($IlLIl1l as $IlLIl1L) {if (is_int($IlLIl1L)) {$ILlI1II =$IlLIl1L; continue; }if (!$this->TTlIIT1($IlLIl1L)) {continue 2; }}$_found =TRUE; break; }if (!$_found) {$ILlI1II =1 << 1; }$IlLIlL1 =call_user_func(array(I15960 .I15961, I15962 .I15963)); $IlLIl1I =call_user_func(array($IlLIlL1, I15964 .I15965), I15966 .str_rot13(I15967) .I15968); $IlLIl1l =array(); foreach ($IlLIl1I as $IlLIl1L) {if (is_null(call_user_func(array($IlLIlL1, I15969 .I15970), $IlLIl1L))) {$IlLIl1l[] =$IlLIl1L; }}$IlLILII =sizeof($IlLIl1l); if (!$ILlI1II) {$ILlI1II =$IlLILII; }if ($IlLILII >$ILlI1II) {for ($IlLILIl =$ILlI1II; $IlLILIl <$IlLILII; ++$IlLILIl) {$IlLIlLL =&$this->TTlI1lT($IlLIl1l[$IlLILIl]); if ($IlLIlLL) {$IlLIlLL->TTlIITl(FALSE); }}}return $ILlIL1L; }function TTlIlII($IlLILIL) {$ILlIL1L =is_array($IlLILIL[I15971]); if ($ILlIL1L) {$IILllLl =&$this->GetAllModules(); foreach ($IlLILIL[I15972] as $IlLI11L => $ILlI1Il) {if (!$this->IlLIlI1 && $IlLI11L == $this->IlLII1I && $ILlI1Il == I15973) {$this->Options->setModParam($this->Name, $this->IlLII1l, TRUE); }if (!is_array($ILlI1Il) || $ILlI1Il == I15974) {continue; }$vName =$ILlI1Il[I15975]; $vData =$ILlI1Il[I15976]; if (empty($vName)) {continue; }switch (key($vData)) {case I15977: if ($this->TTlIIT1($vName)) {$IILllLl[$vName]->TTlIT1T($vData[key($vData)]); }break; case I15978: if ($this->TTlIIT1($vName)) {if ($IILllLl[$vName]->IssetOption(key($vData[key($vData)]))) {$ILlI1IL =$IILllLl[$vName]->GetOption(key($vData[key($vData)])); $aItems =$vData[key($vData)][key($vData[key($vData)])]; if (!is_array($aItems)) {$aItems =array($aItems); }$ILlI1I1 =array(); foreach ($ILlI1IL as $vItem => $IILlLlL) {if (in_array($IILlLlL, $aItems)) {continue; }else {$ILlI1I1[$vItem] =$IILlLlL; }}$IILllLl[$vName]->TTlT11l(key($vData[key($vData)]), $ILlI1I1); }}break; default: if ($vName == I15979) {$this->Options->setModParam($this->Name, key($vData), $vData[key($vData)]); }else {if ($this->TTlIIT1($vName)) {$IILllLl[$vName]->TTlT11l(key($vData), $vData[key($vData)]); }}break; }}if (empty($this->opt)) {$this->opt =array( I15955 => $this->TTlIII1(I15980) );}if (2 == call_user_func(array(I15981 .I15982, I15983 .I15984), I15985, I15986, TRUE)) {$this->DeleteOption(I15985, I15986); $this->Options->writeOption(I15987, I15988, $this->TT1lTTI()); }}return $ILlIL1L; }private function TT1lTTI() {$ILlI1lI =array(); AMI_Event::fire(I15989, $ILlI1lI, AMI_Event::MOD_ANY); if (isset($ILlI1lI[I15988])) {return $ILlI1lI[I15988]; }$ILlIL11 =array( I15990 => array(I15926, I15928, I15944), I15991 => array(I15926, I15928), I15992 => array(I15926), I15993 => array(I15994), I15995 => array(I15914) );foreach ($ILlIL11 as $ILlI1ll => $IlLIl1l) {foreach ($IlLIl1l as $IlLIl1L) {if (!$this->TTlIIT1($IlLIl1L)) {continue 2; }}return $ILlI1ll; }return I15837; }function TTlIlIl($userId) {$this->IlLIII1[I15996] =intval($userId); }function GetUserId() {return $this->IlLIII1[I15996]; }function getVersion($product =false, $type =false) {if (!is_array($this->IlLIIlI)) {$this->IlLIIlI =$GLOBALS[I15997]; }if (empty($this->IlLIIlI[I15987][I15998]) || empty($this->IlLIIlI[I15987][I15999])) {$this->ReadOption($data, I15987); if (isset($data[I16000])) {$this->TTlIlI1($data); }elseif (is_array($data)) {foreach ($data as $IIII111) {$this->TTlIlI1($IIII111); }}}if ($type === false && $product === false) {return $this->IlLIIlI; }return $type === false ?$this->IlLIIlI[$product] :$this->IlLIIlI[$product][$type]; }function TTlIlI1(&$IIII111) {switch ($IIII111[I16001]) {case I16002; $this->IlLIIlI[I15987][I15998] =$IIII111[I16003]; break; case I15999; $this->IlLIIlI[I15987][I15999] =$IIII111[I16003]; break; }}function compareVersions($IIlLI1I, $IlLILI1, $num =3) {$re =I16004; if (!preg_match($re, $IIlLI1I) || !preg_match($re, $IlLILI1)) return -2; $IIlLI1I =explode(I16005, $IIlLI1I); $IlLILI1 =explode(I16005, $IlLILI1); for ($i =0; $i <$num; $i++) {if ($IIlLI1I[$i] != $IlLILI1[$i]) return $IIlLI1I[$i] <$IlLILI1[$i] ?-1 :1; }return 0; }function &TTlIllT() {$res =&$this->Default; return $res; }function detectSpecialLanguageData() {if (!$this->issetOption($this->IlLII1l)) {$this->Options->setModParam($this->Name, $this->IlLII1L, false); }}function ReadOption(&$vData, $IIILLII =I15844, $IILIlI1 =I15844, $cLang =I15844) {return $this->Options->readOption($vData, $IIILLII, $IILIlI1, $cLang); }function WriteOption($IIILLII =I15844, $IILIlI1, $cValue, $IllLLL1 =false, $cLang =I15844, $IllLL1I =I15844) {return $this->Options->writeOption($IIILLII, $IILIlI1, $cValue, $IllLLL1, $cLang, $IllLL1I); }function TTlIllI($IIILLII =I15844, $IILIlI1, $cValue, $IllLLL1 =false, $cLang =I15844, $IllLL1I =I15844) {return $this->WriteOption($IIILLII, $IILIlI1, $cValue, $IllLLL1, $cLang, $IllLL1I); }function DeleteOption($IIILLII, $IILIlI1, $cLang =I15844) {return $this->Options->deleteOption($IIILLII, $IILIlI1, $cLang); }function TTlIlll() {return $this->issetOption($this->IlLII1l); }function TTlIll1($IlLILlI) {return TlTII1l($IlLILlI); }function TTlIl1T($IlLILll) {$aData =TlTI1TT($IlLILll); $this->IlLIlIL =mb_strlen($IlLILll, empty($aData[I16006]) || ($aData[I16006][I16007][I16008]) <3 ?I16009 :I16010 );return $aData; }function TTlIl1I($IlLILlL, $IlLILl1 =I16011) {$aExceptions =array( TlTII11(I16012 .TlTIllT(I16013, 2, 3) .TlTIl1I(I16014)), TlTII11(TlTIl1I(I16015) .I16016 .TlTIllT(I16017, 2, 2)), TlTII11(TlTIl1I(I16018) .I16005 .I16019 .TlTIl1I(I16020)) );foreach ($aExceptions as $IlLILLI) {if (isset($IlLILlL[$IlLILLI])) {unset($IlLILlL[$IlLILLI]); }}if (isset($this->IlLIlIl[I16021][I15906][I16022][$IlLILl1][I16023])) {foreach ($this->IlLIlIl[I16021][I15906][I16022][$IlLILl1][I16023] as $IlLILLl => $null) {if (isset($IlLILlL[$IlLILLl])) {unset($IlLILlL[$IlLILLl]); }}}if (sizeof($IlLILlL) >0) {$this->IlLIlI1 =true; }else {$IlLILLL =serialize($this->IlLIlIl[I16024]); if (mb_strlen($IlLILLL) != $this->IlLIlIL) {$this->IlLIlI1 =true; }}}function TTlIl1l() {$this->IlLIlIl =array(); }function TT1lTTl(&$oM, $isEqual =false) {if ($this->issetOption(I16025) && $this->GetOption(I16025) >0) {$sql =I16026 .I16027 .$oM->oEshop->dbTablePrefix .I16028 .I16029 .$oM->_ApplyFilters(); $oM->db->query($sql); if ($oM->db->next_record()) {if (!$isEqual && $oM->db->Record[I16030] >$this->GetOption(I16031) || $isEqual && $oM->db->Record[I16030] >= $this->GetOption(I16031)) {$oM->cms->AddStatusMsg(I16032, I16033); return false; }}}return true; }function TTlTlIl($IIILLII, $key, $Ill1Ll1 =false) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->TTlTlIl($IIILLII, $key, $Ill1Ll1); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return true; }function TTlTlI1($IIILLII, $key, $Ill1LLI =true, $IlIlIL1 =false) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->TTlTlI1($IIILLII, $key, $Ill1LLI, !$IlIlIL1); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return true; }function SetModOption($IIILLII, $cName, $cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->setModParam($IIILLII, $cName, $cValue); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return true; }function setModOptionLazy($IIILLII, $cName, $cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->Options->setModParamLazy($IIILLII, $cName, $cValue); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return true; }function SetModProperty($IIILLII, $cName, $cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->IlLIIIl[$IIILLII]->SetProperty($cName, $cValue); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return true; }function TTlIl11($IIILLII, &$aOptions) {if (isset($this->IlLIIIl[$IIILLII])) {if (is_array($aOptions)) {$this->Options->TTlTIlT($IIILLII, $aOptions); }}else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }}function GetModOption($IIILLII, $cName =I15844) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetOption($cName); }elseif ($this->Debug) {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1TT($IIILLII, $cName =I15844) {return $this->GetModOption($IIILLII, $cName); }function getModOptionLazy($IIILLII, $cName =I15844) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->getOptionLazy($cName); }elseif ($this->Debug) {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function GetModProperty($IIILLII, $cName =I15844, $warn =true) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetProperty($cName, $warn); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1TI($IIILLII, $cName =I15850) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetAOption($cName); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1Tl($IIILLII, $cName =I15844) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->TTlTTTI($cName); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function issetModOption($IIILLII, $cName =I15850) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Options->issetModParam($IIILLII, $cName); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function issetModProperty($IIILLII, $cName =I15850) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Properties->issetModParam($IIILLII, $cName); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1T1($IIILLII, $cName) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Options->issetAndTrueModParam($IIILLII, $cName); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1IT($IIILLII, $cName) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->Properties->issetAndTrueModParam($IIILLII, $cName); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1II($IIILLII, &$cValue) {if (isset($this->IlLIIIl[$IIILLII])) {$this->IlLIIIl[$IIILLII]->TTlII11($cValue); }else {trigger_error(I16036 .$IIILLII .I16035, E_USER_WARNING); }return true; }function TTlI1Il($IIILLII, $IIILl1L) {if (isset($this->IlLIIIl[$IIILLII])) {$this->IlLIIIl[$IIILLII]->SetFrontLink($IIILl1L); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return true; }function GetModFrontLink($IIILLII, $Ill11lL =0, $Ill11LI =false) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->GetFrontLink($Ill11lL, $Ill11LI); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTlI1I1($IIILLII) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$res =$this->IlLIIIl[$IIILLII]->TTlIT1I(); }else {trigger_error(I16034 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function &GetModule($IIILLII) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$vMod =&$this->IlLIIIl[$IIILLII]; if (is_object($vMod)) {$res =&$vMod; }}elseif ($IIILLII == I15894) {$res =&$this->Unknown; }return $res; }function &TTlI1lT($IIILLII) {$res =false; if (isset($this->IlLIIIl[$IIILLII])) {$vMod =&$this->IlLIIIl[$IIILLII]; if (is_object($vMod)) {$res =&$vMod; }}elseif ($IIILLII == I15894) {$res =&$this->Unknown; }return $res; }function &TTlI1lI($IIILl1L) {$res =false; foreach ($this->IlLIIIl as $vMod) {$modLink =$vMod->GetAdminLink(); if (substr($modLink, 0, 10) == I16037) {$aUrl =parse_url($modLink); if (isset($aUrl[I16038])) {parse_str($aUrl[I16038], $IIl1Il1); mb_internal_encoding(I16010); }if (isset($IIl1Il1[I16039])) {$modLink =$IIl1Il1[I16039] .I15838; }}if ($modLink == $IIILl1L) {$res =&$vMod; break; }}return $res; }function TTlI1ll( &$module, $optionName, $IIlI11L, $IlLILL1, $IlLIL1I =FALSE, $value =I15844, $callback =NULL ){if (!isset($this->IlLIIl1)) {$this->IlLIIl1 =array(); $this->IlLIIlL =array(); $this->IlLIILl =array(); $this->_isInheritanceSet =false; $this->IlLIILI =array(); }$modName =empty($module->Name) ?I16040 :$module->Name; if (!is_array($this->IlLIIl1[$modName][$optionName][$IIlI11L])) {$this->IlLIIl1[$modName][$optionName][$IIlI11L] =Array(); }if (in_array($IlLILL1, $this->IlLIIl1[$modName][$optionName][$IIlI11L]) === false) {$this->IlLIIl1[$modName][$optionName][$IIlI11L][] =$IlLILL1; }if ($IlLIL1I) {$this->SetModOption($modName, $optionName, $value); $this->IlLIILl[$modName][$optionName] =1; }elseif (!is_null($callback)) {$this->IlLIILI[$modName .I16005 .$optionName] =$callback; }return true; }function TTlI1l1($vModName =I15850) {$IlLIL1l =true; $IlLIL1L =0; $IlLIL11 =true; if ($vModName != I15850) {if (isset($this->IlLIIl1[$vModName])) {$IlLI1II[$vModName] =$this->IlLIIl1[$vModName]; }else {$IlLI1II =Array(); }}else {$IlLI1II =$this->IlLIIl1; }while ($IlLIL1l && $IlLIL11 && $IlLIL1L++ <5) {$IlLI1Il =Array(); $IlLIL1l =false; $IlLIL11 =false; foreach ($IlLI1II as $moduleName => $aOptions) {foreach ($aOptions as $optionName => $IlLI1IL) {foreach ($IlLI1IL as $IIlI11L => $IlLI1I1) {if ($IIlI11L != I16040 && !$this->TTlIII1($IIlI11L)) {unset($IlLI1II[$moduleName][$optionName][$IIlI11L]); continue; }foreach ($IlLI1I1 as $index => $IlLILL1) {$error =false; if ($moduleName == $IIlI11L && $optionName == $IlLILL1) {trigger_error(I16041 .$IIlI11L .I16042 .$IlLILL1 .I16043, E_USER_WARNING); $error =true; unset($IlLI1II[$moduleName][$optionName][$IIlI11L][$index]); unset($this->IlLIIl1[$moduleName][$optionName][$IIlI11L][$index]); }if (($IIlI11L != I16040 ?!$this->issetModOption($IIlI11L, $IlLILL1) :!$this->issetOption($IlLILL1))) {$IlLIL1l =true; $error =true; $IlLI1Il[] =$moduleName .I16042 .$optionName .I16044 .$IIlI11L .I16042 .$IlLILL1; }if (!$error) {$IlLIL11 =true; unset($IlLI1II[$moduleName][$optionName][$IIlI11L][$index]); if (!(isset($this->IlLIILl[$moduleName][$optionName]) || isset($this->IlLIIlL[$moduleName][$optionName]))) {if ($this->IlLIIL1) {$this->IlLIIlL[$moduleName][$optionName] =$IIlI11L .I16045 .$IlLILL1; if ($moduleName != I16040) {$this->SetModOption($moduleName, $optionName, I15844); }else {$this->SetOption($optionName, I15844); }}else {if ($moduleName != I16040) {if (!$this->issetModOption($moduleName, $optionName)) {$this->SetModOption($moduleName, $optionName, I15844); }}else {if (!$this->issetOption($optionName)) {$this->SetOption($optionName, I15844); }}}}}}}}}}if ($this->Debug && sizeof($IlLI1Il) >0) {foreach ($IlLI1Il as $msg) {trigger_error($msg, E_USER_WARNING); }}$this->SetModOption(I16046, I16047, $this->IlLIIl1); $this->SetModOption(I16046, I16048, $this->IlLIIlL); }function TTlI11T($vModName =I15850, $force =false) {if (is_null($this->IlLIIlL) || (!$force && $this->_isInheritanceSet)) {return; }$this->TTlI1l1($vModName); $IlLI1lI =array(); if ($vModName != I15850) {if (isset($this->IlLIIlL[$vModName])) {$IlLI1ll[$vModName] =&$this->IlLIIlL[$vModName]; }else {$IlLI1ll =Array(); }}else {$IlLI1ll =&$this->IlLIIlL; }foreach ($IlLI1ll as $moduleName => $IlLI1lL) {foreach ($IlLI1lL as $optionName => $data) {list ($IIlI11L, $IlLILL1) =explode(I16045, $data); do {$IlLI1lI[$IIlI11L][$IlLILL1][$moduleName][] =$optionName; $IlLI1l1 =false; if (isset($this->IlLIIlL[$IIlI11L][$IlLILL1])) {list ($IIlI11L, $IlLILL1) =explode(I16045, $this->IlLIIlL[$IIlI11L][$IlLILL1]); $IlLI1l1 =true; }}while ($IlLI1l1); }}$inheritance =$IlLI1lI; foreach ($IlLI1lI as $IIlI11L => $IlLI1LI) {foreach ($IlLI1LI as $IlLI1Ll) {foreach ($IlLI1Ll as $moduleName => $options) {foreach ($options as $option) {unset($inheritance[$moduleName][$option]); }}}}foreach ($inheritance as $IIlI11L => $IlLI1LI) {foreach ($IlLI1LI as $IlLILL1 => $IlLI1Ll) {$value =$IIlI11L != I16040 ?$this->GetModOption($IIlI11L, $IlLILL1) :$this->GetOption($IlLILL1); foreach ($IlLI1Ll as $moduleName => $options) {foreach ($options as $option) {if (isset($this->IlLIILI[$moduleName .I16005 .$option])) {$value =call_user_func( $this->IlLIILI[$moduleName .I16005 .$option], $option, $value );}$moduleName != I16040 ?$this->SetModOption($moduleName, $option, $value) :$this->SetOption($option, $value); }}}}$this->_isInheritanceSet =true; }function &GetAllModules() {$res =&$this->IlLIIIl; return $res; }function &GetInstalledModuleNames($ownerName =null) {$res =false; if (is_null($ownerName)) {$aMods =&$this->GetAllModules(); }else {$aMods =&$this->GetModulesByOwner($ownerName); }if ($aMods != false) {$res =Array(); foreach (array_keys($aMods) as $name) {if ($aMods[$name]->TTlIII1()) {$res[] =$name; }}}return $res; }function &GetModulesByOwner($IIL1L11) {$res =false; if (isset($this->Owners[$IIL1L11]) && $this->Owners[$IIL1L11][I16049] && isset($this->IlLIIIL[$IIL1L11])) {$res =&$this->IlLIIIL[$IIL1L11]; }else {trigger_error(I16050 .$IIL1L11 .I16035, E_USER_WARNING); }return $res; }function TTlI11I() {return $this->IIL1Ll1; }function IsFrontAllowed($IIILLII =I15844) {$res =false; $tmp =&$this->GetModule($IIILLII); if (is_object($tmp)) {$res =($tmp->TTlIII1() && $tmp->IsFrontAllowed()); }return $res; }function TTlI11l($IIILLII) {return $this->IsFrontAllowed($IIILLII); }function TTlI111($IIILLII) {$res =false; $tmp =&$this->GetModule($IIILLII); if (is_object($tmp)) {$res =($tmp->TTlIII1() && $tmp->IsFrontAllowed() && !$tmp->issetAndTrueProperty(I16051)); if (!$res) {if ($tmp->issetProperty(I16052) && $tmp->getProperty(I16052)) {$Ill111I =&$tmp->TTlIIIT(); if (is_object($Ill111I) && $Ill111I->TTlIII1() && $Ill111I->IsFrontAllowed()) {$res =true; }}}}return $res; }function IsInstalled($IIILLII =I15844) {return $this->TTlIII1($IIILLII); }function TTlIIT1($IIILLII =I15844) {return $this->TTlIII1($IIILLII); }function IsPresentInPMandPublic($IIILLII =I15844) {$res =false; $tmp =&$this->GetModule($IIILLII); if (is_object($tmp)) {$res =$tmp->IsPresentInPMandPublic(); }return $res; }function IsOwnerInstalled($IIL1L11) {$res =false; if (isset($this->Owners[$IIL1L11]) && $this->Owners[$IIL1L11][I16049]) {$res =true; }return $res; }function SetOwnerInstalled($IIL1L11, $IlLI1LL) {$res =false; if (isset($this->Owners[$IIL1L11])) {$this->Owners[$IIL1L11][I16049] =$IlLI1LL; if (!$IlLI1LL) {$modlist =&$this->IlLIIIL[$IIL1L11]; foreach ($modlist as $vModName => $vData) {$vMod =&$modlist[$vModName]; $vMod->TTlIITl(false); }}}return $res; }function TTllTTT($IIL1L11, $IlLI1LL) {return $this->SetOwnerInstalled($IIL1L11, $IlLI1LL); }function SetOwner($IIL11ll) {$this->Owner =$IIL11ll; if (!isset($this->Owners[$IIL11ll])) {$this->Owners[$IIL11ll] =Array(); $this->Owners[$IIL11ll][I16049] =true; }}protected function TTlIII1($Ill11LL =I15844) {$tmp =&$this->GetModule($Ill11LL); $res =is_object($tmp) ?$tmp->TTlIII1() :FALSE; return $res; }function OwnerSetData($IIL11ll, $cName, $cValue) {$res =false; if (isset($this->Owners[$IIL11ll])) {$this->Owners[$IIL11ll][$cName] =$cValue; $res =true; }else {trigger_error(I16053 .$IIL11ll .I16035, E_USER_WARNING); }return $res; }function OwnersAllSetOption($IlLI1L1, $aData) {foreach (array_keys($this->Owners) as $owner) {if (isset($aData[$owner])) {$this->Owners[$owner][$IlLI1L1] =$aData[$owner]; }}return true; }function ModAllSetOption($IlLI1L1, $aData) {foreach ($aData as $IlLI11I => $cValue) {if (isset($this->IlLIIIl[$IlLI11I])) {$this->IlLIIIl[$IlLI11I]->SetOption($IlLI1L1, $cValue); }}return true; }function TTllTTl($IILIlI1) {$res =array(); $IILllLl =&$this->GetAllModules(); foreach ($IILllLl as $vModName => $vVal) {if ($IILllLl[$vModName]->issetOption($IILIlI1)) {$res[$vModName] =$IILllLl[$vModName]->GetOption($IILIlI1); }}return $res; }function TTllTT1($IlLI11l) {$res =array(); $IILllLl =&$this->GetAllModules(); foreach ($IILllLl as $vModName => $vVal) {foreach ($IlLI11l as $IlLI11L) {if ($IILllLl[$vModName]->issetOption($IlLI11L)) {$res[$vModName][$IlLI11L] =$IILllLl[$vModName]->GetOption($IlLI11L); }}}return $res; }function TTllTIT($IlLI111) {$res =array(); $IILllLl =&$this->GetAllModules(); foreach ($IILllLl as $vModName => $vVal) {foreach ($IlLI111 as $IlLlIII) {if ($IILllLl[$vModName]->issetProperty($IlLlIII)) {$res[$vModName][$IlLlIII] =$IILllLl[$vModName]->GetProperty($IlLlIII); }}}return $res; }function GetModNames() {return array_keys($this->IlLIIIl); }function OwnerGetData($IIL11ll, $cName =I15850) {return empty($cName) ?$this->Owners[$IIL11ll] :(isset($this->Owners[$IIL11ll][$cName]) ?$this->Owners[$IIL11ll][$cName] :null); }function &GetOwnersList() {return $this->Owners; }function TTllTII() {$res =I15850; foreach ($this->Owners as $cName => $cData) {$res =$cName; break; }return $res; }function &TTllTIl($Ill1LI1) {$res =false; if (isset($this->Ill1111[$Ill1LI1][I15975])) {$res =$this->GetModule($this->Ill1111[$Ill1LI1][I15975]); }return $res; }function AddTableToList(&$oModule) {$IILIll1 =$oModule->GetTableName(); if ($IILIll1 != I15829 && $IILIll1 != $this->TablePrefix .I15829) {$this->Ill1111[$IILIll1] =array(I15879 => $IILIll1, I15975 => $oModule->GetName()); }}function AddChildTable(&$oModule, $Ill1LI1) {$IILIll1 =$Ill1LI1; if ($IILIll1 != I15829 && $IILIll1 != $this->TablePrefix .I15829) {$this->Ill1111[$IILIll1] =array(I15879 => $IILIll1, I15975 => $oModule->GetName()); }}function &AddModule($IIILLII, $IlllLlL =0, $Ill1LI1 =I15850) {$res =false; if (in_array($IIILLII, $this->IlLIIll)) {trigger_error(I16054 .$IIILLII .I16055, E_USER_ERROR); }unset($this->Modules[$IIILLII]); $this->Modules[$IIILLII] =clone($this->Default); $this->Modules[$IIILLII]->Init($IIILLII, $IlllLlL); $this->Modules[$IIILLII]->Options =&$this->Options; $this->Options->TTlTIII($IIILLII, array()); $this->Modules[$IIILLII]->Properties =&$this->Properties; $this->Properties->TTlTIII($IIILLII, array()); if (empty($this->IlLIIIL[$this->Owner])) {$this->OwnerSetData($this->Owner, I16056, $IIILLII); }$this->Modules[$IIILLII]->TTlT1ll($this->Owner); if (!isset($this->IlLIIIl[$IIILLII])) {$this->IIL1Ll1++; }else {trigger_error(I16057 .$IIILLII .I16035, E_USER_WARNING); }$this->IlLIIIl[$IIILLII] =&$this->Modules[$IIILLII]; $this->IlLIIIL[$this->Owner][$IIILLII] =&$this->Modules[$IIILLII]; if (!empty($Ill1LI1)) {$this->Modules[$IIILLII]->SetTableName($Ill1LI1); }$this->AddTableToList($this->Modules[$IIILLII]); $res =&$this->Modules[$IIILLII]; return $res; }function &TTllTI1($IlLlIIl, $IlllLl1, $IlllLlL =0, $Ill1LI1 =I15850) {$res =false; $vMod =&$this->GetModule($IlLlIIl); if (!is_object($vMod)) {trigger_error(I16058 .$IlLlIIl .I16035, E_USER_ERROR); }$res =&$vMod->TTlTTTT($IlllLl1, $IlllLlL, $this->Default); if (is_object($res) && !empty($Ill1LI1)) {$res->SetTableName($Ill1LI1); }if (!isset($this->IlLIIIl[$IlllLl1])) {$this->IIL1Ll1++; }else {trigger_error(I16057 .$IlllLl1 .I16035, E_USER_WARNING); }$this->IlLIIIl[$IlllLl1] =&$res; $this->IlLIIIL[$res->GetOwnerName()][$IlllLl1] =&$res; $this->AddTableToList($res); return $res; }function TTllTlT($IIILLII) {$res =false; if (is_object($this->Modules[$IIILLII])) {unset($this->IlLIIIL[$this->Modules[$IIILLII]->GetOwnerName()][$IIILLII]); unset($this->Modules[$IIILLII]); unset($this->IlLIIIl[$IIILLII]); $res =true; }else {trigger_error(I16059 .$IIILLII .I16035, E_USER_WARNING); }return $res; }function TTllTlI($name =I15844) {return $this->GetOption($name); }function GetProperty($name =I15844, $warn =true) {$res =$this->TTlT111($this->Properties, $name, $warn); return $res; }function TTllTll($name =I15844, $warn =true) {return $this->GetProperty($name, $warn); }function TTllTl1($IILIlI1, $cType =I16060) {return $this->TTllT1I(I15885, $IILIlI1, $cType); }function TTllT1T($IlLlIIL =I16061, $cType =I16060) {return $this->TTllT1I(I15888, $IlLlIIL, $cType); }function TTllT1I($container, $IlLlII1, $cType) {if (empty($IlLlII1)) {$IlLlII1 =I16061; }$defaultValue =$IlLlII1 == I16062 ?1000 :I15844; $aIndex =array(); $aRes =array(); $i =0; $level2 =!empty($IlLlIlI); if ($cType == I16063) {$IlLlIll =&$this->Owners; }else {$IlLlIll =&$this->IlLIIIl; }if ($container == I15887) {$dump =$this->Options->TTlTIIl(); }else if ($container == I15891) {$dump =$this->Properties->TTlTIIl(); }$IlLlIlL =$cType == I16064; foreach ($IlLlIll as $vName => $vData) {if ($IlLlIlL) {$aIndex[I16065][$i] =isset($vData[$IlLlII1]) ?$vData[$IlLlII1] :$defaultValue; }else {$aIndex[I16065][$i] =isset($dump[$vName][$IlLlII1]) ?$dump[$vName][$IlLlII1] :$defaultValue; }$aIndex[I16001][$i] =$vName; $i++; }$c =$i; array_multisort($aIndex[I16066], SORT_NUMERIC, SORT_ASC, $aIndex[I15879]); for ($i =0; $i <$c; $i++) {$aRes[$aIndex[I15879][$i]] =&$IlLlIll[$aIndex[I15879][$i]]; }if ($cType == I16063) {$this->Owners =$aRes; }else {$this->IlLIIIl =$aRes; }return true; }function SaveOptions($vModName =I16067, $IlLlIl1 =TRUE) {if ($vModName == I16068) {$this->TTlI11T(); $modlist =&$this->GetAllModules(); }else {$this->TTlI11T($vModName, true); $vMod =$this->GetModule($vModName); if (!is_object($vMod)) {trigger_error(I16069 .$vModName .I16035, E_USER_WARNING); return false; }$modlist =array($vModName => $vMod); }if (!$this->Options->db->TT1lT11(array(I16070 => I16071))) {trigger_error(I16072, E_USER_WARNING); return false; }$res =true; foreach ($modlist as $vModName => $vData) {$vMod =&$modlist[$vModName]; $res =$res && $this->Options->TTlTlT1($vModName, $vMod->TTlII1l()); if( AMI_ModDeclarator::getInstance()->isRegistered($vModName) && AMI_ModDeclarator::getInstance()->getAttr($vModName, I16073, FALSE) ){$IlLlILl =$this->Options->TTlTI11($vModName); if ($IlLlILl) {$res =$res && $this->Options->TTlTlT1($vModName, $IlLlILl, I16074); }else {$sql =I16075 .I16076 .$vModName .I15859; $this->Options->db->query($sql, DBC_SYS_QUERY); }}}if ($IlLlIl1) {$this->TTllT11(); }$this->Options->db->TT1lITT(); $this->Cache->ClearAdd(I16068); return $res; }function TTllT1l($aModules =array()) {$res =false; if (sizeof($aModules)) {foreach (array_keys($aModules) as $index => $module) {if (!$this->isInstalled($aModules[$index])) {unset($aModules[$index]); }}}else {$aModules =$this->GetInstalledModuleNames(); }if (sizeof($aModules)) {$this->Options->TTlTlTl($aModules, true); if (sizeof($this->Options->IllLLLI)) {if ($this->Debug && !(isset($_GET[I16077]) && $_GET[I16077] == I16078 && isset($_GET[I16079]))) {trigger_error(I16080 .implode(I16081, $this->Options->IllLLLI) .I16035); }$res =$this->Options->IllLLLI; }else {$res =true; }}return $res; }function SaveCoreOptions($IIL1Lll =I16068, $IlLlILL =false, $IlLlIL1 =false, $IlLlI1I =false) {$res =false; if ($IIL1Lll == I16068) {if (!$IlLlILL) {$this->TTlI11T(); }$this->SaveCoreOptions(I15864, $IlLlILL, $IlLlIL1, $IlLlI1I); }$IlLlI1l =$this->TTlII1l($IIL1Lll); if ($IlLlILL) {$IIII11I =array(); $res =$this->ReadCoreOptions($IIII11I, $IIL1Lll); }if ($IlLlI1I !== false) {$IlLlI1l[I15888] =&$IlLlI1I; }$res =$this->Options->TTlTlT1(I15985, $IlLlI1l, I16082 .$IIL1Lll); $this->TTllT11(); $this->Cache->ClearAdd(I16068); return $res; }function TTllT11() {$IlLlI1l =$this->TTlII1l(I16067); $res =TRUE; if ($this->opt && (!RUN_UPDATE || !empty($GLOBALS[I16083]))) {$IlLlI1L =serialize(array(I15887 => $this->opt +$IlLlI1l[I15887])); $res =$this->Options->writeOption(I16084, I16085, mb_strlen($IlLlI1L), addslashes($IlLlI1L)) && $res; }return $res; }function TTllITT() {$this->TTllT11(); }function ReadCoreOptions(&$IIII11I, $IIL1Lll =I15864, $IlLlI11 =I16068) {$dump =$this->Properties->read($IIL1Lll); $res =is_array($dump); if ($res) {$IIII11I =is_array($dump[I15891]) ?$dump[I15891] :array(); if (in_array($IlLlI11, array(I16067, I16086))) {$this->TTlII11($dump); }}return $res; }function TTlII1l($IIL1Lll =I15844) {$res =array(); $res[I15885] =$this->Options->getModParam(null); $res[I15888] =$this->Properties->getModParam(null); return $res; }function TTlII11(&$vData) {$this->Options->TTlTIII($this->Name, $vData[I15887]); return true; }function TTllITI(&$IIII11I, &$IlLllII, $IlLllIl, $IlLllIL =Array()) {$res =false; $IlLllII =Array(); $IlLllI1 =(sizeof($IlLllIL) >0); $IlLlllI =$IlLllI1; if (!$IlLllIl && !empty($IIII11I[I16087]) && $IIII11I[I16087] == $GLOBALS[I16088] .I16089 .$GLOBALS[I16090]) {if (isset($IIII11I[I16091][I15979])) {$res =true; $this->Properties->TTlTIII($this->Name, $IIII11I[I16092][I15985]); $IlLlllI =false; if ($IlLllI1) {$IlLlllL =Array(); foreach ($IlLllIL as $owner) {$IlLlllL += array_keys($this->GetModulesByOwner($owner)); }}else {$IlLlllL =array_keys($this->IlLIIIl); }if (($index =array_search(I16093, $IlLlllL)) !== false) {unset($IlLlllL[$index]); }foreach ($IlLlllL as $modName) {if ($this->IlLIIIl[$modName]->TTlIII1()) {$IlLllII[] =$modName; if (isset($IIII11I[I16091][$modName])) {$IlLIlLL =&$this->IlLIIIl[$modName]; $IlLIlLL->TTlIlTI($IIII11I[I16091][$modName]); if (isset($IIII11I[I16092][$modName][I15891][I16062]) ){$ILlI1lL =$this->OwnerGetData($IlLIlLL->Owner, I16094); $ILlI1l1 =FALSE; $taborder =$IIII11I[I16092][$modName][I15891][I16062]; if ($ILlI1lL) {if ($taborder <$ILlI1lL) {$ILlI1l1 =TRUE; }}else {$ILlI1l1 =TRUE; }if ($ILlI1l1) {$this->OwnerSetData($IlLIlLL->Owner, I16056, $modName); $this->OwnerSetData($IlLIlLL->Owner, I16094, $taborder); }}}else {if (!FIRST_PLUGIN_RUN) {trigger_error(I16095 .$modName .I16035); }$res =false; }}}}}if ($IlLlllI) {foreach ($this->IlLIIIl as $modName => $vMod) {if ($this->IlLIIIl[$modName]->TTlIII1()) {$IlLllII[] =$modName; }}}return $res; }function &TTlIlTT($Ill111l =array()) {$IIII11I =Array(); $IIII11I[I16087] =$GLOBALS[I16088] .I16089 .$GLOBALS[I16090]; $IIII11I[I16091][I15979] =$this->Properties->TTlTII1($this->Name); foreach ($this->IlLIIIl as $modName => $vMod) {if ($this->IlLIIIl[$modName]->TTlIII1() || in_array($modName, $Ill111l)) {$IIII11I[I16091][$modName] =$this->IlLIIIl[$modName]->TTlIlTT(); }}return $IIII11I; }function SaveDump(&$IlLlll1, $IILlLL1 =I16096) {$db =new DB_Si; $db->setAttr(I16097, false); if (!$db->TT1lT11(array(I16070 => I16071))) {return false; }$dump =serialize($IlLlll1); $IlLllLI =mb_strlen($dump); $cName =I16098 .$IILlLL1; if (function_exists(I16099)) $dump =gzcompress($dump, 4); $sql =I16100 .$cName .I15859; $db->query($sql, DBC_SYS_QUERY); if ($db->next_record()) {$sql =I16101 .I16102 .I16103 .$IlLllLI .I16104 .I16105 .addslashes($dump) .I16106 .I16107 .$db->Record[I15849] .I15859; }else {$sql =I16108 .I16102 .I16109 .I16110 .$cName .I16104 .I16103 .$IlLllLI .I16104 .I16105 .addslashes($dump) .I16106; }$db->query($sql, DBC_SYS_QUERY); $db->TT1lITT(); return true; }function TTllITl(&$IlLllLl, $IILlLL1 =I16096) {$res =false; $cName =I16098 .$IILlLL1; $db =new DB_Si; $db->setAttr(I16097, false); $sql =I16111 .$cName .I16112; $db->query($sql, DBC_SYS_QUERY); if ($db->next_record()) {$dump =&$db->Record[I16113]; $IlLllLI =$db->Record[I16114]; if (function_exists(I16115)) $dump =gzuncompress($dump); if (mb_strlen($dump) != $IlLllLI) {trigger_error(I16116 .$IlLllLI .I16117 .mb_strlen($dump) .I16035, E_USER_WARNING); }else {$IlLllLl =unserialize($dump); $res =true; }}return $res; }function TTllIT1() {return $this->IlLIII1[I16118]; }function UpdateRightsVersion() {$ver =time(); $db =new DB_si; if ($GLOBALS[I16119] <2) {$sql =I16120 .$ver .I16121; }else {$sql =I16122 .$ver .I16123; }$db->execute($sql, DBC_SYS_QUERY); $this->IlLIII1[I16118] =$ver; $oFileCache =AMI::getResource(I16124); $oFileCache->reset(I16125); return $ver; }function TTllIIT($IlLllLL, $IlLllL1 =false) {if (!isset($this->IlLIII1[I16126])) {$this->IlLIII1[I16126] =array(); }$data =array(); $data[I16127] =Array(); $data[I16128] =Array(); $data[I16129] =I16130; $data[I16131] =0; $data[I16132] =0; $data[I16133] =0; if ($IlLllLL == false) return $data; if (isset($this->IlLIII1[I16126][$IlLllLL])) return $this->IlLIII1[I16126][$IlLllLL]; $this->IlLIII1[I16126][$IlLllLL] =array(); $db =new DB_si; if ($GLOBALS[I16119] <2) {$sql =I16134; }else {$sql =I16135; }$db->query($sql, DBC_SYS_QUERY); $db->next_record(); if ($db->Record[I16136] == $IlLllLL) $data[I16137] =1; $data[I16133] =$db->Record[I16118]; if ($this->TTlIII1(I15980)) {$moderatorGroups =I16130; $IlLll1I =I16019; $IlLll1l =I16019; $IlLll1L =empty($data[I16137]) && !empty($GLOBALS[I16138]) && $GLOBALS[I16138]->GetVar(I16139); $sql =I16140 .I16141 .I16142 .I16143 .$IlLllLL .I16144 .intval($IlLllL1); $db->query($sql, DBC_SYS_QUERY); if ($db->num_rows() >0) {while ($db->next_record()) {$data[I16127][] =$db->Record[I15849]; $data[I16129] .= I16145 .$db->Record[I16129]; $data[I16131] |= intval($db->Record[I16131]); if ($db->Record[I16146]) {$moderatorGroups .= I16145 .$db->Record[I16129]; }if($db->Record[I16147]){ $IlLll1I .= I16148 .$db->Record[I16149]; }if($IlLll1L){ if($db->Record[I16150]){ $IlLll1l .= I16148 .$db->Record[I16149]; }}}}else {$sql =I16151; $db->query($sql, DBC_SYS_QUERY); $db->next_record(); $data[I16127][0] =intval($db->Record[I15849]); $data[I16129] =$db->Record[I16129]; $data[I16131] =intval($db->Record[I16131]); $data[I16146] =0; $data[I16147] =(int)$db->Record[I16147]; if ($data[I16127][0] == 0) {trigger_error(I16152, E_USER_ERROR); }}$IlLll11 =array(); $sql =I16153 .I16154 .I16155 .$moderatorGroups .I16156 .I16155 .$IlLll1I .I16157 .($IlLll1L ?I16158 .$IlLll1l .I16159 :I15844) .I16160 .I16161 .$data[I16149] .I16162; $db->query($sql, DBC_SYS_QUERY); while ($db->next_record()) {$modname =$db->Record[I16163]; if (($mod =&$this->GetModule($modname)) !== false && $mod->TTlIII1()) {$IlLll11[$modname][I16164] =intval($IlLll11[$modname][I16164]) |$db->Record[I16164]; if($IlLll1L){ $IlLll11[$modname][I16011] =(isset($IlLll11[$modname][I16011]) ?(int)$IlLll11[$modname][I16011] :0) |$db->Record[I16011]; }$IlLll11[$modname][I15860][] =$db->Record[I16165]; }}$data[I16166] =$IlLll11; }else{ $IlLlLII =array(); foreach($this->GetModOption(I16167, I16168) as $IlLIl1L){ $IlLlLII[$IlLIl1L] =array( I16164 => 0, I16147 => 1, I16011 => 0, I15860 => array( I16169, I16170, I16171, I16172, I16173 ));}$data[I16166] =$IlLlLII; }$this->IlLIII1[I16126][$IlLllLL] += $data; return $data; }function IsSysUser($userId =false) {if ($userId === false) $userId =$this->GetUserId(); if (!$userId) return false; $data =$this->TTllIIT($userId); return $data[I16137] != 0; }function IsModerator($IIILLII, $userId) {$res =false; if ($this->IsSysUser($userId)) {$res =true; }else {$aRights =$this->TTllIIT($userId); if (isset($aRights[I16166][$IIILLII]) && $aRights[I16166][$IIILLII][I16164]) {$res =true; }}return $res; }function TTllIII($IIILLII, $userId) {return ($this->IsSysUser($userId)) ?I16174 :(($this->IsModerator($IIILLII, $userId)) ?I16146 :I15996); }function TTllIIl($userId) {if ($this->IsSysUser($userId)) {$modlist =array(); $IILllLl =&$this->GetAllModules(); reset($IILllLl); while (list($name, )=each($IILllLl)) {$vMod =&$IILllLl[$name]; if ($vMod->HaveParent() || !$vMod->TTlIII1()) continue; $modlist[] =$name; }}else {$data =$this->TTllIIT($userId); $modlist =array_keys($data[I16166]); }$modlist[] =I16175; return $modlist; }function TTllII1($userId) {$owners =array(); $IlLlllL =$this->TTllIIl($userId); foreach ($IlLlllL as $i => $name) {$mod =&$this->GetModule($name); $oname =$mod->GetOwnerName(); if ($this->IsOwnerInstalled($oname)) $owners[] =$oname; }return $owners; }function TTllIlT($groupId) {if (!isset($this->IlLIII1[I16176])) $this->IlLIII1[I16176] =array(); $data =array(); $data[I16128] =Array(); $data[I16149] =0; $groupId =intval($groupId); if (isset($this->IlLIII1[I16176][$groupId])) return $this->IlLIII1[I16176][$groupId]; $this->IlLIII1[I16176][$groupId] =array(); $db =new DB_si; $sql =I16177 .$groupId; $db->query($sql, DBC_SYS_QUERY); if (!$db->next_record()) trigger_error(I16178 .$groupId .I16179, E_USER_ERROR); $data[I16129] =$db->Record[I16129]; $IlLll11 =array(); $sql =I16180 .$data[I16129] .I16181; $db->query($sql, DBC_SYS_QUERY); while ($db->next_record()) {$modname =$db->Record[I16163]; if (($mod =&$this->GetModule($modname)) !== false && $mod->TTlIII1()) $IlLll11[$modname][I15860][] =$db->Record[I16165]; }$data[I16166] =$IlLll11; $this->IlLIII1[I16176][$groupId] += $data; return $data; }function TTllIlI($groupId, $modName, $IlLlLIl =false) {$groupId =intval($groupId); if (!$groupId) return 0; $data =$this->TTllIlT($groupId); if (!($mod =&$this->GetModule($modName)) || !$mod->TTlIII1()) {trigger_error(I16182 .$groupId .I16183 .$modName .I16184 .$modName .I16185, E_USER_WARNING); return 0; }$access =0; if (!isset($data[I16166][$modName])) return $access; $access |= $mod->TTlITTl($data[I16166][$modName][I15860]); if (!$IlLlLIl) return $access; $IlLlLIL =&$mod->GetSubModules(); if (!is_array($IlLlLIL)) return $access; foreach ($IlLlLIL as $modName => $tmp) {if (!isset($data[I16166][$modName])) continue; $mod =&$IlLlLIL[$modName]; $access |= $mod->TTlITTl($data[I16166][$modName][I15860]); }return $access; }function TTllIll($modName, $userId =false) {if ($userId === false) $userId =$this->GetUserId(); $data =$this->TTllIIT($userId); if (!is_array($data[I16166][$modName])) return array(); return $data[I16166][$modName]; }function TTllIl1($modName, $userId =false) {if ($userId === false) $userId =$this->GetUserId(); $data =$this->TTllIll($modName, $userId); if (!($mod =&$this->GetModule($modName)) || !$mod->TTlIII1()) {trigger_error(I16186 .$modName .I16183 .$userId .I16184 .$modName .I16185, E_USER_WARNING); return 0; }$access =$mod->TTlITTl($data); return $access; }function TTllI1T($groupId) {$groupId =intval($groupId); if (!$groupId) return array(); $data =$this->TTllIlT($groupId); return $data[I16166]; }function TTllI1I($cLang, $IlLllL1 =false) {$IlLllLL =$this->GetUserId(); if (isset($this->IlLIII1[I16187]) && $IlLllLL === $this->IlLIII1[I16187]) return; $this->IlLIII1[I16187] =Array(); $this->IlLIII1[I16127] =Array(); $this->IlLIII1[I16129] =I16130; $this->IlLIII1[I16131] =0; $this->IlLIII1[I16188] =$cLang; $this->IlLIII1[I16133] =0; if ($IlLllLL == false) return; $IlLlLI1 =$this->TTllIIT($IlLllLL, $IlLllL1); $this->IlLIII1[I16189] =$IlLlLI1[I16189]; $this->IlLIII1[I16149] =$IlLlLI1[I16149]; $this->IlLIII1[I16150] =$IlLlLI1[I16150]; $this->IlLIII1[I16133] =$IlLlLI1[I16118]; }function TTllI1l($cName =I15850, $IlLllLL =false) {if (!empty($cName)) {$userId =$IlLllLL === false ?$this->GetUserId() :$IlLllLL; $name =mb_strtolower($cName); if ($this->Debug && !isset($this->IlLIII1[I16190][$userId][$name])) {trigger_error(I16191 .$name .I16035, E_USER_WARNING); }$res =$this->IlLIII1[I16190][$userId][$name]; }else {$res =$this->IlLIII1[I16190][$userId]; }return $res; }function HasRecordRights($IIl11LI) {$vMod =$this->TTllTIl($IIl11LI); return is_object($vMod) && $vMod->issetAndTrueProperty(I16192); }function GetRightsFields(&$aLexems, $IIl11LI) {$aFileds =Array(); $vMod =&$this->TTllTIl($IIl11LI); if (is_object($vMod) && $vMod->issetAndTrueProperty(I16192)) {foreach (Array(I16193) as $col) {$found =false; $regCol =preg_quote($col, I16194); foreach ($aLexems as $lexem) {if ((mb_substr($lexem, 0, 1) != I15859) && preg_match(I16195 .$regCol .I16196, $lexem)) {$found =true; break; }}if (!$found) {switch ($col) {case I16193: $val =intval($this->GetUserId()); break; }$aFileds[$col] =$val; }}}return $aFileds; }function GetRights($IlLlLlI, $cType =I16197) {return $this->IsSysUser() ?SYS_A_RIGHT :SYS_R_RIGHT; }function HostMode() {if ($this->Side == I16011 && !RUN_UPDATE) return hostMode(); if ($GLOBALS[I16198][I16199] == I16200) return 0; return HOSTMODE_SHARED; }function TTllI11() {return $this->HostMode(); }public function TTlllTT(&$IlLlLll) {$IlLlLlL =I15844; $IlLlLl1 =I16201 .I16202 .I16203; $IlLlLLI =I16204 .I16205 .I16206; $IlLlLLl =I16207 .I16208; $IlLlLLL =I16209 .$GLOBALS[I16210] .I16211 .I16212 .I16213; $IlLlLL1 =I16209 .$GLOBALS[I16210] .I16214 .I16206 .I16215 .I16216 .I16217 .I16218; $IlLlL1I =I16219 .$GLOBALS[I16088]; if(!empty($GLOBALS[I16220][I16221][I16222]) && !empty($GLOBALS[I16220][I16221][I16223])){ $IlLlL1I .= I16224 .time(); }if ($this->issetModOption(I16225, I16226)) {$IlLlL1I .= I16227 .$this->TTlI1TT(I16225, I16226); }$IlLlL1I .= I16228 .I16229 .dechex(preg_replace(I16230, I16231, $GLOBALS[I16088])) .I16232 .I16233; if (I16234 === $this->Side) {$_script =I16235; $oSession =AMI::getSingleton(I16236); $oUser =$oSession->getUserData(); $userId =0; if($oUser){ $userId =$oUser->getId(); }if(AMI_Skin::skinEnvActive() && $userId){ $_script .= I16237; }if(AMI::editModeEnabled()){ $this->Cache->Disable(); }$IlLlL1l =$this->TTlI1TT(I16225, I16238); $IlLlL1L =TRUE; if (!isset($IlLlL1l[$_SERVER[I16239]]) || FALSE === mb_strpos($IlLlL1l[$_SERVER[I16239]], I16240) ){$_script .= I16241; $IlLlL1L =FALSE; }$IlLlLlL .= $IlLlLLL .$_script .I16242 .$IlLlL1I; if (TRUE === $IlLlL1L) {$IlLlLlL .= $IlLlLL1 .$IlLlL1I; }if (call_user_func(array($IlLlLl1, $IlLlLLI), I16243 .I16244 .I16245 .I16246) ){$IlLlLlL .= $IlLlLLL .I16247 .$IlLlL1I; }if (call_user_func(array($IlLlLl1, $IlLlLLI), I16201 .I16248 .I16249 .I16250) ){$IlLlLlL .= $IlLlLLL .I16251 .call_user_func(array($IlLlLl1, $IlLlLLl), I16201 .I16248 .I16249 .I16250) .$IlLlL1I; }}if (call_user_func(array($IlLlLl1, $IlLlLLI), I16252 .I16253 .I16254 .I16255) ){$IlLlLlL .= $IlLlLLL .I16256 .$IlLlL1I; }if (call_user_func(array($IlLlLl1, $IlLlLLI), I16257 .I16258 .I16259) ){$IlLlLlL .= $IlLlLLL .I16260 .call_user_func(array($IlLlLl1, $IlLlLLl), I16257 .I16258 .I16259) .$IlLlL1I; }$IlLlLl1 =I16261; $IlLlLLl =I16262 .I16263; $IlLlLlL .= $GLOBALS[I15987]->$IlLlLl1->$IlLlLLl; if (I15844 !== $IlLlLlL) {$IlLlLll =str_replace( I16264 .I16265, $IlLlLlL .I16264 .I16265, $IlLlLll );}}function TTlllTI() {if (!isset($this->IlLIILL)) {$oSess =admSession(); $udata =$oSess->GetVar(I15893); $this->IlLIILL =isset($udata[I16266][I16267]) ?$udata[I16266][I16267] :0; }return $this->IlLIILL &SF_DEMO ?true :false; }function TTlllTl($key) {$oSess =admSession(); $udata =$oSess->GetVar(I15893); return $udata[I16266][$key]; }public function renameModOptions($modId, $newModId) {if (empty($this->Modules[$modId])) {trigger_error(I16268 .$modId .I16269, E_USER_ERROR); }if ($newModId) {AMI_Registry::set(I16270, $modId); $this->Modules[$modId]->Name =$newModId; $this->Modules[$modId]->Options->aParams[$newModId] =$this->Modules[$modId]->Options->aParams[$modId]; $this->Modules[$modId]->Properties->aParams[$newModId] =$this->Modules[$modId]->Properties->aParams[$modId]; $this->Modules[$newModId] =$this->Modules[$modId]; $this->IlLIIIl[$newModId] =$this->IlLIIIl[$modId]; unset( $this->Modules[$modId], $this->Modules[$newModId]->Options->aParams[$modId], $this->Modules[$newModId]->Properties->aParams[$modId], $this->IlLIIIl[$modId] );foreach (array_keys($this->IlLIIIL) as $owner) {if (isset($this->IlLIIIL[$owner][$modId])) {$this->IlLIIIL[$owner][$newModId] =$this->IlLIIIL[$owner][$modId]; unset($this->IlLIIIL[$owner][$modId]); break; }}}return (bool) $newModId; }public function &declareModule($owner, $hyperMod, $config, $modId, $parentModId =I15844, $useFront =FALSE) {$this->setOwner($owner); if ($parentModId) {$oModule =&$this->TTllTI1($parentModId, $modId, $useFront); }else {$oModule =&$this->AddModule($modId, $useFront); }if ($oModule) {if (!isset($this->aHyperStruct[$hyperMod])) {$this->aHyperStruct[$hyperMod] =array(); }if (!isset($this->aHyperStruct[$hyperMod][$config])) {$this->aHyperStruct[$hyperMod][$config] =array(); }$this->aHyperStruct[$hyperMod][$config][] =$modId; }return $oModule; }public function setupHyperMod($path, $IlLlL11, $type, $aVars =null, array $aModIds =null) {$name =$type .I15838; $IlLl1II =@file_get_contents($path .$name); if ($IlLl1II === FALSE) {trigger_error(I16271 .$name .I15859, E_USER_ERROR); }if (is_array($aVars)) {extract($aVars); }if (!sizeof($aModIds)) {$aModIds =null; }$Core =$this; $oDeclarator =AMI_ModDeclarator::getInstance(); $aModIds =$oDeclarator->getRegistered(); foreach ($aModIds as $modId) {if (!is_null($aModIds) && !in_array($modId, $aModIds)) {continue; }$owner =$oDeclarator->getSection($modId); if (!in_array($owner, $IlLlL11)) {continue; }list($hyperMod, $config) =$oDeclarator->getHyperData($modId); $tabOrder =$oDeclarator->getTabOrder($modId); if ($type === I16272) {$oCoreRules->setCurrentOwner($owner); }else {$this->SetOwner($owner); }$IlLl1Il =0; $IlLl1IL =array( array( I16273 => "// [{$hyperMod}|{$config}] {", I16274 => "// } [{$hyperMod}|{$config}]" ));$tail =$oDeclarator->getAttr($modId, I16275); if (!is_null($tail)) {array_unshift( $IlLl1IL, array( I16273 => "// [{$hyperMod}|{$config}|{$tail}] {", I16274 => "// } [{$hyperMod}|{$config}|{$tail}]" ));$IlLl1Il++; }foreach ($IlLl1IL as $index => $IlLl1I1) {$IlLl1lI =mb_strpos($IlLl1II, $IlLl1I1[I16273]); $IlLl1ll =mb_strpos($IlLl1II, $IlLl1I1[I16274]); if ($IlLl1lI === FALSE || $IlLl1ll === FALSE) {if ($index == $IlLl1Il) {}continue; }$IlLl1lI += mb_strlen($IlLl1I1[I16273]); $code =mb_substr($IlLl1II, $IlLl1lI, $IlLl1ll -$IlLl1lI); $parentModId =preg_match(I16276, $modId) ?str_replace(I16277, I15844, $modId) :preg_replace(I16278, I15844, $modId); $IlLl1lL =str_replace( array(I16279, I16280, I16281, I16282), array($modId, $parentModId, $tabOrder, $owner), $code );if ($type === I16283) {$IIIlILl =empty($REBULD_MODULES_LIST); }eval($IlLl1lL); break; }}}public function authByHash($IlLl1l1){ $IlLl1LI =FALSE; do{ $IlLl1l1 =call_user_func(I16284 .I16285 .I16286, $IlLl1l1); $IlLl1Ll =mb_substr($IlLl1l1, 0, 1); if(!preg_match(I16287, $IlLl1Ll)){ break; }$_hash =mb_substr($IlLl1l1, 1, $IlLl1Ll); $IlLl1l1 =mb_substr($IlLl1l1, $IlLl1Ll +1); $_shared =I16288 == $GLOBALS[I16198][I16199]; $IlLl1LL =empty($GLOBALS[I16198][I16289]) && empty($GLOBALS[I16290][I16291][I16292]); $IlLl1L1 =call_user_func(array(I16293, I16294 .I16295), I16296); $IlLl11I =call_user_func(array(I16297 .I16298, I16299 .I16300), I16301 .I16302 .I16303 .($IlLl1LL ?I16304 :I15844) )->q($IlLl1l1) ->q(date(I16305)); if($IlLl1LL){ $IlLl11I->q($_SERVER[I16239]); }$IlLl11l =call_user_func(array($IlLl1L1, I16306 .I16307), $IlLl11I); if($IlLl11l){ $IlLl11L =@unserialize($IlLl11l[I16308]); if( (int)$_hash === ($_shared ?unserialize($IlLl11L[I16309]) :$IlLl11L[I16310] )){$IlLl111 =$_shared ?unserialize($IlLl11L[I16311]) :$IlLl11L[I15893]; $IlLl1LI =call_user_func( array( call_user_func(array(I16201 .I16312, I16313 .I16314), I16315 .I16316), I16317 .I16318 ),$IlLl111[I16319] );}}}while(FALSE); return $IlLl1LI; }public function repairPagesTree(){ Tree::TI11ITI(I16320, $GLOBALS[I16296]); }public function getSessions(){ $oSess =admSession(); if($oSess){ return $oSess->getSessions(); }return array(); }public function expireUserSession($id){ $oSess =admSession(); if($oSess){ $oSess->expireUserSession($id); }}}