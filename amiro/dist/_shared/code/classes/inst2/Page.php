<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       55035 xkqwywklnqgsnlwgugtkzlutyprgulrskzmpzkilngtxmyxnkynlqnxmlgkwisnrnirmpnir
 */ ?><?php foreach(array(16321=>'oTTg~1`0?403?FHrYMSSQn',16322=>'FHrYMSSQn!?MnvZJMS?URj,?',16323=>'?Zt?',16324=>"tQIGJZtQD~GZPQD`tGJ",16325=>"tQIGJZtQD~IQnu`tGJ",16326=>"IQnu",16327=>"IZMn",16328=>"MIP|IZMn",16329=>"DuY",16330=>"DuY2",16331=>"MIP|DuY",16332=>"YHttHI",16333=>"tHG",16334=>"|GZPQ",16335=>"tQIGJZtQD~JZBHutD~",16336=>"",16337=>'',16338=>"dqjqwT?JZnP?",16339=>"FRhi?WID|GZPQD?",16340=>"JZnP",16341=>"dqjqwT?MS?",16342=>"?",16343=>"hRsqR?yb?MS?jmimT?1",16344=>"MS",16345=>"!?",16346=>"coqRq?MS='",16347=>"'?",16348=>"jmimT?1",16349=>"'!'",16350=>"coqRq?IHSuJQ|nZIQ?mN}'",16351=>"'{?",16352=>"hRsqR?yb?MS?",16353=>"coqRq?IHSuJQ|nZIQ='",16354=>"coqRq?MG|ZrQZ?#?0?",16355=>"dqjqwT?MG|ZrQZ?",16356=>"MG|ZrQZ",16357=>"GZtO",16358=>"nZIQ",16359=>"nZv|YZr",16360=>"!?YHSB?",16361=>"dqjqwT?GZrQnt|MS!?nZIQ!?MG|ZrQZ!?MD|GrMntZYJQ!?UNmX|TmiqdTzig}JZDt|WOZnPQS{?ZD?uJZDt|WOZnPQS!?",16362=>"OtIJ|tMtJQ!?OtIJ|KQBCHrSD!?OtIJ|SQDWrMGtMHn!?GZPQ|nHMnSQx!?OtIJ|tMtJQ|MnOQrMt!?DOHC|DMYJMnPD?",16363=>"'",16364=>"tMtJQ",16365=>"OtIJ|tMtJQ",16366=>"KQBCHrSD",16367=>"OtIJ|KQBCHrSD",16368=>"SQDWrMGtMHn",16369=>"OtIJ|SQDWrMGtMHn",16370=>"tMtJQ|MnOQrMt",16371=>"OtIJ|tMtJQ|MnOQrMt",16372=>"DOHC|DMYJMnPD",16373=>"||GZPQ|nZIQ",16374=>"uJZDt|WOZnPQS",16375=>'GZPQ|nHMnSQx',16376=>'mmJjmJj',16377=>'dqjqwT?GZPQ|nHMnSQx?FRhi?WID|GZPQD?coqRq?MS=',16378=>"GZrQnt|MS",16379=>"DMYJ|YZr",16380=>"GZPQ|nZIQ",16381=>"%nZIQ",16382=>"MD|GrMntZYJQ",16383=>"GrMnt|fJZP",16384=>"GrMnt|vQrDMHn",16385=>"%GrMnt|vQrDMHn",16386=>"GrMnt|JMnK",16387=>"YHSB",16388=>"%YHSB",16389=>"%nZv|DGJMttQr",16390=>"GZPQ|JMnK",16391=>"DWrMGt|JMnK",16392=>"DGJMttQr",16393=>"GZPQ|MS",16394=>"MtQI",16395=>"%nZv|MtQI",16396=>"%nZv|YZr",16397=>'GZPQ|404',16398=>'GrMnt|vQrDMHn',16399=>"%DMYJ|DGJMttQr",16400=>'IHSuJQ|nZIQ',16401=>"|ZWtMvQ",16402=>"%DMYJ|YZr",16403=>"%GZtO|DGJMttQr",16404=>"%GZtO",16405=>"DuYIQnu",16406=>"OZvQ|DuYIQnu",16407=>"IZMniQnujQvQJD",16408=>"tHGmS",16409=>"DuYiQnusZtZ",16410=>"1",16411=>"MIP|IQnu|nHrIZJ",16412=>"MIP|",16413=>"MIP|IQnu|HvQr",16414=>"MIP|IQnu|ZWtMvQ",16415=>"'!",16416=>"DuYdGJMttQr",16417=>"uDQ|nHMnSQx",16418=>"rQJnHfHJJHC",16419=>'rQJ="nHfHJJHC"',16420=>"nHMnSQx|DtZrt",16421=>'#nHMnSQx@',16422=>"nHMnSQx|QnS",16423=>'#~nHMnSQx@',16424=>"JMnK",16425=>"JQvQJ",16426=>"WurrQntJBzWtMvQmtQI",16427=>"ZWtMvQ|WOMJS",16428=>"|MtQI",16429=>"%",16430=>"|YJHWK",16431=>"GZrQnt|IQnu|MS",16432=>"WHntQnt",16433=>"DuYIQnuD",16434=>"DQGZrQtQduYiQnu",16435=>'DuYIQnu',16436=>"ZJJ",16437=>"ZJJHCQS|IQnu|JQvQJ",16438=>"|DGJMttQr",16439=>"!",16440=>"IQnu|IZMn|MtQI",16441=>"LDSZtZ",16442=>"%IQnu|LDGrQJHZS",16443=>"IZMn|IQnu",16444=>"DuYIQnuQD",16445=>"IQnu|YHttHI|MtQI",16446=>"YHttHI|IQnu",16447=>"IQnu|tHG|MtQI",16448=>"tHG|IQnu",16449=>"GZPQD",16450=>"vMrtuZJ|JMnKD",16451=>"~",16452=>"uDQS|vMrtuZJ|IHSuJQD",16453=>"GuYJMW",16454=>"IHSuJQ|nZIQ",16455=>"frHnt|JMnK",16456=>"jZBHut?yJHWKD?WHunt?MD?nHt?MnMtMZJMAQS?Hr?MnvZJMS```",16457=>"dqjqwT?[?",16458=>"JZB|MS",16459=>'OtIJ|OQZS|tZMJ',16460=>"!?JZB|f",16461=>"|tBGQ",16462=>"|YHSB",16463=>"dqjqwT?JZB|IZMn|YHSB!?WDD|fMJQ!?OtIJ|OQZS|tZMJ",16464=>"?frHI?WID|JZBHutD?COQrQ?MS='",16465=>"JZB|f",16466=>"JZB|IZMn|YHSB",16467=>"WDD|fMJQ",16468=>"jZBHut?MD?nHt?fHunS?}JZB|MS=*",16469=>"dqjqwT?[?frHI?WID|JZBHutD?COQrQ?MD|SQfZuJt='1'?ZnS?JZnP='",16470=>"dqjqwT?YHSB?",16471=>"<<DGQW|IHSuJQ|YHSB<<",16472=>"GZPQ|YHSB",16473=>"JZBHut|MS",16474=>"JZBHut|YHSB",16475=>"JZBHut|WDD",16476=>"JZBHut|YJHWKD",16477=>'JZBHut|YJHWK|nuID',16478=>"FUNw|mNwjUsqd|gzTo",16479=>"funW|JZBHut`GOG",16480=>"WHIIHn%GZPQ|YHSB",16481=>"WHIIHn%IHSuJQ|YHSB",16482=>"DGQW|IHSuJQ|YHSB",16483=>"JZB|YHSB|YHSB",16484=>"MnMt",16485=>'MnMt',16486=>"QnS",16487=>"JZB|YHSB",16488=>"nZIQ!?JZB|YHSB|tBGQ",16489=>"dqjqwT?",16490=>"'?ZnS?JZnP='",16491=>"JZB|YHSB|tBGQ",16492=>"*|nZIQ|&",16493=>"*|WHntQnt|&",16494=>"JZB|",16495=>"JZB",16496=>"JZB|IZMn",16497=>'OQZS',16498=>"dqjqwT?.rQSMrQWtMHn|WHSQ.!?.SQDt|JMnK.?FRhi?.WID|GZPQD.?coqRq?.MS.?=?",16499=>'rQSMrQWtMHn|WHSQ',16500=>'dtZtuD%?200?hk',16501=>'dqRVqR|gRhThwhj',16502=>'?200?hk',16503=>'iHvQS?gQrIZnQntJB',16504=>'FHunS',16505=>'?',16506=>'SQDt|JMnK',16507=>'~',16508=>'jHWZtMHn%?',16509=>'?503?dQrvMWQ?TQIGHrZrMJB?UnZvZMJZYJQ',16510=>'dtZtuD%?503?dQrvMWQ?TQIGHrZrMJB?UnZvZMJZYJQ',16511=>'tQIGJZtQD~JZnP~GZPQ|404`JnP',16512=>'rQSMrQWtMHn|503',16513=>'?404?NHt?FHunS',16514=>'dtZtuD%?404?NHt?FHunS',16515=>'rQSMrQWtMHn|404',16516=>'mnvZJMS?rQSMrQWtMHn?oTTg?DtZtuD?') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header(I16321);die(I16322.__FILE__.I16323.__LINE__);} class Page{ public $_tmpSubMenuCommonData; public $IlLLIII; function Page(&$IlLLIIl, $IlLLIIL =I16324, $IlLLII1 =I16325){ $this->_tmpSubMenuCommonData =array(); $this->template =$IlLLIIL; $this->menuTemplate =$IlLLII1; $this->MenuBlock =I16326; $this->MenuSubBlock =Array(I16327=>I16327, I16328=>I16328, I16329=>I16329, I16330 => I16330, I16331=>I16331, I16332=>I16332, I16333=>I16333); $this->block =I16334; $this->LayoutTemplatesPath =I16335; $this->DefaultId =1; $this->ReturnDefault =true; $this->PathRootId =0; $this->DrawPath =false; $this->DrawNavBar =false; $this->DrawSiblingsBar =false; $this->DrawName =false; $this->DrawPageName =false; $this->DrawPrintLink =false; $this->CachedPageBody =I16336; $this->CachedPageId =false; $this->CachedPageLayoutId =false; $this->CachedPageLayoutBody =I16336; $this->CachedPageLayoutCssName =I16336; $this->CachedPageBlocks =array(); $this->CachedLayoutHTMLHeadTail =I16337; $this->CachedPageHTMLHeadTail =I16337; $this->isLinkConflictsMode =false; $this->IlLLIII =array(); $this->_aUsedLayoutBlocks =array(); $this->db =new DB_si; $this->Cms =&$IlLLIIl; $this->Gui =&$IlLLIIl->Gui; $this->Gui->addBlock($this->block, $this->template); $this->Gui->addBlock($this->MenuBlock, $this->menuTemplate); $this->tree =&Tree::getInstance($this->Cms); $this->tree->lang =$this->Gui->lang; $this->tree->lang_data =$this->Gui->lang; $this->tree->ll1Il1L =true; $this->tree->ll1Il11 =true; }function TTlllT1($IlLLIlI =1, $IlLLIll =0, $IlLLIlL =0, $IlLLIl1 =0, $IlLLIIL =I16336){ if(!empty($IlLLIIL)){ $this->template =$IlLLIIL; $this->Gui->addBlock($this->block, $this->template); }$this->ReturnDefault =$IlLLIlI; $this->DrawPath =$IlLLIll; $this->DrawNavBar =$IlLLIlL; $this->DrawName =$IlLLIl1; }function TTlllIT($IlLLIIL, $cBlockName=I16334, $IlLLILI=I16336, $IlLLILl=I16326){ $IlLLILL =I16336; $vT =I16336; $IlLLIL1 =I16336; $IlLLI1I =I16336; if(!empty($IlLLIIL)) $vT =$IlLLIIL; if(!empty($cBlockName)) $IlLLILL =$cBlockName; if(!empty($IlLLILI)) $IlLLI1I =$IlLLILI; if(!empty($IlLLILl)) $IlLLIL1 =$IlLLILl; if(!empty($IlLLILL)&&!empty($vT)){ $this->template =$vT; $this->block =$IlLLILL; $this->Gui->addBlock($this->block, $this->template); }if(!empty($IlLLIL1)&&!empty($IlLLI1I)){ $this->menuTemplate =$IlLLI1I; $this->MenuBlock =$IlLLIL1; $this->Gui->addBlock($this->MenuBlock, $this->menuTemplate); }}function TTlllII($Ill11lL){ $res =I16336; $this->tree->UseLang =false; $NONE =false; $found =$this->tree->TI1l1lI($Ill11lL, $NONE); if(!$found && $this->ReturnDefault) $Ill11lL =$this->DefaultId; $sql =I16338. I16339. "WHERE id='$Ill11lL'"; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record[I16340]; }return $res; }function TTlllIl($IlLLI1l){ $res =false; $sql =I16341. I16339. "WHERE lay_id='$IlLLI1l'".$this->tree->TI1l1lT().I16342. I16343; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record[I16344]; }return $res; }function TTlllI1($Ill11lL, $IlLLI1L){ $res =false; $IlLLI11 =I16345.implode(I16345, $IlLLI1L); $sql =I16341.$IlLLI11.I16342. I16339. I16346.$Ill11lL.I16347.$this->tree->TI1l1lT().I16342. I16348; $res =$this->db->getRecord($sql); return $res; }function TTllllT($IIILLII, $IlLLlII =I16336){ return $this->TTllll1($IIILLII, $IlLLlII ,I16348); }function TTllllI($aModNames, $IlLLlII =I16336){ $IIILLII =implode(I16349, $aModNames); return $this->TTllll1($IIILLII, $IlLLlII); }function TTlllll($IIILLII, $IlLLlII =I16336){ return $this->TTllll1($IIILLII, $IlLLlII, I16336); }function TTllll1($IIILLII, $IlLLlII ,$limit){ $res =false; $IlLLlIl =I16336; if(is_array($IlLLlII)){ $IlLLlIl =I16345.implode(I16345, $IlLLlII); }$sql =I16341.$IlLLlIl.I16342. I16339. I16350.$IIILLII.I16351.$this->tree->TI1l1lT().I16342. I16352.$limit; $this->db->query($sql); if($limit != I16336) {if($this->db->next_record()) {if($IlLLlII == I16336) {$res =$this->db->Record[I16344]; }else {$res =$this->db->Record; }}}else {while($this->db->next_record()) {if($IlLLlII == I16336) {$res[] =$this->db->Record[I16344]; }else {$res[] =$this->db->Record; }}}return $res; }function getPageInfoByModuleName($IIILLII, $Ill11LI =I16336){ $res =false; $IlLLlIl =I16336; if(is_array($Ill11LI)){ $IlLLlIl =I16345.implode(I16345, $Ill11LI); }$sql =I16341.$IlLLlIl.I16342. I16339. I16353.$IIILLII.I16347.$this->tree->TI1l1lT().I16342. I16343; $this->db->query($sql); if($this->db->next_record()) {$res =$this->db->Record; }return $res; }function AdjustPageId($Ill11lL, $IlLLlIL =true){ $res =$Ill11lL; $IlLLlI1 =0; $found =$this->tree->TI1l1lI($Ill11lL, $IlLLlI1); if($IlLLlI1 >0){ $res =$Ill11lL =$IlLLlI1; $found =$this->tree->TI1l1lI($Ill11lL, $IlLLlI1); }elseif($IlLLlI1 <0){ $res =$IlLLlI1; $found =true; }if(!$found && $this->ReturnDefault){ if($IlLLlIL){ $res =$this->AdjustPageId($this->DefaultId, false); }else{ $res =false; }}return $res; }function GetDefaultPageByIPArea(&$IlLLllI){ $res =true; $NONE =false; $found =$this->tree->TI1l1lI($IlLLllI, $NONE); if(!$found){ $sql =I16341. I16339. I16354.$this->tree->TI1l1lT().I16342. I16348; $this->db->query($sql); if($this->db->next_record()) {$page =$IlLLllI; $IlLLllI =$this->db->Record[I16344]; $sql =I16355. I16339. I16346.$page.I16347. I16348; $this->db->query($sql); if($this->db->next_record()) {$this->Cms->TTITl11(-1 *$this->db->Record[I16356]); }else {trigger_error("Default page $page not exists"); }}else {$res =false; }}return $res; }function CheckDefaultPageBySiteId(&$IlLLllI){ $NONE =false; return $this->tree->TI1l1lI($IlLLllI, $NONE); }function getDefaultPageIds(){ return $this->tree->getDefaultPageIds(); }function TTI111T($Ill11lL, &$IlLLlll, $originalPageId =0){ global $ActiveScriptFullLink; $res =I16336; $data =array(); $NONE =false; $found =$this->tree->TI1l1lI($Ill11lL, $NONE); if(!$found && $this->ReturnDefault) $Ill11lL =$this->DefaultId; if($found || $this->ReturnDefault){ if($this->DrawPath) $data[I16357] =$this->getPath($Ill11lL, I16358, $this->RootPathId); if($this->DrawNavBar) $data[I16359] =$this->TTlll1T($Ill11lL); $IlLLllL =($this->CachedPageId)?I16336:I16360; $sql =I16361. I16362. $IlLLllL. I16339. I16346.$Ill11lL.I16363; $this->db->query($sql); if($this->db->next_record()) {$IlLLlll[I16364] =$this->db->Record[I16365]; $IlLLlll[I16366] =$this->db->Record[I16367]; $IlLLlll[I16368] =$this->db->Record[I16369]; $IlLLlll[I16370] =$this->db->Record[I16371]; $IlLLlll[I16372] =$this->db->Record[I16372]; $IlLLlll[I16373] =$this->db->Record[I16358]; $IlLLlll[I16374] =$this->db->Record[I16374]; if($this->db->Record[I16375] || !$GLOBALS[I16376]){ $this->Gui->setRobotsMeta(false); }else if($originalPageId >0 && $originalPageId != $Ill11lL){ $sql =I16377 .$originalPageId; $oResult =$this->db->select($sql); if(($aRecord =$oResult->nextRecord()) && $aRecord[I16375]){ $this->Gui->setRobotsMeta(false); }}if($this->Cms->TTIT1TT()==0) $this->Cms->TTITl11($this->db->Record[I16356]); $pid =$this->db->Record[I16378]; if($this->DrawSiblingsBar && $IlLLlll[I16372]) $data[I16379] =$this->TTlll1I($pid, $Ill11lL); if($this->DrawPageName) $data[I16380] =$this->db->Record[I16358]; if($this->DrawName) $data[I16358] =$this->Gui->getAbs($this->block.I16381, Array(I16358 => $this->db->Record[I16358]) );if($this->DrawPrintLink && $this->db->Record[I16382]){ $IlLLll1 =$ActiveScriptFullLink; TlT1IT1($IlLLll1, array($this->Cms->Core->GetOption(I16383)=>1) );$data[I16384] =$this->Gui->getAbs($this->block.I16385, Array(I16386 => $IlLLll1) );}$IlLLllL =($this->CachedPageId)?$this->CachedPageBody:$this->db->Record[I16387]; $data[I16387] =$this->Gui->getAbs($this->block.I16388, Array(I16387 => $this->Gui->MYnl2br($IlLLllL)) );}$res =$this->Gui->get($this->block, $data); $this->CachedPageBody =$res; $this->CachedPageId =$Ill11lL; }return $res; }function TTlll1T($Ill11lL){ $res =I16336; $splitter =$this->Gui->getAbs($this->block.I16389, I16336); $children =$this->tree->TI11TII($Ill11lL, 1); foreach( $children as $vid => $IlLLlLI ){$IlLLlLl =Array(); $IlLLlLl[I16390] =$this->tree->TI11TIT($IlLLlLI[I16391]); $IlLLlLl[I16392] =$splitter; if(empty($res)) $IlLLlLl[I16392] =I16336; $IlLLlLl[I16393] =$vid; $IlLLlLl[I16394] =$IlLLlLI[I16358]; $res .= $this->Gui->get($this->block.I16395, $IlLLlLl); }if(!empty($res)) {$res =$this->Gui->getAbs($this->block.I16396, Array(I16359 => $res) );}return $res; }function TTlll1I($IlLLlLL, $Ill11lL){ static $IlLLlL1 =array (I16397 => 1, I16398 => 1); $res =I16336; $splitter =$this->Gui->getAbs($this->block.I16399, I16336); $children =$this->tree->TI11TII($IlLLlLL, 1, false); foreach( $children as $vid => $IlLLlLI ){if (!empty($IlLLlLI[I16400]) && isset($IlLLlL1[$IlLLlLI[I16400]])) {continue; }$IlLLlLl =Array(); $IlLLlLl[I16390] =$this->tree->TI11TIT($IlLLlLI[I16391]); $IlLLlLl[I16392] =$splitter; if(empty($res)) $IlLLlLl[I16392] =I16336; $IlLLlLl[I16393] =$vid; $IlLLlLl[I16394] =$IlLLlLI[I16358]; $IlLLl1I =I16336; if($vid == $Ill11lL) $IlLLl1I =I16401; $res .= $this->Gui->get($this->block.":sibl_item$IlLLl1I", $IlLLlLl); }$res =$this->Gui->getAbs($this->block.I16402, Array(I16379 => $res) );return $res; }function getPath($Ill11lL, $IIlLlLI =I16358, $IlLLl1l =I16336, $IILLILl =false){ $res =I16336; $splitter =$this->Gui->getAbs($this->block.I16403, I16336); $IlLLl1L =is_array($IlLLl1l); $path =$this->tree->TI11TI1($Ill11lL, 1, $this->PathRootId); if($IlLLl1L){ $IlLLl11 =array(); $IlLLLII =key($IlLLl1l); $IlLLLIl =current($IlLLl1l); foreach( $path as $vid=>$IlLLlLI ){$IlLLl11[$vid] =$IlLLlLI; if($IlLLlLI[$IlLLLII] == $IlLLLIl){ break; }}$path =$IlLLl11; }$path =array_reverse($path, true); foreach( $path as $vid => $IlLLlLI ){if( $IILLILl && empty($IlLLlLI[$IIlLlLI]) ){continue; }$p =Array(); $p[I16390] =$this->tree->TI11TIT($IlLLlLI[I16391]); $p[I16392] =$splitter; if(empty($res)) $p[I16392] =I16336; $p[I16393] =$vid; $p[I16394] =$IlLLlLI[$IIlLlLI]; $IlLLl1I =I16336; if($vid == $Ill11lL) $IlLLl1I =I16401; $res .= $this->Gui->get($this->block.":path_item$IlLLl1I", $p); }$res =$this->Gui->getAbs($this->block.I16404, Array(I16357 => $res) );return $res; }function TTlll1l(&$IlLLLIL, $IlLLLI1, $IlLLLlI, $parentId, $IlLLLll){ $IlLLLIL[I16405] =I16336; $IlLLLIL[I16406] =I16336; if($IlLLLI1 >$this->_tmpSubMenuCommonData[I16407]){ return I16336; }$IlLLLlL =$IlLLLI1-1; $IlLLLl1 =array(); if($IlLLLll[I16378] != $this->_tmpSubMenuCommonData[I16408]){ if(isset($this->_tmpSubMenuCommonData[I16409][$IlLLLI1][$parentId]) && is_array($this->_tmpSubMenuCommonData[I16409][$IlLLLI1][$parentId])) {$IlLLLl1 =$this->_tmpSubMenuCommonData[I16409][$IlLLLI1][$parentId]; }}else return I16336; $IlLLLLI =I16336; foreach($IlLLLl1 as $IlLLLLl =>$IlLLLLL){ $IlLLLIL[I16406] =I16410; $IlLLLL1 =array(); $IlLLLLI .= $this->TTlll1l($IlLLLL1, $IlLLLI1+1, $parentId, $IlLLLLl, $IlLLLLL); $IlLLL1I =I16336; if(mb_strlen($IlLLLLL[I16411]) >4){ $IlLLL1I =I16412; $IlLLLL1[I16411] =$IlLLLLL[I16411]; $IlLLLL1[I16413] =$IlLLLLL[I16413]; $IlLLLL1[I16414] =$IlLLLLL[I16414]; if(mb_strlen($IlLLLL1[I16413]) >4) $IlLLL1l .= I16363.$IlLLLL1[I16413].I16415; }$IlLLLL1[I16392] =$this->_tmpSubMenuCommonData[I16416.$IlLLLI1]; $IlLLLL1[I16378] =$parentId; $IlLLLL1[I16344] =$IlLLLLl; $IlLLLL1[I16358] =$IlLLLLL[I16358]; if($IlLLLLL[I16417]){ $IlLLLL1[I16418] =I16419; $IlLLLL1[I16420] =I16421; $IlLLLL1[I16422] =I16423; }$IlLLLL1[I16424] =$this->tree->TI11TIT($IlLLLLL[I16391]); $IlLLLL1[I16425] =$IlLLLI1-1; if(empty($IlLLLIL[I16405])) $IlLLLL1[I16392] =I16336; $IlLLl1I =I16336; if($IlLLLLl == $this->_tmpSubMenuCommonData[I16426] || isset($IlLLLL1[I16427])){ $IlLLl1I =I16401; $IlLLLIL[I16427] =true; }$IlLLL1L =array($IlLLLlL.I16428.$IlLLl1I, I16428.$IlLLl1I); $IlLLLIL[I16405] .= $this->Gui->getDefPostf($this->MenuBlock.I16429.$this->MenuSubBlock[$IlLLL1I.I16329], $IlLLL1L, $IlLLLL1); }$res =I16336; if(!empty($IlLLLIL[I16405])){ $IlLLL1L =array($IlLLLlL.I16430, I16430); $IlLLLIL[I16405] =$this->Gui->getAbsDefPostf( $this->MenuBlock.I16429.$this->MenuSubBlock[I16329], $IlLLL1L, Array(I16431=>$IlLLLlI, I16378=>$parentId, I16432=>$IlLLLIL[I16405], I16433 => $IlLLLLI, I16425 => $IlLLLI1-1) );$res =$IlLLLIL[I16405]; if ($this->_tmpSubMenuCommonData[I16434]) {unset($IlLLLIL[I16435]); }}return $res; }function TTlll11($IlLLL11){ if(isset($this->IlLLIII[$IlLLL11])){ return $this->IlLLIII[$IlLLL11]; }else{ $IlLL1II =array(); $IlLL1II =$this->tree->TTlll11($IlLLL11); $this->IlLLIII[$IlLLL11] =$IlLL1II; return $IlLL1II; }}function TTll1TT($IlLL1Il=0, $IlLL1IL=0, $IlLL1I1=I16327, $IlLL1lI =false) {$res =Array(); $this->tree->ll1IlLL =true; $this->tree->UseHidden =false; $this->tree->ll1Il1I =false; $this->tree->UseModLinks =true; $this->tree->ll1Il1L =true; $this->tree->ll1Il11 =false; $this->tree->UseScriptLinks =true; $this->tree->ll1ILII =true; $this->_tmpSubMenuCommonData[I16408] =0; $parentId =0; $IlLL1ll =$this->TTlll11($IlLL1IL); if(($IlLL1lL =array_search($IlLL1Il, $IlLL1ll)) !== false){ $parentId =($IlLL1lL >0 ?$IlLL1ll[$IlLL1lL-1] :0); $this->_tmpSubMenuCommonData[I16408] =$parentId; }$IlLL1ll =array_flip($IlLL1ll); unset($IlLL1ll[$parentId], $IlLL1ll[$IlLL1Il]); if($IlLL1I1==I16327 || $IlLL1I1==I16436){ $this->tree->ll1ILll =I16327; $IlLL1l1 =false; $this->_tmpSubMenuCommonData[I16407] =$this->Cms->PManager->GetOption(I16437); $this->_tmpSubMenuCommonData[I16434] =$IlLL1lI; $IlLL1LI =I16336; $IlLL1Ll =I16336; $IlLLL1l =I16336; $splitter =$this->Gui->getAbs($this->MenuBlock.I16429.$this->MenuSubBlock[I16327].I16438, I16336); for($i =1; $i <= $this->_tmpSubMenuCommonData[I16407]; $i++){ $this->_tmpSubMenuCommonData[I16416.$i] =$this->Gui->getAbsDefPostf($this->MenuBlock.I16429.$this->MenuSubBlock[I16329], array(($i-1).I16438, I16438)); }$aMenu =$this->tree->TI11TII($parentId.I16439.$IlLL1Il, 1, true, true); $this->_tmpSubMenuCommonData[I16409] =array(); $IlLL1LL =array_keys($aMenu); for($i =2; $i <= $this->_tmpSubMenuCommonData[I16407]; $i++){ $itemIds =implode(I16439, $IlLL1LL); $IlLL1LL =array(); $IlLL1L1 =(empty($itemIds))? array(): $this->tree->TI11TII($itemIds, 1); foreach($IlLL1L1 as $id => $aItem){ $this->_tmpSubMenuCommonData[I16409][$i][$aItem[I16378]][$id] =$aItem; $IlLL1LL[] =$id; }}foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $this->_tmpSubMenuCommonData[I16426] =$IlLL1IL; $IlLL1Ll .= $this->TTlll1l($v, 2, 0, $vid, $IlLLlLI); if(isset($v[I16427])){ $IlLL11I =$vid; }$IlLLL1I =I16336; if(mb_strlen($IlLLlLI[I16411])>4){ $IlLLL1I =I16412; $v[I16411] =$IlLLlLI[I16411]; $v[I16413] =$IlLLlLI[I16413]; $v[I16414] =$IlLLlLI[I16414]; if(mb_strlen($v[I16413])>4) $IlLLL1l .= I16363.$v[I16413].I16415; }$v[I16392] =$splitter; $v[I16344] =$vid; $v[I16358] =$IlLLlLI[I16358]; $v[I16424] =$this->tree->TI11TIT($IlLLlLI[I16391]); if($IlLLlLI[I16417]){ $v[I16418] =I16419; $v[I16420] =I16421; $v[I16422] =I16423; }if(empty($IlLL1LI)) $v[I16392] =I16336; $IlLLl1I =I16336; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I16401; if(EventApplyVars($this->Gui, I16440, $v)){ $IlLL1LI .= $this->Gui->get($this->MenuBlock.I16429.$this->MenuSubBlock[$IlLLL1I.I16327]."_item$IlLLl1I", $v); }}if(!empty($IlLLL1l)){ $jsdata =array(I16441=>mb_substr($IlLLL1l, 0, -1)); $this->Gui->addHtmlScript($this->Gui->get($this->MenuBlock.I16442, $jsdata)); }$res[I16443] =$this->Gui->getAbs($this->MenuBlock.I16429.$this->MenuSubBlock[I16327].I16430, Array(I16432=>$IlLL1LI)); $res[I16444] =$IlLL1Ll; }if($IlLL1I1==I16332 || $IlLL1I1==I16436){ $this->tree->ll1ILll =I16332; $IlLL11l =I16336; $splitter =$this->Gui->getAbs($this->MenuBlock.I16429.$this->MenuSubBlock[I16332].I16438, I16336); $aMenu =$this->tree->TI11TIl(1); foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $v[I16392] =$splitter; $v[I16344] =$vid; $v[I16358] =$IlLLlLI[I16358]; $v[I16424] =$this->tree->TI11TIT($IlLLlLI[I16391]); if($IlLLlLI[I16417]){ $v[I16418] =I16419; $v[I16420] =I16421; $v[I16422] =I16423; }if(empty($IlLL11l)) $v[I16392] =I16336; $IlLLl1I =I16336; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I16401; if(EventApplyVars($this->Gui, I16445, $v)){ $IlLL11l .= $this->Gui->get($this->MenuBlock.I16429.$this->MenuSubBlock[I16332]."_item$IlLLl1I", $v); }}$res[I16446] =$this->Gui->getAbs($this->MenuBlock.I16429.$this->MenuSubBlock[I16332].I16430, Array(I16432=>$IlLL11l)); }if($IlLL1I1==I16333 || $IlLL1I1==I16436){ $this->tree->ll1ILll =I16333; $IlLL11L =I16336; $splitter =$this->Gui->getAbs($this->MenuBlock.I16429.$this->MenuSubBlock[I16333].I16438, I16336); $aMenu =$this->tree->TI11TIl(1); foreach($aMenu as $vid =>$IlLLlLI){ $v =Array(); $IlLL11I =$IlLL1IL; $v[I16392] =$splitter; $v[I16344] =$vid; $v[I16358] =$IlLLlLI[I16358]; $v[I16424] =$this->tree->TI11TIT($IlLLlLI[I16391]); if($IlLLlLI[I16417]){ $v[I16418] =I16419; $v[I16420] =I16421; $v[I16422] =I16423; }if(empty($IlLL11L)) $v[I16392] =I16336; $IlLLl1I =I16336; if($vid == $IlLL11I || isset($IlLL1ll[$vid])) $IlLLl1I =I16401; if(EventApplyVars($this->Gui, I16447, $v)){ $IlLL11L .= $this->Gui->get($this->MenuBlock.I16429.$this->MenuSubBlock[I16333]."_item$IlLLl1I", $v); }}$res[I16448] =$this->Gui->getAbs($this->MenuBlock.I16429.$this->MenuSubBlock[I16333].I16430, Array(I16432=>$IlLL11L)); }return $res; }function TTll1TI($IlLL111, $pageId, $modName, $IlL1III, &$IlL1IIl, $IIILLIL =I16337){ global $lang; $found =true; $IlL1IIl =Array(); $aVirtualLinks =$this->Cms->Core->GetModProperty(I16449, I16450); if(isset($aVirtualLinks[$modName])) {$IlL1IIL =I16336; $masterModuleName =$modName; $IlL1II1 =$pageId; if(mb_substr($IlL1III, -1) != I16451){ $IlL1III .=I16451; }$checkScriptLink =ltrim(mb_substr($IlLL111, mb_strlen($IlL1III)), I16451); $vScriptLink =$IlLL111; if(mb_substr($checkScriptLink, -1) != I16451){ $checkScriptLink .=I16451; }$aUsedVirtualModules =$this->Cms->Core->GetModOption(I16449, I16452); $aVirtualModules =array_intersect(array_keys($aVirtualLinks[$masterModuleName]), $aUsedVirtualModules); foreach($aVirtualModules as $IlL1IlI) {if($this->Cms->Core->IsFrontAllowed($IlL1IlI)) {$link =$aVirtualLinks[$masterModuleName][$IlL1IlI]; if(mb_substr($link, -1) != I16451){ $link .=I16451; }if($checkScriptLink == $link) {$IlL1IIL =$IlL1IlI; break; }}}if($IlL1IIL != I16336 && $IlL1IIL != $IIILLIL) {$IlL1Ill =$this->tree->UseHidden; $IlL1IlL =$this->tree->ll1Il1L; $this->tree->UseHidden =false; $this->tree->ll1Il1L =false; $IlL1Il1 =$this->TTllllT($IlL1IIL, Array(I16391, I16453)); $this->tree->UseHidden =$IlL1Ill; $this->tree->ll1Il1L =$IlL1IlL; if($IlL1Il1 !== false) {if(!$this->isLinkConflictsMode && $IlLL111 != $IlL1Il1[I16391]) {$found =false; }if($IlL1Il1[I16453] >0) {$IlL1II1 =$IlL1Il1[I16344]; if(!$this->isLinkConflictsMode) {$vScriptLink =$IlL1Il1[I16391]; }}}if($found) {$IlL1IIl =Array( I16344 => $IlL1II1, I16454 => $IlL1IIL, I16391 => $vScriptLink, );}}}return $found; }function DetectPageByLink($IlLL111, $IlL1ILI =false, $IlL1ILl =false, $IIILLIL =I16336){ global $lang; $res =Array(); if(!empty($IlLL111)){ $res =$this->tree->TI1l1l1($IlLL111, $IlL1ILI, $IlL1ILl); if(!$this->isLinkConflictsMode && isset($res[$lang])) {$IIILLlL =Array(); if($this->TTll1TI($IlLL111, $res[$lang][I16344], $res[$lang][I16454], $res[$lang][I16391], $IIILLlL, $IIILLIL)){ $res[$lang] =$IIILLlL +$res[$lang]; }else {$res =Array(); }}}return $res; }function DetectPageById($cId){ $res =Array(); if(isset($cId) && $cId>0){ $res =$this->tree->TI1l11T($cId); }else{ trigger_error("Wrong page Id [$cId]...",E_USER_WARNING); }return $res; }function TTll1Tl($Ill11lL){ $res =I16336; $sql ="select script_link from cms_pages where id='$Ill11lL'"; $this->db->query($sql); if($this->db->next_record()){ $res =$this->tree->TI11TIT($this->db->Record[I16391]); }return $res; }function TTll1T1($IlLL111){ $res =I16336; $res =$this->tree->TI11TIT($IlLL111); return $res; }function TTll1IT($Ill11lL){ $res =false; $IlL1ILL =$this->tree->ll1ILl1; $IlL1IL1 =$this->tree->ll1Il11; $IlL1I1I =$this->tree->ll1ILII; $this->tree->ll1ILII =false; $this->tree->ll1Il11 =false; $this->tree->ll1ILl1 =true; $aPrev =$this->tree->TI11T1I($Ill11lL); if($aPrev!==false){ $res =$aPrev; $res[I16455] =$this->tree->TI11TIT($aPrev[I16391]); }$this->tree->ll1ILl1 =$IlL1ILL; $this->tree->ll1Il11 =$IlL1IL1; $this->tree->ll1ILII =$IlL1I1I; return $res; }function TTll1II($Ill11lL){ $res =false; $IlL1ILL =$this->tree->ll1ILl1; $IlL1IL1 =$this->tree->ll1Il11; $IlL1I1I =$this->tree->ll1ILII; $this->tree->ll1ILII =false; $this->tree->ll1Il11 =false; $this->tree->ll1ILl1 =true; $aNext =$this->tree->TI11T1T($Ill11lL); if($aNext!==false){ $res =$aNext; $res[I16455] =$this->tree->TI11TIT($aNext[I16391]); }$this->tree->ll1ILl1 =$IlL1ILL; $this->tree->ll1Il11 =$IlL1IL1; $this->tree->ll1ILII =$IlL1I1I; return $res; }function TTll1Il($Ill11lL, $IlL1I1l =0){ $res =false; $data =array(); $IlL1I1L =false; if(!isset($this->LayBlocksCount) || $this->LayBlocksCount<1){ trigger_error(I16456, E_USER_ERROR); }$NONE =false; $found =$this->tree->TI1l1lI(($IlL1I1l)?$IlL1I1l:$Ill11lL, $NONE); if(!$found && $this->ReturnDefault){ $Ill11lL =$this->DefaultId; }$sql =I16457. I16339. I16346.$Ill11lL.I16363; $IlL1I11 =&$this->db->select($sql); if($IlL1I11->nextRecord() && ($IlL1I11->Record[I16458]>0)) {$IlL1lII =0; if(isset($this->Cms->Vars[I16458]) && $this->Cms->Vars[I16458] >0) {$IlL1I1L =true; $this->CachedPageLayoutId =$this->Cms->Vars[I16458]; $IlL1lII =$IlL1I11->Record[I16458]; }else {$this->CachedPageLayoutId =$IlL1I11->Record[I16458]; }$this->CachedPageHTMLHeadTail =$IlL1I11->Record[I16459]; $this->CachedPageId =$Ill11lL; $this->CachedPageBody =$IlL1I11->Record[I16387]; $IlL1lIl =I16336; for($i=1; $i <= $this->LayBlocksCount; $i++) {$IlL1lIl .= I16460.$i.I16461; if($IlL1I1L){ $IlL1lIl .= I16460.$i.I16462; }}$sql =I16463.$IlL1lIl.I16464; $IlL1lIL =&$this->db->select($sql.$this->CachedPageLayoutId.I16363); $found =false; if($IlL1lIL->nextRecord()){ $found =true; }elseif($IlL1lII) {$IlL1lIL =&$this->db->select($sql.$IlL1lII.I16363); if($IlL1lIL->nextRecord()){ $found =true; }}if($found) {for($i=1; $i <= $this->LayBlocksCount; $i++) {if($IlL1lIL->Record[I16465.$i.I16461] != I16336) {$this->_aUsedLayoutBlocks[] =$i; }}$this->CachedPageLayoutBody =$IlL1lIL->Record[I16466]; $this->CachedPageLayoutCssName =$IlL1lIL->Record[I16467]; $this->CachedLayoutHTMLHeadTail =$IlL1lIL->Record[I16459]; foreach($this->_aUsedLayoutBlocks as $IlL1lI1){ $this->CachedPageBlocks[$IlL1lI1] =$IlL1I1L ?$IlL1lIL->Record[I16465.$IlL1lI1.I16462] :$IlL1I11->Record[I16465.$IlL1lI1.I16462]; }$res =true; }else{ trigger_error(I16468.$this->CachedPageLayoutId."] for page id=[$Ill11lL]...", E_USER_WARNING); }}else{ trigger_error("Init layouts: page not found or layout is undefined. Search for default Layout (request for page id=[$Ill11lL])...", E_USER_WARNING); $sql =I16469.$this->tree->lang.I16363; $IlL1lIL =&$this->db->select($sql); if($IlL1lIL->next_record()){ $vRec =$IlL1lIL->Record; $this->CachedPageLayoutId =$vRec[I16344]; for($i=1; $i<=$this->LayBlocksCount; $i++){ if($IlL1lIL->Record[I16465.$i.I16461] != I16336) {$this->CachedPageBlocks[$i] =$IlL1lIL->Record[I16465.$i.I16462]; $this->_aUsedLayoutBlocks[] =$i; }}$this->CachedPageLayoutBody =$IlL1lIL->Record[I16466]; $this->CachedPageLayoutCssName =$IlL1lIL->Record[I16467]; $this->CachedLayoutHTMLHeadTail =$IlL1lIL->Record[I16459]; $res =true; }else{ trigger_error("Default Layout is not found (request for page id=[$Ill11lL])...", E_USER_WARNING); }}if($IlL1I1l){ $sql =I16470. I16339. I16346.$IlL1I1l.I16363; $this->db->query($sql); if($this->db->next_record()){ $this->CachedPageId =$IlL1I1l; $this->CachedPageBody =str_replace(I16471, $this->db->Record[I16387], $this->CachedPageBody); }}return $res; }function TTll1I1(){ $data =array(); if(!isset($this->LayBlocksCount) || $this->LayBlocksCount<1){ trigger_error(I16456, E_USER_ERROR); }$data[I16472] =$this->CachedPageBody; $data[I16393] =$this->CachedPageId; $data[I16473] =$this->CachedPageLayoutId; $data[I16474]= $this->CachedPageLayoutBody; $data[I16475] =$this->CachedPageLayoutCssName; $data[I16476] =$this->CachedPageBlocks; $data[I16459] =$this->CachedLayoutHTMLHeadTail .$this->CachedPageHTMLHeadTail; $data[I16477] =$this->_aUsedLayoutBlocks; return $data; }function TTll1lT(&$IlL1llI) {$this->_aUsedLayoutBlocks =&$IlL1llI; }function TTll1lI(&$frn, &$ModuleHtml, &$IlL1lll, &$HtmlBody){ require_once($GLOBALS[I16478].I16479); $IlL1llL =array(); if(!empty($ModuleHtml[I16387])){ $frn->Gui->AddText(I16387, $frn->Gui->getAbs(I16480, I16432, $ModuleHtml[I16387])); $IlL1ll1 =$frn->Gui->getAbs(I16481, I16432, $HtmlBody); if($frn->Gui->isVarDefined(I16387, I16482)==1){ $IlL1llL[I16483] =$frn->Gui->getAbs(I16387, I16482, $IlL1ll1); }else{ $IlL1llL[I16483] =$frn->Gui->getAbs(I16387).$IlL1ll1; }}else{ $IlL1llL[I16483] =$frn->Gui->ParseText($frn->Gui->getAbs(I16480, I16432, $HtmlBody)); }foreach($this->_aUsedLayoutBlocks as $IlL1lLI) {$IlL1lLl =I16465.$IlL1lLI.I16462; $IlL1llL[$IlL1lLl] =$frn->Gui->ParseText($IlL1lll[I16476][$IlL1lLI]); }$frn->Gui->addStyle($IlL1lll[I16475]); $frn->Gui->setHeaderCode($IlL1lll[I16459]); $IlL1llL[I16484] =$frn->Gui->header(); $frn->Core->TTlllTT($IlL1llL[I16485]); $IlL1llL[I16486] =$frn->Gui->footer(); if($frn->Gui->ForceExport){ $IlL1lLL =array(I16487=>I16487, I16327=>I16327); $IlL1lL1 =I16488; for($i=1; $i<=$this->LayBlocksCount; $i++){ $IlL1lL1 .= I16460.$i.I16461; $IlL1lLL[I16465.$i] =I16465.$i; }$sql =I16489.$IlL1lL1.I16464.$IlL1lll[I16473].I16490.$this->tree->lang.I16363; $this->db->query($sql); if($this->db->next_record()){ $vRec =&$this->db->Record; if(!empty($vRec[I16491])){ $IlL1lLL[I16487] =$vRec[I16491]; }if(!empty($vRec[I16358])){ $IlL1lLL[I16327] =$vRec[I16358]; }for($i=1; $i<=$this->LayBlocksCount; $i++){ $IlL1lLl =I16465.$i.I16461; if(!empty($vRec[$IlL1lLl])){ $IlL1lLL[I16465.$i] =$vRec[$IlL1lLl]; }}}$IILLl1I =array(I16492, I16493); foreach($IlL1llL as $vName=>$vData){ if(mb_strpos($vName, I16494)!==false){ $IlL1l1I =str_replace(I16462, I16336, $vName); if($IlL1l1I==I16495) $IlL1l1I =I16487; $IlL1l1l =$IlL1lLL[$IlL1l1I]; $IILLl1l =array($IlL1l1I, $vData); $IlL1llL[$vName] =str_replace($IILLl1I, $IILLl1l, TlT1TII($IlL1l1I, $IlL1l1l, I16493)); }}$IILLl1I =array(I16492); $IILLl1l =array(I16496); $IlL1l1L =TlT1TT1(I16467, $IlL1lll[I16475]); if(!empty($IlL1lll[I16459])) {$IlL1llL[I16484] =str_replace( $IlL1lll[I16459], TlT1TT1(I16497, I16337) .$IlL1lll[I16459] .TlT1TIT(I16497), $IlL1llL[I16484] );}$IlL1llL[I16484] =$IlL1l1L.$IlL1llL[I16484].str_replace($IILLl1I, $IILLl1l, TlT1TT1(I16496, $IlL1lLL[I16327])); $IlL1llL[I16486] =str_replace($IILLl1I, $IILLl1l, TlT1TIT(I16496)).$IlL1llL[I16486]; }$Content =$frn->Gui->ParseText($IlL1lll[I16474], $IlL1llL); return $Content; }public function processRedirection($pageId, $IlL1l11){ $sql =I16498 .(int)$pageId; $record =$this->db->getRecord($sql); if($record && $record[I16499]){ $this->Cms->Core->Cache->pageIsComplitedForSave =true; $code =(int)$record[I16499]; if($code != 404){ $IlL1l11->DelHeader(I16500); $IlL1l11->DelHeader($GLOBALS[I16501].I16502); }switch($code){ case 301: case 302: $status =$code == 301 ?I16503 :I16504; $IlL1l11->AddHeader($GLOBALS[I16501] .I16505 .$code .I16505 .$status, true); $pos =mb_strpos($record[I16506], I16507); if($pos !== 0 && !isFullLink($record[I16506])){ $record[I16506] =I16507 .$record[I16506]; }$IlL1l11->AddHeader(I16508 .$record[I16506], true); break; case 503: $IlL1l11->AddHeader($GLOBALS[I16501] .I16509, true); $IlL1l11->AddHeader(I16510, true); global $frn; $lang =$frn->Gui->parseLangFile(I16511); echo $lang[I16512]; break; case 404: list($IlL1LII, $activeModule) =cmsHandle404(false); if($IlL1LII || $activeModule == I16397){ return; }$this->Cms->Core->Cache->pageIsComplitedForSave =true; $IlL1l11->DelHeader(I16500); $IlL1l11->DelHeader($GLOBALS[I16501].I16502); $IlL1l11->AddHeader($GLOBALS[I16501] .I16513, true); $IlL1l11->AddHeader(I16514, true); global $frn; $lang =$frn->Gui->parseLangFile(I16511); echo $lang[I16515]; break; default: trigger_error(I16516 .$code, E_USER_ERROR); }$IlL1l11->SetSkip200Status(true); echo I16505; $IlL1l11->Out(); $this->Cms->Core->Cache->markPageIsSkipped(); die; }}}