<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       24058 xkqwgqrmpgzunutinrztminqiimsiygpkntpxyiziipgznwiykmlmukznmtunluzmxuupnir
 */ ?><?php foreach(array(15145=>"",15146=>"nHt",15147=>'Hn|DQZrWO|WHIIZnS',15148=>"/",15149=>"?<<ZnS<<?",15150=>"~*;?",15151=>"<<",15152=>"?<<nHt<<?",15153=>"<<vZJuQ<<",15154=>'',15155=>'~<<}ZnS_Hr_nHt{<<~',15156=>'?',15157=>'~\S)1!(~',15158=>'[{',15159=>"DQZrWO",15160=>"'?zNs?JZnP='",15161=>'DQZrWO|OZDO',15162=>'!',15163=>"MD|Wut",15164=>"?",15165=>"?hR?}f",15166=>"{",15167=>":'") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} class searchCmd {public $lLIlL1I; public $lLIlL1l; public $Ignore; public $lLIlL1L; public $lLIlL11; public $lLIl1II; public $Allowed; public $Quote; public $Error; public $MinLen; public $StorageLimit =20; public $ILIII1L ="mb"; function searchCmd(&$cms, $lLIl1Il ='search') {$this->lLIlL1L =I15145; $this->lLIlL11 =Array("and"=>"and", "or"=>"or", I15146=>I15146); $this->lLIl1II =Array("and"=>"and", "or"=>"or", I15146=>I15146); $this->Allowed ="_\*a-zA-ZёЁа-яА-Я0-9.\-"; $this->Quote ="\""; $this->Error =true; $lLIl1IL =&$cms->Core->GetModule($lLIl1Il); if ($lLIl1IL->issetOption('min_len')) {$this->MinLen =$lLIl1IL->GetOption('min_len'); }else {$this->MinLen =3; }$aEvent =array('oCommand' => $this); AMI_Event::fire(I15147, $aEvent, $lLIl1Il); }function TlTIIT1($cmd, &$pos, $stat) {$lLIl1I1 =0; if(mb_strlen($cmd) >= mb_strlen($stat)) {if(mb_strpos($cmd, $stat, $pos) === $pos && in_array(mb_substr($cmd, $pos +mb_strlen($stat), 1), Array(" ", "(", $this->Quote))) {$lLIl1I1 =$pos +mb_strlen($stat); }}return $lLIl1I1; }function parseCmd($cmd, $min_len =0) {$cmd =str_replace(array("+", "|", I15148), array(" and ", " or ", " not "), $cmd); if($min_len <= 0) {$min_len =$this->MinLen; }$cmd =stripslashes(unhtmlentities($cmd)); $search =$cmd; $lLIl1lI =0; $this->lLIlL1L =I15145; $this->lLIlL1I =Array(); $this->Ignore =Array(); $this->lLIlL1l =Array(); $ind =0; $lLIl1ll =true; $lLIl1lL =true; $error =false; $pos =0; while($pos <mb_strlen($cmd)) {$c =mb_substr($cmd, $pos, 1); switch ($c) {case '(': if(!$lLIl1ll) {$this->lLIlL1L .= I15149; }$this->lLIlL1L .= '('; $lLIl1lI++; $lLIl1ll =true; $lLIl1lL =true; break; case ')': if($lLIl1lI >0) {$lLIl1lI--; if($lLIl1ll) {$error =true; $this->lLIlL1L .= " ##word## "; }$this->lLIlL1L .= ')'; $lLIl1ll =false; }break; case $this->Quote: $lLIl1l1 =mb_strpos(mb_substr($cmd, $pos +1), $this->Quote); if($lLIl1l1 === false) {$found =mb_substr($cmd, $pos +1); $pos =mb_strlen($cmd); }else {$found =mb_substr($cmd, $pos +1, $lLIl1l1); $pos += $lLIl1l1 +1; }array_push($this->lLIlL1l, $ind); if(!$lLIl1ll) {$this->lLIlL1L .= I15149; }$found =preg_replace(I15150.$this->Allowed."]+/u", '', $found); $found =preg_replace("/ +/", ' ', $found); $this->lLIlL1I[$ind] =$found; $this->lLIlL1L .= I15151.$ind++.I15151; $lLIl1ll =false; $lLIl1lL =false; break; case ' ': break; default: if(!$lLIl1ll) {if (($lLIl1I1 =$this->TlTIIT1($cmd, $pos, $this->lLIlL11["and"])) >0) {$this->lLIlL1L .= I15149; $pos =$lLIl1I1 -1; $lLIl1ll =true; continue; }elseif (($lLIl1I1 =$this->TlTIIT1($cmd, $pos, $this->lLIlL11["or"])) >0) {$this->lLIlL1L .= " ##or## "; $pos =$lLIl1I1 -1; $lLIl1ll =true; continue; }}if (($lLIl1I1 =$this->TlTIIT1($cmd, $pos, $this->lLIlL11[I15146])) >0) {if(!$lLIl1ll) {$this->lLIlL1L .= I15149; }$this->lLIlL1L .= I15152; $pos =$lLIl1I1 -1; $lLIl1ll =true; continue; }if(preg_match("/^[".$this->Allowed."]+/u",mb_substr($cmd, $pos),$match)) {$found =$match[0]; $pos += mb_strlen($found) -1; if(mb_strlen($found) >= $min_len) {if(!$lLIl1ll) {$this->lLIlL1L .= I15149; }$this->lLIlL1I[$ind] =$found; $this->lLIlL1L .= I15151.$ind++.I15151; $lLIl1ll =false; $lLIl1lL =false; }else {array_push($this->Ignore, $found); if(!$lLIl1lL) {$entry =I15151.($ind-1).I15151; $lLIl1LI =mb_strpos($this->lLIlL1L, $entry); $this->lLIlL1L =mb_substr($this->lLIlL1L, 0, $lLIl1LI +mb_strlen($entry) +1); $lLIl1ll =false; }}}}$pos++; }if($lLIl1ll) {$error =true; $this->lLIlL1L .= " ##word## "; }for(;$lLIl1lI >0; $lLIl1lI--) {$this->lLIlL1L .= ')'; }$this->Error =$error; return !$error; }function TlTIIIT($input) {return mb_strtolower($input); }function TI1TIlT($value =I15153, $lLIl1Ll =false, $lLIl1LL =false, $lLIl1L1 =false) {$sql =$this->lLIlL1L; if((!$this->Error || $lLIl1LL) && (sizeof($this->lLIlL1I) >0)) {for($i =sizeof($this->lLIlL1I) -1; $i >=0; $i--) {$val =str_replace(I15153, $lLIl1L1 ?str_replace(array("*"), array("%"), $this->TlTIIIT($this->lLIlL1I[$i])) :$this->TlTIIIT($this->lLIlL1I[$i]), $value); if($lLIl1Ll && in_array($i, $this->lLIlL1l)) {$sql =str_replace("##$i##", $this->Quote.$val.$this->Quote, $sql); }else {$sql =str_replace("##$i##", $val, $sql); }}foreach(Array("and", "or", I15146) as $key => $val) {$sql =str_replace("##$val##", $this->lLIl1II[$val], $sql); }}else {$sql =I15154; }return $sql; }function getSuperSQL($cFields =false, $mode ='like'){ $sql =I15145; $count =0; $lLIl11I =false; $lLIl11l =$this->lLIlL1L; if($mode == 'fulltext'){ $lLIl11L =I15154; $lLIl11l =str_replace(array('(', ')'), I15154, $lLIl11l); $lLIl111 =preg_split(I15155, $lLIl11l, -1, PREG_SPLIT_DELIM_CAPTURE); $lLILIII =sizeof($lLIl111); $lLILIIl =true; $lLILIIL =false; for($i =0; $i <$lLILIII; $i++){ $lLILII1 =trim($lLIl111[$i]); if(empty($lLILII1) || $lLILII1 == 'and'){ continue; }else if($lLILII1 == 'or'){ $lLIl11L .= ')'; $lLILIIl =true; continue; }else if($lLILII1 == 'not'){ $lLILIIL =true; continue; }$lLIl11L .= $i == 0 ?I15154 :I15156; if($lLILIIl){ $lLIl11L .= '('; $lLILIIl =false; }$lLIl11L .= ($lLILIIL ?'-' :'+') .trim($lLIl111[$i]); $lLILIIL =false; }if(!empty($lLIl11L)){ $lLIl11L .= ')'; }$lLIl11l =$lLIl11L; }foreach(explode(I15151, $lLIl11l) as $item){ if($count++ %2 == 0) $sql .= $item; else{ if(preg_match(I15157, $item)){ $item =intval($item); if(isset($this->lLIlL1I[$item])){ if($mode == 'fulltext'){ if(in_array($item, $this->lLIlL1l)){ $sql .= '>"' .$this->lLIlL1I[$item] .'"'; }else{ $sql .= '(>' .$this->lLIlL1I[$item] .I15156 .$this->lLIlL1I[$item] .I15158; }}else{ if($lLIl11I){ $addon ="OR"; $sql .= "(0"; }else{ $addon ="OR"; $sql .= "(0"; }if($cFields === false){ for($i =1; $i <= 3; $i++){ $sql .= $this->TlTIIIl(I15159, "f".$i, $addon, $this->TlTIIIT($this->lLIlL1I[$item])); }}else if(is_array($cFields) && sizeof($cFields) >0){ foreach($cFields as $key => $value){ $sql .= $this->TlTIIIl(I15159, $value, $addon, $this->TlTIIIT($this->lLIlL1I[$item])); }}$sql .= ")"; }}}else if($mode != 'fulltext'){ if($item == I15146) $lLIl11I =true; $sql .= $item; }}}if($mode == 'fulltext'){ $sql ='MATCH(words) AGAINST (\'' .$sql .'\' IN BOOLEAN MODE)'; }return $sql; }function TlTIIII(&$cms, &$db, $query, $ILILLIl, $frontLink, $lLILIlI) {$GLOBALS['ILILLII'] =true; $ILILLIl =intval($ILILLIl); $frontLink =preg_replace('/&(x|y)=\d+/i', I15154, $frontLink); if(mb_strlen($query) >255) {$query =mb_substr($query, 0, 255); $ILILLIL =1; }else {$ILILLIL =0; }$query =addslashes($query); $ILILLI1 =md5($frontLink); $sql ="SELECT id FROM cms_search_history WHERE search_hash='".$ILILLI1.I15160.$cms->lang_data."'"; $db->query($sql); if($db->next_record()) {$sql ="UPDATE cms_search_history SET quantity=quantity+1, update_date=NOW(), count_pages='".$ILILLIl."' WHERE id=".$db->Record["id"]; $db->query($sql); }else {$asql =Array( I15161 => $ILILLI1, "query"=>$query, "quantity"=>1, "count_pages"=>$ILILLIl, 'pages' => addslashes(implode(I15162, $lLILIlI)), "create_date"=>"=|NOW()", "update_date"=>"=|NOW()", I15163=>$ILILLIL, 'front_link' => addslashes($frontLink), "lang"=>$cms->lang_data, );$sql =$db->GenInsertSQL("cms_search_history", $asql); $db->query($sql); }}function TT1ITTl(&$db){ $ILIlLIl =TlT1lIT($db, 'cms_search_history', $this->ILIII1L, $this->StorageLimit, 0.05); if($ILIlLIl >0){ $db->query("OPTIMIZE TABLE cms_search_history"); $ILIlLIl =TlT1lIT($db, 'cms_search_history', $this->ILIII1L, $this->StorageLimit, 0.05); if($ILIlLIl >0){ $sql ="DELETE FROM cms_search_history ". "ORDER BY DATE_FORMAT('Y-m-d', update_date) ASC ". "LIMIT ".intval($ILIlLIl); $db->query($sql); }}}function TlTIIIl($cType, $lLILIll, $lLILIlL, $lLILIl1 =I15145){ $sql =I15145; $lLILILI =array(I15164, ",", "-"); switch($cType){ case "rel": $sql .= "("; foreach($lLILILI as $delim) $sql .= I15165.$lLILIll." LIKE BINARY '%".$delim."##value##%')"; if(mb_strlen($sql) >0) $sql =mb_substr($sql, 5); $sql ="(".$this->TI1TIlT("(".$sql.I15166, false, false, true).") * ".$lLILIlL; break; case I15159: foreach($lLILILI as $delim) $sql .= I15164.$lLILIlL.I15164.$lLILIll." LIKE BINARY '%".$delim.str_replace(array("*"), array("%"), $lLILIl1).I15167; break; }return $sql; }}?>