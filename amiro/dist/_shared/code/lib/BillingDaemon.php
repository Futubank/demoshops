<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       22803 xkqwixliugtxrypqkripgspilpxwnpknlxnkkmiwpiwypsqilmpiunrwuxsqnilzitllpnir
 */ ?><?php foreach(array(19392=>'wjzddqd|gzTo',19393=>'iHSuJQoHDtTrZffMW`GOG',19394=>'iHSuJQoHDtUDQrD`GOG',19395=>'iHSuJQoHDtgZBIQntD`GOG',19396=>'iHSuJQoHDtgZBIQntDoMDtHrB`GOG',19397=>"dUdgqNs|gqRmhs",19398=>"+4?CQQKD",19399=>'FzTzj',19400=>'DtZtuD',19401=>'SHIZMn',19402=>'ZIHunt',19403=>'JZnP',19404=>'IHY|GOHnQ',19405=>'tQJ|fHrIZttQS%',19406=>'?11%00',19407=>'did%',19408=>'|DuYLQWt',19409=>"wjzddqd|gzTo",19410=>'Jj1mJm1',19411=>'MS|uDQr',19412=>'YMJJ|tQDt|IHSQ',19413=>"jhp|gzTo",19414=>'BQD',19415=>'GOG',19416=>'MnDtZJJQS|JZnPD',19417=>"\n\n",19418=>'ZIHunt|IHntO',19419=>'DtZrt|SZtQ',19420=>'SZMJB',19421=>'trZf|EuHtZ',19422=>'trZf|ZIHunt',19423=>'!?Wur%?',19424=>'trZf|GrMWQ',19425=>"t=",19426=>"?StH=",19427=>'rQIMnS|GQrMHS',19428=>'rQIMnS',19429=>"?rS=",19430=>"?DS=",19431=>"?Jr=",19432=>'DuDGQnS',19433=>'WOZnPQS|YB',19434=>"RQJHZSMnP?OttGS") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){header('HTTP/1.0 403 Forbidden');die('Forbidden, invalid URL! '.__FILE__.' at '.__LINE__);} require_once $GLOBALS['CLASSES_PATH'] .'CMS_Member.php'; require_once $GLOBALS[I19392] .'SiteManager.php'; require_once $GLOBALS[I19392] .I19393; require_once $GLOBALS[I19392] .I19394; require_once $GLOBALS[I19392] .I19395; require_once $GLOBALS[I19392] .I19396; require_once $GLOBALS[I19392] .'Mailer.php'; require_once $GLOBALS[I19392] .'WZDaemon.php'; require_once 'mainsms.class.php'; define(I19397,"+2 weeks"); define("DELETE_PERIOD","+2 months"); define("REMIND_PERIOD",I19398); define("LOG_TO_FILE",true); function _error($msg,$type='WARN') {global $LOG_PATH,$adm; $str =DateTools::toMysqlDate(time()); $str .= " $type: $msg\n"; if(LOG_TO_FILE && ($f=@fopen($LOG_PATH."billing_daemon.log","a"))) {fputs($f,$str); fclose($f); }echo $str; flush(); if($type==I19399) {exit; }}function _log($msg,$obj=false) {_error($msg,'LOG'); if($obj!==false) _d($obj); }function TlTlII1($tstamp) {return date("d",$tstamp); }function TlTlIlT($tstamp) {return date("m",$tstamp); }function TlTlIlI($tstamp) {return date("Y",$tstamp); }function TlTlIll($tstamp) {return DateTools::TT1lI1T(TlTlIlT($tstamp),TlTlIlI($tstamp)); }function TlTlIl1($t,$days=1) {if($days>0) $days ="+$days"; return strtotime("$days day",$t); }function TITTll1(&$account,$type,$t,$date) {global $api, $adm,$DFMT,$db,$ILLLlIl,$lL1IlIL; if ($account[I19400] != 'active' && $type != 'delete'){ return; }require_once($GLOBALS["FUNC_INCLUDES_PATH"]."func_format.php"); $member =CMS_Member::getInfo($account[I19401],$account['username']); TlITllI('close',$account[I19401]); $III1LlI =array (I19401=>$account[I19401], 'curdate'=>date($DFMT,$t), 'amount'=>FormatMoney($adm,$account[I19402],$lL1IlIL,2,2,true,false), 'amount_num'=>FormatMoney($adm,$account[I19402],$lL1IlIL,2,2,false,false), 'amount_min'=>FormatMoney($adm,$account['amount_min'],$lL1IlIL,2,2,true,false), 'date'=>date($DFMT,$date) );$lILl11I =isset($member[I19403]) ?$member[I19403] :'en'; $gui =&$adm->Gui; $tpl ='mail_' .$lILl11I .':'; $lILl11l =$account['ext_info'][I19404]; if($api && !empty($lILl11l)){ _log('tel_orig:'.$lILl11l); $lILl11l ='7'.preg_replace('/(\A8)?(\+7)?(\D)?/i', '', $lILl11l); _log(I19405.$lILl11l); }if($api && !empty($lILl11l)){ $lILl11L =$gui->get($tpl .'sms_' .$type .'_body', $III1LlI); $price =$api->TlT1llI($lILl11l, $lILl11L );$lILl111 =$api->TlT1lll ($lILl11l );if( $lILl111 && ($price <2) ){$api->TlT1lIl($lILl11l ,$lILl11L, 'Amiro.CMS', $III1LlI['curdate'].I19406); $response =$api->getResponse ();$result =$api->TTTII1T ($response ['messages_id' ]);foreach ($result as $lILLIII => $status ){$III1LlI["sms_status"] ="phone: ".$lILl11l." status: " .$status; _log(I19407.$III1LlI["sms_status"]); }}else{ _log('SMS NOT SENT ( tel_info:'.$lILl111.' price:'.$price.')'); }}$III1LlL =$gui->get($tpl .$type .I19408, $III1LlI); $III1LlI['subject'] =$III1LlL; $mbody =$gui->get($tpl .'header', $III1LlI); $mbody .= $gui->get($tpl .$type .'_body', $III1LlI); $mbody .= $gui->get($tpl .'footer', $III1LlI); require_once($GLOBALS[I19409]."Mailer.php"); $oMail =new Mailer(); $oMail->SenderAddress =$adm->Core->GetOption('company_email'); $oMail->SenderName =$adm->Core->GetOption("company_name"); $oMail->Subject =$III1LlL; $oMail->Body =$mbody; $oMail->BodyFormat ="html"; $oMail->Prepare(); if($GLOBALS[I19410]=='yes') {if(empty($member['email'])) {_error("Cannot get member email address for username=$account[username], userDB=$account[dbase]",'ERROR'); }else {$oMail->RecipientAddress =$member['email']; if(!$oMail->Send()) _error("sending email failed to '$oMail->RecipientAddress'"); }}if(!ModuleHostUsers::TIlTT1T($adm,$ILLLlIl,$account[I19411], array('recipient_addr'=>$member['email'],'subject'=>"[BILLING: $account[domain]] $III1LlL",'body'=>$mbody,I19403=>HOST_DOCS_LANG))) _error("sending email failed to $ILLLlIl"); $account['date_last_remind_sent'] =$t; ModuleHostPayments::TII1lll($account[I19411],$t,'date_last_remind_sent'); }while(@ob_end_flush()); _log("START"); $ILLLlLI =SiteManager::TI1llT1(); if($ILLLlLI &CLOPT_NO_UPDATE) _error("Operation prohibited by cluster options",I19399); $ILLLlII =&$adm->Core->GetModule('wz_host_users'); $lL1IllI =&$adm->Core->GetModule('srv_host_payments_history'); $lL1Illl =$lL1IllI->GetProperty('daily_payment_type'); $lL1IllL =$lL1IllI->GetProperty('traffic_payment_type'); $lL1Ill1 =$ILLLlII->GetOption('bill_suspend_period'); $lL1IlLI =$ILLLlII->GetOption('bill_delete_period'); $ILLLllI =$ILLLlII->GetOption(I19412); $lL1IlIL =$ILLLlII->GetOption('bill_main_currency'); $lL1IlLl =$adm->VarsGet['test_mode']; if(isset($lL1IlLl)) {$ILLLllI =$lL1IlLl =($lL1IlLl=='yes'); }else $lL1IlLl =false; $ILLLlIl =$ILLLlII->GetOption('bill_admin_email'); $ILLLl1L =$GLOBALS[I19413].'billing.lock'; $ILLLll1 =array(); $lL1IlI1 =$adm->VarsGet['notify_users']; $lL1IlI1 =isset($lL1IlI1) && $lL1IlI1=='no' ?'no' :I19414; $lL1IlLL =$adm->VarsGet['make_invoices']; $lL1IlLL =(isset($lL1IlLL) && ($lL1IlLL==I19414)) ?true :false; if(empty($sid)) $sid =$adm->VarsGet['billing_sid']; $lL1IlL1 =$adm->VarsGet[I19401]; $lock =fopen($ILLLl1L,'w'); if(!$lock) _error("Cannot open lock file '$ILLLl1L' for writing",I19399); if(!flock($lock,LOCK_EX|LOCK_NB)) _error("Billing daemon is already working",I19399); $DFMT =$adm->DFMT[I19415]; $ILLLllL =new WZDaemonPool(); foreach($adm->Core->GetOption(I19416) as $ILLLLII){ $adm->Gui->addBlock("mail_" .$ILLLLII, $GLOBALS['LOCAL_FILES_REL_PATH'] ."_admin/templates/letters/_billing_daemon_" .$ILLLLII .".tpl"); }$words =$adm->Gui->ParseLangFile("templates/lang/billing_daemon.lng"); $now =time(); if($lL1IlLL){ $lL1Il1I =ModuleHostPayments::TII1llT(0, true); }else{ $lL1Il1I =ModuleHostPayments::TII1llT($now,true); }_log("now=".DateTools::toMysqlDate($now)." accounts=".sizeof($lL1Il1I)); _log("suspendPeriod='$lL1Ill1' deletePeriod='$lL1IlLI'"); _log("User notification: $lL1IlI1"); if($ILLLllI) {_log("bill_test_mode option set: no sites are deleted"); }if($lL1IlLl) {_log("Force test mode: no sites are suspended"); }if(!empty($lL1IlL1)) {_log("SPECIFIED domain='$lL1IlL1'"); }_log(I19417); $api =new MainSMS ('Amiro.CMS' ,'74ce78f4b367c', true, false );while(list($lILI11l,)=each($lL1Il1I)) {$account =&$lL1Il1I[$lILI11l]; if(!empty($lL1IlL1) && $account[I19401]!=$lL1IlL1) {continue; }set_time_limit(50); $lILlILI =$account['billing_date']; $daz =$account['date_amount_zero']; $lILI1lI =$account[I19418]; $lL1Il1l =$account['billing_off']; _log("BEGIN domain=$account[domain] billStart=".DateTools::toMysqlDate($lILlILI)); for($t=$lILlILI; $t<$now; $t=TlTlIl1($t)) {if($account[I19400]=='active') {$lL1Il1L =TlTlII1($t); if($lL1Il1L==1) {$lL1Il11 =TlTlIll(TlTlIl1($t,-1)); $lILI1lL =$lILI1lI/$lL1Il11; $price =$lILI1lI-round($lILI1lL*($lL1Il11-1),2); }else {$lL1Il11 =TlTlIll($t); $lILI1lL =$lILI1lI/$lL1Il11; $price =round($lILI1lL*$lL1Il1L,2)-round($lILI1lL*($lL1Il1L-1),2); }if (!$lL1Il1l){ _log($account[I19401]." is billable"); if($price>0) {$lL1ILII =array( I19411=>$lILI11l, 'date'=>DateTools::toMysqlDate($t), I19419=>DateTools::toMysqlDate(TlTlIl1($t, -1)), 'end_date'=>DateTools::toMysqlDate(TlTlIl1($t, -1)), I19402=>-$price, 'payment_type'=>$lL1Illl, 'note'=>$words['hosting_charge'], I19420=>1 );$daz =ModuleHostPaymentsHistory::TII11Tl($lL1ILII); $account[I19402] += $lL1ILII[I19402]; _log("t=".DateTools::toMysqlDate($t)." addPaymentItem($lL1ILII[amount],$account[domain])=".DateTools::toMysqlDate($daz)); }else {_log("t=".DateTools::toMysqlDate($t)." Zero monthly fee for $account[domain]"); }$lILLlII =mktime(0,0,0,TlTlIlT($t),2,TlTlIlI($t)); $lILLlIl =$t; if($lL1Il1L==1) {$lILLlII =strtotime("-1 month",$t); $lILLlII =mktime(0,0,0,TlTlIlT($lILLlII),2,TlTlIlI($lILLlII)); $lILLlIl =strtotime("+1 month",$lILLlII)-1; }if($account[I19421]>0) {$traffic =floatval(ModuleHostTraffic::TIlTTTl($lILI11l,$lILLlII,$lILLlIl))-floatval($account[I19421]); if($traffic>0 && $account['traf_price']>0) {_log("traffic_over_quota=$traffic traf_price=".$account['traf_price']); if($account['traf_amount']==0) {_error("traf_amount==0: account userId=$lILI11l, domain=".$account[I19401]); }else {$lL1ILIl =intval($traffic/$account['traf_amount']); if($lL1ILIl*$account[I19422]!=$traffic) $lL1ILIl++; $lILLlI1 =ModuleHostPaymentsHistory::TII11IT($lILLlII,$lILLlIl,$lILI11l,$lL1IllL); $lL1ILIL =0; foreach($lILLlI1 as $lILLllI=>$lILLlll) {$lL1ILIL += $lILLlll["amount"]; }$lL1ILIL =-$lL1ILIL; if ($lL1ILIL <$lL1ILIl*$account['traf_price']) {$lII11Il =$lL1ILIl*$account['traf_price']; $lL1ILI1 =$traffic +$account[I19421]; $txt =' (prev: '.$lL1ILIL.I19423.$lII11Il.', traf: '.$lL1ILI1.')'; $lL1ILII =array( I19411=>$lILI11l, 'date'=>DateTools::toMysqlDate($t), I19419=>DateTools::toMysqlDate($lILLlII), 'end_date'=>DateTools::toMysqlDate($lILLlIl), I19402=>-($lL1ILIl*$account[I19424] -$lL1ILIL), 'payment_type'=>$lL1IllL, 'note'=>$words['traffic_charge'].$txt );$daz =ModuleHostPaymentsHistory::TII11Tl($lL1ILII); $account[I19402] += $lL1ILII[I19402]; _log("traffic: t=".DateTools::toMysqlDate($t-1)." addPaymentItem($lL1ILII[amount],$account[domain])=".DateTools::toMysqlDate($daz)); }}}}else _error("Unlimited traffic for $account[domain]"); }else{ _log(I19425.DateTools::toMysqlDate($t)." Billing is turned off for account $account[domain]"); }if($lL1Il1L==1) {_log("1st day: ".DateTools::toMysqlDate($t)); $lILLlII =strtotime("-1 month",$t); $lILLlII =mktime(0,0,0,TlTlIlT($lILLlII),2,TlTlIlI($lILLlII)); $lILLlIl =strtotime("+1 month",$lILLlII)-1; $lL1ILlI =date($DFMT,TlTlIl1($lILLlII,-1))." - ".date($DFMT,TlTlIl1($lILLlIl,-1)); _log("mergePayments1 Start: userId=$lILI11l,domain=$account[domain],dfrom=".DateTools::toMysqlDate($lILLlII).I19426.DateTools::toMysqlDate($lILLlIl)); ModuleHostPaymentsHistory::TII11T1($lILLlII,$lILLlIl,$lILI11l, array('source'=>$lL1Illl,'note'=>$words['total_month'], 'DFMT'=>$DFMT)); _log("mergePayments1 End: OK"); _log("mergePayments2 Start: userId=$lILI11l,domain=$account[domain],dfrom=".DateTools::toMysqlDate($lILLlII).I19426.DateTools::toMysqlDate($lILLlIl)); ModuleHostPaymentsHistory::TII11T1($lILLlII,$lILLlIl,$lILI11l, array('source'=>$lL1IllL,'note'=>$words['traffic_charge'], 'DFMT'=>$DFMT)); _log("mergePayments2 End: OK"); }}elseif($lL1Il1l || $account[I19402]>$account['amount_min']) {if($account[I19402]>$account['amount_min']) {$lL1ILll =ModuleHostPayments::TII1lII($account[I19402],$account['amount_min'], $account[I19418],$t); ModuleHostPayments::TII1lll($lILI11l,$lL1ILll,'date_amount_zero'); _log("Recalc DAZ: newdaz=".DateTools::toMysqlDate($lL1ILll)); }}_log("Set billing date: id_user=$lILI11l, date=".DateTools::toMysqlDate(TlTlIl1($t))); ModuleHostPayments::TII1lll($lILI11l,TlTlIl1($t),'billing_date'); if($daz==0 || $lL1Il1l) {continue; }$lL1ILlL =$account['date_last_remind_sent']; $lL1ILl1 =$daz-$account['remind_period']; $lL1ILLI =$daz-ceil($account['remind_period']/2); $lL1ILLl =$daz-ceil($account[I19427]/8); $lL1ILLL =strtotime($lL1Ill1,$daz); if($lL1ILLL<0) {$lL1Ill1 =SUSPEND_PERIOD; $lL1ILLL =strtotime($lL1Ill1,$daz); }$lL1ILL1 =strtotime($lL1IlLI,$daz); if($lL1ILL1<0) {$lL1IlLI =SUSPEND_PERIOD; $lL1ILL1 =strtotime($lL1IlLI,$daz); }$account['date_amount_zero'] =$daz; if($t>=$lL1ILl1 && $t<$lL1ILLI && $lL1ILlL<$lL1ILl1) {TITTll1($account,'remind',$t,$daz); _log("remind 1 for $account[domain]: daz=".DateTools::toMysqlDate($daz)." rd=".DateTools::toMysqlDate($lL1ILl1)." lr=".DateTools::toMysqlDate($lL1ILlL)); }elseif($t>=$lL1ILLI && $t<$lL1ILLl && $lL1ILlL<$lL1ILLI) {TITTll1($account,I19428,$t,$daz); $account['date_last_remind_sent'] =$t; _log("remind 2 for $account[domain]: daz=".DateTools::toMysqlDate($daz)." rd=".DateTools::toMysqlDate($lL1ILLI)." lr=".DateTools::toMysqlDate($lL1ILlL)); }elseif($t>=$lL1ILLl && $t<$daz && $lL1ILlL<$lL1ILLl) {TITTll1($account,I19428,$t,$daz); $account['date_last_remind_sent'] =$t; _log("remind 8 for $account[domain]: daz=".DateTools::toMysqlDate($daz).I19429.DateTools::toMysqlDate($lL1ILLl)." lr=".DateTools::toMysqlDate($lL1ILlL)); }elseif($t>=$daz && $t<$lL1ILLL && $lL1ILlL<$daz) {$hr =ModuleHostUsers::TIlTTlI($account[I19401]); if($hr['admin_status']!='suspend') {TITTll1($account,'daz',$t,$lL1ILLL); _log("suspend admin for $account[domain]: daz=".DateTools::toMysqlDate($daz).I19430.DateTools::toMysqlDate($lL1ILLL)." lr=".DateTools::toMysqlDate($lL1ILlL)); if(!$lL1IlLl) {$daemon =&$ILLLllL->TlTTIlI($sid,$account[I19401]); if(!ModuleHostUsers::TIlTTll($lILI11l,'suspend',$daemon, 'billing_daemon', $words['balance_is_minimal'])) _error("Cannot suspend admin for $account[domain]: daz=".DateTools::toMysqlDate($daz). I19430.DateTools::toMysqlDate($lL1ILLL).I19431.DateTools::toMysqlDate($lL1ILlL),'ERROR'); else _log("Suspend admin done"); }else _log("Test mode - skip suspend admin"); }}elseif($t>=$lL1ILLL && $t<$lL1ILL1 && $lL1ILlL<$lL1ILLL) {TITTll1($account,'suspend',$t,$lL1ILL1); $account[I19400] =I19432; $ILLLlII =&$adm->Core->GetModule('wz_host_users'); $dp =array('action'=>I19432,I19401=>$account[I19401],'restart_httpd'=>0); set_time_limit(50); _log("suspend site for $account[domain]: daz=".DateTools::toMysqlDate($daz)." dd=".DateTools::toMysqlDate($lL1ILL1).I19431.DateTools::toMysqlDate($lL1ILlL)); if(!$lL1IlLl) {$daemon =&$ILLLllL->TlTTIlI($sid,$account[I19401]); if(!$daemon->TlTTITT($dp)) {_error("Cannot suspend site $account[domain]"); }else {ModuleHostUsers::TIlTTl1($lILI11l,array( I19400=>I19432, I19433=>'billing_daemon', 'comment'=>$words['balance_less_minimal'])); ModuleHostUsers::TIlTTlT($lILI11l); _log("Suspend done"); }}else {_log("Skipping suspend (test mode on)"); }}if($t>=$lL1ILL1 && $lL1ILlL<$lL1ILL1) {TITTll1($account,'delete',$t,0); $dp =array(I19401=>$account[I19401],'delete_subscriber'=>1,'restart_httpd'=>0); set_time_limit(50); _log("delete site $account[domain]: daz=".DateTools::toMysqlDate($daz)." dd=".DateTools::toMysqlDate($lL1ILL1).I19431.DateTools::toMysqlDate($lL1ILlL)); if($ILLLlLI &CLOPT_NO_DELETE) {_error("Deletion prohibited by cluster options"); break; }if(!$ILLLllI) {$daemon =&$ILLLllL->TlTTIlI($sid,$account[I19401]); if(!$daemon->TITTlIT($dp)) _error("Cannot delete site $account[domain]"); else {$ILLLll1[$daemon->getUrl()] =1; _log("Site deleted"); }}else {_log("Skip delete site (test mode on)"); }break; }}_log("bookPayments Start: bookPayments($lILI11l)"); ModuleHostPaymentsHistory::TII11TT($lILI11l); _log("bookPayments End: OK"); if ($lL1IlLL || (TlTlII1($now)==1) || (TlTlII1($now)==2)){ _log("bookDocuments Start: userId=$lILI11l,domain=$account[domain]"); $lL1IL1I =ModuleHostPaymentsHistory::TII11TI($adm, $account, $now); _log("bookDocuments End: Res=".$lL1IL1I); }_log("END domain=$account[domain]"); }if(!$ILLLllI && sizeof($ILLLll1)) {_log(I19434); $ILLLllL->TlTTIlT(true); foreach($ILLLll1 as $url=>$tmp) {$daemon =&$ILLLllL->TlTTIll($url,$sid); if($daemon===false) {trigger_error("Daemon url '$url' not cached",E_USER_WARNING); _error("Daemon url '$url' not cached, skipping",'ERROR'); continue; }if(!$daemon->TlTTIIl()) {_error("Daemon [$url] says: ".$daemon->GetLastError(),'ERROR'); }else {_log("Daemon: $url"); }}_log("Reload done"); }fclose($lock); _log("DONE"); ?>
