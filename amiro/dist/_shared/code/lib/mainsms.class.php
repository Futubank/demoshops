<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       7271 xkqwtpzplrxyyprlrrznwxkrzmsllswnrwmnxuknulssqnwqyzztgqrptlmpwgqxwygipnir
 */ ?><?php foreach(array(19832=>'DuWWQDD',19833=>'DQnSQr',19834=>'IQDDZPQ~DtZtuD',19835=>'IQDDZPQ~GrMWQ',19836=>'IQDDZPQ~MnfH',19837=>'DtZtuD',19838=>'~',19839=>'OttG',19840=>'WHntQnt') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} class MainSMS {const REQUEST_SUCCESS =I19832; const REQUEST_ERROR ='error'; protected $project =null, $key =null, $ILLLllI =false, $url ='mainsms.ru/api/mainsms', $lL11Lll =false, $response =null; public function __construct($project, $key, $lL11Lll =false, $ILLLllI =false) {$this->project =$project; $this->key =$key; $this->lL11Lll =$lL11Lll; $this->ILLLllI =$ILLLllI; }public function TlT1lIl($recipients, $message, $sender, $lL11LlL =null) {return $this->TlT1lI1($recipients, $message, $sender, $lL11LlL); }public function TTTII1T($lL11Ll1) {return $this->TlT1llT($lL11Ll1); }public function TlT1lI1($recipients, $message, $sender, $lL11LlL =null) {$params =array( 'recipients' => $recipients, 'message' => $message, I19833 => $sender, );if ($lL11LlL != null) {$params['run_at'] =$lL11LlL; }if ($this->ILLLllI) {$params['test'] =1; }$response =$this->TI1T1IT('message/send', $params); return $response['status'] == self::REQUEST_SUCCESS; }public function TlT1llT($lL11Ll1) {if (!is_array($lL11Ll1)) {$lL11Ll1 =array($lL11Ll1); }$response =$this->TI1T1IT(I19834, array( 'messages_id' => join(',', $lL11Ll1), ));return $response['status'] == self::REQUEST_SUCCESS ?$response['messages'] :false; }public function TlT1llI($recipients, $message) {$response =$this->TI1T1IT(I19835, array( 'recipients' => $recipients, 'message' => $message, ));return $response['status'] == self::REQUEST_SUCCESS ?$response['price'] :false; }public function TlT1lll($phones) {$response =$this->TI1T1IT(I19836, array( 'phones' => $phones ));return $response['status'] == self::REQUEST_SUCCESS ?$response['info'] :false; }public function userBalance() {$response =$this->TI1T1IT('message/balance'); return $response[I19837] == self::REQUEST_SUCCESS ?$response['balance'] :false; }public function TlT1ll1() {return $this->userBalance(); }protected function TI1T1IT($function, array $params =array()) {$params =$this->TlT1l1T($params); $sign =$this->TlT1l1I($params); $params =array_merge(array('project' => $this->project), $params); $url =($this->lL11Lll ?'https://' :'http://') .$this->url .I19838. $function; $post =http_build_query(array_merge($params, array('sign' => $sign)), '', '&'); if (function_exists('curl_init')) {$ch =curl_init($url); if ($this->lL11Lll) {curl_setopt($ch, CURLOPT_SSL_VERIFYPEER, 0); curl_setopt($ch, CURLOPT_SSL_VERIFYHOST, 0); }curl_setopt($ch, CURLOPT_POST, 1); curl_setopt($ch, CURLOPT_POSTFIELDS, $post); curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1); $response =curl_exec($ch); curl_close($ch); }else {$context =stream_context_create(array( I19839 => array( 'method' => 'POST', 'header' => "Content-type: application/x-www-form-urlencoded\r\n", I19840 => $post, 'timeout' => 10, ),));$response =file_get_contents($url, false, $context); }return $this->response =json_decode($response, true); }public function setUrl($url) {$this->url =$url; }public function getUrl() {return $this->url; }protected function TlT1l1T($params) {$result =array(); foreach ($params as $name => $value) {$result[$name] =is_array($value) ?join(',', $value) :$value; }return $result; }public function getResponse() {return $this->response; }protected function TlT1l1I(array $params) {$params['project'] =$this->project; ksort($params); return md5(sha1(join(';', array_merge($params, Array($this->key))))); }}