tinymce.PluginManager.add('amiro.image', function(editor) {
    editor.imagePanelOn = false;
    function onClick(){
        var btn = getButtonByName(editor, 'amiro.image', false);
        var ccaContainer = editor.contentAreaContainer;
        $(ccaContainer).addClass('mce-no-reset');
        if(!editor.imagePanelOn){
            editor.imagePanelOn = true;
            if($(ccaContainer).find('.mce-image-settings').length == 0) {
                var imgSettings = $('<DIV>');
                imgSettings.addClass('mce-image-settings');
                $(ccaContainer).prepend(imgSettings);
                btn.active(true);

                // Uploader form
                imgSettings.html('<div class="img-uploader" id="' + editor.id + '_img_upload" style="display:none;"></div>');
                
                var uploadBtnTitle = $('<div>');
                uploadBtnTitle.addClass('loading');
                uploadBtnTitle.html(parent.amiSkinController.toolbar.aLocale['image_uploader_loading']);
                uploadBtnTitle.addClass('title-img-upload');
                
                var uploadUrlInput = $('<span>');
                uploadUrlInput.html('URL:');
                uploadUrlInput.addClass('url-img-upload');
                
                var uploadBtn = $('<BUTTON>');
                uploadBtn.addClass('btn-lg');
                uploadBtn.addClass('btn-info');
                uploadBtn.html(parent.amiSkinController.toolbar.aLocale['image_uploader_upload']);
                uploadBtn.click(function(){
                    $('[name=upload_frame_' + editor.id + '_img_upload]').contents().find('[name=file]').click();
                });
                
                var imageInput = $('<INPUT id="' + editor.id + '_img_url">');
                imageInput.addClass('input-lg');

                // Image size
                var imageWInput = $('<INPUT type="number" id="' + editor.id + '_img_w" size=4>');
                imageWInput.addClass('input-lg');
                imageWInput.addClass('input-img-size');
                var imageHInput = $('<INPUT type="number" id="' + editor.id + '_img_h" size=4>');
                imageHInput.addClass('input-lg');
                imageHInput.addClass('input-img-size');
                
                // Insert button
                var insertBtn = $('<BUTTON>');
                insertBtn.addClass('btn-lg');
                insertBtn.addClass('btn-success');
                insertBtn.html(parent.amiSkinController.toolbar.aLocale['image_uploader_insert']);
                insertBtn.click(function(){
                    var path = $('#' + editor.id + '_img_url').val();
                    if(path){
                        var size = '';
                        var w = parseInt($('#' + editor.id + '_img_w').val());
                        var h = parseInt($('#' + editor.id + '_img_h').val());
                        if(w){
                            size += ('width="' + w + '"');
                        }
                        if(h){
                            size += ('height="' + h + '"');
                        }
                        if(path.indexOf(parent.frontBaseHref) === 0){
                            var aLoc = getLocation(parent.frontBaseHref);
                            path = aLoc.pathname + path.substr(parent.frontBaseHref.length);
                        }
                        var img = '<img alt="" ' + size + ' src="' + path + '"/>';
                        editor.focus();
                        tinyMCE.execCommand('mceInsertContent', false, img);
                        $(ccaContainer).find('.mce-image-settings input').val('');
                        
                        editor.imagePanelOn = false;
                        var imgSettings = $(ccaContainer).find('.mce-image-settings');
                        imgSettings.animate({'margin-top': '-'+imgSettings.css('height')});
                        btn.active(false);
                    }else{
                        $('#' + editor.id + '_img_url').focus();
                        parent.amiSkinController.showMessage(parent.amiSkinController.toolbar.aLocale['image_uploader_error_empty']);
                    }
                });
                
                var imgUploadDiv = $('<span>');
                imgUploadDiv.addClass('img-upload-div');
                
                var imgInputDiv = $('<span>');
                imgInputDiv.addClass('img-input-div');
                
                var imgSizeDiv = $('<span>');
                imgSizeDiv.addClass('img-size-div');
                
                imgSettings.append(uploadBtnTitle);
                imgUploadDiv.append(uploadBtn);
                imgInputDiv.append(uploadUrlInput);
                imgInputDiv.append(imageInput);
                imgSizeDiv.append(imageWInput);
                imgSizeDiv.append(' x ');
                imgSizeDiv.append(imageHInput);
                imgSizeDiv.append(insertBtn);
                
                imgSettings.append(imgUploadDiv);
                imgSettings.append(imgInputDiv);
                imgSettings.append(imgSizeDiv);
                
                $(ccaContainer).find('.mce-image-settings').css('margin-top', '-'+imgSettings.css('height'));
                $(ccaContainer).find('.mce-image-settings').animate({'margin-top': 0});

                $('#' + editor.id + '_img_url').change(function(){
                    $('#' + editor.id + '_img_w').val(this.naturalWidth);
                    $('#' + editor.id + '_img_h').val(this.naturalHeight);
                    var path = $(this).val();
                    var image = new Image();
                    image.src = path;
                    $(image).load(function(){
                        if(typeof(this.naturalWidth) !== 'undefined'){
                            $('#' + editor.id + '_img_w').val(this.naturalWidth);
                            $('#' + editor.id + '_img_h').val(this.naturalHeight);
                        }
                    });
                });

                var Uploader = new AmiUploader(editor.id + '_img_upload', '', true);
                Uploader.onBeforeUpload = function(){
                    $('#' + editor.id + '_img_upload').parent().addClass('uploading');
                }
                Uploader.onUpload = function(name, path){
                    $('#' + editor.id + '_img_upload').parent().removeClass('uploading');
                    $('#' + editor.id + '_img_url').val(parent.frontBaseHref + path);
                    var image = new Image();
                    image.src = parent.frontBaseHref + path;
                    $(image).load(function(){
                        if(typeof(this.naturalWidth) !== 'undefined'){
                            $('#' + editor.id + '_img_w').val(this.naturalWidth);
                            $('#' + editor.id + '_img_h').val(this.naturalHeight);
                        }
                    });
                };
                Uploader.onError = function(message){
                    parent.amiSkinController.showMessage(parent.amiSkinController.toolbar.aLocale['image_uploader_error_upload']);
                    $('#' + editor.id + '_img_upload').parent().removeClass('uploading');
                };
            } else {
                $(ccaContainer).find('.mce-image-settings input').val('');
                $(ccaContainer).find('.mce-image-settings').animate({'margin-top': 0});
            }
        }else{
            editor.imagePanelOn = false;
            var imgSettings = $(ccaContainer).find('.mce-image-settings');
            imgSettings.animate({'margin-top': '-'+imgSettings.css('height')});
            btn.active(false);
        }
    };
    editor.addCommand("mceCodeEditor",onClick);
    editor.addButton("amiro.image",{
        icon:"image",
        tooltip:"Image",
        onclick:onClick
    });
    editor.addMenuItem("amiro.image",{icon:"image",text:"Image",context:"tools",onclick:onClick});
});

function getLocation(href) {
    var match = href.match(/^(https?\:)\/\/(([^:\/?#]*)(?:\:([0-9]+))?)(\/[^?#]*)(\?[^#]*|)(#.*|)$/);
    return match && {
        protocol: match[1],
        host: match[2],
        hostname: match[3],
        port: match[4],
        pathname: match[5],
        search: match[6],
        hash: match[7]
    }
}