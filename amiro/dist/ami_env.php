<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @package    Environment 
 * @since      5.10.0 
 * @version    $Id$ 
 * @size       12185 xkqwpimnsgrkuklyqyrkprppngpzkxiikgnxkxqzxuyqygsxqtxyrilltxytzxrlxyuipnir
 */ ?><?php foreach(array(16=>'zim|qNV|dqTTmNpd',1=>'oTij',2=>'pjhyzjd',3=>'|pqT',4=>'oTTg|dqRVqR|VzRd',5=>'WI|MnM`GOG',6=>'Qrr',7=>'zim|zjjhc|jhwzj|ihsUjqd',8=>'',9=>'DSQYuP=',10=>'RqeUqdT|URm',11=>"DSQYuP",12=>'DSQYuP',13=>'DMIGJQ',14=>'*',15=>'rQDGHnDQ|IHSQ',17=>'YrHCDQr|WZWOQ',18=>'QxtSQY',19=>'GZPQD',20=>'fuJJ',21=>'DBD',22=>'rQDGHnDQ',23=>'IQI|uDZPQ',24=>'QxtQrnZJ|WZJJ',25=>'IHSQ') as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(!defined('AMI_ENVIRONMENT')){ define('AMI_ENVIRONMENT', TRUE); }if(empty($AMI_MICROTIME_STARTED)){ $AMI_MICROTIME_STARTED =microtime(true); }foreach(array('AMI_ENV_SETTINGS', 'AMI_ENV_LIMITS') as $target){ if(empty($$target) || !is_array($$target)){ $$target =array(); }}$AMI_ENV_SETTINGS += array( 'mode' => 'fast', 'response_mode' => I1, 'response_buffered' => true, 'external_call' => false, 'browser_cache' => false, );if($AMI_ENV_SETTINGS['external_call']){ $l1L1III =array_diff( array_keys($GLOBALS), array( I2, '_ENV', 'HTTP_ENV_VARS', '_POST', 'HTTP_POST_VARS', I3, 'HTTP_GET_VARS', '_COOKIE', 'HTTP_COOKIE_VARS', '_SERVER', I4, '_FILES', 'HTTP_POST_FILES', '_REQUEST', 'AMI_ENV_SETTINGS', 'AMI_MICROTIME_STARTED' ));$l1L1IIl =array(); foreach($l1L1III as $l1L1IIL){ $l1L1IIl[$l1L1IIL] =$GLOBALS[$l1L1IIL]; }unset($l1L1III, $l1L1IIL); $l1L1II1 =getcwd(); chdir(rtrim(dirname(__FILE__), '/') .'/'); }switch($AMI_ENV_SETTINGS['mode']){ case 'fast': $SKIP_CONST =true; $l1IIlI1 =true; require I5; if(!empty($GLOBALS['sys']['disable_user_scripts']) && empty($AMI_ENV_SETTINGS['skip_disable_user_scripts'])){ $GLOBALS['sys'][I6]['store'] =TRUE; AMI_Registry::set('disable_error_mail', TRUE); trigger_error('User scripts disabled.', E_USER_ERROR); die; }$l1IIllI =!empty($GLOBALS['sys']['disable_user_scripts']) || defined(I7); foreach(array( $HOST_PATH .'_shared/code/const/_local/local_start.php' => false, $ROOT_PATH .'_local/common_functions.php' => true )as $_path => $l1IIlll){ if($l1IIlll && $l1IIllI){ continue; }if(file_exists($_path)){ require_once $_path; }}if( !$l1IIllI || defined(I7) ){AMI_Service::addAutoloadPath(AMI_Registry::get('path/hyper_local') .'code'); }unset($_path, $l1IIlll, $l1IIllI); if(AMI_Service::isDebugVisible()){ $sdebug =I8; if (isset($_GET['sdebug'])) {$sdebug =$_GET["sdebug"]; }else if ((isset($_SERVER['REQUEST_URI']) && mb_strpos($_SERVER['REQUEST_URI'], I9) !== false) || (isset($_SERVER['REDIRECT_QUERY_STRING']) && ($lLI1I11 =mb_strpos($_SERVER['REDIRECT_QUERY_STRING'], I9)) !== false) ){parse_str(isset($lLI1I11) ?$_SERVER['REDIRECT_QUERY_STRING'] :preg_replace('/^.*\?/', I8, $_SERVER[I10]), $lLI1lII); mb_internal_encoding('UTF-8'); if (isset($lLI1lII['sdebug'])) {$sdebug =$lLI1lII['sdebug']; }unset($lLI1lII, $lLI1I11); }else if (isset($_COOKIE["sdebug"])) {$sdebug =$_COOKIE[I11]; }switch($sdebug){ case 'detail': DB_si::globalAttr('debug', 'detail'); if (empty($_COOKIE[I11]) || $_COOKIE[I11] != 'detail') {SetLocalCookie(I12, 'detail', 0, I8, true); }break; case 'simple': DB_si::globalAttr('debug', 'simple'); if (empty($_COOKIE[I11]) || $_COOKIE[I11] != I13) {SetLocalCookie(I12, I13, 0, I8, true); }break; case 'off': default: DB_si::globalAttr('debug', false); if (!empty($_COOKIE[I11])) {SetLocalCookie(I12, I8, time()-3600, I8, true); }break; }$db =new DB_si(); }else{ $db =new CMS_simpleDb(); }if(!$db->connect(DB_Host, DB_User, DB_Password, DB_Database)){ $GLOBALS['sys'][I6]['store'] =TRUE; trigger_error(I14 .mysql_errno() .'] [' .mysql_error() .'] ', E_USER_ERROR); }if(!empty($GLOBALS['AMI_ENV_SETTINGS']['raw_mode'])){ break; }AMI::addResourceMapping(require($CLASSES_PATH .'/60/resourceMapping.php')); AMI::getSingleton('db', array('ami_db' => $db)); $oHTTPResponse =AMI::getSingleton('response', array($AMI_MICROTIME_STARTED, 'fast')) ->setType($AMI_ENV_SETTINGS[I15]) ->setBuffering($AMI_ENV_SETTINGS['response_buffered']) ->setBenchType('FRONT-ENV-FAST'); if(!empty($GLOBALS['AMI_ENV_SETTINGS']['locale'])){ $lang =$GLOBALS[I16]['locale']; AMI_Registry::set('lang_data', $lang); AMI_Registry::set('lang', $lang); AMI::getResource('env/template_sys')->setLocale($lang); }if(empty($GLOBALS[I16][I17])){ $oHTTPResponse ->HTTP ->addHeader('Expires: Mon, 26 Jul 1997 05:00:00 GMT') ->addHeader('Cache-Control: no-cache, no-store, must-revalidate, post-check=0, pre-check=0') ->addHeader('Pragma: no-cache'); }else{ $oHTTPResponse ->HTTP ->addHeader('Cache-Control: max-age=2592000'); }$oHTTPResponse->HTTP->addHeader200(); if(!empty($sys[I6][I18]) && !empty($sys[I6]['read_templates_from_disk'])){ define('TEMPLATES_FROM_DISK', true); }if(empty($GLOBALS[I16]['disable_declares'])){ $path =AMI_Registry::get('path/hyper_local') .'declaration/declares.php'; if(file_exists($path)){ $Core =AMI::getSingleton('core', array(array('adv_places', 'rating', 'ce', I19, 'common_settings'))); $oDeclarator =AMI_ModDeclarator::getInstance(); require $path; $oDeclarator->validate(); $Core->init(); unset($oDeclarator); }unset($oDeclarator, $path); }$AMI_ENV_LIMITS += array( 'includes' => 25, 'mem_usage' => 4 *1024 *1024, 'peak_mem_usage' => 4 *1024 *1024 );break; case I20: unset($SKIP_CONST, $l1IIlI1); if('JSON' == $AMI_ENV_SETTINGS[I15]){ $AMI_ENV_SETTINGS['disable_cache'] =TRUE; }if(empty($AMI_ENV_SETTINGS['disable_cache'])){ $enable_cache =(int)(!(bool)$AMI_ENV_SETTINGS['external_call']); }else{ $enable_cache =0; }require I5; if(!empty($GLOBALS[I21]['disable_user_scripts']) && empty($AMI_ENV_SETTINGS['skip_disable_user_scripts'])){ AMI_Registry::set('disable_error_mail', true); $GLOBALS[I21][I6]['store'] =TRUE; trigger_error("User scripts disabled", E_USER_ERROR); die; }if($AMI_ENV_SETTINGS['external_call']){ $CONNECT_OPTIONS['front_compression_level'] =0; }unset($vDefault, $vMod, $rs); if(!AMI_Registry::get('oGUI', false)){ AMI_Registry::set('oGUI', new gui); }$AMI_FRONT_ENTRY_POINT =1; AMI::getSingleton(I22, array($AMI_MICROTIME_STARTED, I20)) ->setBenchType('FRONT-ENV-<span style="color: #f00; background: #fff;">FULL</span>'); require $GLOBALS['DEFAULT_INCLUDES_PATH'] .'pages.php'; $AMI_ENV_LIMITS += array( 'includes' => 110, I23 => 24 *1024 *1024, 'peak_mem_usage' => 24 *1024 *1024 );break; default: trigger_error("Invalid mode '" .$AMI_ENV_SETTINGS['mode'] ."'", E_USER_ERROR); die; }if($AMI_ENV_SETTINGS[I24]){ AMI::saveGlobalScope(I8, $l1L1IIl); unset($l1L1IIl); AMI::saveGlobalScope('Amiro'); AMI::restoreGlobalScope(); AMI_Service::setAutoloadWarning(false); chdir($l1L1II1); }if(empty($GLOBALS[I16]['raw_mode'])){ AMI::getSingleton('env/request'); }if(empty($AMI_ENV_SETTINGS[I24]) && !AMI_Service::isDebugSkipped()){ $l1L1IlI =sizeof(get_included_files()); if($l1L1IlI >$AMI_ENV_LIMITS['includes']){ trigger_error(mb_strtoupper($AMI_ENV_SETTINGS[I25]) .'-ENV: Included files count ' .$l1L1IlI .' exceeds ' .$AMI_ENV_LIMITS['includes'], E_USER_WARNING); trigger_error("Included files: " .var_export(get_included_files(), TRUE)); }if(function_exists('memory_get_peak_usage')){ $l1L1IlI =memory_get_peak_usage(); if($l1L1IlI >$AMI_ENV_LIMITS['peak_mem_usage']){ trigger_error(mb_strtoupper($AMI_ENV_SETTINGS[I25]) .'-ENV: Peak memory usage ' .$l1L1IlI .' exceeds ' .$AMI_ENV_LIMITS['peak_mem_usage'], E_USER_WARNING); }}else{ $l1L1IlI =memory_get_usage(); if($l1L1IlI >$AMI_ENV_LIMITS[I23]){ trigger_error(mb_strtoupper($AMI_ENV_SETTINGS[I25]) .'-ENV: Memory usage ' .$l1L1IlI .' exceeds ' .$AMI_ENV_LIMITS[I23], E_USER_WARNING); }}}unset($SKIP_CONST, $l1IIlI1, $AMI_ENV_LIMITS, $l1L1IlI); 