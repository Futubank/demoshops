<?php /**
 * @copyright  2000-2016 Amiro.CMS. All rights reserved. 
 * @version    $Id$ 
 * @size       5526 xkqwxtmmpkgzzqptywmssxuktqipizyxpisixuskzyzururzkzluxypnlkkwslztyquqpnir
 */ ?><?php foreach(array(64=>'ZIMrH|DBD|WDD`GOG',65=>'IQI|uDZPQ',66=>'Qrr',67=>'RqihTq|zssR',68=>'OHIQ',69=>'tHHJYZr',70=>'WDD~IHSuJQ`WDD',71=>'WDD~WuDtHI`WDD',72=>'',73=>'WHIIHn|DQttMnPD',74=>'WHIGrQDD',75=>'?',76=>"\r\n",77=>'RhhT|gzTo',78=>"?[?Fmjq?dTzRT%?") as $i1=>$i2){$i3=strrev("rtrts");define("I".$i1,$i3($i2,'abcdeghijklmopqswyz ~`!@#%^&*()_-+|{}[];:<>,./?ABCDEGHIJKLMOPQSWYZ','ZYWSQPOMLKJIHGEDCBA?/.,><:;][}{|+-_)(*&^%#@!`~ zywsqpomlkjihgedcba'));} if(I64 !== basename(__FILE__)){ die('Data corrupted'); }$AMI_ENV_SETTINGS =array( 'mode' => 'fast', 'skip_disable_user_scripts' => true );$AMI_ENV_LIMITS =array( I65 => 5 *1024 *1024, 'peak_mem_usage' => 5 *1024 *1024 );require 'ami_env.php'; $l1L1I1L =AMI::getOption('common_settings', 'debug_ips'); $l1L1I11 =isset($sys[I66]['debug_ips']) && isset($sys[I66]['debug_ips'][$_SERVER['REMOTE_ADDR']]) && (mb_strpos($sys[I66]['debug_ips'][$_SERVER[I67]], 'disable_js_css_cache') !== false); $l1L1lII =isset($l1L1I1L[$_SERVER[I67]]) && (mb_strpos($l1L1I1L[$_SERVER[I67]], 'disable_js_css_cache') !== false); $l1L1lIl =$l1L1I11 || $l1L1lII; $oRequest =AMI::getSingleton('env/request'); $l1L1lIL =$oRequest->get('styles', false); if($l1L1lIL){ header('Content-Type: text/css'); header('Cache-Control: max-age=2592000'); $oFileCache =AMI::getResource('env/file_cache'); $oFileCache->init(); if($l1L1lIl || $oFileCache->isExpired()){ $l1II1lL =explode('|', $l1L1lIL); $l1L1lI1 =array( 'base' => '_shared/code/css/base.css', 'common' => '_mod_files/_css/common.css', 'ami_custom' => '_mod_files/_css/ami_custom.css', I68 => '_mod_files/_css/home.css', );if(in_array('common', $l1II1lL)){ $l1L1lI1['skin'] =array( AMI_Skin::getPath('css/skin.css') );$l1L1lI1[I69] =array( AMI_Skin::getPath('css/toolbar.css') );}else{ $l1L1lI1['skin'] =array( AMI_Skin::getPath('css/main.css'), AMI_Skin::getPath('css/plugins.css'), AMI_Skin::getPath(I70), AMI_Skin::getPath(I71), );}$l1L1llI =array( 'common' => '_css/common.css', I68 => '_css/home.css', );$content =''; foreach($l1L1lI1 as $code => $style){ if(!in_array($code, $l1II1lL)){ continue; }if(is_array($style)){ foreach($style as $styleFile){ $content .= __amiGetStyleFile($styleFile); }}else{ $content .= __amiGetStyleFile($style); }}if($content !== I72){ $content ="/*\r\n" ." * ATTENTION! This file is automatically created from several CSS files.\r\n" ." * Find file path and name in the comments in the beginning of the each code block\r\n" ." */\r\n\r\n" .$content; $l1II1l1 =AMI::getOption(I73, 'less_css_mode'); if($l1II1l1 != 'none'){ require_once $GLOBALS['HOST_PATH'] .'_shared/code/lib/phpless.php'; $less =new lessc; if($l1II1l1 == I74){ $less->setFormatter('compressed'); }else{ $less->setPreserveComments(TRUE); }try{ $content =$less->compile($content); }catch(Exception $oException){ $message =str_replace(array("\r", "\n", '  '), array(I75, I75, I75), $oException->getMessage()); $content ="/*\r\n" ." * LESS ERROR: " .str_replace(array('/*', '*/'), I72, $message) .I76 ." */\r\n\r\n" .$content; AMI_Registry::push('disable_error_mail', TRUE); trigger_error('lessphp: ' .$message, E_USER_WARNING); AMI_Registry::pop('disable_error_mail'); }}}$oFileCache->store($content); }echo $oFileCache->get(); }function __amiGetStyleFile($style){ $part =I72; if(!$style){ return; }$filename =$GLOBALS[I77] .$style; $l1L1lll =isset($l1L1llI[$code]) ?($GLOBALS[I77] .$l1L1llI[$code]) :false; if($l1L1lll && !file_exists($filename) && file_exists($l1L1lll) && is_readable($l1L1lll)){ $filename =$l1L1lll; }if(file_exists($filename) && is_file($filename) && is_readable($filename)){ $part =file_get_contents($filename); $part =str_replace('../../', I72, $part); $part =str_replace('../', '_mod_files/', $part); $part ="\r\n/*\r\n" .I78 .$style .I76 ." */\r\n\r\n" .$part ."\r\n/*\r\n" ." * FILE END: " .$style .I76 ." */\r\n"; }return $part; }